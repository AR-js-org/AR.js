(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("three"));
	else if(typeof define === 'function' && define.amd)
		define(["three"], factory);
	else if(typeof exports === 'object')
		exports["ARjs"] = factory(require("three"));
	else
		root["ARjs"] = factory(root["THREE"]);
})(this, (__WEBPACK_EXTERNAL_MODULE_three__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js ***!
  \*****************************************************************/
/***/ (function(module) {

/*! For license information please see ARToolkit.js.LICENSE.txt */
!function(A,I){ true?module.exports=I():0}("undefined"!=typeof self?self:this,(()=>(()=>{var A={230:A=>{A.exports="object"==typeof self?self.FormData:window.FormData},654:()=>{},231:()=>{},703:()=>{},61:(A,I,g)=>{var B=g(698).default;function Q(){"use strict";A.exports=Q=function(){return I},A.exports.__esModule=!0,A.exports.default=A.exports;var I={},g=Object.prototype,C=g.hasOwnProperty,E="function"==typeof Symbol?Symbol:{},i=E.iterator||"@@iterator",o=E.asyncIterator||"@@asyncIterator",D=E.toStringTag||"@@toStringTag";function a(A,I,g){return Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}),A[I]}try{a({},"")}catch(A){a=function(A,I,g){return A[I]=g}}function w(A,I,g,B){var Q=I&&I.prototype instanceof G?I:G,C=Object.create(Q.prototype),E=new k(B||[]);return C._invoke=function(A,I,g){var B="suspendedStart";return function(Q,C){if("executing"===B)throw new Error("Generator is already running");if("completed"===B){if("throw"===Q)throw C;return{value:void 0,done:!0}}for(g.method=Q,g.arg=C;;){var E=g.delegate;if(E){var i=S(E,g);if(i){if(i===s)continue;return i}}if("next"===g.method)g.sent=g._sent=g.arg;else if("throw"===g.method){if("suspendedStart"===B)throw B="completed",g.arg;g.dispatchException(g.arg)}else"return"===g.method&&g.abrupt("return",g.arg);B="executing";var o=t(A,I,g);if("normal"===o.type){if(B=g.done?"completed":"suspendedYield",o.arg===s)continue;return{value:o.arg,done:g.done}}"throw"===o.type&&(B="completed",g.method="throw",g.arg=o.arg)}}}(A,g,E),C}function t(A,I,g){try{return{type:"normal",arg:A.call(I,g)}}catch(A){return{type:"throw",arg:A}}}I.wrap=w;var s={};function G(){}function h(){}function R(){}var r={};a(r,i,(function(){return this}));var F=Object.getPrototypeOf,y=F&&F(F(U([])));y&&y!==g&&C.call(y,i)&&(r=y);var e=R.prototype=G.prototype=Object.create(r);function n(A){["next","throw","return"].forEach((function(I){a(A,I,(function(A){return this._invoke(I,A)}))}))}function M(A,I){function g(Q,E,i,o){var D=t(A[Q],A,E);if("throw"!==D.type){var a=D.arg,w=a.value;return w&&"object"==B(w)&&C.call(w,"__await")?I.resolve(w.__await).then((function(A){g("next",A,i,o)}),(function(A){g("throw",A,i,o)})):I.resolve(w).then((function(A){a.value=A,i(a)}),(function(A){return g("throw",A,i,o)}))}o(D.arg)}var Q;this._invoke=function(A,B){function C(){return new I((function(I,Q){g(A,B,I,Q)}))}return Q=Q?Q.then(C,C):C()}}function S(A,I){var g=A.iterator[I.method];if(void 0===g){if(I.delegate=null,"throw"===I.method){if(A.iterator.return&&(I.method="return",I.arg=void 0,S(A,I),"throw"===I.method))return s;I.method="throw",I.arg=new TypeError("The iterator does not provide a 'throw' method")}return s}var B=t(g,A.iterator,I.arg);if("throw"===B.type)return I.method="throw",I.arg=B.arg,I.delegate=null,s;var Q=B.arg;return Q?Q.done?(I[A.resultName]=Q.value,I.next=A.nextLoc,"return"!==I.method&&(I.method="next",I.arg=void 0),I.delegate=null,s):Q:(I.method="throw",I.arg=new TypeError("iterator result is not an object"),I.delegate=null,s)}function N(A){var I={tryLoc:A[0]};1 in A&&(I.catchLoc=A[1]),2 in A&&(I.finallyLoc=A[2],I.afterLoc=A[3]),this.tryEntries.push(I)}function c(A){var I=A.completion||{};I.type="normal",delete I.arg,A.completion=I}function k(A){this.tryEntries=[{tryLoc:"root"}],A.forEach(N,this),this.reset(!0)}function U(A){if(A){var I=A[i];if(I)return I.call(A);if("function"==typeof A.next)return A;if(!isNaN(A.length)){var g=-1,B=function I(){for(;++g<A.length;)if(C.call(A,g))return I.value=A[g],I.done=!1,I;return I.value=void 0,I.done=!0,I};return B.next=B}}return{next:J}}function J(){return{value:void 0,done:!0}}return h.prototype=R,a(e,"constructor",R),a(R,"constructor",h),h.displayName=a(R,D,"GeneratorFunction"),I.isGeneratorFunction=function(A){var I="function"==typeof A&&A.constructor;return!!I&&(I===h||"GeneratorFunction"===(I.displayName||I.name))},I.mark=function(A){return Object.setPrototypeOf?Object.setPrototypeOf(A,R):(A.__proto__=R,a(A,D,"GeneratorFunction")),A.prototype=Object.create(e),A},I.awrap=function(A){return{__await:A}},n(M.prototype),a(M.prototype,o,(function(){return this})),I.AsyncIterator=M,I.async=function(A,g,B,Q,C){void 0===C&&(C=Promise);var E=new M(w(A,g,B,Q),C);return I.isGeneratorFunction(g)?E:E.next().then((function(A){return A.done?A.value:E.next()}))},n(e),a(e,D,"Generator"),a(e,i,(function(){return this})),a(e,"toString",(function(){return"[object Generator]"})),I.keys=function(A){var I=[];for(var g in A)I.push(g);return I.reverse(),function g(){for(;I.length;){var B=I.pop();if(B in A)return g.value=B,g.done=!1,g}return g.done=!0,g}},I.values=U,k.prototype={constructor:k,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(c),!A)for(var I in this)"t"===I.charAt(0)&&C.call(this,I)&&!isNaN(+I.slice(1))&&(this[I]=void 0)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if("throw"===A.type)throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var I=this;function g(g,B){return E.type="throw",E.arg=A,I.next=g,B&&(I.method="next",I.arg=void 0),!!B}for(var B=this.tryEntries.length-1;B>=0;--B){var Q=this.tryEntries[B],E=Q.completion;if("root"===Q.tryLoc)return g("end");if(Q.tryLoc<=this.prev){var i=C.call(Q,"catchLoc"),o=C.call(Q,"finallyLoc");if(i&&o){if(this.prev<Q.catchLoc)return g(Q.catchLoc,!0);if(this.prev<Q.finallyLoc)return g(Q.finallyLoc)}else if(i){if(this.prev<Q.catchLoc)return g(Q.catchLoc,!0)}else{if(!o)throw new Error("try statement without catch or finally");if(this.prev<Q.finallyLoc)return g(Q.finallyLoc)}}}},abrupt:function(A,I){for(var g=this.tryEntries.length-1;g>=0;--g){var B=this.tryEntries[g];if(B.tryLoc<=this.prev&&C.call(B,"finallyLoc")&&this.prev<B.finallyLoc){var Q=B;break}}Q&&("break"===A||"continue"===A)&&Q.tryLoc<=I&&I<=Q.finallyLoc&&(Q=null);var E=Q?Q.completion:{};return E.type=A,E.arg=I,Q?(this.method="next",this.next=Q.finallyLoc,s):this.complete(E)},complete:function(A,I){if("throw"===A.type)throw A.arg;return"break"===A.type||"continue"===A.type?this.next=A.arg:"return"===A.type?(this.rval=this.arg=A.arg,this.method="return",this.next="end"):"normal"===A.type&&I&&(this.next=I),s},finish:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.finallyLoc===A)return this.complete(g.completion,g.afterLoc),c(g),s}},catch:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.tryLoc===A){var B=g.completion;if("throw"===B.type){var Q=B.arg;c(g)}return Q}}throw new Error("illegal catch attempt")},delegateYield:function(A,I,g){return this.delegate={iterator:U(A),resultName:I,nextLoc:g},"next"===this.method&&(this.arg=void 0),s}},I}A.exports=Q,A.exports.__esModule=!0,A.exports.default=A.exports},698:A=>{function I(g){return A.exports=I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},A.exports.__esModule=!0,A.exports.default=A.exports,I(g)}A.exports=I,A.exports.__esModule=!0,A.exports.default=A.exports},687:(A,I,g)=>{var B=g(61)();A.exports=B;try{regeneratorRuntime=B}catch(A){"object"==typeof globalThis?globalThis.regeneratorRuntime=B:Function("r","regeneratorRuntime = r")(B)}}},I={};function g(B){var Q=I[B];if(void 0!==Q)return Q.exports;var C=I[B]={exports:{}};return A[B](C,C.exports,g),C.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var B={};return(()=>{"use strict";function A(A,I,g,B,Q,C,E){try{var i=A[C](E),o=i.value}catch(A){return void g(A)}i.done?I(o):Promise.resolve(o).then(B,Q)}function I(I){return function(){var g=this,B=arguments;return new Promise((function(Q,C){var E=I.apply(g,B);function i(I){A(E,Q,C,i,o,"next",I)}function o(I){A(E,Q,C,i,o,"throw",I)}i(void 0)}))}}function Q(A,I){if(!(A instanceof I))throw new TypeError("Cannot call a class as a function")}function C(A,I){for(var g=0;g<I.length;g++){var B=I[g];B.enumerable=B.enumerable||!1,B.configurable=!0,"value"in B&&(B.writable=!0),Object.defineProperty(A,B.key,B)}}function E(A,I,g){return I&&C(A.prototype,I),g&&C(A,g),Object.defineProperty(A,"prototype",{writable:!1}),A}g.d(B,{default:()=>wI});var i=g(687),o=g.n(i);function D(A){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},D(A)}var a,w=(a=(a="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(A){var I,B;(A=void 0!==(A=A||{})?A:{}).ready=new Promise((function(A,g){I=A,B=g}));var Q,C,E,i,o,w,t=Object.assign({},A),s=[],G="./this.program",h=function(A,I){throw I},R="object"==("undefined"==typeof window?"undefined":D(window)),r="function"==typeof importScripts,F="object"==("undefined"==typeof process?"undefined":D(process))&&"object"==D(process.versions)&&"string"==typeof process.versions.node,y="";F?(y=r?g(703).dirname(y)+"/":"//",w=function(){o||(i=g(231),o=g(703))},Q=function(A,I){var g=mI(A);return g?I?g:g.toString():(w(),A=o.normalize(A),i.readFileSync(A,I?void 0:"utf8"))},E=function(A){var I=Q(A,!0);return I.buffer||(I=new Uint8Array(I)),I},C=function(A,I,g){var B=mI(A);B&&I(B),w(),A=o.normalize(A),i.readFile(A,(function(A,B){A?g(A):I(B.buffer)}))},process.argv.length>1&&(G=process.argv[1].replace(/\\/g,"/")),s=process.argv.slice(2),process.on("uncaughtException",(function(A){if(!(A instanceof oA))throw A})),process.on("unhandledRejection",(function(A){throw A})),h=function(A,I){if(T())throw process.exitCode=A,I;var g;(g=I)instanceof oA||M("exiting due to exception: "+g),process.exit(A)},A.inspect=function(){return"[Emscripten Module object]"}):(R||r)&&(r?y=self.location.href:"undefined"!=typeof document&&document.currentScript&&(y=document.currentScript.src),a&&(y=a),y=0!==y.indexOf("blob:")?y.substr(0,y.replace(/[?#].*/,"").lastIndexOf("/")+1):"",Q=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=mI(A);if(g)return function(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(uI&&k(!1,"Character code "+B+" ("+String.fromCharCode(B)+")  at offset "+g+" not in 0x00-0xFF."),B&=255),I.push(String.fromCharCode(B))}return I.join("")}(g);throw I}},r&&(E=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}catch(I){var g=mI(A);if(g)return g;throw I}}),C=function(A,I,g){var B=new XMLHttpRequest;B.open("GET",A,!0),B.responseType="arraybuffer",B.onload=function(){if(200==B.status||0==B.status&&B.response)I(B.response);else{var Q=mI(A);Q?I(Q.buffer):g()}},B.onerror=g,B.send(null)});var e,n=A.print||console.log.bind(console),M=A.printErr||console.warn.bind(console);Object.assign(A,t),t=null,A.arguments&&(s=A.arguments),A.thisProgram&&(G=A.thisProgram),A.quit&&(h=A.quit),A.wasmBinary&&(e=A.wasmBinary);var S,N=A.noExitRuntime||!0;"object"!=("undefined"==typeof WebAssembly?"undefined":D(WebAssembly))&&_("no native wasm support detected");var c=!1;function k(A,I){A||_(I)}var U,J,K,Y,L,d,H,l,q,f="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function u(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.buffer&&f)return f.decode(A.subarray(I,Q));for(var C="";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else{var D=E-65536;C+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else C+=String.fromCharCode((31&E)<<6|i)}else C+=String.fromCharCode(E)}return C}function W(A,I){return A?u(K,A,I):""}function m(A,I,g,B){if(!(B>0))return 0;for(var Q=g,C=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=C)break;I[g++]=i}else if(i<=2047){if(g+1>=C)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=C)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=C)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-Q}function p(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}function b(I){U=I,A.HEAP8=J=new Int8Array(I),A.HEAP16=Y=new Int16Array(I),A.HEAP32=d=new Int32Array(I),A.HEAPU8=K=new Uint8Array(I),A.HEAPU16=L=new Uint16Array(I),A.HEAPU32=H=new Uint32Array(I),A.HEAPF32=l=new Float32Array(I),A.HEAPF64=q=new Float64Array(I)}A.INITIAL_MEMORY;var Z,x=[],V=[],X=[];function T(){return N}var O=0,v=null,j=null;function P(I){O++,A.monitorRunDependencies&&A.monitorRunDependencies(O)}function z(I){if(O--,A.monitorRunDependencies&&A.monitorRunDependencies(O),0==O&&(null!==v&&(clearInterval(v),v=null),j)){var g=j;j=null,g()}}function _(I){A.onAbort&&A.onAbort(I),M(I="Aborted("+I+")"),c=!0,I+=". Build with -sASSERTIONS for more info.";var g=new WebAssembly.RuntimeError(I);throw B(g),g}var $,AA,IA,gA,BA="data:application/octet-stream;base64,";function QA(A){return A.startsWith(BA)}function CA(A){return A.startsWith("file://")}function EA(A){try{if(A==$&&e)return new Uint8Array(e);var I=mI(A);if(I)return I;if(E)return E(A);throw"both async and sync fetching of the wasm failed"}catch(A){_(A)}}QA($="data:application/octet-stream;base64,")||(AA=$,$=A.locateFile?A.locateFile(AA,y):y+AA);var iA={65008:function(){var A=arguments,I=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkit.NFTMarkerInfo;g.id=A[I++],g.error=A[I++],g.found=1,g.pose[0]=A[I++],g.pose[1]=A[I++],g.pose[2]=A[I++],g.pose[3]=A[I++],g.pose[4]=A[I++],g.pose[5]=A[I++],g.pose[6]=A[I++],g.pose[7]=A[I++],g.pose[8]=A[I++],g.pose[9]=A[I++],g.pose[10]=A[I++],g.pose[11]=A[I++]},65705:function(){var A=arguments,I=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkit.NFTMarkerInfo;g.id=A[I++],g.error=-1,g.found=0,g.pose[0]=0,g.pose[1]=0,g.pose[2]=0,g.pose[3]=0,g.pose[4]=0,g.pose[5]=0,g.pose[6]=0,g.pose[7]=0,g.pose[8]=0,g.pose[9]=0,g.pose[10]=0,g.pose[11]=0},66325:function(A,I,g,B){artoolkit.multiEachMarkerInfo||(artoolkit.multiEachMarkerInfo={});var Q=artoolkit.multiEachMarkerInfo;Q.visible=A,Q.pattId=I,Q.pattType=g,Q.width=B},66599:function(A,I,g,B,Q,C,E,i,o,D,a,w){var t=arguments,s=12;artoolkit.markerInfo||(artoolkit.markerInfo={pos:[0,0],line:[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],vertex:[[0,0],[0,0],[0,0],[0,0]]});var G=artoolkit.markerInfo;G.area=A,G.id=I,G.idPatt=g,G.idMatrix=B,G.dir=Q,G.dirPatt=C,G.dirMatrix=E,G.cf=i,G.cfPatt=o,G.cfMatrix=D,G.pos[0]=a,G.pos[1]=w,G.line[0][0]=t[s++],G.line[0][1]=t[s++],G.line[0][2]=t[s++],G.line[1][0]=t[s++],G.line[1][1]=t[s++],G.line[1][2]=t[s++],G.line[2][0]=t[s++],G.line[2][1]=t[s++],G.line[2][2]=t[s++],G.line[3][0]=t[s++],G.line[3][1]=t[s++],G.line[3][2]=t[s++],G.vertex[0][0]=t[s++],G.vertex[0][1]=t[s++],G.vertex[1][0]=t[s++],G.vertex[1][1]=t[s++],G.vertex[2][0]=t[s++],G.vertex[2][1]=t[s++],G.vertex[3][0]=t[s++],G.vertex[3][1]=t[s++],G.errorCorrected=t[s++]},67934:function(A,I,g,B,Q,C){artoolkit.frameMalloc||(artoolkit.frameMalloc={});var E=artoolkit.frameMalloc;E.framepointer=I,E.framesize=g,E.camera=B,E.transform=Q,E.videoLumaPointer=C}};function oA(A){this.name="ExitStatus",this.message="Program terminated with exit("+A+")",this.status=A}function DA(I){for(;I.length>0;)I.shift()(A)}function aA(A){this.excPtr=A,this.ptr=A-24,this.set_type=function(A){H[this.ptr+4>>2]=A},this.get_type=function(){return H[this.ptr+4>>2]},this.set_destructor=function(A){H[this.ptr+8>>2]=A},this.get_destructor=function(){return H[this.ptr+8>>2]},this.set_refcount=function(A){d[this.ptr>>2]=A},this.set_caught=function(A){A=A?1:0,J[this.ptr+12>>0]=A},this.get_caught=function(){return 0!=J[this.ptr+12>>0]},this.set_rethrown=function(A){A=A?1:0,J[this.ptr+13>>0]=A},this.get_rethrown=function(){return 0!=J[this.ptr+13>>0]},this.init=function(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var A=d[this.ptr>>2];d[this.ptr>>2]=A+1},this.release_ref=function(){var A=d[this.ptr>>2];return d[this.ptr>>2]=A-1,1===A},this.set_adjusted_ptr=function(A){H[this.ptr+16>>2]=A},this.get_adjusted_ptr=function(){return H[this.ptr+16>>2]},this.get_exception_ptr=function(){if(jI(this.get_type()))return H[this.excPtr>>2];var A=this.get_adjusted_ptr();return 0!==A?A:this.excPtr}}var wA={isAbs:function(A){return"/"===A.charAt(0)},splitPath:function(A){return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(A).slice(1)},normalizeArray:function(A,I){for(var g=0,B=A.length-1;B>=0;B--){var Q=A[B];"."===Q?A.splice(B,1):".."===Q?(A.splice(B,1),g++):g&&(A.splice(B,1),g--)}if(I)for(;g;g--)A.unshift("..");return A},normalize:function(A){var I=wA.isAbs(A),g="/"===A.substr(-1);return(A=wA.normalizeArray(A.split("/").filter((function(A){return!!A})),!I).join("/"))||I||(A="."),A&&g&&(A+="/"),(I?"/":"")+A},dirname:function(A){var I=wA.splitPath(A),g=I[0],B=I[1];return g||B?(B&&(B=B.substr(0,B.length-1)),g+B):"."},basename:function(A){if("/"===A)return"/";var I=(A=(A=wA.normalize(A)).replace(/\/$/,"")).lastIndexOf("/");return-1===I?A:A.substr(I+1)},join:function(){var A=Array.prototype.slice.call(arguments);return wA.normalize(A.join("/"))},join2:function(A,I){return wA.normalize(A+"/"+I)}},tA={resolve:function(){for(var A="",I=!1,g=arguments.length-1;g>=-1&&!I;g--){var B=g>=0?arguments[g]:rA.cwd();if("string"!=typeof B)throw new TypeError("Arguments to path.resolve must be strings");if(!B)return"";A=B+"/"+A,I=wA.isAbs(B)}return(I?"/":"")+(A=wA.normalizeArray(A.split("/").filter((function(A){return!!A})),!I).join("/"))||"."},relative:function(A,I){function g(A){for(var I=0;I<A.length&&""===A[I];I++);for(var g=A.length-1;g>=0&&""===A[g];g--);return I>g?[]:A.slice(I,g-I+1)}A=tA.resolve(A).substr(1),I=tA.resolve(I).substr(1);for(var B=g(A.split("/")),Q=g(I.split("/")),C=Math.min(B.length,Q.length),E=C,i=0;i<C;i++)if(B[i]!==Q[i]){E=i;break}var o=[];for(i=E;i<B.length;i++)o.push("..");return(o=o.concat(Q.slice(E))).join("/")}};function sA(A,I,g){var B=g>0?g:p(A)+1,Q=new Array(B),C=m(A,Q,0,Q.length);return I&&(Q.length=C),Q}var GA={ttys:[],init:function(){},shutdown:function(){},register:function(A,I){GA.ttys[A]={input:[],output:[],ops:I},rA.registerDevice(A,GA.stream_ops)},stream_ops:{open:function(A){var I=GA.ttys[A.node.rdev];if(!I)throw new rA.ErrnoError(43);A.tty=I,A.seekable=!1},close:function(A){A.tty.ops.fsync(A.tty)},fsync:function(A){A.tty.ops.fsync(A.tty)},read:function(A,I,g,B,Q){if(!A.tty||!A.tty.ops.get_char)throw new rA.ErrnoError(60);for(var C=0,E=0;E<B;E++){var i;try{i=A.tty.ops.get_char(A.tty)}catch(A){throw new rA.ErrnoError(29)}if(void 0===i&&0===C)throw new rA.ErrnoError(6);if(null==i)break;C++,I[g+E]=i}return C&&(A.node.timestamp=Date.now()),C},write:function(A,I,g,B,Q){if(!A.tty||!A.tty.ops.put_char)throw new rA.ErrnoError(60);try{for(var C=0;C<B;C++)A.tty.ops.put_char(A.tty,I[g+C])}catch(A){throw new rA.ErrnoError(29)}return B&&(A.node.timestamp=Date.now()),C}},default_tty_ops:{get_char:function(A){if(!A.input.length){var I=null;if(F){var g=Buffer.alloc(256),B=0;try{B=i.readSync(process.stdin.fd,g,0,256,-1)}catch(A){if(!A.toString().includes("EOF"))throw A;B=0}I=B>0?g.slice(0,B).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(I=window.prompt("Input: "))&&(I+="\n"):"function"==typeof readline&&null!==(I=readline())&&(I+="\n");if(!I)return null;A.input=sA(I,!0)}return A.input.shift()},put_char:function(A,I){null===I||10===I?(n(u(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(n(u(A.output,0)),A.output=[])}},default_tty1_ops:{put_char:function(A,I){null===I||10===I?(M(u(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(M(u(A.output,0)),A.output=[])}}};function hA(A){_()}var RA={ops_table:null,mount:function(A){return RA.createNode(null,"/",16895,0)},createNode:function(A,I,g,B){if(rA.isBlkdev(g)||rA.isFIFO(g))throw new rA.ErrnoError(63);RA.ops_table||(RA.ops_table={dir:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr,lookup:RA.node_ops.lookup,mknod:RA.node_ops.mknod,rename:RA.node_ops.rename,unlink:RA.node_ops.unlink,rmdir:RA.node_ops.rmdir,readdir:RA.node_ops.readdir,symlink:RA.node_ops.symlink},stream:{llseek:RA.stream_ops.llseek}},file:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr},stream:{llseek:RA.stream_ops.llseek,read:RA.stream_ops.read,write:RA.stream_ops.write,allocate:RA.stream_ops.allocate,mmap:RA.stream_ops.mmap,msync:RA.stream_ops.msync}},link:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr,readlink:RA.node_ops.readlink},stream:{}},chrdev:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr},stream:rA.chrdev_stream_ops}});var Q=rA.createNode(A,I,g,B);return rA.isDir(Q.mode)?(Q.node_ops=RA.ops_table.dir.node,Q.stream_ops=RA.ops_table.dir.stream,Q.contents={}):rA.isFile(Q.mode)?(Q.node_ops=RA.ops_table.file.node,Q.stream_ops=RA.ops_table.file.stream,Q.usedBytes=0,Q.contents=null):rA.isLink(Q.mode)?(Q.node_ops=RA.ops_table.link.node,Q.stream_ops=RA.ops_table.link.stream):rA.isChrdev(Q.mode)&&(Q.node_ops=RA.ops_table.chrdev.node,Q.stream_ops=RA.ops_table.chrdev.stream),Q.timestamp=Date.now(),A&&(A.contents[I]=Q,A.timestamp=Q.timestamp),Q},getFileDataAsTypedArray:function(A){return A.contents?A.contents.subarray?A.contents.subarray(0,A.usedBytes):new Uint8Array(A.contents):new Uint8Array(0)},expandFileStorage:function(A,I){var g=A.contents?A.contents.length:0;if(!(g>=I)){I=Math.max(I,g*(g<1048576?2:1.125)>>>0),0!=g&&(I=Math.max(I,256));var B=A.contents;A.contents=new Uint8Array(I),A.usedBytes>0&&A.contents.set(B.subarray(0,A.usedBytes),0)}},resizeFileStorage:function(A,I){if(A.usedBytes!=I)if(0==I)A.contents=null,A.usedBytes=0;else{var g=A.contents;A.contents=new Uint8Array(I),g&&A.contents.set(g.subarray(0,Math.min(I,A.usedBytes))),A.usedBytes=I}},node_ops:{getattr:function(A){var I={};return I.dev=rA.isChrdev(A.mode)?A.id:1,I.ino=A.id,I.mode=A.mode,I.nlink=1,I.uid=0,I.gid=0,I.rdev=A.rdev,rA.isDir(A.mode)?I.size=4096:rA.isFile(A.mode)?I.size=A.usedBytes:rA.isLink(A.mode)?I.size=A.link.length:I.size=0,I.atime=new Date(A.timestamp),I.mtime=new Date(A.timestamp),I.ctime=new Date(A.timestamp),I.blksize=4096,I.blocks=Math.ceil(I.size/I.blksize),I},setattr:function(A,I){void 0!==I.mode&&(A.mode=I.mode),void 0!==I.timestamp&&(A.timestamp=I.timestamp),void 0!==I.size&&RA.resizeFileStorage(A,I.size)},lookup:function(A,I){throw rA.genericErrors[44]},mknod:function(A,I,g,B){return RA.createNode(A,I,g,B)},rename:function(A,I,g){if(rA.isDir(A.mode)){var B;try{B=rA.lookupNode(I,g)}catch(A){}if(B)for(var Q in B.contents)throw new rA.ErrnoError(55)}delete A.parent.contents[A.name],A.parent.timestamp=Date.now(),A.name=g,I.contents[g]=A,I.timestamp=A.parent.timestamp,A.parent=I},unlink:function(A,I){delete A.contents[I],A.timestamp=Date.now()},rmdir:function(A,I){var g=rA.lookupNode(A,I);for(var B in g.contents)throw new rA.ErrnoError(55);delete A.contents[I],A.timestamp=Date.now()},readdir:function(A){var I=[".",".."];for(var g in A.contents)A.contents.hasOwnProperty(g)&&I.push(g);return I},symlink:function(A,I,g){var B=RA.createNode(A,I,41471,0);return B.link=g,B},readlink:function(A){if(!rA.isLink(A.mode))throw new rA.ErrnoError(28);return A.link}},stream_ops:{read:function(A,I,g,B,Q){var C=A.node.contents;if(Q>=A.node.usedBytes)return 0;var E=Math.min(A.node.usedBytes-Q,B);if(E>8&&C.subarray)I.set(C.subarray(Q,Q+E),g);else for(var i=0;i<E;i++)I[g+i]=C[Q+i];return E},write:function(A,I,g,B,Q,C){if(I.buffer===J.buffer&&(C=!1),!B)return 0;var E=A.node;if(E.timestamp=Date.now(),I.subarray&&(!E.contents||E.contents.subarray)){if(C)return E.contents=I.subarray(g,g+B),E.usedBytes=B,B;if(0===E.usedBytes&&0===Q)return E.contents=I.slice(g,g+B),E.usedBytes=B,B;if(Q+B<=E.usedBytes)return E.contents.set(I.subarray(g,g+B),Q),B}if(RA.expandFileStorage(E,Q+B),E.contents.subarray&&I.subarray)E.contents.set(I.subarray(g,g+B),Q);else for(var i=0;i<B;i++)E.contents[Q+i]=I[g+i];return E.usedBytes=Math.max(E.usedBytes,Q+B),B},llseek:function(A,I,g){var B=I;if(1===g?B+=A.position:2===g&&rA.isFile(A.node.mode)&&(B+=A.node.usedBytes),B<0)throw new rA.ErrnoError(28);return B},allocate:function(A,I,g){RA.expandFileStorage(A.node,I+g),A.node.usedBytes=Math.max(A.node.usedBytes,I+g)},mmap:function(A,I,g,B,Q){if(!rA.isFile(A.node.mode))throw new rA.ErrnoError(43);var C,E,i=A.node.contents;if(2&Q||i.buffer!==U){if((g>0||g+I<i.length)&&(i=i.subarray?i.subarray(g,g+I):Array.prototype.slice.call(i,g,g+I)),E=!0,!(C=hA()))throw new rA.ErrnoError(48);J.set(i,C)}else E=!1,C=i.byteOffset;return{ptr:C,allocated:E}},msync:function(A,I,g,B,Q){if(!rA.isFile(A.node.mode))throw new rA.ErrnoError(43);return 2&Q||RA.stream_ops.write(A,I,0,B,g,!1),0}}},rA={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(A){var I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(A=tA.resolve(rA.cwd(),A)))return{path:"",node:null};var g={follow_mount:!0,recurse_count:0};if((I=Object.assign(g,I)).recurse_count>8)throw new rA.ErrnoError(32);for(var B=wA.normalizeArray(A.split("/").filter((function(A){return!!A})),!1),Q=rA.root,C="/",E=0;E<B.length;E++){var i=E===B.length-1;if(i&&I.parent)break;if(Q=rA.lookupNode(Q,B[E]),C=wA.join2(C,B[E]),rA.isMountpoint(Q)&&(!i||i&&I.follow_mount)&&(Q=Q.mounted.root),!i||I.follow)for(var o=0;rA.isLink(Q.mode);){var D=rA.readlink(C);C=tA.resolve(wA.dirname(C),D);var a=rA.lookupPath(C,{recurse_count:I.recurse_count+1});if(Q=a.node,o++>40)throw new rA.ErrnoError(32)}}return{path:C,node:Q}},getPath:function(A){for(var I;;){if(rA.isRoot(A)){var g=A.mount.mountpoint;return I?"/"!==g[g.length-1]?g+"/"+I:g+I:g}I=I?A.name+"/"+I:A.name,A=A.parent}},hashName:function(A,I){for(var g=0,B=0;B<I.length;B++)g=(g<<5)-g+I.charCodeAt(B)|0;return(A+g>>>0)%rA.nameTable.length},hashAddNode:function(A){var I=rA.hashName(A.parent.id,A.name);A.name_next=rA.nameTable[I],rA.nameTable[I]=A},hashRemoveNode:function(A){var I=rA.hashName(A.parent.id,A.name);if(rA.nameTable[I]===A)rA.nameTable[I]=A.name_next;else for(var g=rA.nameTable[I];g;){if(g.name_next===A){g.name_next=A.name_next;break}g=g.name_next}},lookupNode:function(A,I){var g=rA.mayLookup(A);if(g)throw new rA.ErrnoError(g,A);for(var B=rA.hashName(A.id,I),Q=rA.nameTable[B];Q;Q=Q.name_next){var C=Q.name;if(Q.parent.id===A.id&&C===I)return Q}return rA.lookup(A,I)},createNode:function(A,I,g,B){var Q=new rA.FSNode(A,I,g,B);return rA.hashAddNode(Q),Q},destroyNode:function(A){rA.hashRemoveNode(A)},isRoot:function(A){return A===A.parent},isMountpoint:function(A){return!!A.mounted},isFile:function(A){return 32768==(61440&A)},isDir:function(A){return 16384==(61440&A)},isLink:function(A){return 40960==(61440&A)},isChrdev:function(A){return 8192==(61440&A)},isBlkdev:function(A){return 24576==(61440&A)},isFIFO:function(A){return 4096==(61440&A)},isSocket:function(A){return 49152==(49152&A)},flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:function(A){var I=rA.flagModes[A];if(void 0===I)throw new Error("Unknown file open mode: "+A);return I},flagsToPermissionString:function(A){var I=["r","w","rw"][3&A];return 512&A&&(I+="w"),I},nodePermissions:function(A,I){return rA.ignorePermissions||(!I.includes("r")||292&A.mode)&&(!I.includes("w")||146&A.mode)&&(!I.includes("x")||73&A.mode)?0:2},mayLookup:function(A){return rA.nodePermissions(A,"x")||(A.node_ops.lookup?0:2)},mayCreate:function(A,I){try{return rA.lookupNode(A,I),20}catch(A){}return rA.nodePermissions(A,"wx")},mayDelete:function(A,I,g){var B;try{B=rA.lookupNode(A,I)}catch(A){return A.errno}var Q=rA.nodePermissions(A,"wx");if(Q)return Q;if(g){if(!rA.isDir(B.mode))return 54;if(rA.isRoot(B)||rA.getPath(B)===rA.cwd())return 10}else if(rA.isDir(B.mode))return 31;return 0},mayOpen:function(A,I){return A?rA.isLink(A.mode)?32:rA.isDir(A.mode)&&("r"!==rA.flagsToPermissionString(I)||512&I)?31:rA.nodePermissions(A,rA.flagsToPermissionString(I)):44},MAX_OPEN_FDS:4096,nextfd:function(){for(var A=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:rA.MAX_OPEN_FDS,g=A;g<=I;g++)if(!rA.streams[g])return g;throw new rA.ErrnoError(33)},getStream:function(A){return rA.streams[A]},createStream:function(A,I,g){rA.FSStream||(rA.FSStream=function(){this.shared={}},rA.FSStream.prototype={},Object.defineProperties(rA.FSStream.prototype,{object:{get:function(){return this.node},set:function(A){this.node=A}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(A){this.shared.flags=A}},position:{get:function(){return this.shared.position},set:function(A){this.shared.position=A}}})),A=Object.assign(new rA.FSStream,A);var B=rA.nextfd(I,g);return A.fd=B,rA.streams[B]=A,A},closeStream:function(A){rA.streams[A]=null},chrdev_stream_ops:{open:function(A){var I=rA.getDevice(A.node.rdev);A.stream_ops=I.stream_ops,A.stream_ops.open&&A.stream_ops.open(A)},llseek:function(){throw new rA.ErrnoError(70)}},major:function(A){return A>>8},minor:function(A){return 255&A},makedev:function(A,I){return A<<8|I},registerDevice:function(A,I){rA.devices[A]={stream_ops:I}},getDevice:function(A){return rA.devices[A]},getMounts:function(A){for(var I=[],g=[A];g.length;){var B=g.pop();I.push(B),g.push.apply(g,B.mounts)}return I},syncfs:function(A,I){"function"==typeof A&&(I=A,A=!1),rA.syncFSRequests++,rA.syncFSRequests>1&&M("warning: "+rA.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var g=rA.getMounts(rA.root.mount),B=0;function Q(A){return rA.syncFSRequests--,I(A)}function C(A){if(A)return C.errored?void 0:(C.errored=!0,Q(A));++B>=g.length&&Q(null)}g.forEach((function(I){if(!I.type.syncfs)return C(null);I.type.syncfs(I,A,C)}))},mount:function(A,I,g){var B,Q="/"===g,C=!g;if(Q&&rA.root)throw new rA.ErrnoError(10);if(!Q&&!C){var E=rA.lookupPath(g,{follow_mount:!1});if(g=E.path,B=E.node,rA.isMountpoint(B))throw new rA.ErrnoError(10);if(!rA.isDir(B.mode))throw new rA.ErrnoError(54)}var i={type:A,opts:I,mountpoint:g,mounts:[]},o=A.mount(i);return o.mount=i,i.root=o,Q?rA.root=o:B&&(B.mounted=i,B.mount&&B.mount.mounts.push(i)),o},unmount:function(A){var I=rA.lookupPath(A,{follow_mount:!1});if(!rA.isMountpoint(I.node))throw new rA.ErrnoError(28);var g=I.node,B=g.mounted,Q=rA.getMounts(B);Object.keys(rA.nameTable).forEach((function(A){for(var I=rA.nameTable[A];I;){var g=I.name_next;Q.includes(I.mount)&&rA.destroyNode(I),I=g}})),g.mounted=null;var C=g.mount.mounts.indexOf(B);g.mount.mounts.splice(C,1)},lookup:function(A,I){return A.node_ops.lookup(A,I)},mknod:function(A,I,g){var B=rA.lookupPath(A,{parent:!0}).node,Q=wA.basename(A);if(!Q||"."===Q||".."===Q)throw new rA.ErrnoError(28);var C=rA.mayCreate(B,Q);if(C)throw new rA.ErrnoError(C);if(!B.node_ops.mknod)throw new rA.ErrnoError(63);return B.node_ops.mknod(B,Q,I,g)},create:function(A,I){return I=void 0!==I?I:438,I&=4095,I|=32768,rA.mknod(A,I,0)},mkdir:function(A,I){return I=void 0!==I?I:511,I&=1023,I|=16384,rA.mknod(A,I,0)},mkdirTree:function(A,I){for(var g=A.split("/"),B="",Q=0;Q<g.length;++Q)if(g[Q]){B+="/"+g[Q];try{rA.mkdir(B,I)}catch(A){if(20!=A.errno)throw A}}},mkdev:function(A,I,g){return void 0===g&&(g=I,I=438),I|=8192,rA.mknod(A,I,g)},symlink:function(A,I){if(!tA.resolve(A))throw new rA.ErrnoError(44);var g=rA.lookupPath(I,{parent:!0}).node;if(!g)throw new rA.ErrnoError(44);var B=wA.basename(I),Q=rA.mayCreate(g,B);if(Q)throw new rA.ErrnoError(Q);if(!g.node_ops.symlink)throw new rA.ErrnoError(63);return g.node_ops.symlink(g,B,A)},rename:function(A,I){var g,B,Q=wA.dirname(A),C=wA.dirname(I),E=wA.basename(A),i=wA.basename(I);if(g=rA.lookupPath(A,{parent:!0}).node,B=rA.lookupPath(I,{parent:!0}).node,!g||!B)throw new rA.ErrnoError(44);if(g.mount!==B.mount)throw new rA.ErrnoError(75);var o,D=rA.lookupNode(g,E),a=tA.relative(A,C);if("."!==a.charAt(0))throw new rA.ErrnoError(28);if("."!==(a=tA.relative(I,Q)).charAt(0))throw new rA.ErrnoError(55);try{o=rA.lookupNode(B,i)}catch(A){}if(D!==o){var w=rA.isDir(D.mode),t=rA.mayDelete(g,E,w);if(t)throw new rA.ErrnoError(t);if(t=o?rA.mayDelete(B,i,w):rA.mayCreate(B,i))throw new rA.ErrnoError(t);if(!g.node_ops.rename)throw new rA.ErrnoError(63);if(rA.isMountpoint(D)||o&&rA.isMountpoint(o))throw new rA.ErrnoError(10);if(B!==g&&(t=rA.nodePermissions(g,"w")))throw new rA.ErrnoError(t);rA.hashRemoveNode(D);try{g.node_ops.rename(D,B,i)}catch(A){throw A}finally{rA.hashAddNode(D)}}},rmdir:function(A){var I=rA.lookupPath(A,{parent:!0}).node,g=wA.basename(A),B=rA.lookupNode(I,g),Q=rA.mayDelete(I,g,!0);if(Q)throw new rA.ErrnoError(Q);if(!I.node_ops.rmdir)throw new rA.ErrnoError(63);if(rA.isMountpoint(B))throw new rA.ErrnoError(10);I.node_ops.rmdir(I,g),rA.destroyNode(B)},readdir:function(A){var I=rA.lookupPath(A,{follow:!0}).node;if(!I.node_ops.readdir)throw new rA.ErrnoError(54);return I.node_ops.readdir(I)},unlink:function(A){var I=rA.lookupPath(A,{parent:!0}).node;if(!I)throw new rA.ErrnoError(44);var g=wA.basename(A),B=rA.lookupNode(I,g),Q=rA.mayDelete(I,g,!1);if(Q)throw new rA.ErrnoError(Q);if(!I.node_ops.unlink)throw new rA.ErrnoError(63);if(rA.isMountpoint(B))throw new rA.ErrnoError(10);I.node_ops.unlink(I,g),rA.destroyNode(B)},readlink:function(A){var I=rA.lookupPath(A).node;if(!I)throw new rA.ErrnoError(44);if(!I.node_ops.readlink)throw new rA.ErrnoError(28);return tA.resolve(rA.getPath(I.parent),I.node_ops.readlink(I))},stat:function(A,I){var g=rA.lookupPath(A,{follow:!I}).node;if(!g)throw new rA.ErrnoError(44);if(!g.node_ops.getattr)throw new rA.ErrnoError(63);return g.node_ops.getattr(g)},lstat:function(A){return rA.stat(A,!0)},chmod:function(A,I,g){var B;if(!(B="string"==typeof A?rA.lookupPath(A,{follow:!g}).node:A).node_ops.setattr)throw new rA.ErrnoError(63);B.node_ops.setattr(B,{mode:4095&I|-4096&B.mode,timestamp:Date.now()})},lchmod:function(A,I){rA.chmod(A,I,!0)},fchmod:function(A,I){var g=rA.getStream(A);if(!g)throw new rA.ErrnoError(8);rA.chmod(g.node,I)},chown:function(A,I,g,B){var Q;if(!(Q="string"==typeof A?rA.lookupPath(A,{follow:!B}).node:A).node_ops.setattr)throw new rA.ErrnoError(63);Q.node_ops.setattr(Q,{timestamp:Date.now()})},lchown:function(A,I,g){rA.chown(A,I,g,!0)},fchown:function(A,I,g){var B=rA.getStream(A);if(!B)throw new rA.ErrnoError(8);rA.chown(B.node,I,g)},truncate:function(A,I){if(I<0)throw new rA.ErrnoError(28);var g;if(!(g="string"==typeof A?rA.lookupPath(A,{follow:!0}).node:A).node_ops.setattr)throw new rA.ErrnoError(63);if(rA.isDir(g.mode))throw new rA.ErrnoError(31);if(!rA.isFile(g.mode))throw new rA.ErrnoError(28);var B=rA.nodePermissions(g,"w");if(B)throw new rA.ErrnoError(B);g.node_ops.setattr(g,{size:I,timestamp:Date.now()})},ftruncate:function(A,I){var g=rA.getStream(A);if(!g)throw new rA.ErrnoError(8);if(0==(2097155&g.flags))throw new rA.ErrnoError(28);rA.truncate(g.node,I)},utime:function(A,I,g){var B=rA.lookupPath(A,{follow:!0}).node;B.node_ops.setattr(B,{timestamp:Math.max(I,g)})},open:function(I,g,B){if(""===I)throw new rA.ErrnoError(44);var Q;if(B=void 0===B?438:B,B=64&(g="string"==typeof g?rA.modeStringToFlags(g):g)?4095&B|32768:0,"object"==D(I))Q=I;else{I=wA.normalize(I);try{Q=rA.lookupPath(I,{follow:!(131072&g)}).node}catch(A){}}var C=!1;if(64&g)if(Q){if(128&g)throw new rA.ErrnoError(20)}else Q=rA.mknod(I,B,0),C=!0;if(!Q)throw new rA.ErrnoError(44);if(rA.isChrdev(Q.mode)&&(g&=-513),65536&g&&!rA.isDir(Q.mode))throw new rA.ErrnoError(54);if(!C){var E=rA.mayOpen(Q,g);if(E)throw new rA.ErrnoError(E)}512&g&&!C&&rA.truncate(Q,0),g&=-131713;var i=rA.createStream({node:Q,path:rA.getPath(Q),flags:g,seekable:!0,position:0,stream_ops:Q.stream_ops,ungotten:[],error:!1});return i.stream_ops.open&&i.stream_ops.open(i),!A.logReadFiles||1&g||(rA.readFiles||(rA.readFiles={}),I in rA.readFiles||(rA.readFiles[I]=1)),i},close:function(A){if(rA.isClosed(A))throw new rA.ErrnoError(8);A.getdents&&(A.getdents=null);try{A.stream_ops.close&&A.stream_ops.close(A)}catch(A){throw A}finally{rA.closeStream(A.fd)}A.fd=null},isClosed:function(A){return null===A.fd},llseek:function(A,I,g){if(rA.isClosed(A))throw new rA.ErrnoError(8);if(!A.seekable||!A.stream_ops.llseek)throw new rA.ErrnoError(70);if(0!=g&&1!=g&&2!=g)throw new rA.ErrnoError(28);return A.position=A.stream_ops.llseek(A,I,g),A.ungotten=[],A.position},read:function(A,I,g,B,Q){if(B<0||Q<0)throw new rA.ErrnoError(28);if(rA.isClosed(A))throw new rA.ErrnoError(8);if(1==(2097155&A.flags))throw new rA.ErrnoError(8);if(rA.isDir(A.node.mode))throw new rA.ErrnoError(31);if(!A.stream_ops.read)throw new rA.ErrnoError(28);var C=void 0!==Q;if(C){if(!A.seekable)throw new rA.ErrnoError(70)}else Q=A.position;var E=A.stream_ops.read(A,I,g,B,Q);return C||(A.position+=E),E},write:function(A,I,g,B,Q,C){if(B<0||Q<0)throw new rA.ErrnoError(28);if(rA.isClosed(A))throw new rA.ErrnoError(8);if(0==(2097155&A.flags))throw new rA.ErrnoError(8);if(rA.isDir(A.node.mode))throw new rA.ErrnoError(31);if(!A.stream_ops.write)throw new rA.ErrnoError(28);A.seekable&&1024&A.flags&&rA.llseek(A,0,2);var E=void 0!==Q;if(E){if(!A.seekable)throw new rA.ErrnoError(70)}else Q=A.position;var i=A.stream_ops.write(A,I,g,B,Q,C);return E||(A.position+=i),i},allocate:function(A,I,g){if(rA.isClosed(A))throw new rA.ErrnoError(8);if(I<0||g<=0)throw new rA.ErrnoError(28);if(0==(2097155&A.flags))throw new rA.ErrnoError(8);if(!rA.isFile(A.node.mode)&&!rA.isDir(A.node.mode))throw new rA.ErrnoError(43);if(!A.stream_ops.allocate)throw new rA.ErrnoError(138);A.stream_ops.allocate(A,I,g)},mmap:function(A,I,g,B,Q){if(0!=(2&B)&&0==(2&Q)&&2!=(2097155&A.flags))throw new rA.ErrnoError(2);if(1==(2097155&A.flags))throw new rA.ErrnoError(2);if(!A.stream_ops.mmap)throw new rA.ErrnoError(43);return A.stream_ops.mmap(A,I,g,B,Q)},msync:function(A,I,g,B,Q){return A&&A.stream_ops.msync?A.stream_ops.msync(A,I,g,B,Q):0},munmap:function(A){return 0},ioctl:function(A,I,g){if(!A.stream_ops.ioctl)throw new rA.ErrnoError(59);return A.stream_ops.ioctl(A,I,g)},readFile:function(A){var I,g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(g.flags=g.flags||0,g.encoding=g.encoding||"binary","utf8"!==g.encoding&&"binary"!==g.encoding)throw new Error('Invalid encoding type "'+g.encoding+'"');var B=rA.open(A,g.flags),Q=rA.stat(A),C=Q.size,E=new Uint8Array(C);return rA.read(B,E,0,C,0),"utf8"===g.encoding?I=u(E,0):"binary"===g.encoding&&(I=E),rA.close(B),I},writeFile:function(A,I){var g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};g.flags=g.flags||577;var B=rA.open(A,g.flags,g.mode);if("string"==typeof I){var Q=new Uint8Array(p(I)+1),C=m(I,Q,0,Q.length);rA.write(B,Q,0,C,void 0,g.canOwn)}else{if(!ArrayBuffer.isView(I))throw new Error("Unsupported data type");rA.write(B,I,0,I.byteLength,void 0,g.canOwn)}rA.close(B)},cwd:function(){return rA.currentPath},chdir:function(A){var I=rA.lookupPath(A,{follow:!0});if(null===I.node)throw new rA.ErrnoError(44);if(!rA.isDir(I.node.mode))throw new rA.ErrnoError(54);var g=rA.nodePermissions(I.node,"x");if(g)throw new rA.ErrnoError(g);rA.currentPath=I.path},createDefaultDirectories:function(){rA.mkdir("/tmp"),rA.mkdir("/home"),rA.mkdir("/home/web_user")},createDefaultDevices:function(){rA.mkdir("/dev"),rA.registerDevice(rA.makedev(1,3),{read:function(){return 0},write:function(A,I,g,B,Q){return B}}),rA.mkdev("/dev/null",rA.makedev(1,3)),GA.register(rA.makedev(5,0),GA.default_tty_ops),GA.register(rA.makedev(6,0),GA.default_tty1_ops),rA.mkdev("/dev/tty",rA.makedev(5,0)),rA.mkdev("/dev/tty1",rA.makedev(6,0));var A=function(){if("object"==("undefined"==typeof crypto?"undefined":D(crypto))&&"function"==typeof crypto.getRandomValues){var A=new Uint8Array(1);return function(){return crypto.getRandomValues(A),A[0]}}if(F)try{var I=g(654);return function(){return I.randomBytes(1)[0]}}catch(A){}return function(){return _("randomDevice")}}();rA.createDevice("/dev","random",A),rA.createDevice("/dev","urandom",A),rA.mkdir("/dev/shm"),rA.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){rA.mkdir("/proc");var A=rA.mkdir("/proc/self");rA.mkdir("/proc/self/fd"),rA.mount({mount:function(){var I=rA.createNode(A,"fd",16895,73);return I.node_ops={lookup:function(A,I){var g=+I,B=rA.getStream(g);if(!B)throw new rA.ErrnoError(8);var Q={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return B.path}}};return Q.parent=Q,Q}},I}},{},"/proc/self/fd")},createStandardStreams:function(){A.stdin?rA.createDevice("/dev","stdin",A.stdin):rA.symlink("/dev/tty","/dev/stdin"),A.stdout?rA.createDevice("/dev","stdout",null,A.stdout):rA.symlink("/dev/tty","/dev/stdout"),A.stderr?rA.createDevice("/dev","stderr",null,A.stderr):rA.symlink("/dev/tty1","/dev/stderr"),rA.open("/dev/stdin",0),rA.open("/dev/stdout",1),rA.open("/dev/stderr",1)},ensureErrnoError:function(){rA.ErrnoError||(rA.ErrnoError=function(A,I){this.node=I,this.setErrno=function(A){this.errno=A},this.setErrno(A),this.message="FS error"},rA.ErrnoError.prototype=new Error,rA.ErrnoError.prototype.constructor=rA.ErrnoError,[44].forEach((function(A){rA.genericErrors[A]=new rA.ErrnoError(A),rA.genericErrors[A].stack="<generic error, no stack>"})))},staticInit:function(){rA.ensureErrnoError(),rA.nameTable=new Array(4096),rA.mount(RA,{},"/"),rA.createDefaultDirectories(),rA.createDefaultDevices(),rA.createSpecialDirectories(),rA.filesystems={MEMFS:RA}},init:function(I,g,B){rA.init.initialized=!0,rA.ensureErrnoError(),A.stdin=I||A.stdin,A.stdout=g||A.stdout,A.stderr=B||A.stderr,rA.createStandardStreams()},quit:function(){rA.init.initialized=!1;for(var A=0;A<rA.streams.length;A++){var I=rA.streams[A];I&&rA.close(I)}},getMode:function(A,I){var g=0;return A&&(g|=365),I&&(g|=146),g},findObject:function(A,I){var g=rA.analyzePath(A,I);return g.exists?g.object:null},analyzePath:function(A,I){try{A=(B=rA.lookupPath(A,{follow:!I})).path}catch(A){}var g={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var B=rA.lookupPath(A,{parent:!0});g.parentExists=!0,g.parentPath=B.path,g.parentObject=B.node,g.name=wA.basename(A),B=rA.lookupPath(A,{follow:!I}),g.exists=!0,g.path=B.path,g.object=B.node,g.name=B.node.name,g.isRoot="/"===B.path}catch(A){g.error=A.errno}return g},createPath:function(A,I,g,B){A="string"==typeof A?A:rA.getPath(A);for(var Q=I.split("/").reverse();Q.length;){var C=Q.pop();if(C){var E=wA.join2(A,C);try{rA.mkdir(E)}catch(A){}A=E}}return E},createFile:function(A,I,g,B,Q){var C=wA.join2("string"==typeof A?A:rA.getPath(A),I),E=rA.getMode(B,Q);return rA.create(C,E)},createDataFile:function(A,I,g,B,Q,C){var E=I;A&&(A="string"==typeof A?A:rA.getPath(A),E=I?wA.join2(A,I):A);var i=rA.getMode(B,Q),o=rA.create(E,i);if(g){if("string"==typeof g){for(var D=new Array(g.length),a=0,w=g.length;a<w;++a)D[a]=g.charCodeAt(a);g=D}rA.chmod(o,146|i);var t=rA.open(o,577);rA.write(t,g,0,g.length,0,C),rA.close(t),rA.chmod(o,i)}return o},createDevice:function(A,I,g,B){var Q=wA.join2("string"==typeof A?A:rA.getPath(A),I),C=rA.getMode(!!g,!!B);rA.createDevice.major||(rA.createDevice.major=64);var E=rA.makedev(rA.createDevice.major++,0);return rA.registerDevice(E,{open:function(A){A.seekable=!1},close:function(A){B&&B.buffer&&B.buffer.length&&B(10)},read:function(A,I,B,Q,C){for(var E=0,i=0;i<Q;i++){var o;try{o=g()}catch(A){throw new rA.ErrnoError(29)}if(void 0===o&&0===E)throw new rA.ErrnoError(6);if(null==o)break;E++,I[B+i]=o}return E&&(A.node.timestamp=Date.now()),E},write:function(A,I,g,Q,C){for(var E=0;E<Q;E++)try{B(I[g+E])}catch(A){throw new rA.ErrnoError(29)}return Q&&(A.node.timestamp=Date.now()),E}}),rA.mkdev(Q,C,E)},forceLoadFile:function(A){if(A.isDevice||A.isFolder||A.link||A.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!Q)throw new Error("Cannot load without read() or XMLHttpRequest.");try{A.contents=sA(Q(A.url),!0),A.usedBytes=A.contents.length}catch(A){throw new rA.ErrnoError(29)}},createLazyFile:function(A,I,g,B,Q){function C(){this.lengthKnown=!1,this.chunks=[]}if(C.prototype.get=function(A){if(!(A>this.length-1||A<0)){var I=A%this.chunkSize,g=A/this.chunkSize|0;return this.getter(g)[I]}},C.prototype.setDataGetter=function(A){this.getter=A},C.prototype.cacheLength=function(){var A=new XMLHttpRequest;if(A.open("HEAD",g,!1),A.send(null),!(A.status>=200&&A.status<300||304===A.status))throw new Error("Couldn't load "+g+". Status: "+A.status);var I,B=Number(A.getResponseHeader("Content-length")),Q=(I=A.getResponseHeader("Accept-Ranges"))&&"bytes"===I,C=(I=A.getResponseHeader("Content-Encoding"))&&"gzip"===I,E=1048576;Q||(E=B);var i=this;i.setDataGetter((function(A){var I=A*E,Q=(A+1)*E-1;if(Q=Math.min(Q,B-1),void 0===i.chunks[A]&&(i.chunks[A]=function(A,I){if(A>I)throw new Error("invalid range ("+A+", "+I+") or no bytes requested!");if(I>B-1)throw new Error("only "+B+" bytes available! programmer error!");var Q=new XMLHttpRequest;if(Q.open("GET",g,!1),B!==E&&Q.setRequestHeader("Range","bytes="+A+"-"+I),Q.responseType="arraybuffer",Q.overrideMimeType&&Q.overrideMimeType("text/plain; charset=x-user-defined"),Q.send(null),!(Q.status>=200&&Q.status<300||304===Q.status))throw new Error("Couldn't load "+g+". Status: "+Q.status);return void 0!==Q.response?new Uint8Array(Q.response||[]):sA(Q.responseText||"",!0)}(I,Q)),void 0===i.chunks[A])throw new Error("doXHR failed!");return i.chunks[A]})),!C&&B||(E=B=1,B=this.getter(0).length,E=B,n("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=B,this._chunkSize=E,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!r)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var E=new C;Object.defineProperties(E,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var i={isDevice:!1,contents:E}}else i={isDevice:!1,url:g};var o=rA.createFile(A,I,i,B,Q);i.contents?o.contents=i.contents:i.url&&(o.contents=null,o.url=i.url),Object.defineProperties(o,{usedBytes:{get:function(){return this.contents.length}}});var D={};function a(A,I,g,B,Q){var C=A.node.contents;if(Q>=C.length)return 0;var E=Math.min(C.length-Q,B);if(C.slice)for(var i=0;i<E;i++)I[g+i]=C[Q+i];else for(i=0;i<E;i++)I[g+i]=C.get(Q+i);return E}return Object.keys(o.stream_ops).forEach((function(A){var I=o.stream_ops[A];D[A]=function(){return rA.forceLoadFile(o),I.apply(null,arguments)}})),D.read=function(A,I,g,B,Q){return rA.forceLoadFile(o),a(A,I,g,B,Q)},D.mmap=function(A,I,g,B,Q){rA.forceLoadFile(o);var C=hA();if(!C)throw new rA.ErrnoError(48);return a(A,J,C,I,g),{ptr:C,allocated:!0}},o.stream_ops=D,o},createPreloadedFile:function(A,I,g,B,Q,E,i,o,D,a){var w=I?tA.resolve(wA.join2(A,I)):A;function t(g){function C(g){a&&a(),o||rA.createDataFile(A,I,g,B,Q,D),E&&E(),z()}Browser.handledByPreloadPlugin(g,w,C,(function(){i&&i(),z()}))||C(g)}P(),"string"==typeof g?function(A,I,g,B){var Q="al "+A;C(A,(function(I){k(I,'Loading data file "'+A+'" failed (no arrayBuffer).'),t(new Uint8Array(I)),Q&&z()}),(function(I){if(!g)throw'Loading data file "'+A+'" failed.';g()})),Q&&P()}(g,0,i):t(g)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=rA.indexedDB();try{var Q=B.open(rA.DB_NAME(),rA.DB_VERSION)}catch(A){return g(A)}Q.onupgradeneeded=function(){n("creating db"),Q.result.createObjectStore(rA.DB_STORE_NAME)},Q.onsuccess=function(){var B=Q.result.transaction([rA.DB_STORE_NAME],"readwrite"),C=B.objectStore(rA.DB_STORE_NAME),E=0,i=0,o=A.length;function D(){0==i?I():g()}A.forEach((function(A){var I=C.put(rA.analyzePath(A).object.contents,A);I.onsuccess=function(){++E+i==o&&D()},I.onerror=function(){i++,E+i==o&&D()}})),B.onerror=g},Q.onerror=g},loadFilesFromDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=rA.indexedDB();try{var Q=B.open(rA.DB_NAME(),rA.DB_VERSION)}catch(A){return g(A)}Q.onupgradeneeded=g,Q.onsuccess=function(){var B=Q.result;try{var C=B.transaction([rA.DB_STORE_NAME],"readonly")}catch(A){return void g(A)}var E=C.objectStore(rA.DB_STORE_NAME),i=0,o=0,D=A.length;function a(){0==o?I():g()}A.forEach((function(A){var I=E.get(A);I.onsuccess=function(){rA.analyzePath(A).exists&&rA.unlink(A),rA.createDataFile(wA.dirname(A),wA.basename(A),I.result,!0,!0,!0),++i+o==D&&a()},I.onerror=function(){o++,i+o==D&&a()}})),C.onerror=g},Q.onerror=g}},FA={DEFAULT_POLLMASK:5,calculateAt:function(A,I,g){if(wA.isAbs(I))return I;var B;if(B=-100===A?rA.cwd():FA.getStreamFromFD(A).path,0==I.length){if(!g)throw new rA.ErrnoError(44);return B}return wA.join2(B,I)},doStat:function(A,I,g){try{var B=A(I)}catch(A){if(A&&A.node&&wA.normalize(I)!==wA.normalize(rA.getPath(A.node)))return-54;throw A}return d[g>>2]=B.dev,d[g+8>>2]=B.ino,d[g+12>>2]=B.mode,H[g+16>>2]=B.nlink,d[g+20>>2]=B.uid,d[g+24>>2]=B.gid,d[g+28>>2]=B.rdev,gA=[B.size>>>0,(IA=B.size,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+40>>2]=gA[0],d[g+44>>2]=gA[1],d[g+48>>2]=4096,d[g+52>>2]=B.blocks,gA=[Math.floor(B.atime.getTime()/1e3)>>>0,(IA=Math.floor(B.atime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+56>>2]=gA[0],d[g+60>>2]=gA[1],H[g+64>>2]=0,gA=[Math.floor(B.mtime.getTime()/1e3)>>>0,(IA=Math.floor(B.mtime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+72>>2]=gA[0],d[g+76>>2]=gA[1],H[g+80>>2]=0,gA=[Math.floor(B.ctime.getTime()/1e3)>>>0,(IA=Math.floor(B.ctime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+88>>2]=gA[0],d[g+92>>2]=gA[1],H[g+96>>2]=0,gA=[B.ino>>>0,(IA=B.ino,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+104>>2]=gA[0],d[g+108>>2]=gA[1],0},doMsync:function(A,I,g,B,Q){var C=K.slice(A,A+g);rA.msync(I,C,Q,g,B)},varargs:void 0,get:function(){return FA.varargs+=4,d[FA.varargs-4>>2]},getStr:function(A){return W(A)},getStreamFromFD:function(A){var I=rA.getStream(A);if(!I)throw new rA.ErrnoError(8);return I}},yA={};function eA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function nA(A){return this.fromWireType(d[A>>2])}var MA={},SA={},NA={};function cA(A){if(void 0===A)return"_unknown";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return I>=48&&I<=57?"_"+A:A}function kA(A,I){return A=cA(A),new Function("body","return function "+A+'() {\n    "use strict";    return body.apply(this, arguments);\n};\n')(I)}function UA(A,I){var g=kA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+"\n"+g.replace(/^Error(:[^\n]*)?\n/,""))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},g}var JA=void 0;function KA(A){throw new JA(A)}function YA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&KA("Mismatched type converter count");for(var Q=0;Q<A.length;++Q)fA(A[Q],B[Q])}A.forEach((function(A){NA[A]=I}));var Q=new Array(I.length),C=[],E=0;I.forEach((function(A,I){SA.hasOwnProperty(A)?Q[I]=SA[A]:(C.push(A),MA.hasOwnProperty(A)||(MA[A]=[]),MA[A].push((function(){Q[I]=SA[A],++E===C.length&&B(Q)})))})),0===C.length&&B(Q)}function LA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+A)}}var dA=void 0;function HA(A){for(var I="",g=A;K[g];)I+=dA[K[g++]];return I}var lA=void 0;function qA(A){throw new lA(A)}function fA(A,I){var g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!("argPackAdvance"in I))throw new TypeError("registerType registeredInstance requires argPackAdvance");var B=I.name;if(A||qA('type "'+B+'" must have a positive integer typeid pointer'),SA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;qA("Cannot register type '"+B+"' twice")}if(SA[A]=I,delete NA[A],MA.hasOwnProperty(A)){var Q=MA[A];delete MA[A],Q.forEach((function(A){return A()}))}}function uA(A){qA(A.$$.ptrType.registeredClass.name+" instance already deleted")}var WA=!1;function mA(A){}function pA(A){A.count.value-=1,0===A.count.value&&function(A){A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)}(A)}function bA(A,I,g){if(I===g)return A;if(void 0===g.baseClass)return null;var B=bA(A,I,g.baseClass);return null===B?null:g.downcast(B)}var ZA={};var xA=[];function VA(){for(;xA.length;){var A=xA.pop();A.$$.deleteScheduled=!1,A.delete()}}var XA=void 0;var TA={};function OA(A,I){return I.ptrType&&I.ptr||KA("makeClassHandle requires ptr and ptrType"),!!I.smartPtrType!=!!I.smartPtr&&KA("Both smartPtrType and smartPtr must be specified"),I.count={value:1},vA(Object.create(A,{$$:{value:I}}))}function vA(A){return"undefined"==typeof FinalizationRegistry?(vA=function(A){return A},A):(WA=new FinalizationRegistry((function(A){pA(A.$$)})),vA=function(A){var I=A.$$;if(I.smartPtr){var g={$$:I};WA.register(A,g,A)}return A},mA=function(A){return WA.unregister(A)},vA(A))}function jA(){}function PA(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||qA("Function '"+g+"' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+A[I].overloadTable+")!"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function zA(I,g,B){A.hasOwnProperty(I)?((void 0===B||void 0!==A[I].overloadTable&&void 0!==A[I].overloadTable[B])&&qA("Cannot register public name '"+I+"' twice"),PA(A,I,I),A.hasOwnProperty(B)&&qA("Cannot register multiple overloads of a function with the same number of arguments ("+B+")!"),A[I].overloadTable[B]=g):(A[I]=g,void 0!==B&&(A[I].numArguments=B))}function _A(A,I,g,B,Q,C,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=Q,this.getActualType=C,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}function $A(A,I,g){for(;I!==g;)I.upcast||qA("Expected null or instance of "+g.name+", got an instance of "+I.name),A=I.upcast(A),I=I.baseClass;return A}function AI(A,I){if(null===I)return this.isReference&&qA("null is not a valid "+this.name),0;I.$$||qA('Cannot pass "'+rI(I)+'" as a '+this.name),I.$$.ptr||qA("Cannot pass deleted object as a pointer of type "+this.name);var g=I.$$.ptrType.registeredClass;return $A(I.$$.ptr,g,this.registeredClass)}function II(A,I){var g;if(null===I)return this.isReference&&qA("null is not a valid "+this.name),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I.$$||qA('Cannot pass "'+rI(I)+'" as a '+this.name),I.$$.ptr||qA("Cannot pass deleted object as a pointer of type "+this.name),!this.isConst&&I.$$.ptrType.isConst&&qA("Cannot convert argument of type "+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+" to parameter type "+this.name);var B=I.$$.ptrType.registeredClass;if(g=$A(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&qA("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:qA("Cannot convert argument of type "+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+" to parameter type "+this.name);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var Q=I.clone();g=this.rawShare(g,RI.toHandle((function(){Q.delete()}))),null!==A&&A.push(this.rawDestructor,g)}break;default:qA("Unsupporting sharing policy")}return g}function gI(A,I){if(null===I)return this.isReference&&qA("null is not a valid "+this.name),0;I.$$||qA('Cannot pass "'+rI(I)+'" as a '+this.name),I.$$.ptr||qA("Cannot pass deleted object as a pointer of type "+this.name),I.$$.ptrType.isConst&&qA("Cannot convert argument of type "+I.$$.ptrType.name+" to parameter type "+this.name);var g=I.$$.ptrType.registeredClass;return $A(I.$$.ptr,g,this.registeredClass)}function BI(A,I,g,B,Q,C,E,i,o,D,a){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=Q,this.pointeeType=C,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=a,Q||void 0!==I.baseClass?this.toWireType=II:B?(this.toWireType=AI,this.destructorFunction=null):(this.toWireType=gI,this.destructorFunction=null)}function QI(I,g,B){A.hasOwnProperty(I)||KA("Replacing nonexistant public symbol"),void 0!==A[I].overloadTable&&void 0!==B?A[I].overloadTable[B]=g:(A[I]=g,A[I].argCount=B)}function CI(A){return Z.get(A)}function EI(I,g,B){return I.includes("j")?function(I,g,B){var Q=A["dynCall_"+I];return B&&B.length?Q.apply(null,[g].concat(B)):Q.call(null,g)}(I,g,B):CI(g).apply(null,B)}function iI(A,I){var g,B,Q,C=(A=HA(A)).includes("j")?(g=A,B=I,Q=[],function(){return Q.length=0,Object.assign(Q,arguments),EI(g,B,Q)}):CI(I);return"function"!=typeof C&&qA("unknown function pointer with signature "+A+": "+I),C}var oI=void 0;function DI(A){var I=XI(A),g=HA(I);return xI(I),g}function aI(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||SA[I]||(NA[I]?NA[I].forEach(A):(g.push(I),B[I]=!0))})),new oI(A+": "+g.map(DI).join([", "]))}function wI(A,I){for(var g=[],B=0;B<A;B++)g.push(H[I+4*B>>2]);return g}function tI(A,I,g,B,Q){var C=I.length;C<2&&qA("argTypes array size mismatch! Must at least get return value and 'this' types!");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var a="void"!==I[0].name,w="",t="";for(o=0;o<C-2;++o)w+=(0!==o?", ":"")+"arg"+o,t+=(0!==o?", ":"")+"arg"+o+"Wired";var s="return function "+cA(A)+"("+w+") {\nif (arguments.length !== "+(C-2)+") {\nthrowBindingError('function "+A+" called with ' + arguments.length + ' arguments, expected "+(C-2)+" args!');\n}\n";i&&(s+="var destructors = [];\n");var G=i?"destructors":"null",h=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],R=[qA,B,Q,eA,I[0],I[1]];for(E&&(s+="var thisWired = classParam.toWireType("+G+", this);\n"),o=0;o<C-2;++o)s+="var arg"+o+"Wired = argType"+o+".toWireType("+G+", arg"+o+"); // "+I[o+2].name+"\n",h.push("argType"+o),R.push(I[o+2]);if(E&&(t="thisWired"+(t.length>0?", ":"")+t),s+=(a?"var rv = ":"")+"invoker(fn"+(t.length>0?", ":"")+t+");\n",i)s+="runDestructors(destructors);\n";else for(o=E?1:2;o<I.length;++o){var r=1===o?"thisWired":"arg"+(o-2)+"Wired";null!==I[o].destructorFunction&&(s+=r+"_dtor("+r+"); // "+I[o].name+"\n",h.push(r+"_dtor"),R.push(I[o].destructorFunction))}return a&&(s+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),s+="}\n",h.push(s),function(A,I){if(!(A instanceof Function))throw new TypeError("new_ called with constructor type "+D(A)+" which is not a function");var g=kA(A.name||"unknownFunctionName",(function(){}));g.prototype=A.prototype;var B=new g,Q=A.apply(B,I);return Q instanceof Object?Q:B}(Function,h).apply(null,R)}var sI=[],GI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function hI(A){A>4&&0==--GI[A].refcount&&(GI[A]=void 0,sI.push(A))}var RI={toValue:function(A){return A||qA("Cannot use deleted val. handle = "+A),GI[A].value},toHandle:function(A){switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=sI.length?sI.pop():GI.length;return GI[I]={refcount:1,value:A},I}}};function rI(A){if(null===A)return"null";var I=D(A);return"object"===I||"array"===I||"function"===I?A.toString():""+A}function FI(A,I){switch(I){case 2:return function(A){return this.fromWireType(l[A>>2])};case 3:return function(A){return this.fromWireType(q[A>>3])};default:throw new TypeError("Unknown float type: "+A)}}function yI(A,I,g){switch(I){case 0:return g?function(A){return J[A]}:function(A){return K[A]};case 1:return g?function(A){return Y[A>>1]}:function(A){return L[A>>1]};case 2:return g?function(A){return d[A>>2]}:function(A){return H[A>>2]};default:throw new TypeError("Unknown integer type: "+A)}}var eI="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function nI(A,I){for(var g=A,B=g>>1,Q=B+I/2;!(B>=Q)&&L[B];)++B;if((g=B<<1)-A>32&&eI)return eI.decode(K.subarray(A,g));for(var C="",E=0;!(E>=I/2);++E){var i=Y[A+2*E>>1];if(0==i)break;C+=String.fromCharCode(i)}return C}function MI(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,Q=(g-=2)<2*A.length?g/2:A.length,C=0;C<Q;++C){var E=A.charCodeAt(C);Y[I>>1]=E,I+=2}return Y[I>>1]=0,I-B}function SI(A){return 2*A.length}function NI(A,I){for(var g=0,B="";!(g>=I/4);){var Q=d[A+4*g>>2];if(0==Q)break;if(++g,Q>=65536){var C=Q-65536;B+=String.fromCharCode(55296|C>>10,56320|1023&C)}else B+=String.fromCharCode(Q)}return B}function cI(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,Q=B+g-4,C=0;C<A.length;++C){var E=A.charCodeAt(C);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++C)),d[I>>2]=E,(I+=4)+4>Q)break}return d[I>>2]=0,I-B}function kI(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}function UI(A){var I=p(A)+1,g=ZI(I);return g&&m(A,J,g,I),g}var JI=[];function KI(A){try{return S.grow(A-U.byteLength+65535>>>16),b(S.buffer),1}catch(A){}}var YI={};function LI(){if(!LI.strings){var A={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==("undefined"==typeof navigator?"undefined":D(navigator))&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:G||"./this.program"};for(var I in YI)void 0===YI[I]?delete A[I]:A[I]=YI[I];var g=[];for(var I in A)g.push(I+"="+A[I]);LI.strings=g}return LI.strings}function dI(A){return A%4==0&&(A%100!=0||A%400==0)}var HI=[31,29,31,30,31,30,31,31,30,31,30,31],lI=[31,28,31,30,31,30,31,31,30,31,30,31];function qI(A,I,g,B){var Q=d[B+40>>2],C={tm_sec:d[B>>2],tm_min:d[B+4>>2],tm_hour:d[B+8>>2],tm_mday:d[B+12>>2],tm_mon:d[B+16>>2],tm_year:d[B+20>>2],tm_wday:d[B+24>>2],tm_yday:d[B+28>>2],tm_isdst:d[B+32>>2],tm_gmtoff:d[B+36>>2],tm_zone:Q?W(Q):""},E=W(g),i={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var o in i)E=E.replace(new RegExp(o,"g"),i[o]);var D=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],a=["January","February","March","April","May","June","July","August","September","October","November","December"];function w(A,I,g){for(var B="number"==typeof A?A.toString():A||"";B.length<I;)B=g[0]+B;return B}function t(A,I){return w(A,I,"0")}function s(A,I){function g(A){return A<0?-1:A>0?1:0}var B;return 0===(B=g(A.getFullYear()-I.getFullYear()))&&0===(B=g(A.getMonth()-I.getMonth()))&&(B=g(A.getDate()-I.getDate())),B}function G(A){switch(A.getDay()){case 0:return new Date(A.getFullYear()-1,11,29);case 1:return A;case 2:return new Date(A.getFullYear(),0,3);case 3:return new Date(A.getFullYear(),0,2);case 4:return new Date(A.getFullYear(),0,1);case 5:return new Date(A.getFullYear()-1,11,31);case 6:return new Date(A.getFullYear()-1,11,30)}}function h(A){var I=function(A,I){for(var g=new Date(A.getTime());I>0;){var B=dI(g.getFullYear()),Q=g.getMonth(),C=(B?HI:lI)[Q];if(!(I>C-g.getDate()))return g.setDate(g.getDate()+I),g;I-=C-g.getDate()+1,g.setDate(1),Q<11?g.setMonth(Q+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1))}return g}(new Date(A.tm_year+1900,0,1),A.tm_yday),g=new Date(I.getFullYear(),0,4),B=new Date(I.getFullYear()+1,0,4),Q=G(g),C=G(B);return s(Q,I)<=0?s(C,I)<=0?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}var R={"%a":function(A){return D[A.tm_wday].substring(0,3)},"%A":function(A){return D[A.tm_wday]},"%b":function(A){return a[A.tm_mon].substring(0,3)},"%B":function(A){return a[A.tm_mon]},"%C":function(A){return t((A.tm_year+1900)/100|0,2)},"%d":function(A){return t(A.tm_mday,2)},"%e":function(A){return w(A.tm_mday,2," ")},"%g":function(A){return h(A).toString().substring(2)},"%G":function(A){return h(A)},"%H":function(A){return t(A.tm_hour,2)},"%I":function(A){var I=A.tm_hour;return 0==I?I=12:I>12&&(I-=12),t(I,2)},"%j":function(A){return t(A.tm_mday+function(A,I){for(var g=0,B=0;B<=I;g+=A[B++]);return g}(dI(A.tm_year+1900)?HI:lI,A.tm_mon-1),3)},"%m":function(A){return t(A.tm_mon+1,2)},"%M":function(A){return t(A.tm_min,2)},"%n":function(){return"\n"},"%p":function(A){return A.tm_hour>=0&&A.tm_hour<12?"AM":"PM"},"%S":function(A){return t(A.tm_sec,2)},"%t":function(){return"\t"},"%u":function(A){return A.tm_wday||7},"%U":function(A){var I=A.tm_yday+7-A.tm_wday;return t(Math.floor(I/7),2)},"%V":function(A){var I=Math.floor((A.tm_yday+7-(A.tm_wday+6)%7)/7);if((A.tm_wday+371-A.tm_yday-2)%7<=2&&I++,I){if(53==I){var g=(A.tm_wday+371-A.tm_yday)%7;4==g||3==g&&dI(A.tm_year)||(I=1)}}else{I=52;var B=(A.tm_wday+7-A.tm_yday-1)%7;(4==B||5==B&&dI(A.tm_year%400-1))&&I++}return t(I,2)},"%w":function(A){return A.tm_wday},"%W":function(A){var I=A.tm_yday+7-(A.tm_wday+6)%7;return t(Math.floor(I/7),2)},"%y":function(A){return(A.tm_year+1900).toString().substring(2)},"%Y":function(A){return A.tm_year+1900},"%z":function(A){var I=A.tm_gmtoff,g=I>=0;return I=(I=Math.abs(I)/60)/60*100+I%60,(g?"+":"-")+String("0000"+I).slice(-4)},"%Z":function(A){return A.tm_zone},"%%":function(){return"%"}};for(var o in E=E.replace(/%%/g,"\0\0"),R)E.includes(o)&&(E=E.replace(new RegExp(o,"g"),R[o](C)));var r=sA(E=E.replace(/\0\0/g,"%"),!1);return r.length>I?0:(function(A,I){J.set(A,I)}(r,A),r.length-1)}var fI=function(A,I,g,B){A||(A=this),this.parent=A,this.mount=A.mount,this.mounted=null,this.id=rA.nextInode++,this.name=I,this.mode=g,this.node_ops={},this.stream_ops={},this.rdev=B};Object.defineProperties(fI.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(A){A?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(A){A?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return rA.isDir(this.mode)}},isDevice:{get:function(){return rA.isChrdev(this.mode)}}}),rA.FSNode=fI,rA.staticInit(),JA=A.InternalError=UA(Error,"InternalError"),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);dA=A}(),lA=A.BindingError=UA(Error,"BindingError"),jA.prototype.isAliasOf=function(A){if(!(this instanceof jA))return!1;if(!(A instanceof jA))return!1;for(var I=this.$$.ptrType.registeredClass,g=this.$$.ptr,B=A.$$.ptrType.registeredClass,Q=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)Q=B.upcast(Q),B=B.baseClass;return I===B&&g===Q},jA.prototype.clone=function(){if(this.$$.ptr||uA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=vA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I},jA.prototype.delete=function(){this.$$.ptr||uA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&qA("Object already scheduled for deletion"),mA(this),pA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)},jA.prototype.isDeleted=function(){return!this.$$.ptr},jA.prototype.deleteLater=function(){return this.$$.ptr||uA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&qA("Object already scheduled for deletion"),xA.push(this),1===xA.length&&XA&&XA(VA),this.$$.deleteScheduled=!0,this},A.getInheritedInstanceCount=function(){return Object.keys(TA).length},A.getLiveInheritedInstances=function(){var A=[];for(var I in TA)TA.hasOwnProperty(I)&&A.push(TA[I]);return A},A.flushPendingDeletes=VA,A.setDelayFunction=function(A){XA=A,xA.length&&XA&&XA(VA)},BI.prototype.getPointee=function(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A},BI.prototype.destructor=function(A){this.rawDestructor&&this.rawDestructor(A)},BI.prototype.argPackAdvance=8,BI.prototype.readValueFromPointer=nA,BI.prototype.deleteObject=function(A){null!==A&&A.delete()},BI.prototype.fromWireType=function(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=function(A,I){return I=function(A,I){for(void 0===I&&qA("ptr should not be undefined");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I}(A,I),TA[I]}(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function Q(){return this.isSmartPointer?OA(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):OA(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var C,E=this.registeredClass.getActualType(I),i=ZA[E];if(!i)return Q.call(this);C=this.isConst?i.constPointerType:i.pointerType;var o=bA(I,this.registeredClass,C.registeredClass);return null===o?Q.call(this):this.isSmartPointer?OA(C.registeredClass.instancePrototype,{ptrType:C,ptr:o,smartPtrType:this,smartPtr:A}):OA(C.registeredClass.instancePrototype,{ptrType:C,ptr:o})},oI=A.UnboundTypeError=UA(Error,"UnboundTypeError"),A.count_emval_handles=function(){for(var A=0,I=5;I<GI.length;++I)void 0!==GI[I]&&++A;return A},A.get_first_emval=function(){for(var A=5;A<GI.length;++A)if(void 0!==GI[A])return GI[A];return null};var uI=!1,WI="function"==typeof atob?atob:function(A){var I,g,B,Q,C,E,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="",D=0;A=A.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{I=i.indexOf(A.charAt(D++))<<2|(Q=i.indexOf(A.charAt(D++)))>>4,g=(15&Q)<<4|(C=i.indexOf(A.charAt(D++)))>>2,B=(3&C)<<6|(E=i.indexOf(A.charAt(D++))),o+=String.fromCharCode(I),64!==C&&(o+=String.fromCharCode(g)),64!==E&&(o+=String.fromCharCode(B))}while(D<A.length);return o};function mI(A){if(QA(A))return function(A){if("boolean"==typeof F&&F){var I=Buffer.from(A,"base64");return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=WI(A),B=new Uint8Array(g.length),Q=0;Q<g.length;++Q)B[Q]=g.charCodeAt(Q);return B}catch(A){throw new Error("Converting base64 string to bytes failed.")}}(A.slice(BA.length))}var pI,bI={g:function(A){return ZI(A+24)+24},f:function(A,I,g){throw new aA(A).init(I,g),A},o:function(A,I,g){FA.varargs=g;try{var B=FA.getStreamFromFD(A);switch(I){case 0:return(Q=FA.get())<0?-28:rA.createStream(B,Q).fd;case 1:case 2:case 6:case 7:return 0;case 3:return B.flags;case 4:var Q=FA.get();return B.flags|=Q,0;case 5:return Q=FA.get(),Y[Q+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return 28,d[VI()>>2]=28,-1}}catch(A){if(void 0===rA||!(A instanceof rA.ErrnoError))throw A;return-A.errno}},G:function(A,I,g){FA.varargs=g;try{var B=FA.getStreamFromFD(A);switch(I){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return B.tty?0:-59;case 21519:if(!B.tty)return-59;var Q=FA.get();return d[Q>>2]=0,0;case 21520:return B.tty?-28:-59;case 21531:return Q=FA.get(),rA.ioctl(B,I,Q);default:return-28}}catch(A){if(void 0===rA||!(A instanceof rA.ErrnoError))throw A;return-A.errno}},H:function(A,I,g,B){FA.varargs=B;try{I=FA.getStr(I),I=FA.calculateAt(A,I);var Q=B?FA.get():0;return rA.open(I,g,Q).fd}catch(A){if(void 0===rA||!(A instanceof rA.ErrnoError))throw A;return-A.errno}},R:function(A){var I=yA[A];delete yA[A];var g=I.rawConstructor,B=I.rawDestructor,Q=I.fields;YA([A],Q.map((function(A){return A.getterReturnType})).concat(Q.map((function(A){return A.setterArgumentType}))),(function(A){var C={};return Q.forEach((function(I,g){var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+Q.length],a=I.setter,w=I.setterContext;C[B]={read:function(A){return E.fromWireType(i(o,A))},write:function(A,I){var g=[];a(w,A,D.toWireType(g,I)),eA(g)}}})),[{name:I.name,fromWireType:function(A){var I={};for(var g in C)I[g]=C[g].read(A);return B(A),I},toWireType:function(A,I){for(var Q in C)if(!(Q in I))throw new TypeError('Missing field:  "'+Q+'"');var E=g();for(Q in C)C[Q].write(E,I[Q]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:nA,destructorFunction:B}]}))},y:function(A,I,g,B,Q){},L:function(A,I,g,B,Q){var C=LA(g);fA(A,{name:I=HA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:Q},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=J;else if(2===g)B=Y;else{if(4!==g)throw new TypeError("Unknown boolean type size: "+I);B=d}return this.fromWireType(B[A>>C])},destructorFunction:null})},U:function(A,I,g,B,Q,C,E,i,o,D,a,w,t){a=HA(a),C=iI(Q,C),i&&(i=iI(E,i)),D&&(D=iI(o,D)),t=iI(w,t);var s=cA(a);zA(s,(function(){aI("Cannot construct "+a+" due to unbound types",[B])})),YA([A,I,g],B?[B]:[],(function(I){var g,Q;I=I[0],Q=B?(g=I.registeredClass).instancePrototype:jA.prototype;var E=kA(s,(function(){if(Object.getPrototypeOf(this)!==o)throw new lA("Use 'new' to construct "+a);if(void 0===w.constructor_body)throw new lA(a+" has no accessible constructor");var A=w.constructor_body[arguments.length];if(void 0===A)throw new lA("Tried to invoke ctor of "+a+" with invalid number of parameters ("+arguments.length+") - expected ("+Object.keys(w.constructor_body).toString()+") parameters instead!");return A.apply(this,arguments)})),o=Object.create(Q,{constructor:{value:E}});E.prototype=o;var w=new _A(a,E,o,t,g,C,i,D),G=new BI(a,w,!0,!1,!1),h=new BI(a+"*",w,!1,!1,!1),R=new BI(a+" const*",w,!1,!0,!1);return ZA[A]={pointerType:h,constPointerType:R},QI(s,E),[G,h,R]}))},Q:function(A,I,g,B,Q,C){k(I>0);var E=wI(I,g);Q=iI(B,Q),YA([],[A],(function(A){var g="constructor "+(A=A[0]).name;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new lA("Cannot register multiple constructors with identical number of parameters ("+(I-1)+") for class '"+A.name+"'! Overload resolution is currently only performed using the parameter count, not actual type info!");return A.registeredClass.constructor_body[I-1]=function(){aI("Cannot construct "+A.name+" due to unbound types",E)},YA([],E,(function(B){return B.splice(1,0,null),A.registeredClass.constructor_body[I-1]=tI(g,B,null,Q,C),[]})),[]}))},h:function(A,I,g,B,Q,C,E,i){var o=wI(g,B);I=HA(I),C=iI(Q,C),YA([],[A],(function(A){var B=(A=A[0]).name+"."+I;function Q(){aI("Cannot call "+B+" due to unbound types",o)}I.startsWith("@@")&&(I=Symbol[I.substring(2)]),i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,a=D[I];return void 0===a||void 0===a.overloadTable&&a.className!==A.name&&a.argCount===g-2?(Q.argCount=g-2,Q.className=A.name,D[I]=Q):(PA(D,I,B),D[I].overloadTable[g-2]=Q),YA([],o,(function(Q){var i=tI(B,Q,A,C,E);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},s:function(I,g,B){I=HA(I),YA([],[g],(function(g){return g=g[0],A[I]=g.fromWireType(B),[]}))},K:function(A,I){fA(A,{name:I=HA(I),fromWireType:function(A){var I=RI.toValue(A);return hI(A),I},toWireType:function(A,I){return RI.toHandle(I)},argPackAdvance:8,readValueFromPointer:nA,destructorFunction:null})},r:function(A,I,g){var B=LA(g);fA(A,{name:I=HA(I),fromWireType:function(A){return A},toWireType:function(A,I){return I},argPackAdvance:8,readValueFromPointer:FI(I,B),destructorFunction:null})},d:function(A,I,g,B,Q,C){var E=wI(I,g);A=HA(A),Q=iI(B,Q),zA(A,(function(){aI("Cannot call "+A+" due to unbound types",E)}),I-1),YA([],E,(function(g){var B=[g[0],null].concat(g.slice(1));return QI(A,tI(A,B,null,Q,C),I-1),[]}))},e:function(A,I,g,B,Q){I=HA(I),-1===Q&&(Q=4294967295);var C=LA(g),E=function(A){return A};if(0===B){var i=32-8*g;E=function(A){return A<<i>>>i}}var o=I.includes("unsigned");fA(A,{name:I,fromWireType:E,toWireType:o?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:yI(I,C,0!==B),destructorFunction:null})},c:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function Q(A){var I=H,g=I[A>>=2],Q=I[A+1];return new B(U,Q,g)}fA(A,{name:g=HA(g),fromWireType:Q,argPackAdvance:8,readValueFromPointer:Q},{ignoreDuplicateRegistrations:!0})},q:function(A,I){var g="std::string"===(I=HA(I));fA(A,{name:I,fromWireType:function(A){var I,B=H[A>>2],Q=A+4;if(g)for(var C=Q,E=0;E<=B;++E){var i=Q+E;if(E==B||0==K[i]){var o=W(C,i-C);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),C=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(K[Q+E]);I=D.join("")}return xI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var Q="string"==typeof I;Q||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||qA("Cannot pass non-string to std::string"),B=g&&Q?p(I):I.length;var C=ZI(4+B+1),E=C+4;if(H[C>>2]=B,g&&Q)m(I,K,E,B+1);else if(Q)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(xI(E),qA("String has UTF-16 code units that do not fit in 8 bits")),K[E+i]=o}else for(i=0;i<B;++i)K[E+i]=I[i];return null!==A&&A.push(xI,C),C},argPackAdvance:8,readValueFromPointer:nA,destructorFunction:function(A){xI(A)}})},l:function(A,I,g){var B,Q,C,E,i;g=HA(g),2===I?(B=nI,Q=MI,E=SI,C=function(){return L},i=1):4===I&&(B=NI,Q=cI,E=kI,C=function(){return H},i=2),fA(A,{name:g,fromWireType:function(A){for(var g,Q=H[A>>2],E=C(),o=A+4,D=0;D<=Q;++D){var a=A+4+D*I;if(D==Q||0==E[a>>i]){var w=B(o,a-o);void 0===g?g=w:(g+=String.fromCharCode(0),g+=w),o=a+I}}return xI(A),g},toWireType:function(A,B){"string"!=typeof B&&qA("Cannot pass non-string to C++ string type "+g);var C=E(B),o=ZI(4+C+I);return H[o>>2]=C>>i,Q(B,o+4,C+I),null!==A&&A.push(xI,o),o},argPackAdvance:8,readValueFromPointer:nA,destructorFunction:function(A){xI(A)}})},T:function(A,I,g,B,Q,C){yA[A]={name:HA(I),rawConstructor:iI(g,B),rawDestructor:iI(Q,C),fields:[]}},S:function(A,I,g,B,Q,C,E,i,o,D){yA[A].fields.push({fieldName:HA(I),getterReturnType:g,getter:iI(B,Q),getterContext:C,setterArgumentType:E,setter:iI(i,o),setterContext:D})},M:function(A,I){fA(A,{isVoid:!0,name:I=HA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},p:function(){return Date.now()},A:function(){throw 1/0},O:hI,P:function(A){A>4&&(GI[A].refcount+=1)},N:function(A,I){var g,B;void 0===(B=SA[g=A])&&qA("_emval_take_value has unknown type "+DI(g));var Q=(A=B).readValueFromPointer(I);return RI.toHandle(Q)},I:function(A,I){var g,B=new Date(1e3*(H[(g=A)>>2]+4294967296*d[g+4>>2]));d[I>>2]=B.getSeconds(),d[I+4>>2]=B.getMinutes(),d[I+8>>2]=B.getHours(),d[I+12>>2]=B.getDate(),d[I+16>>2]=B.getMonth(),d[I+20>>2]=B.getFullYear()-1900,d[I+24>>2]=B.getDay();var Q=new Date(B.getFullYear(),0,1),C=(B.getTime()-Q.getTime())/864e5|0;d[I+28>>2]=C,d[I+36>>2]=-60*B.getTimezoneOffset();var E=new Date(B.getFullYear(),6,1).getTimezoneOffset(),i=Q.getTimezoneOffset(),o=0|(E!=i&&B.getTimezoneOffset()==Math.min(i,E));d[I+32>>2]=o},J:function A(I,g,B){A.called||(A.called=!0,function(A,I,g){var B=(new Date).getFullYear(),Q=new Date(B,0,1),C=new Date(B,6,1),E=Q.getTimezoneOffset(),i=C.getTimezoneOffset(),o=Math.max(E,i);function D(A){var I=A.toTimeString().match(/\(([A-Za-z ]+)\)$/);return I?I[1]:"GMT"}d[A>>2]=60*o,d[I>>2]=Number(E!=i);var a=D(Q),w=D(C),t=UI(a),s=UI(w);i<E?(H[g>>2]=t,H[g+4>>2]=s):(H[g>>2]=s,H[g+4>>2]=t)}(I,g,B))},a:function(){_("")},i:function(A,I,g){var B=function(A,I){var g;for(JI.length=0,I>>=2;g=K[A++];)I+=105!=g&I,JI.push(105==g?d[I]:q[I++>>1]),++I;return JI}(I,g);return iA[A].apply(null,B)},B:function(A){var I=K.length,g=2147483648;if((A>>>=0)>g)return!1;for(var B,Q=1;Q<=4;Q*=2){var C=I*(1+.2/Q);if(C=Math.min(C,A+100663296),KI(Math.min(g,(B=Math.max(A,C))+(65536-B%65536)%65536)))return!0}return!1},C:function(A,I){var g=0;return LI().forEach((function(B,Q){var C=I+g;H[A+4*Q>>2]=C,function(A,I,g){for(var B=0;B<A.length;++B)J[I++>>0]=A.charCodeAt(B);J[I>>0]=0}(B,C),g+=B.length+1})),0},D:function(A,I){var g=LI();H[A>>2]=g.length;var B=0;return g.forEach((function(A){B+=A.length+1})),H[I>>2]=B,0},b:function(I,g){var B;B=I,T()||(A.onExit&&A.onExit(B),c=!0),h(B,new oA(B))},m:function(A){try{var I=FA.getStreamFromFD(A);return rA.close(I),0}catch(A){if(void 0===rA||!(A instanceof rA.ErrnoError))throw A;return A.errno}},F:function(A,I,g,B){try{var Q=function(A,I,g,B){for(var Q=0,C=0;C<g;C++){var E=H[I>>2],i=H[I+4>>2];I+=8;var o=rA.read(A,J,E,i,undefined);if(o<0)return-1;if(Q+=o,o<i)break}return Q}(FA.getStreamFromFD(A),I,g);return H[B>>2]=Q,0}catch(A){if(void 0===rA||!(A instanceof rA.ErrnoError))throw A;return A.errno}},x:function(A,I,g,B,Q){try{var C=(o=g)+2097152>>>0<4194305-!!(i=I)?(i>>>0)+4294967296*o:NaN;if(isNaN(C))return 61;var E=FA.getStreamFromFD(A);return rA.llseek(E,C,B),gA=[E.position>>>0,(IA=E.position,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[Q>>2]=gA[0],d[Q+4>>2]=gA[1],E.getdents&&0===C&&0===B&&(E.getdents=null),0}catch(A){if(void 0===rA||!(A instanceof rA.ErrnoError))throw A;return A.errno}var i,o},n:function(A,I,g,B){try{var Q=function(A,I,g,B){for(var Q=0,C=0;C<g;C++){var E=H[I>>2],i=H[I+4>>2];I+=8;var o=rA.write(A,J,E,i,undefined);if(o<0)return-1;Q+=o}return Q}(FA.getStreamFromFD(A),I,g);return H[B>>2]=Q,0}catch(A){if(void 0===rA||!(A instanceof rA.ErrnoError))throw A;return A.errno}},t:function(A,I){var g=OI();try{return CI(A)(I)}catch(A){if(vI(g),A!==A+0)throw A;TI(1,0)}},v:function(A,I,g){var B=OI();try{return CI(A)(I,g)}catch(A){if(vI(B),A!==A+0)throw A;TI(1,0)}},u:function(A,I,g,B){var Q=OI();try{return CI(A)(I,g,B)}catch(A){if(vI(Q),A!==A+0)throw A;TI(1,0)}},j:function(A,I){var g=OI();try{CI(A)(I)}catch(A){if(vI(g),A!==A+0)throw A;TI(1,0)}},w:function(A,I,g){var B=OI();try{CI(A)(I,g)}catch(A){if(vI(B),A!==A+0)throw A;TI(1,0)}},E:function(A,I,g,B){var Q=OI();try{CI(A)(I,g,B)}catch(A){if(vI(Q),A!==A+0)throw A;TI(1,0)}},k:function(A,I,g,B,Q){var C=OI();try{CI(A)(I,g,B,Q)}catch(A){if(vI(C),A!==A+0)throw A;TI(1,0)}},V:qI,z:function(A,I,g,B){return qI(A,I,g,B)}},ZI=(function(){var I={a:bI};function g(I,g){var B,Q=I.exports;A.asm=Q,b((S=A.asm.W).buffer),Z=A.asm.$,B=A.asm.X,V.unshift(B),z()}function Q(A){g(A.instance)}function E(A){return function(){if(!e&&(R||r)){if("function"==typeof fetch&&!CA($))return fetch($,{credentials:"same-origin"}).then((function(A){if(!A.ok)throw"failed to load wasm binary file at '"+$+"'";return A.arrayBuffer()})).catch((function(){return EA($)}));if(C)return new Promise((function(A,I){C($,(function(I){A(new Uint8Array(I))}),I)}))}return Promise.resolve().then((function(){return EA($)}))}().then((function(A){return WebAssembly.instantiate(A,I)})).then((function(A){return A})).then(A,(function(A){M("failed to asynchronously prepare wasm: "+A),_(A)}))}if(P(),A.instantiateWasm)try{return A.instantiateWasm(I,g)}catch(A){return M("Module.instantiateWasm callback failed with error: "+A),!1}(e||"function"!=typeof WebAssembly.instantiateStreaming||QA($)||CA($)||F||"function"!=typeof fetch?E(Q):fetch($,{credentials:"same-origin"}).then((function(A){return WebAssembly.instantiateStreaming(A,I).then(Q,(function(A){return M("wasm streaming compile failed: "+A),M("falling back to ArrayBuffer instantiation"),E(Q)}))}))).catch(B)}(),A.___wasm_call_ctors=function(){return(A.___wasm_call_ctors=A.asm.X).apply(null,arguments)},A._malloc=function(){return(ZI=A._malloc=A.asm.Y).apply(null,arguments)}),xI=A._free=function(){return(xI=A._free=A.asm.Z).apply(null,arguments)},VI=A.___errno_location=function(){return(VI=A.___errno_location=A.asm._).apply(null,arguments)},XI=A.___getTypeName=function(){return(XI=A.___getTypeName=A.asm.aa).apply(null,arguments)},TI=(A.__embind_initialize_bindings=function(){return(A.__embind_initialize_bindings=A.asm.ba).apply(null,arguments)},A._setThrew=function(){return(TI=A._setThrew=A.asm.ca).apply(null,arguments)}),OI=A.stackSave=function(){return(OI=A.stackSave=A.asm.da).apply(null,arguments)},vI=A.stackRestore=function(){return(vI=A.stackRestore=A.asm.ea).apply(null,arguments)},jI=A.___cxa_is_pointer_type=function(){return(jI=A.___cxa_is_pointer_type=A.asm.fa).apply(null,arguments)};function PI(g){function B(){pI||(pI=!0,A.calledRun=!0,c||(A.noFSInit||rA.init.initialized||rA.init(),rA.ignorePermissions=!1,GA.init(),DA(V),I(A),A.onRuntimeInitialized&&A.onRuntimeInitialized(),function(){if(A.postRun)for("function"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)I=A.postRun.shift(),X.unshift(I);var I;DA(X)}()))}g=g||s,O>0||(function(){if(A.preRun)for("function"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)I=A.preRun.shift(),x.unshift(I);var I;DA(x)}(),O>0||(A.setStatus?(A.setStatus("Running..."),setTimeout((function(){setTimeout((function(){A.setStatus("")}),1),B()}),1)):B()))}if(A.dynCall_jiji=function(){return(A.dynCall_jiji=A.asm.ga).apply(null,arguments)},A.dynCall_viijii=function(){return(A.dynCall_viijii=A.asm.ha).apply(null,arguments)},A.dynCall_iiiiij=function(){return(A.dynCall_iiiiij=A.asm.ia).apply(null,arguments)},A.dynCall_iiiiijj=function(){return(A.dynCall_iiiiijj=A.asm.ja).apply(null,arguments)},A.dynCall_iiiiiijj=function(){return(A.dynCall_iiiiiijj=A.asm.ka).apply(null,arguments)},A.FS=rA,j=function A(){pI||PI(),pI||(j=A)},A.preInit)for("function"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return PI(),A.ready});const t=w,s=function(){return new Promise((function(A){t({onRuntimeInitialized:function(){A({instance:this})}})}))};function G(A,I){return function(){return A.apply(I,arguments)}}const{toString:h}=Object.prototype,{getPrototypeOf:R}=Object,r=(F=Object.create(null),A=>{const I=h.call(A);return F[I]||(F[I]=I.slice(8,-1).toLowerCase())});var F;const y=A=>(A=A.toLowerCase(),I=>r(I)===A),e=A=>I=>typeof I===A,{isArray:n}=Array,M=e("undefined"),S=y("ArrayBuffer"),N=e("string"),c=e("function"),k=e("number"),U=A=>null!==A&&"object"==typeof A,J=A=>{if("object"!==r(A))return!1;const I=R(A);return!(null!==I&&I!==Object.prototype&&null!==Object.getPrototypeOf(I)||Symbol.toStringTag in A||Symbol.iterator in A)},K=y("Date"),Y=y("File"),L=y("Blob"),d=y("FileList"),H=y("URLSearchParams");function l(A,I,{allOwnKeys:g=!1}={}){if(null==A)return;let B,Q;if("object"!=typeof A&&(A=[A]),n(A))for(B=0,Q=A.length;B<Q;B++)I.call(null,A[B],B,A);else{const Q=g?Object.getOwnPropertyNames(A):Object.keys(A),C=Q.length;let E;for(B=0;B<C;B++)E=Q[B],I.call(null,A[E],E,A)}}const q=(f="undefined"!=typeof Uint8Array&&R(Uint8Array),A=>f&&A instanceof f);var f;const u=y("HTMLFormElement"),W=(({hasOwnProperty:A})=>(I,g)=>A.call(I,g))(Object.prototype),m=y("RegExp"),p=(A,I)=>{const g=Object.getOwnPropertyDescriptors(A),B={};l(g,((g,Q)=>{!1!==I(g,Q,A)&&(B[Q]=g)})),Object.defineProperties(A,B)},b={isArray:n,isArrayBuffer:S,isBuffer:function(A){return null!==A&&!M(A)&&null!==A.constructor&&!M(A.constructor)&&c(A.constructor.isBuffer)&&A.constructor.isBuffer(A)},isFormData:A=>{const I="[object FormData]";return A&&("function"==typeof FormData&&A instanceof FormData||h.call(A)===I||c(A.toString)&&A.toString()===I)},isArrayBufferView:function(A){let I;return I="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(A):A&&A.buffer&&S(A.buffer),I},isString:N,isNumber:k,isBoolean:A=>!0===A||!1===A,isObject:U,isPlainObject:J,isUndefined:M,isDate:K,isFile:Y,isBlob:L,isRegExp:m,isFunction:c,isStream:A=>U(A)&&c(A.pipe),isURLSearchParams:H,isTypedArray:q,isFileList:d,forEach:l,merge:function A(){const I={},g=(g,B)=>{J(I[B])&&J(g)?I[B]=A(I[B],g):J(g)?I[B]=A({},g):n(g)?I[B]=g.slice():I[B]=g};for(let A=0,I=arguments.length;A<I;A++)arguments[A]&&l(arguments[A],g);return I},extend:(A,I,g,{allOwnKeys:B}={})=>(l(I,((I,B)=>{g&&c(I)?A[B]=G(I,g):A[B]=I}),{allOwnKeys:B}),A),trim:A=>A.trim?A.trim():A.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),stripBOM:A=>(65279===A.charCodeAt(0)&&(A=A.slice(1)),A),inherits:(A,I,g,B)=>{A.prototype=Object.create(I.prototype,B),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:I.prototype}),g&&Object.assign(A.prototype,g)},toFlatObject:(A,I,g,B)=>{let Q,C,E;const i={};if(I=I||{},null==A)return I;do{for(Q=Object.getOwnPropertyNames(A),C=Q.length;C-- >0;)E=Q[C],B&&!B(E,A,I)||i[E]||(I[E]=A[E],i[E]=!0);A=!1!==g&&R(A)}while(A&&(!g||g(A,I))&&A!==Object.prototype);return I},kindOf:r,kindOfTest:y,endsWith:(A,I,g)=>{A=String(A),(void 0===g||g>A.length)&&(g=A.length),g-=I.length;const B=A.indexOf(I,g);return-1!==B&&B===g},toArray:A=>{if(!A)return null;if(n(A))return A;let I=A.length;if(!k(I))return null;const g=new Array(I);for(;I-- >0;)g[I]=A[I];return g},forEachEntry:(A,I)=>{const g=(A&&A[Symbol.iterator]).call(A);let B;for(;(B=g.next())&&!B.done;){const g=B.value;I.call(A,g[0],g[1])}},matchAll:(A,I)=>{let g;const B=[];for(;null!==(g=A.exec(I));)B.push(g);return B},isHTMLForm:u,hasOwnProperty:W,hasOwnProp:W,reduceDescriptors:p,freezeMethods:A=>{p(A,((I,g)=>{const B=A[g];c(B)&&(I.enumerable=!1,"writable"in I?I.writable=!1:I.set||(I.set=()=>{throw Error("Can not read-only method '"+g+"'")}))}))},toObjectSet:(A,I)=>{const g={},B=A=>{A.forEach((A=>{g[A]=!0}))};return n(A)?B(A):B(String(A).split(I)),g},toCamelCase:A=>A.toLowerCase().replace(/[_-\s]([a-z\d])(\w*)/g,(function(A,I,g){return I.toUpperCase()+g})),noop:()=>{},toFiniteNumber:(A,I)=>(A=+A,Number.isFinite(A)?A:I)};function Z(A,I,g,B,Q){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=A,this.name="AxiosError",I&&(this.code=I),g&&(this.config=g),B&&(this.request=B),Q&&(this.response=Q)}b.inherits(Z,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const x=Z.prototype,V={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((A=>{V[A]={value:A}})),Object.defineProperties(Z,V),Object.defineProperty(x,"isAxiosError",{value:!0}),Z.from=(A,I,g,B,Q,C)=>{const E=Object.create(x);return b.toFlatObject(A,E,(function(A){return A!==Error.prototype}),(A=>"isAxiosError"!==A)),Z.call(E,A.message,I,g,B,Q),E.cause=A,E.name=A.name,C&&Object.assign(E,C),E};const X=Z,T=g(230);function O(A){return b.isPlainObject(A)||b.isArray(A)}function v(A){return b.endsWith(A,"[]")?A.slice(0,-2):A}function j(A,I,g){return A?A.concat(I).map((function(A,I){return A=v(A),!g&&I?"["+A+"]":A})).join(g?".":""):I}const P=b.toFlatObject(b,{},null,(function(A){return/^is[A-Z]/.test(A)})),z=function(A,I,g){if(!b.isObject(A))throw new TypeError("target must be an object");I=I||new(T||FormData);const B=(g=b.toFlatObject(g,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(A,I){return!b.isUndefined(I[A])}))).metaTokens,Q=g.visitor||a,C=g.dots,E=g.indexes,i=(g.Blob||"undefined"!=typeof Blob&&Blob)&&(o=I)&&b.isFunction(o.append)&&"FormData"===o[Symbol.toStringTag]&&o[Symbol.iterator];var o;if(!b.isFunction(Q))throw new TypeError("visitor must be a function");function D(A){if(null===A)return"";if(b.isDate(A))return A.toISOString();if(!i&&b.isBlob(A))throw new X("Blob is not supported. Use a Buffer instead.");return b.isArrayBuffer(A)||b.isTypedArray(A)?i&&"function"==typeof Blob?new Blob([A]):Buffer.from(A):A}function a(A,g,Q){let i=A;if(A&&!Q&&"object"==typeof A)if(b.endsWith(g,"{}"))g=B?g:g.slice(0,-2),A=JSON.stringify(A);else if(b.isArray(A)&&function(A){return b.isArray(A)&&!A.some(O)}(A)||b.isFileList(A)||b.endsWith(g,"[]")&&(i=b.toArray(A)))return g=v(g),i.forEach((function(A,B){!b.isUndefined(A)&&null!==A&&I.append(!0===E?j([g],B,C):null===E?g:g+"[]",D(A))})),!1;return!!O(A)||(I.append(j(Q,g,C),D(A)),!1)}const w=[],t=Object.assign(P,{defaultVisitor:a,convertValue:D,isVisitable:O});if(!b.isObject(A))throw new TypeError("data must be an object");return function A(g,B){if(!b.isUndefined(g)){if(-1!==w.indexOf(g))throw Error("Circular reference detected in "+B.join("."));w.push(g),b.forEach(g,(function(g,C){!0===(!(b.isUndefined(g)||null===g)&&Q.call(I,g,b.isString(C)?C.trim():C,B,t))&&A(g,B?B.concat(C):[C])})),w.pop()}}(A),I};function _(A){const I={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,(function(A){return I[A]}))}function $(A,I){this._pairs=[],A&&z(A,this,I)}const AA=$.prototype;AA.append=function(A,I){this._pairs.push([A,I])},AA.toString=function(A){const I=A?function(I){return A.call(this,I,_)}:_;return this._pairs.map((function(A){return I(A[0])+"="+I(A[1])}),"").join("&")};const IA=$;function gA(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function BA(A,I,g){if(!I)return A;const B=g&&g.encode||gA,Q=g&&g.serialize;let C;if(C=Q?Q(I,g):b.isURLSearchParams(I)?I.toString():new IA(I,g).toString(B),C){const I=A.indexOf("#");-1!==I&&(A=A.slice(0,I)),A+=(-1===A.indexOf("?")?"?":"&")+C}return A}const QA=class{constructor(){this.handlers=[]}use(A,I,g){return this.handlers.push({fulfilled:A,rejected:I,synchronous:!!g&&g.synchronous,runWhen:g?g.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){b.forEach(this.handlers,(function(I){null!==I&&A(I)}))}},CA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},EA="undefined"!=typeof URLSearchParams?URLSearchParams:IA,iA=FormData,oA=(()=>{let A;return("undefined"==typeof navigator||"ReactNative"!==(A=navigator.product)&&"NativeScript"!==A&&"NS"!==A)&&"undefined"!=typeof window&&"undefined"!=typeof document})(),DA={isBrowser:!0,classes:{URLSearchParams:EA,FormData:iA,Blob},isStandardBrowserEnv:oA,protocols:["http","https","file","blob","url","data"]},aA=function(A){function I(A,g,B,Q){let C=A[Q++];const E=Number.isFinite(+C),i=Q>=A.length;return C=!C&&b.isArray(B)?B.length:C,i?(b.hasOwnProp(B,C)?B[C]=[B[C],g]:B[C]=g,!E):(B[C]&&b.isObject(B[C])||(B[C]=[]),I(A,g,B[C],Q)&&b.isArray(B[C])&&(B[C]=function(A){const I={},g=Object.keys(A);let B;const Q=g.length;let C;for(B=0;B<Q;B++)C=g[B],I[C]=A[C];return I}(B[C])),!E)}if(b.isFormData(A)&&b.isFunction(A.entries)){const g={};return b.forEachEntry(A,((A,B)=>{I(function(A){return b.matchAll(/\w+|\[(\w*)]/g,A).map((A=>"[]"===A[0]?"":A[1]||A[0]))}(A),B,g,0)})),g}return null},wA=DA.isStandardBrowserEnv?{write:function(A,I,g,B,Q,C){const E=[];E.push(A+"="+encodeURIComponent(I)),b.isNumber(g)&&E.push("expires="+new Date(g).toGMTString()),b.isString(B)&&E.push("path="+B),b.isString(Q)&&E.push("domain="+Q),!0===C&&E.push("secure"),document.cookie=E.join("; ")},read:function(A){const I=document.cookie.match(new RegExp("(^|;\\s*)("+A+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove:function(A){this.write(A,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}};function tA(A,I){return A&&!/^([a-z][a-z\d+\-.]*:)?\/\//i.test(I)?function(A,I){return I?A.replace(/\/+$/,"")+"/"+I.replace(/^\/+/,""):A}(A,I):I}const sA=DA.isStandardBrowserEnv?function(){const A=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement("a");let g;function B(g){let B=g;return A&&(I.setAttribute("href",B),B=I.href),I.setAttribute("href",B),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,""):"",host:I.host,search:I.search?I.search.replace(/^\?/,""):"",hash:I.hash?I.hash.replace(/^#/,""):"",hostname:I.hostname,port:I.port,pathname:"/"===I.pathname.charAt(0)?I.pathname:"/"+I.pathname}}return g=B(window.location.href),function(A){const I=b.isString(A)?B(A):A;return I.protocol===g.protocol&&I.host===g.host}}():function(){return!0};function GA(A,I,g){X.call(this,null==A?"canceled":A,X.ERR_CANCELED,I,g),this.name="CanceledError"}b.inherits(GA,X,{__CANCEL__:!0});const hA=GA,RA=b.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),rA=Symbol("internals"),FA=Symbol("defaults");function yA(A){return A&&String(A).trim().toLowerCase()}function eA(A){return!1===A||null==A?A:b.isArray(A)?A.map(eA):String(A)}function nA(A,I,g,B){return b.isFunction(B)?B.call(this,I,g):b.isString(I)?b.isString(B)?-1!==I.indexOf(B):b.isRegExp(B)?B.test(I):void 0:void 0}function MA(A,I){I=I.toLowerCase();const g=Object.keys(A);let B,Q=g.length;for(;Q-- >0;)if(B=g[Q],I===B.toLowerCase())return B;return null}function SA(A,I){A&&this.set(A),this[FA]=I||null}Object.assign(SA.prototype,{set:function(A,I,g){const B=this;function Q(A,I,g){const Q=yA(I);if(!Q)throw new Error("header name must be a non-empty string");const C=MA(B,Q);(!C||!0===g||!1!==B[C]&&!1!==g)&&(B[C||I]=eA(A))}return b.isPlainObject(A)?b.forEach(A,((A,g)=>{Q(A,g,I)})):Q(I,A,g),this},get:function(A,I){if(!(A=yA(A)))return;const g=MA(this,A);if(g){const A=this[g];if(!I)return A;if(!0===I)return function(A){const I=Object.create(null),g=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let B;for(;B=g.exec(A);)I[B[1]]=B[2];return I}(A);if(b.isFunction(I))return I.call(this,A,g);if(b.isRegExp(I))return I.exec(A);throw new TypeError("parser must be boolean|regexp|function")}},has:function(A,I){if(A=yA(A)){const g=MA(this,A);return!(!g||I&&!nA(0,this[g],g,I))}return!1},delete:function(A,I){const g=this;let B=!1;function Q(A){if(A=yA(A)){const Q=MA(g,A);!Q||I&&!nA(0,g[Q],Q,I)||(delete g[Q],B=!0)}}return b.isArray(A)?A.forEach(Q):Q(A),B},clear:function(){return Object.keys(this).forEach(this.delete.bind(this))},normalize:function(A){const I=this,g={};return b.forEach(this,((B,Q)=>{const C=MA(g,Q);if(C)return I[C]=eA(B),void delete I[Q];const E=A?function(A){return A.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,((A,I,g)=>I.toUpperCase()+g))}(Q):String(Q).trim();E!==Q&&delete I[Q],I[E]=eA(B),g[E]=!0})),this},toJSON:function(A){const I=Object.create(null);return b.forEach(Object.assign({},this[FA]||null,this),((g,B)=>{null!=g&&!1!==g&&(I[B]=A&&b.isArray(g)?g.join(", "):g)})),I}}),Object.assign(SA,{from:function(A){return b.isString(A)?new this((A=>{const I={};let g,B,Q;return A&&A.split("\n").forEach((function(A){Q=A.indexOf(":"),g=A.substring(0,Q).trim().toLowerCase(),B=A.substring(Q+1).trim(),!g||I[g]&&RA[g]||("set-cookie"===g?I[g]?I[g].push(B):I[g]=[B]:I[g]=I[g]?I[g]+", "+B:B)})),I})(A)):A instanceof this?A:new this(A)},accessor:function(A){const I=(this[rA]=this[rA]={accessors:{}}).accessors,g=this.prototype;function B(A){const B=yA(A);I[B]||(function(A,I){const g=b.toCamelCase(" "+I);["get","set","has"].forEach((B=>{Object.defineProperty(A,B+g,{value:function(A,g,Q){return this[B].call(this,I,A,g,Q)},configurable:!0})}))}(g,A),I[B]=!0)}return b.isArray(A)?A.forEach(B):B(A),this}}),SA.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent"]),b.freezeMethods(SA.prototype),b.freezeMethods(SA);const NA=SA;function cA(A,I){let g=0;const B=function(A,I){A=A||10;const g=new Array(A),B=new Array(A);let Q,C=0,E=0;return I=void 0!==I?I:1e3,function(i){const o=Date.now(),D=B[E];Q||(Q=o),g[C]=i,B[C]=o;let a=E,w=0;for(;a!==C;)w+=g[a++],a%=A;if(C=(C+1)%A,C===E&&(E=(E+1)%A),o-Q<I)return;const t=D&&o-D;return t?Math.round(1e3*w/t):void 0}}(50,250);return Q=>{const C=Q.loaded,E=Q.lengthComputable?Q.total:void 0,i=C-g,o=B(i);g=C;const D={loaded:C,total:E,progress:E?C/E:void 0,bytes:i,rate:o||void 0,estimated:o&&E&&C<=E?(E-C)/o:void 0};D[I?"download":"upload"]=!0,A(D)}}function kA(A){return new Promise((function(I,g){let B=A.data;const Q=NA.from(A.headers).normalize(),C=A.responseType;let E;function i(){A.cancelToken&&A.cancelToken.unsubscribe(E),A.signal&&A.signal.removeEventListener("abort",E)}b.isFormData(B)&&DA.isStandardBrowserEnv&&Q.setContentType(!1);let o=new XMLHttpRequest;if(A.auth){const I=A.auth.username||"",g=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";Q.set("Authorization","Basic "+btoa(I+":"+g))}const D=tA(A.baseURL,A.url);function a(){if(!o)return;const B=NA.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders());!function(A,I,g){const B=g.config.validateStatus;g.status&&B&&!B(g.status)?I(new X("Request failed with status code "+g.status,[X.ERR_BAD_REQUEST,X.ERR_BAD_RESPONSE][Math.floor(g.status/100)-4],g.config,g.request,g)):A(g)}((function(A){I(A),i()}),(function(A){g(A),i()}),{data:C&&"text"!==C&&"json"!==C?o.response:o.responseText,status:o.status,statusText:o.statusText,headers:B,config:A,request:o}),o=null}if(o.open(A.method.toUpperCase(),BA(D,A.params,A.paramsSerializer),!0),o.timeout=A.timeout,"onloadend"in o?o.onloadend=a:o.onreadystatechange=function(){o&&4===o.readyState&&(0!==o.status||o.responseURL&&0===o.responseURL.indexOf("file:"))&&setTimeout(a)},o.onabort=function(){o&&(g(new X("Request aborted",X.ECONNABORTED,A,o)),o=null)},o.onerror=function(){g(new X("Network Error",X.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let I=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded";const B=A.transitional||CA;A.timeoutErrorMessage&&(I=A.timeoutErrorMessage),g(new X(I,B.clarifyTimeoutError?X.ETIMEDOUT:X.ECONNABORTED,A,o)),o=null},DA.isStandardBrowserEnv){const I=(A.withCredentials||sA(D))&&A.xsrfCookieName&&wA.read(A.xsrfCookieName);I&&Q.set(A.xsrfHeaderName,I)}void 0===B&&Q.setContentType(null),"setRequestHeader"in o&&b.forEach(Q.toJSON(),(function(A,I){o.setRequestHeader(I,A)})),b.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),C&&"json"!==C&&(o.responseType=A.responseType),"function"==typeof A.onDownloadProgress&&o.addEventListener("progress",cA(A.onDownloadProgress,!0)),"function"==typeof A.onUploadProgress&&o.upload&&o.upload.addEventListener("progress",cA(A.onUploadProgress)),(A.cancelToken||A.signal)&&(E=I=>{o&&(g(!I||I.type?new hA(null,A,o):I),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(E),A.signal&&(A.signal.aborted?E():A.signal.addEventListener("abort",E)));const w=function(A){const I=/^([-+\w]{1,25})(:?\/\/|:)/.exec(A);return I&&I[1]||""}(D);w&&-1===DA.protocols.indexOf(w)?g(new X("Unsupported protocol "+w+":",X.ERR_BAD_REQUEST,A)):o.send(B||null)}))}const UA={http:kA,xhr:kA},JA=A=>{if(b.isString(A)){const I=UA[A];if(!A)throw Error(b.hasOwnProp(A)?`Adapter '${A}' is not available in the build`:`Can not resolve adapter '${A}'`);return I}if(!b.isFunction(A))throw new TypeError("adapter is not a function");return A},KA={"Content-Type":"application/x-www-form-urlencoded"},YA={transitional:CA,adapter:function(){let A;return"undefined"!=typeof XMLHttpRequest?A=JA("xhr"):"undefined"!=typeof process&&"process"===b.kindOf(process)&&(A=JA("http")),A}(),transformRequest:[function(A,I){const g=I.getContentType()||"",B=g.indexOf("application/json")>-1,Q=b.isObject(A);if(Q&&b.isHTMLForm(A)&&(A=new FormData(A)),b.isFormData(A))return B&&B?JSON.stringify(aA(A)):A;if(b.isArrayBuffer(A)||b.isBuffer(A)||b.isStream(A)||b.isFile(A)||b.isBlob(A))return A;if(b.isArrayBufferView(A))return A.buffer;if(b.isURLSearchParams(A))return I.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),A.toString();let C;if(Q){if(g.indexOf("application/x-www-form-urlencoded")>-1)return function(A,I){return z(A,new DA.classes.URLSearchParams,Object.assign({visitor:function(A,I,g,B){return DA.isNode&&b.isBuffer(A)?(this.append(I,A.toString("base64")),!1):B.defaultVisitor.apply(this,arguments)}},I))}(A,this.formSerializer).toString();if((C=b.isFileList(A))||g.indexOf("multipart/form-data")>-1){const I=this.env&&this.env.FormData;return z(C?{"files[]":A}:A,I&&new I,this.formSerializer)}}return Q||B?(I.setContentType("application/json",!1),function(A,I,g){if(b.isString(A))try{return(0,JSON.parse)(A),b.trim(A)}catch(A){if("SyntaxError"!==A.name)throw A}return(0,JSON.stringify)(A)}(A)):A}],transformResponse:[function(A){const I=this.transitional||YA.transitional,g=I&&I.forcedJSONParsing,B="json"===this.responseType;if(A&&b.isString(A)&&(g&&!this.responseType||B)){const g=!(I&&I.silentJSONParsing)&&B;try{return JSON.parse(A)}catch(A){if(g){if("SyntaxError"===A.name)throw X.from(A,X.ERR_BAD_RESPONSE,this,null,this.response);throw A}}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:DA.classes.FormData,Blob:DA.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};b.forEach(["delete","get","head"],(function(A){YA.headers[A]={}})),b.forEach(["post","put","patch"],(function(A){YA.headers[A]=b.merge(KA)}));const LA=YA;function dA(A,I){const g=this||LA,B=I||g,Q=NA.from(B.headers);let C=B.data;return b.forEach(A,(function(A){C=A.call(g,C,Q.normalize(),I?I.status:void 0)})),Q.normalize(),C}function HA(A){return!(!A||!A.__CANCEL__)}function lA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new hA}function qA(A){return lA(A),A.headers=NA.from(A.headers),A.data=dA.call(A,A.transformRequest),(A.adapter||LA.adapter)(A).then((function(I){return lA(A),I.data=dA.call(A,A.transformResponse,I),I.headers=NA.from(I.headers),I}),(function(I){return HA(I)||(lA(A),I&&I.response&&(I.response.data=dA.call(A,A.transformResponse,I.response),I.response.headers=NA.from(I.response.headers))),Promise.reject(I)}))}function fA(A,I){I=I||{};const g={};function B(A,I){return b.isPlainObject(A)&&b.isPlainObject(I)?b.merge(A,I):b.isPlainObject(I)?b.merge({},I):b.isArray(I)?I.slice():I}function Q(g){return b.isUndefined(I[g])?b.isUndefined(A[g])?void 0:B(void 0,A[g]):B(A[g],I[g])}function C(A){if(!b.isUndefined(I[A]))return B(void 0,I[A])}function E(g){return b.isUndefined(I[g])?b.isUndefined(A[g])?void 0:B(void 0,A[g]):B(void 0,I[g])}function i(g){return g in I?B(A[g],I[g]):g in A?B(void 0,A[g]):void 0}const o={url:C,method:C,data:C,baseURL:E,transformRequest:E,transformResponse:E,paramsSerializer:E,timeout:E,timeoutMessage:E,withCredentials:E,adapter:E,responseType:E,xsrfCookieName:E,xsrfHeaderName:E,onUploadProgress:E,onDownloadProgress:E,decompress:E,maxContentLength:E,maxBodyLength:E,beforeRedirect:E,transport:E,httpAgent:E,httpsAgent:E,cancelToken:E,socketPath:E,responseEncoding:E,validateStatus:i};return b.forEach(Object.keys(A).concat(Object.keys(I)),(function(A){const I=o[A]||Q,B=I(A);b.isUndefined(B)&&I!==i||(g[A]=B)})),g}const uA={};["object","boolean","number","function","string","symbol"].forEach(((A,I)=>{uA[A]=function(g){return typeof g===A||"a"+(I<1?"n ":" ")+A}}));const WA={};uA.transitional=function(A,I,g){function B(A,I){return"[Axios v1.1.3] Transitional option '"+A+"'"+I+(g?". "+g:"")}return(g,Q,C)=>{if(!1===A)throw new X(B(Q," has been removed"+(I?" in "+I:"")),X.ERR_DEPRECATED);return I&&!WA[Q]&&(WA[Q]=!0,console.warn(B(Q," has been deprecated since v"+I+" and will be removed in the near future"))),!A||A(g,Q,C)}};const mA={assertOptions:function(A,I,g){if("object"!=typeof A)throw new X("options must be an object",X.ERR_BAD_OPTION_VALUE);const B=Object.keys(A);let Q=B.length;for(;Q-- >0;){const C=B[Q],E=I[C];if(E){const I=A[C],g=void 0===I||E(I,C,A);if(!0!==g)throw new X("option "+C+" must be "+g,X.ERR_BAD_OPTION_VALUE)}else if(!0!==g)throw new X("Unknown option "+C,X.ERR_BAD_OPTION)}},validators:uA},pA=mA.validators;class bA{constructor(A){this.defaults=A,this.interceptors={request:new QA,response:new QA}}request(A,I){"string"==typeof A?(I=I||{}).url=A:I=A||{},I=fA(this.defaults,I);const{transitional:g,paramsSerializer:B}=I;void 0!==g&&mA.assertOptions(g,{silentJSONParsing:pA.transitional(pA.boolean),forcedJSONParsing:pA.transitional(pA.boolean),clarifyTimeoutError:pA.transitional(pA.boolean)},!1),void 0!==B&&mA.assertOptions(B,{encode:pA.function,serialize:pA.function},!0),I.method=(I.method||this.defaults.method||"get").toLowerCase();const Q=I.headers&&b.merge(I.headers.common,I.headers[I.method]);Q&&b.forEach(["delete","get","head","post","put","patch","common"],(function(A){delete I.headers[A]})),I.headers=new NA(I.headers,Q);const C=[];let E=!0;this.interceptors.request.forEach((function(A){"function"==typeof A.runWhen&&!1===A.runWhen(I)||(E=E&&A.synchronous,C.unshift(A.fulfilled,A.rejected))}));const i=[];let o;this.interceptors.response.forEach((function(A){i.push(A.fulfilled,A.rejected)}));let D,a=0;if(!E){const A=[qA.bind(this),void 0];for(A.unshift.apply(A,C),A.push.apply(A,i),D=A.length,o=Promise.resolve(I);a<D;)o=o.then(A[a++],A[a++]);return o}D=C.length;let w=I;for(a=0;a<D;){const A=C[a++],I=C[a++];try{w=A(w)}catch(A){I.call(this,A);break}}try{o=qA.call(this,w)}catch(A){return Promise.reject(A)}for(a=0,D=i.length;a<D;)o=o.then(i[a++],i[a++]);return o}getUri(A){return BA(tA((A=fA(this.defaults,A)).baseURL,A.url),A.params,A.paramsSerializer)}}b.forEach(["delete","get","head","options"],(function(A){bA.prototype[A]=function(I,g){return this.request(fA(g||{},{method:A,url:I,data:(g||{}).data}))}})),b.forEach(["post","put","patch"],(function(A){function I(I){return function(g,B,Q){return this.request(fA(Q||{},{method:A,headers:I?{"Content-Type":"multipart/form-data"}:{},url:g,data:B}))}}bA.prototype[A]=I(),bA.prototype[A+"Form"]=I(!0)}));const ZA=bA;class xA{constructor(A){if("function"!=typeof A)throw new TypeError("executor must be a function.");let I;this.promise=new Promise((function(A){I=A}));const g=this;this.promise.then((A=>{if(!g._listeners)return;let I=g._listeners.length;for(;I-- >0;)g._listeners[I](A);g._listeners=null})),this.promise.then=A=>{let I;const B=new Promise((A=>{g.subscribe(A),I=A})).then(A);return B.cancel=function(){g.unsubscribe(I)},B},A((function(A,B,Q){g.reason||(g.reason=new hA(A,B,Q),I(g.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){this.reason?A(this.reason):this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;const I=this._listeners.indexOf(A);-1!==I&&this._listeners.splice(I,1)}static source(){let A;return{token:new xA((function(I){A=I})),cancel:A}}}const VA=xA,XA=function A(I){const g=new ZA(I),B=G(ZA.prototype.request,g);return b.extend(B,ZA.prototype,g,{allOwnKeys:!0}),b.extend(B,g,null,{allOwnKeys:!0}),B.create=function(g){return A(fA(I,g))},B}(LA);XA.Axios=ZA,XA.CanceledError=hA,XA.CancelToken=VA,XA.isCancel=HA,XA.VERSION="1.1.3",XA.toFormData=z,XA.AxiosError=X,XA.Cancel=XA.CanceledError,XA.all=function(A){return Promise.all(A)},XA.spread=function(A){return function(I){return A.apply(null,I)}},XA.isAxiosError=function(A){return b.isObject(A)&&!0===A.isAxiosError},XA.formToJSON=A=>aA(b.isHTMLForm(A)?new FormData(A):A);const TA=XA,{Axios:OA,AxiosError:vA,CanceledError:jA,isCancel:PA,CancelToken:zA,VERSION:_A,all:$A,Cancel:AI,isAxiosError:II,spread:gI,toFormData:BI}=TA,QI=TA;var CI=function(){function A(){Q(this,A)}var g;return E(A,null,[{key:"fetchRemoteData",value:(g=I(o().mark((function A(I){var g;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,QI.get(I,{responseType:"arraybuffer"});case 3:return g=A.sent,A.abrupt("return",new Uint8Array(g.data));case 7:throw A.prev=7,A.t0=A.catch(0),A.t0;case 10:case"end":return A.stop()}}),A,null,[[0,7]])}))),function(A){return g.apply(this,arguments)})},{key:"string2Uint8Data",value:function(A){for(var I=new Uint8Array(A.length),g=0;g<I.length;g++)I[g]=255&A.charCodeAt(g);return I}},{key:"uint8Data2String",value:function(A){return String.fromCharCode.apply(String,A)}},{key:"parseMultiFile",value:function(I){var g=A.uint8Data2String(I).split("\n"),B=[],Q=0;return g.forEach((function(A){if((A=A.trim())&&!A.startsWith("#"))switch(Q){case 0:return void(Q=1);case 1:A.match(/^\d+$/)||B.push(A);case 2:case 3:case 4:return void Q++;case 5:return void(Q=1)}})),B}}]),A}(),EI=function(){function A(){Q(this,A),this.instance,this.markerCount=0,this.multiMarkerCount=0,this.cameraCount=0,this.version="0.1.3",console.info("ARToolkit ",this.version)}var B,C,i,D,a;return E(A,[{key:"init",value:(a=I(o().mark((function A(){var I;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,s();case 2:return I=A.sent,this.instance=I.instance,this._decorate(),("undefined"!=typeof window?window:g.g).artoolkit=this,A.abrupt("return",this);case 8:case"end":return A.stop()}}),A,this)}))),function(){return a.apply(this,arguments)})},{key:"_decorate",value:function(){var A=this;for(var I in["setup","teardown","setupAR2","setLogLevel","getLogLevel","setDebugMode","getDebugMode","getProcessingImage","setMarkerInfoDir","setMarkerInfoVertex","getTransMatSquare","getTransMatSquareCont","getTransMatMultiSquare","getTransMatMultiSquareRobust","getMultiMarkerNum","getMultiMarkerCount","detectMarker","getMarkerNum","detectNFTMarker","getNFTMarker","getNFTData","getMarker","getMultiEachMarker","setProjectionNearPlane","getProjectionNearPlane","setProjectionFarPlane","getProjectionFarPlane","setThresholdMode","getThresholdMode","setThreshold","getThreshold","setPatternDetectionMode","getPatternDetectionMode","setMatrixCodeType","getMatrixCodeType","setLabelingMode","getLabelingMode","setPattRatio","getPattRatio","setImageProcMode","getImageProcMode"].forEach((function(I){A[I]=A.instance[I]})),this.instance)I.match(/^AR/)&&(this[I]=this.instance[I])}},{key:"loadCamera",value:(D=I(o().mark((function A(I){var g,B;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(g="/camera_param_"+this.cameraCount++,!(I instanceof Uint8Array)){A.next=5;break}B=I,A.next=14;break;case 5:return A.prev=5,A.next=8,CI.fetchRemoteData(I);case 8:B=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(B,g),A.abrupt("return",this.instance._loadCamera(g));case 16:case"end":return A.stop()}}),A,this,[[5,11]])}))),function(A){return D.apply(this,arguments)})},{key:"addMarker",value:(i=I(o().mark((function A(I,g){var B,Q;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(B="/marker_"+this.markerCount++,-1===g.indexOf("\n")){A.next=5;break}Q=CI.string2Uint8Data(g),A.next=14;break;case 5:return A.prev=5,A.next=8,CI.fetchRemoteData(g);case 8:Q=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(Q,B),A.abrupt("return",this.instance._addMarker(I,B));case 16:case"end":return A.stop()}}),A,this,[[5,11]])}))),function(A,I){return i.apply(this,arguments)})},{key:"addMultiMarker",value:(C=I(o().mark((function A(g,B){var Q,C,E,i,D,a,w;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return Q="/multi_marker_"+this.multiMarkerCount++,A.next=3,CI.fetchRemoteData(B);case 3:return C=A.sent,E=CI.parseMultiFile(C),i=function(){var A=I(o().mark((function A(I){var g,Q;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return g=new URL(I,B).toString(),A.next=3,CI.fetchRemoteData(g);case 3:Q=A.sent,this._storeDataFile(Q,I);case 5:case"end":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),D=E.map(i,this),A.next=9,Promise.all(D);case 9:return a=this.instance._addMultiMarker(g,Q),w=this.instance.getMultiMarkerNum(g,a),A.abrupt("return",[a,w]);case 12:case"end":return A.stop()}}),A,this)}))),function(A,I){return C.apply(this,arguments)})},{key:"addNFTMarker",value:(B=I(o().mark((function A(g,B){var Q,C,E,i;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return Q="/markerNFT_"+this.markerCount++,C=["fset","iset","fset3"],E=function(){var A=I(o().mark((function A(I){var g,C,E;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return g=B+"."+I,C=Q+"."+I,A.next=4,CI.fetchRemoteData(g);case 4:E=A.sent,this._storeDataFile(E,C);case 6:case"end":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),i=C.map(E,this),A.next=6,Promise.all(i);case 6:return A.abrupt("return",this.instance._addNFTMarker(g,Q));case 7:case"end":return A.stop()}}),A,this)}))),function(A,I){return B.apply(this,arguments)})},{key:"_storeDataFile",value:function(A,I){this.instance.FS.writeFile(I,A,{encoding:"binary"})}}],[{key:"UNKNOWN_MARKER",get:function(){return-1}},{key:"PATTERN_MARKER",get:function(){return 0}},{key:"BARCODE_MARKER",get:function(){return 1}},{key:"NFT_MARKER",get:function(){return 2}}]),A}();function iI(A,I,g){return I in A?Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}):A[I]=g,A}function oI(A,I){var g=Object.keys(A);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(A);I&&(B=B.filter((function(I){return Object.getOwnPropertyDescriptor(A,I).enumerable}))),g.push.apply(g,B)}return g}function DI(A){for(var I=1;I<arguments.length;I++){var g=null!=arguments[I]?arguments[I]:{};I%2?oI(Object(g),!0).forEach((function(I){iI(A,I,g[I])})):Object.getOwnPropertyDescriptors?Object.defineProperties(A,Object.getOwnPropertyDescriptors(g)):oI(Object(g)).forEach((function(I){Object.defineProperty(A,I,Object.getOwnPropertyDescriptor(g,I))}))}return A}var aI=function(){function A(I,g,B,C){Q(this,A),this.options=DI(DI({},{canvas:null,orientation:"landscape"}),C),this.id=-1,this.width=I,this.height=g,this.image,this.orientation=this.options.orientation,this.cameraParam=B,this.cameraId=-1,this.cameraLoaded=!1,this.artoolkit,this.listeners={},this.defaultMarkerWidth=1,this.patternMarkers={},this.barcodeMarkers={},this.nftMarkers={},this.transform_mat=new Float32Array(16),this.transformGL_RH=new Float64Array(16),this.videoWidth=I,this.videoHeight=g,this.videoSize=this.videoWidth*this.videoHeight,this.framepointer=null,this.framesize=null,this.dataHeap=null,this.videoLuma=null,this.camera_mat=null,this.marker_transform_mat=null,this.videoLumaPointer=null,this.options.canvas?this.canvas=this.options.canvas:"undefined"!=typeof document&&(this.canvas=document.createElement("canvas")),this.canvas?(this.canvas.width=I,this.canvas.height=g,this.ctx=this.canvas.getContext("2d")):console.warn("No canvas available"),this.nftMarkerFound=!1,this.nftMarkerFoundTime=!1,this.nftMarkerCount=0,this._bwpointer=!1}var g,B,C,i,D,a;return E(A,[{key:"dispose",value:function(){for(var A in this.cameraId=-1,this.cameraParam="",this.cameraLoaded=!1,this.id>-1&&this.artoolkit.teardown(this.id),this.image&&this.image.srcObject,this)this[A]=null}},{key:"process",value:function(A){var I=this.detectMarker(A);0!=I&&console.error("[ARController]","detectMarker error:",I);var g,B,Q=this.getMarkerNum();for(g in this.patternMarkers)(B=this.patternMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(g in this.barcodeMarkers)(B=this.barcodeMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(g in this.nftMarkers)(B=this.nftMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(var C=0;C<Q;C++){var E=this.getMarker(C),i=EI.UNKNOWN_MARKER,o=this.trackPatternMarkerId(-1);E.idPatt>-1&&(E.id===E.idPatt||-1===E.idMatrix)?(o=this.trackPatternMarkerId(E.idPatt),i=EI.PATTERN_MARKER,E.dir!==E.dirPatt&&this.setMarkerInfoDir(C,E.dirPatt)):E.idMatrix>-1&&(o=this.trackBarcodeMarkerId(E.idMatrix),i=EI.BARCODE_MARKER,E.dir!==E.dirMatrix&&this.setMarkerInfoDir(C,E.dirMatrix)),i!==EI.UNKNOWN_MARKER&&o.inPrevious?this.getTransMatSquareCont(C,o.markerWidth,o.matrix,o.matrix):this.getTransMatSquare(C,o.markerWidth,o.matrix),o.inCurrent=!0,this.transMatToGLMat(o.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getMarker",target:this,data:{index:C,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}var D=this.nftMarkerCount;this.detectNFTMarker();for(var a=0;a<D;a++){var w=this.getNFTMarker(a),t=EI.NFT_MARKER;if(w.found){this.nftMarkerFound=a,this.nftMarkerFoundTime=Date.now();var s=this.trackNFTMarkerId(a);s.matrix.set(w.pose),s.inCurrent=!0,this.transMatToGLMat(s.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getNFTMarker",target:this,data:{index:a,type:t,marker:w,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}else self.nftMarkerFound===a&&Date.now()-this.nftMarkerFoundTime>200&&(this.nftMarkerFound=!1,this.dispatchEvent({name:"lostNFTMarker",target:this,data:{index:a,type:t,marker:w,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}}))}for(var G=this.getMultiMarkerCount(),h=0;h<G;h++){var R=this.getMultiMarkerPatternCount(h),r=!1;this.artoolkit.getTransMatMultiSquareRobust(this.id,h),this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat);for(var F=0;F<R;F++)if((e=this.getMultiEachMarker(h,F)).visible>=0){r=!0,this.dispatchEvent({name:"getMultiMarker",target:this,data:{multiMarkerId:h,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}});break}if(r)for(var y=0;y<R;y++){var e=this.getMultiEachMarker(h,y);this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getMultiMarkerSub",target:this,data:{multiMarkerId:h,markerIndex:y,marker:e,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}}this._bwpointer&&this.debugDraw()}},{key:"detectNFTMarker",value:function(){this.artoolkit.detectNFTMarker(this.id)}},{key:"trackPatternMarkerId",value:function(A,I){var g=this.patternMarkers[A];return g||(this.patternMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"trackBarcodeMarkerId",value:function(A,I){var g=this.barcodeMarkers[A];return g||(this.barcodeMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"trackNFTMarkerId",value:function(A,I){var g=this.nftMarkers[A];return g||(this.nftMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"getMultiMarkerCount",value:function(){return this.artoolkit.getMultiMarkerCount(this.id)}},{key:"getMultiMarkerPatternCount",value:function(A){return this.artoolkit.getMultiMarkerNum(this.id,A)}},{key:"addEventListener",value:function(A,I){this.listeners[A]||(this.listeners[A]=[]),this.listeners[A].push(I)}},{key:"removeEventListener",value:function(A,I){if(this.listeners[A]){var g=this.listeners[A].indexOf(I);g>-1&&this.listeners[A].splice(g,1)}}},{key:"dispatchEvent",value:function(A){var I=this.listeners[A.name];if(I)for(var g=0;g<I.length;g++)I[g].call(this,A)}},{key:"debugSetup",value:function(){"undefined"!=typeof document?(document.body.appendChild(this.canvas),this.setDebugMode(!0),this._bwpointer=this.getProcessingImage()):console.log("debugSetup() currently only supports Browser environments")}},{key:"debugDraw",value:function(){for(var A=new Uint8ClampedArray(this.artoolkit.instance.HEAPU8.buffer,this._bwpointer,this.framesize),I=new ImageData(new Uint8ClampedArray(this.canvas.width*this.canvas.height*4),this.canvas.width,this.canvas.height),g=0,B=0;g<A.length;g++,B+=4){var Q=A[g];I.data[B+0]=Q,I.data[B+1]=Q,I.data[B+2]=Q,I.data[B+3]=255}this.ctx.putImageData(I,0,0);for(var C=this.getMarkerNum(),E=0;E<C;E++)this.drawDebugMarker(this.getMarker(E))}},{key:"drawDebugMarker",value:function(A){var I=A.vertex,g=A.pos,B=this.ctx;B.lineWidth=5,B.strokeStyle="red",B.beginPath(),B.moveTo(I[0][0],I[0][1]),B.lineTo(I[1][0],I[1][1]),B.stroke(),B.beginPath(),B.moveTo(I[2][0],I[2][1]),B.lineTo(I[3][0],I[3][1]),B.stroke(),B.strokeStyle="green",B.beginPath(),B.lineTo(I[1][0],I[1][1]),B.lineTo(I[2][0],I[2][1]),B.stroke(),B.beginPath(),B.moveTo(I[3][0],I[3][1]),B.lineTo(I[0][0],I[0][1]),B.stroke(),B.beginPath(),B.arc(g[0],g[1],8,0,2*Math.PI),B.fillStyle="red",B.fill()}},{key:"loadMarker",value:(a=I(o().mark((function A(I){return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMarker(this.id,I);case 2:return A.abrupt("return",A.sent);case 3:case"end":return A.stop()}}),A,this)}))),function(A){return a.apply(this,arguments)})},{key:"loadMultiMarker",value:(D=I(o().mark((function A(I){return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMultiMarker(this.id,I);case 2:return A.abrupt("return",A.sent);case 3:case"end":return A.stop()}}),A,this)}))),function(A){return D.apply(this,arguments)})},{key:"loadNFTMarker",value:(i=I(o().mark((function A(I){var g;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addNFTMarker(this.id,I);case 2:return g=A.sent,this.nftMarkerCount=g+1,A.abrupt("return",g);case 5:case"end":return A.stop()}}),A,this)}))),function(A){return i.apply(this,arguments)})},{key:"getTransMatSquare",value:function(A,I,g){return this.artoolkit.getTransMatSquare(this.id,A,I),g.set(this.marker_transform_mat),g}},{key:"getTransMatSquareCont",value:function(A,I,g,B){return this.marker_transform_mat.set(g),this.artoolkit.getTransMatSquareCont(this.id,A,I),B.set(this.marker_transform_mat),B}},{key:"getTransMatMultiSquare",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:"getTransMatMultiSquareRobust",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:"transMatToGLMat",value:function(A,I,g){return null==I&&(I=new Float64Array(16)),I[0]=A[0],I[4]=A[1],I[8]=A[2],I[12]=A[3],I[1]=A[4],I[5]=A[5],I[9]=A[6],I[13]=A[7],I[2]=A[8],I[6]=A[9],I[10]=A[10],I[14]=A[11],I[3]=0,I[7]=0,I[11]=0,I[15]=1,null!=g&&0!==g&&(I[12]*=g,I[13]*=g,I[14]*=g),I}},{key:"arglCameraViewRHf",value:function(A,I,g){var B;return(B=null==I?new Float64Array(16):I)[0]=A[0],B[4]=A[4],B[8]=A[8],B[12]=A[12],B[1]=-A[1],B[5]=-A[5],B[9]=-A[9],B[13]=-A[13],B[2]=-A[2],B[6]=-A[6],B[10]=-A[10],B[14]=-A[14],B[3]=0,B[7]=0,B[11]=0,B[15]=1,null!=g&&0!==g&&(B[12]*=g,B[13]*=g,B[14]*=g),B}},{key:"detectMarker",value:function(A){return this._copyImageToHeap(A)?this.artoolkit.detectMarker(this.id):-99}},{key:"getMarkerNum",value:function(){return this.artoolkit.getMarkerNum(this.id)}},{key:"getMarker",value:function(A){if(0===this.artoolkit.getMarker(this.id,A))return this.artoolkit.markerInfo}},{key:"getNFTMarker",value:function(A){if(0===this.artoolkit.getNFTMarker(this.id,A))return this.artoolkit.NFTMarkerInfo}},{key:"getNFTData",value:function(A,I){return this.artoolkit.getNFTData(A,I)}},{key:"setMarkerInfoVertex",value:function(A,I){for(var g=0;g<I.length;g++)this.marker_transform_mat[2*g+0]=I[g][0],this.marker_transform_mat[2*g+1]=I[g][1];return this.artoolkit.setMarkerInfoVertex(this.id,A)}},{key:"cloneMarkerInfo",value:function(A){return JSON.parse(JSON.stringify(A))}},{key:"getMultiEachMarker",value:function(A,I){if(0===this.artoolkit.getMultiEachMarker(this.id,A,I))return this.artoolkit.multiEachMarkerInfo}},{key:"getTransformationMatrix",value:function(){return this.transform_mat}},{key:"getCameraMatrix",value:function(){return this.camera_mat}},{key:"getMarkerTransformationMatrix",value:function(){return this.marker_transform_mat}},{key:"setDebugMode",value:function(A){return this.artoolkit.setDebugMode(this.id,A)}},{key:"getDebugMode",value:function(){return this.artoolkit.getDebugMode(this.id)}},{key:"getProcessingImage",value:function(){return this.artoolkit.getProcessingImage(this.id)}},{key:"setLogLevel",value:function(A){return this.artoolkit.setLogLevel(A)}},{key:"getLogLevel",value:function(){return this.artoolkit.getLogLevel()}},{key:"setMarkerInfoDir",value:function(A,I){return this.artoolkit.setMarkerInfoDir(this.id,A,I)}},{key:"setProjectionNearPlane",value:function(A){return this.artoolkit.setProjectionNearPlane(this.id,A)}},{key:"getProjectionNearPlane",value:function(){return this.artoolkit.getProjectionNearPlane(this.id)}},{key:"setProjectionFarPlane",value:function(A){return this.artoolkit.setProjectionFarPlane(this.id,A)}},{key:"getProjectionFarPlane",value:function(){return this.artoolkit.getProjectionFarPlane(this.id)}},{key:"setThresholdMode",value:function(A){return this.artoolkit.setThresholdMode(this.id,A)}},{key:"getThresholdMode",value:function(){return this.artoolkit.getThresholdMode(this.id)}},{key:"setThreshold",value:function(A){return this.artoolkit.setThreshold(this.id,A)}},{key:"getThreshold",value:function(){return this.artoolkit.getThreshold(this.id)}},{key:"setPatternDetectionMode",value:function(A){return this.artoolkit.setPatternDetectionMode(this.id,A)}},{key:"getPatternDetectionMode",value:function(){return this.artoolkit.getPatternDetectionMode(this.id)}},{key:"setMatrixCodeType",value:function(A){return this.artoolkit.setMatrixCodeType(this.id,A)}},{key:"getMatrixCodeType",value:function(){return this.artoolkit.getMatrixCodeType(this.id)}},{key:"setLabelingMode",value:function(A){return this.artoolkit.setLabelingMode(this.id,A)}},{key:"getLabelingMode",value:function(){return this.artoolkit.getLabelingMode(this.id)}},{key:"setPattRatio",value:function(A){return this.artoolkit.setPattRatio(this.id,A)}},{key:"getPattRatio",value:function(){return this.artoolkit.getPattRatio(this.id)}},{key:"setImageProcMode",value:function(A){return this.artoolkit.setImageProcMode(this.id,A)}},{key:"getImageProcMode",value:function(){return this.artoolkit.getImageProcMode(this.id)}},{key:"_initialize",value:(C=I(o().mark((function A(){var I,g=this;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,(new EI).init();case 2:return this.artoolkit=A.sent,console.log("[ARController]","ARToolkit initialized"),A.next=6,this.artoolkit.loadCamera(this.cameraParam);case 6:return this.cameraId=A.sent,console.log("[ARController]","Camera params loaded with ID",this.cameraId),this.id=this.artoolkit.setup(this.width,this.height,this.cameraId),console.log("[ARController]","Got ID from setup",this.id),this._initNFT(),I=artoolkit.frameMalloc,this.framepointer=I.framepointer,this.framesize=I.framesize,this.videoLumaPointer=I.videoLumaPointer,this.dataHeap=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.framepointer,this.framesize),this.videoLuma=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.videoLumaPointer,this.framesize/4),this.camera_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.camera,16),this.marker_transform_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.transform,12),this.setProjectionNearPlane(.1),this.setProjectionFarPlane(1e3),setTimeout((function(){g.dispatchEvent({name:"load",target:g})}),1),A.abrupt("return",this);case 23:case"end":return A.stop()}}),A,this)}))),function(){return C.apply(this,arguments)})},{key:"_initNFT",value:function(){this.artoolkit.setupAR2(this.id)}},{key:"_copyImageToHeap",value:function(A){var I;if(A||(A=this.image),A.data)I=A.data;else{if(this.ctx.save(),"portrait"===this.orientation){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);var g=this.canvas.height/this.canvas.width,B=this.canvas.width*g,Q=this.canvas.height*g,C=(this.canvas.width-Q)/2;this.ctx.drawImage(A,C,0,Q,B)}else this.ctx.drawImage(A,0,0,this.canvas.width,this.canvas.height);this.ctx.restore(),I=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height).data}if(this.videoLuma)for(var E=0,i=0;i<this.videoSize;i++){var o=I[E+0],D=I[E+1],a=I[E+2];this.videoLuma[i]=o+o+o+a+D+D+D+D>>3,E+=4}return!!this.dataHeap&&(this.dataHeap.set(I),!0)}}],[{key:"initWithDimensions",value:(B=I(o().mark((function I(g,B,Q,C){var E;return o().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return E=new A(g,B,Q,C),I.next=3,E._initialize();case 3:return I.abrupt("return",I.sent);case 4:case"end":return I.stop()}}),I)}))),function(A,I,g,Q){return B.apply(this,arguments)})},{key:"initWithImage",value:(g=I(o().mark((function I(g,B,Q){var C,E,i;return o().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return C=g.videoWidth||g.width,E=g.videoHeight||g.height,I.next=4,A.initWithDimensions(C,E,B,Q);case 4:return(i=I.sent).image=g,I.abrupt("return",i);case 7:case"end":return I.stop()}}),I)}))),function(A,I,B){return g.apply(this,arguments)})}]),A}();const wI={ARToolkit:EI,ARController:aI}})(),B.default})()));

/***/ }),

/***/ "./three.js/src/threex/arjs-markercontrols-nft.worker.js":
/*!***************************************************************!*\
  !*** ./three.js/src/threex/arjs-markercontrols-nft.worker.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Worker_fn)
/* harmony export */ });
/* harmony import */ var _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !!../../../node_modules/worker-loader/dist/runtime/inline.js */ "./node_modules/worker-loader/dist/runtime/inline.js");
/* harmony import */ var _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0__);



function Worker_fn() {
  return _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0___default()("/******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js ***!\n  \\*****************************************************************/\n/***/ (function(module) {\n\n/*! For license information please see ARToolkit.js.LICENSE.txt */\n!function(A,I){ true?module.exports=I():0}(\"undefined\"!=typeof self?self:this,(()=>(()=>{var A={230:A=>{A.exports=\"object\"==typeof self?self.FormData:window.FormData},654:()=>{},231:()=>{},703:()=>{},61:(A,I,g)=>{var B=g(698).default;function Q(){\"use strict\";A.exports=Q=function(){return I},A.exports.__esModule=!0,A.exports.default=A.exports;var I={},g=Object.prototype,C=g.hasOwnProperty,E=\"function\"==typeof Symbol?Symbol:{},i=E.iterator||\"@@iterator\",o=E.asyncIterator||\"@@asyncIterator\",D=E.toStringTag||\"@@toStringTag\";function a(A,I,g){return Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}),A[I]}try{a({},\"\")}catch(A){a=function(A,I,g){return A[I]=g}}function w(A,I,g,B){var Q=I&&I.prototype instanceof G?I:G,C=Object.create(Q.prototype),E=new k(B||[]);return C._invoke=function(A,I,g){var B=\"suspendedStart\";return function(Q,C){if(\"executing\"===B)throw new Error(\"Generator is already running\");if(\"completed\"===B){if(\"throw\"===Q)throw C;return{value:void 0,done:!0}}for(g.method=Q,g.arg=C;;){var E=g.delegate;if(E){var i=S(E,g);if(i){if(i===s)continue;return i}}if(\"next\"===g.method)g.sent=g._sent=g.arg;else if(\"throw\"===g.method){if(\"suspendedStart\"===B)throw B=\"completed\",g.arg;g.dispatchException(g.arg)}else\"return\"===g.method&&g.abrupt(\"return\",g.arg);B=\"executing\";var o=t(A,I,g);if(\"normal\"===o.type){if(B=g.done?\"completed\":\"suspendedYield\",o.arg===s)continue;return{value:o.arg,done:g.done}}\"throw\"===o.type&&(B=\"completed\",g.method=\"throw\",g.arg=o.arg)}}}(A,g,E),C}function t(A,I,g){try{return{type:\"normal\",arg:A.call(I,g)}}catch(A){return{type:\"throw\",arg:A}}}I.wrap=w;var s={};function G(){}function h(){}function R(){}var r={};a(r,i,(function(){return this}));var F=Object.getPrototypeOf,y=F&&F(F(U([])));y&&y!==g&&C.call(y,i)&&(r=y);var e=R.prototype=G.prototype=Object.create(r);function n(A){[\"next\",\"throw\",\"return\"].forEach((function(I){a(A,I,(function(A){return this._invoke(I,A)}))}))}function M(A,I){function g(Q,E,i,o){var D=t(A[Q],A,E);if(\"throw\"!==D.type){var a=D.arg,w=a.value;return w&&\"object\"==B(w)&&C.call(w,\"__await\")?I.resolve(w.__await).then((function(A){g(\"next\",A,i,o)}),(function(A){g(\"throw\",A,i,o)})):I.resolve(w).then((function(A){a.value=A,i(a)}),(function(A){return g(\"throw\",A,i,o)}))}o(D.arg)}var Q;this._invoke=function(A,B){function C(){return new I((function(I,Q){g(A,B,I,Q)}))}return Q=Q?Q.then(C,C):C()}}function S(A,I){var g=A.iterator[I.method];if(void 0===g){if(I.delegate=null,\"throw\"===I.method){if(A.iterator.return&&(I.method=\"return\",I.arg=void 0,S(A,I),\"throw\"===I.method))return s;I.method=\"throw\",I.arg=new TypeError(\"The iterator does not provide a 'throw' method\")}return s}var B=t(g,A.iterator,I.arg);if(\"throw\"===B.type)return I.method=\"throw\",I.arg=B.arg,I.delegate=null,s;var Q=B.arg;return Q?Q.done?(I[A.resultName]=Q.value,I.next=A.nextLoc,\"return\"!==I.method&&(I.method=\"next\",I.arg=void 0),I.delegate=null,s):Q:(I.method=\"throw\",I.arg=new TypeError(\"iterator result is not an object\"),I.delegate=null,s)}function N(A){var I={tryLoc:A[0]};1 in A&&(I.catchLoc=A[1]),2 in A&&(I.finallyLoc=A[2],I.afterLoc=A[3]),this.tryEntries.push(I)}function c(A){var I=A.completion||{};I.type=\"normal\",delete I.arg,A.completion=I}function k(A){this.tryEntries=[{tryLoc:\"root\"}],A.forEach(N,this),this.reset(!0)}function U(A){if(A){var I=A[i];if(I)return I.call(A);if(\"function\"==typeof A.next)return A;if(!isNaN(A.length)){var g=-1,B=function I(){for(;++g<A.length;)if(C.call(A,g))return I.value=A[g],I.done=!1,I;return I.value=void 0,I.done=!0,I};return B.next=B}}return{next:J}}function J(){return{value:void 0,done:!0}}return h.prototype=R,a(e,\"constructor\",R),a(R,\"constructor\",h),h.displayName=a(R,D,\"GeneratorFunction\"),I.isGeneratorFunction=function(A){var I=\"function\"==typeof A&&A.constructor;return!!I&&(I===h||\"GeneratorFunction\"===(I.displayName||I.name))},I.mark=function(A){return Object.setPrototypeOf?Object.setPrototypeOf(A,R):(A.__proto__=R,a(A,D,\"GeneratorFunction\")),A.prototype=Object.create(e),A},I.awrap=function(A){return{__await:A}},n(M.prototype),a(M.prototype,o,(function(){return this})),I.AsyncIterator=M,I.async=function(A,g,B,Q,C){void 0===C&&(C=Promise);var E=new M(w(A,g,B,Q),C);return I.isGeneratorFunction(g)?E:E.next().then((function(A){return A.done?A.value:E.next()}))},n(e),a(e,D,\"Generator\"),a(e,i,(function(){return this})),a(e,\"toString\",(function(){return\"[object Generator]\"})),I.keys=function(A){var I=[];for(var g in A)I.push(g);return I.reverse(),function g(){for(;I.length;){var B=I.pop();if(B in A)return g.value=B,g.done=!1,g}return g.done=!0,g}},I.values=U,k.prototype={constructor:k,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=void 0,this.tryEntries.forEach(c),!A)for(var I in this)\"t\"===I.charAt(0)&&C.call(this,I)&&!isNaN(+I.slice(1))&&(this[I]=void 0)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if(\"throw\"===A.type)throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var I=this;function g(g,B){return E.type=\"throw\",E.arg=A,I.next=g,B&&(I.method=\"next\",I.arg=void 0),!!B}for(var B=this.tryEntries.length-1;B>=0;--B){var Q=this.tryEntries[B],E=Q.completion;if(\"root\"===Q.tryLoc)return g(\"end\");if(Q.tryLoc<=this.prev){var i=C.call(Q,\"catchLoc\"),o=C.call(Q,\"finallyLoc\");if(i&&o){if(this.prev<Q.catchLoc)return g(Q.catchLoc,!0);if(this.prev<Q.finallyLoc)return g(Q.finallyLoc)}else if(i){if(this.prev<Q.catchLoc)return g(Q.catchLoc,!0)}else{if(!o)throw new Error(\"try statement without catch or finally\");if(this.prev<Q.finallyLoc)return g(Q.finallyLoc)}}}},abrupt:function(A,I){for(var g=this.tryEntries.length-1;g>=0;--g){var B=this.tryEntries[g];if(B.tryLoc<=this.prev&&C.call(B,\"finallyLoc\")&&this.prev<B.finallyLoc){var Q=B;break}}Q&&(\"break\"===A||\"continue\"===A)&&Q.tryLoc<=I&&I<=Q.finallyLoc&&(Q=null);var E=Q?Q.completion:{};return E.type=A,E.arg=I,Q?(this.method=\"next\",this.next=Q.finallyLoc,s):this.complete(E)},complete:function(A,I){if(\"throw\"===A.type)throw A.arg;return\"break\"===A.type||\"continue\"===A.type?this.next=A.arg:\"return\"===A.type?(this.rval=this.arg=A.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===A.type&&I&&(this.next=I),s},finish:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.finallyLoc===A)return this.complete(g.completion,g.afterLoc),c(g),s}},catch:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.tryLoc===A){var B=g.completion;if(\"throw\"===B.type){var Q=B.arg;c(g)}return Q}}throw new Error(\"illegal catch attempt\")},delegateYield:function(A,I,g){return this.delegate={iterator:U(A),resultName:I,nextLoc:g},\"next\"===this.method&&(this.arg=void 0),s}},I}A.exports=Q,A.exports.__esModule=!0,A.exports.default=A.exports},698:A=>{function I(g){return A.exports=I=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&\"function\"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?\"symbol\":typeof A},A.exports.__esModule=!0,A.exports.default=A.exports,I(g)}A.exports=I,A.exports.__esModule=!0,A.exports.default=A.exports},687:(A,I,g)=>{var B=g(61)();A.exports=B;try{regeneratorRuntime=B}catch(A){\"object\"==typeof globalThis?globalThis.regeneratorRuntime=B:Function(\"r\",\"regeneratorRuntime = r\")(B)}}},I={};function g(B){var Q=I[B];if(void 0!==Q)return Q.exports;var C=I[B]={exports:{}};return A[B](C,C.exports,g),C.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(A){if(\"object\"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var B={};return(()=>{\"use strict\";function A(A,I,g,B,Q,C,E){try{var i=A[C](E),o=i.value}catch(A){return void g(A)}i.done?I(o):Promise.resolve(o).then(B,Q)}function I(I){return function(){var g=this,B=arguments;return new Promise((function(Q,C){var E=I.apply(g,B);function i(I){A(E,Q,C,i,o,\"next\",I)}function o(I){A(E,Q,C,i,o,\"throw\",I)}i(void 0)}))}}function Q(A,I){if(!(A instanceof I))throw new TypeError(\"Cannot call a class as a function\")}function C(A,I){for(var g=0;g<I.length;g++){var B=I[g];B.enumerable=B.enumerable||!1,B.configurable=!0,\"value\"in B&&(B.writable=!0),Object.defineProperty(A,B.key,B)}}function E(A,I,g){return I&&C(A.prototype,I),g&&C(A,g),Object.defineProperty(A,\"prototype\",{writable:!1}),A}g.d(B,{default:()=>wI});var i=g(687),o=g.n(i);function D(A){return D=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&\"function\"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?\"symbol\":typeof A},D(A)}var a,w=(a=(a=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\"/index.js\",function(A){var I,B;(A=void 0!==(A=A||{})?A:{}).ready=new Promise((function(A,g){I=A,B=g}));var Q,C,E,i,o,w,t=Object.assign({},A),s=[],G=\"./this.program\",h=function(A,I){throw I},R=\"object\"==(\"undefined\"==typeof window?\"undefined\":D(window)),r=\"function\"==typeof importScripts,F=\"object\"==(\"undefined\"==typeof process?\"undefined\":D(process))&&\"object\"==D(process.versions)&&\"string\"==typeof process.versions.node,y=\"\";F?(y=r?g(703).dirname(y)+\"/\":\"//\",w=function(){o||(i=g(231),o=g(703))},Q=function(A,I){var g=mI(A);return g?I?g:g.toString():(w(),A=o.normalize(A),i.readFileSync(A,I?void 0:\"utf8\"))},E=function(A){var I=Q(A,!0);return I.buffer||(I=new Uint8Array(I)),I},C=function(A,I,g){var B=mI(A);B&&I(B),w(),A=o.normalize(A),i.readFile(A,(function(A,B){A?g(A):I(B.buffer)}))},process.argv.length>1&&(G=process.argv[1].replace(/\\\\/g,\"/\")),s=process.argv.slice(2),process.on(\"uncaughtException\",(function(A){if(!(A instanceof oA))throw A})),process.on(\"unhandledRejection\",(function(A){throw A})),h=function(A,I){if(T())throw process.exitCode=A,I;var g;(g=I)instanceof oA||M(\"exiting due to exception: \"+g),process.exit(A)},A.inspect=function(){return\"[Emscripten Module object]\"}):(R||r)&&(r?y=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(y=document.currentScript.src),a&&(y=a),y=0!==y.indexOf(\"blob:\")?y.substr(0,y.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",Q=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.send(null),I.responseText}catch(I){var g=mI(A);if(g)return function(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(uI&&k(!1,\"Character code \"+B+\" (\"+String.fromCharCode(B)+\")  at offset \"+g+\" not in 0x00-0xFF.\"),B&=255),I.push(String.fromCharCode(B))}return I.join(\"\")}(g);throw I}},r&&(E=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.responseType=\"arraybuffer\",I.send(null),new Uint8Array(I.response)}catch(I){var g=mI(A);if(g)return g;throw I}}),C=function(A,I,g){var B=new XMLHttpRequest;B.open(\"GET\",A,!0),B.responseType=\"arraybuffer\",B.onload=function(){if(200==B.status||0==B.status&&B.response)I(B.response);else{var Q=mI(A);Q?I(Q.buffer):g()}},B.onerror=g,B.send(null)});var e,n=A.print||console.log.bind(console),M=A.printErr||console.warn.bind(console);Object.assign(A,t),t=null,A.arguments&&(s=A.arguments),A.thisProgram&&(G=A.thisProgram),A.quit&&(h=A.quit),A.wasmBinary&&(e=A.wasmBinary);var S,N=A.noExitRuntime||!0;\"object\"!=(\"undefined\"==typeof WebAssembly?\"undefined\":D(WebAssembly))&&_(\"no native wasm support detected\");var c=!1;function k(A,I){A||_(I)}var U,J,K,Y,L,d,H,l,q,f=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function u(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.buffer&&f)return f.decode(A.subarray(I,Q));for(var C=\"\";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else{var D=E-65536;C+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else C+=String.fromCharCode((31&E)<<6|i)}else C+=String.fromCharCode(E)}return C}function W(A,I){return A?u(K,A,I):\"\"}function m(A,I,g,B){if(!(B>0))return 0;for(var Q=g,C=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=C)break;I[g++]=i}else if(i<=2047){if(g+1>=C)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=C)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=C)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-Q}function p(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}function b(I){U=I,A.HEAP8=J=new Int8Array(I),A.HEAP16=Y=new Int16Array(I),A.HEAP32=d=new Int32Array(I),A.HEAPU8=K=new Uint8Array(I),A.HEAPU16=L=new Uint16Array(I),A.HEAPU32=H=new Uint32Array(I),A.HEAPF32=l=new Float32Array(I),A.HEAPF64=q=new Float64Array(I)}A.INITIAL_MEMORY;var Z,x=[],V=[],X=[];function T(){return N}var O=0,v=null,j=null;function P(I){O++,A.monitorRunDependencies&&A.monitorRunDependencies(O)}function z(I){if(O--,A.monitorRunDependencies&&A.monitorRunDependencies(O),0==O&&(null!==v&&(clearInterval(v),v=null),j)){var g=j;j=null,g()}}function _(I){A.onAbort&&A.onAbort(I),M(I=\"Aborted(\"+I+\")\"),c=!0,I+=\". Build with -sASSERTIONS for more info.\";var g=new WebAssembly.RuntimeError(I);throw B(g),g}var $,AA,IA,gA,BA=\"data:application/octet-stream;base64,\";function QA(A){return A.startsWith(BA)}function CA(A){return A.startsWith(\"file://\")}function EA(A){try{if(A==$&&e)return new Uint8Array(e);var I=mI(A);if(I)return I;if(E)return E(A);throw\"both async and sync fetching of the wasm failed\"}catch(A){_(A)}}QA($=\"data:application/octet-stream;base64,AGFzbQEAAAABhwZfYAF/AX9gAX8AYAJ/fwBgAn9/AX9gA39/fwF/YAV/f39/fwBgA39/fwBgBH9/f38AYAR/f39/AX9gBn9/f39/fwF/YAV/f39/fwF/YAZ/f39/f38AYAd/f39/f39/AGAIf39/f39/f38Bf2AAAGAHf39/f39/fwF/YAABf2ABfQF9YAV/fn5+fgBgA39+fwF+YAJ/fABgAn19AX1gBX9/f39+AX9gCH9/f39/f39/AGADf39/AX1gCn9/f39/f39/f38Bf2ABfwF8YAp/f39/f39/f39/AGAEf35+fwBgA39/fQBgB39/f39/fn4Bf2AGf39/f35+AX9gA39/fABgAX8BfWAFf319f38Bf2AGf39/f39/AXxgAXwBfWACfH8BfGAGf399fX9/AX9gBX9/fX1/AGACf38BfWACf38BfGAJf39/f39/f39/AX9gA39/fwF+YAx/f39/f39/f39/f38Bf2AFf39+f38AYAZ/fH9/f38Bf2ABfwF+YAZ/f39/fn8Bf2APf39/f39/f39/f39/f39/AGALf39/f39/f39/f38Bf2AEf39/fwF+YAJ/fQBgBX9/f398AX9gAAF8YA1/f39/f39/f39/f39/AGADf319AX1gBX99fX9/AX1gBH19fX0BfWACf34AYAd/f39/fH9/AX9gBH5+fn4Bf2AEf39/fQBgAn5/AX9gAX0Bf2ADfHx/AXxgAnx8AXxgB39/f39/f30BfWAHf39/f39/fwF9YAN/fn8AYAN/f30BfWAMf39/f39/f39/f3x/AX9gAn5+AXxgBX9/f319AGAGfHx8fHx8AXxgA3x8fAF8YAN9fX0BfWAEf39/fgF+YAZ/fX19fX8Bf2ACfn4BfWADfn5+AX9gA39/fgBgAn9/AX5gBH9/fH8BfGACf30BfWACfX8Bf2ACfH8Bf2AOf39/f39/f39/f3x/f38Bf2AFf399fX8Bf2ADf399AX9gBn9/f39/fQBgBn98fH9/fwBgBH9+f38Bf2AEf39+fgBgA39/fwF8AqECMAFhAWEADgFhAWIAAQFhAWMABgFhAWQACwFhAWUABQFhAWYABgFhAWcAAAFhAWgAFwFhAWkABAFhAWoAAgFhAWsABQFhAWwABgFhAW0AAAFhAW4ACAFhAW8ABAFhAXAANgFhAXEAAgFhAXIABgFh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RQRAA0AgAEECdEGQtwRqIABBzK8CEMgENgIAIABBAWoiAEEGRw0AC0HAtwRBAToAAEGotwRBkLcEKAIANgIAC0GQtwQhASACQQhqQZC3BBD5AkUNAkGotwQhASACQQhqQai3BBD5AkUNAkEYEDciAUUNAQsgASACKQMINwIAIAEgAikDGDcCECABIAIpAxA3AggMAQtBACEBCyACQSBqJAAgASEAQey4BEEBOgAAQei4BCAANgIAIAALyQoCBX8PfiMAQeAAayIFJAAgBEL///////8/gyEMIAIgBIVCgICAgICAgICAf4MhCiACQv///////z+DIg1CIIghDiAEQjCIp0H//wFxIQcCQAJAIAJCMIinQf//AXEiCUH//wFrQYKAfk8EQCAHQf//AWtBgYB+Sw0BCyABUCACQv///////////wCDIgtCgICAgICAwP//AFQgC0KAgICAgIDA//8AURtFBEAgAkKAgICAgIAghCEKDAILIANQIARC////////////AIMiAkKAgICAgIDA//8AVCACQoCAgICAgMD//wBRG0UEQCAEQoCAgICAgCCEIQogAyEBDAILIAEgC0KAgICAgIDA//8AhYRQBEAgAiADhFAEQEKAgICAgIDg//8AIQpCACEBDAMLIApCgICAgICAwP//AIQhCkIAIQEMAgsgAyACQoCAgICAgMD//wCFhFAEQCABIAuEIQJCACEBIAJQBEBCgICAgICA4P//ACEKDAMLIApCgICAgICAwP//AIQhCgwCCyABIAuEUARAQgAhAQwCCyACIAOEUARAQgAhAQwCCyALQv///////z9YBEAgBUHQAGogASANIAEgDSANUCIGG3kgBkEGdK18pyIGQQ9rEIgBQRAgBmshBiAFKQNYIg1CIIghDiAFKQNQIQELIAJC////////P1YNACAFQUBrIAMgDCADIAwgDFAiCBt5IAhBBnStfKciCEEPaxCIASAGIAhrQRBqIQYgBSkDSCEMIAUpA0AhAwsgA0IPhiILQoCA/v8PgyICIAFCIIgiBH4iECALQiCIIhMgAUL/////D4MiAX58Ig9CIIYiESABIAJ+fCILIBFUrSACIA1C/////w+DIg1+IhUgBCATfnwiESAMQg+GIhIgA0IxiIRC/////w+DIgMgAX58IhQgDyAQVK1CIIYgD0IgiIR8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aiAFIAZsbCABakoNCCAADwtB0LEEQYmNARAwQY+EARAwQYAdEDBBpQEQM0HxIBAwQdCOARAwEDQMCAtB0LEEQb+QARAwQY+EARAwQYAdEDBBpgEQM0HxIBAwQdCOARAwEDQMBwtB0LEEQfKSARAwQY+EARAwQYAdEDBBpwEQM0HxIBAwQaaTARAwEDQMBgtB0LEEQeeWARAwQY+EARAwQYAdEDBBqAEQM0HxIBAwQaaTARAwEDQMBQtB0LEEQdmYARAwQY+EARAwQYAdEDBBqQEQM0HxIBAwQZ6bARAwEDQMBAtB0LEEQYmdARAwQY+EARAwQYAdEDBBqgEQM0HxIBAwQZ6bARAwEDQMAwtB0LEEQbWfARAwQY+EARAwQYAdEDBBqwEQM0HxIBAwQb6gARAwEDQMAgtB0LEEQYKiARAwQY+EARAwQYAdEDBBrAEQM0HxIBAwQb6gARAwEDQMAQtB0LEEQbWlARAwQY+EARAwQYAdEDBBsAEQM0HxIBAwQauKARAwEDQLEAAACwkAIAAQUygCAAsJACAAIAE2AgALIgEBfyMAQRBrIgIkACAAIAEgARCEARD7BiACQRBqJAAgAAsLACAAQZS5BBDLAQsRACAAIAEgASgCACgCFBECAAsPACAAIAAoAgAoAhARAAALEQAgACABIAAoAgAoAiwRAwALDAAgACABLQAAOgAACwkAIAAgAToACwvMCQIEfgR/IwBB8ABrIgokACAEQv///////////wCDIQUCQAJAIAFQIgkgAkL///////////8AgyIGQoCAgICAgMD//wB9QoCAgICAgMCAgH9UIAZQG0UEQCADQgBSIAVCgICAgICAwP//AH0iCEKAgICAgIDAgIB/ViAIQoCAgICAgMCAgH9RGw0BCyAJIAZCgICAgICAwP//AFQgBkKAgICAgIDA//8AURtFBEAgAkKAgICAgIAghCEEIAEhAwwCCyADUCAFQoCAgICAgMD//wBUIAVCgICAgICAwP//AFEbRQRAIARCgICAgICAIIQhBAwCCyABIAZCgICAgICAwP//AIWEUARAQoCAgICAgOD//wAgAiABIAOFIAIgBIVCgICAgICAgICAf4WEUCIJGyEEQgAgASAJGyEDDAILIAMgBUKAgICAgIDA//8AhYRQDQEgASAGhFAEQCADIAWEQgBSDQIgASAD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AKIiAaIgAERpUO7gQpP5PqJEJx4P6IfAVr+goiABREI6BeFTVaU/oiAARIFeDP3//9+/okQAAAAAAADwP6CgoLYLFQAgACABELUGIABBBGogAUEEahBJCxIAIAAQMigCACAAKAIAa0ECdQsSACAAKAIAIgAEQCAAEMIEGgsLEQAgACABKAIAEMIENgIAIAALQgEBfyAAKAIAIQIgARBhIQAgAkEIaiIBEEYgAEsEfyABIAAQOigCAEEARwVBAAtFBEAQdQALIAJBCGogABA6KAIACzYAIAIEfyACBEADQCAAIAEoAgA2AgAgAEEEaiEAIAFBBGohASACQQFrIgINAAsLQQAFIAALGgsQACACBEAgACABIAIQPhoLC/oBAgN+An8jAEEQayIFJAACfiABvSIDQv///////////wCDIgJCgICAgICAgAh9Qv/////////v/wBYBEAgAkI8hiEEIAJCBIhCgICAgICAgIA8fAwBCyACQoCAgICAgID4/wBaBEAgA0I8hiEEIANCBIhCgICAgICAwP//AIQMAQsgAlAEQEIADAELIAUgAkIAIAOnZ0EgaiACQiCIp2cgAkKAgICAEFQbIgZBMWoQiAEgBSkDACEEIAUpAwhCgICAgICAwACFQYz4ACAGa61CMIaECyECIAAgBDcDACAAIAIgA0KAgICAgICAgIB/g4Q3AwggBUEQaiQAC0IBAX8gASACbCEEIAQCfyADKAJMQQBIBEAgACAEIAMQ3QMMAQsgACAEIAMQ3QMLIgBGBEAgAkEAIAEbDwsgACABbgt3ACAAIAEqAgAgApQ4AgAgACABKgIEIAKUOAIEIAAgASoCCCAClDgCCCAAIAEqAgwgApQ4AgwgACABKgIQIAKUOAIQIAAgASoCFCAClDgCFCAAIAEqAhggApQ4AhggACABKgIcIAKUOAIcIAAgASoCICAClDgCIAs9AQF/IAAoAgQiAARAIAAQ4gIEQAJAIABBCGoiASgCAARAIAEQ9QNBf0cNAQsgACAAKAIAKAIQEQEACwsLCxEAIAAgACgCAEEIazYCACAACy4BAX8gABDsAiAAKAIABEAgABDTBiAAEDIaIAAoAgAhASAAELoBGiABEDELIAALDwAgABDnAUEEaiABEHcaC1kBAn8jAEEQayICJAAgABCtAQRAIAAoAgAhAyAAEP0BGiAD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AwwBCwsgACABNgIECygBAX9BBBAGEIQEIgBB4PUDNgIAIABB9PUDNgIAIABB5PYDQQ0QBQALDwAgACAAKAIAKAIkEQAACxEAIAAgASABKAIAKAIgEQIACxEAIAAgASABKAIAKAIsEQIACwwAIABBgoaAIDYAAAugAQEEfyMAQRBrIgckAAJAIABFDQAgBCgCDCEGIAIgAWsiCEEASgRAIAAgASAIEMMCIAhHDQELIAYgAyABayIBa0EAIAEgBkgbIgFBAEoEQCAAIAcgASAFEKIHIgUQQCABEMMCIQYgBRA4GiABIAZHDQELIAMgAmsiAUEASgRAIAAgAiABEMMCIAFHDQELIAQQnQcgACEJCyAHQRBqJAAgCQsuAQF/IwBBEGsiASQAIAFBCGogABBAIAAQNUECdGoQdygCACEAIAFBEGokACAACysBAX8jAEEQayIBJAAgAUEIaiAAEEAgABA1ahB3KAIAIQAgAUEQaiQAIAALFgAgACABIAIgAyAAKAIAKAIgEQgAGgspACAAQQh0QYCA/AdxIABBGHRyIABBCHZBgP4DcSAAQRh2cnIgACABGwsOACAAKAIIQf////8HcQtQAQF+AkAgA0HAAHEEQCACIANBQGqtiCEBQgAhAgwBCyADRQ0AIAJBwAAgA2uthiABIAOtIgSIhCEBIAIgBIghAgsgACABNwMAIAAgAjcDCAvbAQIBfwJ+QQEhBAJAIABCAFIgAUL///////////8AgyIFQoCAgICAgMD//wBWIAVCgICAgICAwP//AFEbDQAgAkIAUiADQv///////////wCDIgZCgICAgICAwP//AFYgBkKAgICAgIDA//8AURsNACAAIAKEIAUgBoSEUARAQQAPCyABIAODQgBZBEBBfyEEIAAgAlQgASADUyABIANRGw0BIAAgAoUgASADhYRCAFIPC0F/IQQgACACViABIANVIAEgA1EbDQAgACAChSABIAOFhEIAUiEECyAEC1IBAn9B3PoDKAIAIgEgAEEHakF4cSICaiEAAkAgAkEAIAAgAU0bDQAgAD8AQRB0SwRAIAAQG0UNAQtB3PoDIAA2AgAgAQ8LQdiYBEEwNgIAQX8LogEBAn8jAEGgAWsiBCQAQX8hBSAEIAFBAWtBACABGzYClAEgBCAAIARBngFqIAEbIgA2ApABIARBAEGQARA5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IAAQyAFBAnRqGiAAKAIAIAAQyAFBAnRqGiAAKAIAGgsZACABQf////8DSwRAEPMBAAsgAUECdBBbCw0AIAAgASACQQIQpQQLTQEBfyAAKAIEIQEDQCABIAAoAghHBEAgACgCEBogACAAKAIIQQRrNgIIDAELCyAAKAIABEAgACgCEBogACgCACEBIAAQxQYaIAEQMQsLZAECfyMAQRBrIgUkACAFQQA2AgwgAEEMaiADENQBIAEEQCAAKAIQIAEQuQIhBAsgACAENgIAIAAgBCACQQJ0aiICNgIIIAAgAjYCBCAAEDwgBCABQQJ0ajYCACAFQRBqJAAgAAsKACAAKAIAEIsECwoAQej7ABCWAgALPwEBfyMAQRBrIgIkACAAEDIaIAIgATYCDCACQf////8HNgIIIAJBDGogAkEIahCVAigCACEAIAJBEGokACAACwkAIAAgARC5AgskACAAQQJPBH8gAEEEakF8cSIAIABBAWsiACAAQQJGGwVBAQsLnAEBBX8jAEEQayIFJAAgARDEBCECIwBBEGsiAyQAAkAgAkHv////A00EQAJAIAIQugMEQCAAIAIQnAEgACEEDAELIAAgACACEMECQQFqIgYQwAIiBBCVASAAIAYQtQEgACACEI8BCyAEIAEgAhDMASADQQA2AgwgBCACQQJ0aiADQQxqEKoBIANBEGokAAwBCxC0AQALIAVBEGokAAsTACAAIAEgAiAAKAIAKAIwEQQAC8YBAQZ/IwBBEGsiBCQAIAAQUygCACEFAn8gAigCACAAKAIAayIDQf////8HSQRAIANBAXQMAQtBfwsiA0EEIAMbIQMgASgCACEGIAAoAgAhByAFQc0CRgR/QQAFIAAoAgALIAMQ0AIiCARAIAVBzQJHBEAgABC5ARoLIARBzAI2AgQgACAEQQhqIAggBEEEahBmIgUQqQcgBRBlIAEgACgCACAGIAdrajYCACACIAAoAgAgA0F8cWo2AgAgBEEQaiQADwsQdQALJgAgACAAKAIYRSAAKAIQIAFyciIBNgIQIAAoAhQgAXEEQBB1AAsLEwAgACABQQAgACgCACgCNBEEAAsTACAAIAFBACAAKAIAKAIkEQQAC/ICAQJ/IwBBEGsiCiQAIAogADYCDAJAAkACQCADKAIAIAJHDQBBKyELIAAgCSgCYEcEQEEtIQsgCSgC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AigCCEEEajYCCCAAIAIQ6wIgAhC7AiADQSBqJAALCQAgACABOgBkC1oBAn8jAEEQayICJAAgAiABNgIMIAEgABDqAiIDTQRAIAAQyAEiACADQQF2SQRAIAIgAEEBdDYCCCACQQhqIAJBDGoQbygCACEDCyACQRBqJAAgAw8LELACAAsgAQF/QX8hAiAARSABQQRLcgR/QX8FIAAgATYCGEEACwsMACAAIAEgACABSBsLmAEBBH8jAEEQayIDJAACQCABEK0BRQRAIAAgASgCCDYCCCAAIAEpAgA3AgAMAQsgASgCACEEAkACQAJAIAEoAgQiAhD9AgRAIAAiASACEJwBDAELIAJBb0sNASAAIAIQmgJBAWoiBRBbIgEQlQEgACAFELUBIAAgAhCPAQsgASAEIAJBAWoQzQEMAQsQtAEACwsgA0EQaiQACxAAIAAoAgAgASgCAGtBA3ULLAAgACgCABogACgCACAAELoBQQN0ahogACgCACAAELoBQQN0ahogACgCABoLBwAgABBSGgsrACAAKAIAGiAAKAIAIAAQswFBDGxqGiAAKAIAGiAAKAIAIAAQbEEMbGoaCysBAX8gACABKAIANgIAIAEoAgAhAyAAIAE2AgggACADIAJBAnRqNgIEIAALKwAgACgCABogACgCACAAEMgBQQJ0ahogACgCABogACgCACAAEEZBAnRqGgtTAQN/IwBBEGsiAyQAIAMgACABELoCIgIoAgQhASACKAIIIQQDQCABIARGBEAgAhByIANBEGokAAUgABAyGiABEMQGIAIgAUEEaiIBNgIEDAELCwsLACAAIAFBCBDyAQudAQIEfwN9A0AgBEEDRwRAIAAgBEEFdGoiBisDELYhByAGKwMItiEIIAYrAwC2IQlBACEDA0AgA0EERwRAIANBAnQiBSACIARBBHRqaiAHIAEgBWoiBSoCIJQgCSAFKgIAlCAFKgIQIAiUkpI4AgAgA0EBaiEDDAELCyACIARBBHRqIgMgAyoCDCAGKwMYtpI4AgwgBEEBaiEEDAELCwsoACAAIAEQSSAAQQRqIAFBBGoQSSAAEDIgARAyEEkgABAyGiABEDIaC4IBAAJAIAJDAAAAAGAEQCAAKAIUsiACXkUNASAAKgIYIAIQ1QZBASABdLKUDwtB0LEEQae6ARAwQbC0ARAwQYAdEDBB6AEQM0HxIBAwQcm6ARAwEDQQAAALQdCxBEGJtgEQMEGwtAEQMEGAHRAwQekBEDNB8SAQMEG+uwEQMBA0EAAAC55qAw1/BH0JfCMAQeABayIMJAAgDEKAgICAgIDgrcAANwPYASAMQoCAgICAgOCtwAA3A8gBIAxCgICAgICAwKzAADcDuAEgDEKAgICAgIDArMAANwPQASAMQoCAgICAgOCtwAA3A8ABIAxCgICAgICA4K3AADcDsAEgDEKAgICAgIDArMAANwOoASAMQoCAgICAgMCswAA3A6ABA0AgDUEERwRAIA1BBHQiDiAMQeAAamoiESAJIA5qIg4rAwA5AwAgESAOKwMIOQMIIA1BAWohDQwBCwsgDEGgAWohFSAMQeAAaiEWIAxBEGohEkEAIQ1BCEEIELEBIRNBCEEBELEBIQ9BCEEBELEBIRAgDygCACEXIBMoAgAhGANAIA1BBEcEQCAYIA1BB3RqIgkgFSANQQR0IhRqIg4rAwA5AwAgDisDCCEdIAlCADcDKCAJQgA3AyAgCUIANwMYIAlCgICAgICAgPg/NwMQIAkgHTkDCCAJIBQgFmoiESsDACAOKwMAmqI5AzAgESsDACEdIA4rAwghHiAJQgA3A1AgCUIANwNIIAlBQGtCADcDACAJIB0gHpqiOQM4IAkgDisDADkDWCAOKwMIIR0gCUKAgICAgICA+D83A2ggCSAdOQNgIAkgESsDCCAOKwMAmqI5A3AgCSARKwMIIA4rAwiaojkDeCAUIBdqIgkgESsDADkDACAJIBErAwg5AwggDUEBaiENDAELCyATEOQCGiAQIBMgDxCFBBogECgCACEOQQAhCQNAIAlBAkcEQCASIAlBGGwiEWoiDSAOIBFqIhErAwA5AwAgDSARKwMIOQMIIA0gESsDEDkDECAJQQFqIQkMAQsLIBIgDisDMDkDMCAOKwM4IR0gEkFAa0KAgICAgICA+D83AwAgEiAdOQM4IBMQQiAPEEIgEBBCAn8gDCsDcCIdIAwrA4ABIh6hIh8gH6IgDCsDeCIfIAwrA4gBIiChIiEgIaKgIiGZRAAAAAAAAOBBYwRAICGqDAELQYCAgIB4CyEJAn8CfyAMKwOQASIhIAwrA2AiIqEiJCAkoiAMKwOYASIkIAwrA2giJaEiIyAjoqAiI5lEAAAAAAAA4EFjBEAgI6oMAQtBgICAgHgLIg4gCSAJIA5IG7cgCqIgCqIiI5lEAAAAAAAA4EFjBEAgI6oMAQtBgICAgHgLIRECfyAiIB2hIh0gHaIgJSAfoSIdIB2ioCIdmUQAAAAAAADgQWMEQCAdqgwBC0GAgICAeAshCQJ/An8gHiAhoSIdIB2iICAgJKEiHSAdoqAiHZlEAAAAAAAA4EFjBEAgHaoMAQtBgICAgHgLIg4gCSAJIA5IG7cgCqIgCqIiHZlEAAAAAAAA4EFjBEAgHaoMAQtBgICAgHgLIQ4CQCAARQRAIAIhCQNAIAMgCSINSgRAIA1BAXQhCSANIA1sIA5IDQELCyACIQ4DQCAOIgkgA04NAiAJQQF0IQ4gCSAJbCARSA0ACwwBCyACIQkDQCAOIAkgCSINbEECdEoEQCANQQF0IQkgAyANSg0BCwsgAiEOA0AgDiIJIAlsQQJ0IBFODQEgCUEBdCEOIAMgCUoNAAsLIApEAAAAAAAAJECiIR1EAAAAAAAA8D8gCqFEAAAAAAAA4D+iRAAAAAAAACRAoiEKIAkgAyADIAlKGyIJIAJtIREgDSADIAMgDUobIgMgAm0hEiACIAJsIRMCQAJAAkACQCABRQRAIBNBA2wiE0EEEIYDIg5FDQQCQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCAHDg8AAQIDBAUGBwgJCgsFBQUOCyAJQQAgCUEAShshDyADQQAgA0EAShshECAKRAAAAAAAAFlAoCEeIAO3ISEgCbchIkEAIQEDQCABIA9GDQwgHiAdIAG3RAAAAAAAAOA/oKIgIqOgIQpBACENA0AgDSAQRwRAIAwrA1AgDCsDQCAeIB0gDbdEAAAAAAAA4D+goiAho6AiH6IgCiAMKwNIoqCgIiBEAAAAAAAAAABhDREgDCAMKwMgIAwrAxAgH6IgCiAMKwMYoqCgICCjtiIZOAIMIAwgDCsDOCAMKwMoIB+iIAogDCsDMKKgoCAgo7YiGjgCCCAIIBkgGiAMQQxqIAxBCGoQcRogDCoCDCEZAn8gAEEBRgRAAn8gDCoCCEMAAIA/kiIai0MAAABPXQRAIBqoDAELQYCAgIB4C0ECbUEBdCEDAn8gGUMAAIA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4C0ECbUEBdAwBCwJ/IAwqAghDAAAAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAshAyAZQwAAAD+SIhmLQwAAAE9dBEAgGagMAQtBgICAgHgLIglBAEggBSAJTHIgA0EASCADIAZOcnJFBEAgDiABIBFtIAJsIA0gEm1qQQxsaiIHIAcoAgAgBCADIAVsIAlqQQNsaiIDLQACajYCACAHIAcoAgQgAy0AAWo2AgQgByAHKAIIIAMtAABqNgIICyANQQFqIQ0MAQsLIAFBAWohAQwACwALIAlBACAJQQBKGyEPIANBACADQQBKGyEQIApEAAAAAAAAWUCgIR4gA7chISAJtyEiQQAhAQNAIAEgD0YNCyAeIB0gAbdEAAAAAAAA4D+goiAio6AhCkEAIQ0DQCANIBBHBEAgDCsDUCAMKwNAIB4gHSANt0QAAAAAAADgP6CiICGjoCIfoiAKIAwrA0iioKAiIEQAAAAAAAAAAGENECAMIAwrAyAgDCsDECAfoiAKIAwrAxiioKAgIKO2Ihk4AgwgDCAMKwM4IAwrAyggH6IgCiAMKwMwoqCgICCjtiIaOAIIIAggGSAaIAxBDGogDEEIahBxGiAMKgIMIRkCfyAAQQFGBEACfyAMKgIIQwAAgD+SIhqLQwAAAE9dBEAgGqgMAQtBgICAgHgLQQJtQQF0IQMCfyAZQwAAgD+SIhmLQwAAAE9dBEAgGagMAQtBgICAgHgLQQJtQQF0DAELAn8gDCoCCEMAAAA/kiIai0MAAABPXQRAIBqoDAELQYCAgIB4CyEDIBlDAAAAP5IiGYtDAAAAT10EQCAZqAwBC0GAgICAeAsiCUEASCAFIAlMciADQQBIIAMgBk5yckUEQCAOIAEgEW0gAmwgDSASbWpBDGxqIgcgBygCACAEIAMgBWwgCWpBA2xqIgMtAABqNgIAIAcgBygCBCADLQABajYCBCAHIAcoAgggAy0AAmo2AggLIA1BAWohDQwBCwsgAUEBaiEBDAALAAsgCUEAIAlBAEobIQ8gA0EAIANBAEobIRAgCkQAAAAAAABZQKAhHiADtyEhIAm3ISJBACEBA0AgASAPRg0KIB4gHSABt0QAAAAAAADgP6CiICKjoCEKQQAhDQNAIA0gEEcEQCAMKwNQIAwrA0AgHiAdIA23RAAAAAAAAOA/oKIgIaOgIh+iIAogDCsDSKKgoCIgRAAAAAAAAAAAYQ0PIAwgDCsDICAMKwMQIB+iIAogDCsDGKKgoCAgo7YiGTgCDCAMIAwrAzggDCsDKCAfoiAKIAwrAzCioKAgIKO2Iho4AgggCCAZIBogDEEMaiAMQQhqEHEaIAwqAgwhGQJ/IABBAUYEQAJ/IAwqAghDAACAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAtBAm1BAXQhAwJ/IBlDAACAP5IiGYtDAAAAT10EQCAZqAwBC0GAgICAeAtBAm1BAXQMAQsCfyAMKgIIQwAAAD+SIhqLQwAAAE9dBEAgGqgMAQtBgICAgHgLIQMgGUMAAAA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4CyIJQQBIIAUgCUxyIANBAEggAyAGTnJyRQRAIA4gASARbSACbCANIBJtakEMbGoiByAHKAIAIAQgAyAFbCAJakECdGoiAy0AAmo2AgAgByAHKAIEIAMtAAFqNgIEIAcgBygCCCADLQAAajYCCAsgDUEBaiENDAELCyABQQFqIQEMAAsACyAJQQAgCUEAShshDyADQQAgA0EAShshECAKRAAAAAAAAFlAoCEeIAO3ISEgCbchIkEAIQEDQCABIA9GDQkgHiAdIAG3RAAAAAAAAOA/oKIgIqOgIQpBACENA0AgDSAQRwRAIAwrA1AgDCsDQCAeIB0gDbdEAAAAAAAA4D+goiAho6AiH6IgCiAMKwNIoqCgIiBEAAAAAAAAAABhDQ4gDCAMKwMgIAwrAxAgH6IgCiAMKwMYoqCgICCjtiIZOAIMIAwgDCsDOCAMKwMoIB+iIAogDCsDMKKgoCAgo7YiGjgCCCAIIBkgGiAMQQxqIAxBCGoQcRogDCoCDCEZAn8gAEEBRgRAAn8gDCoCCEMAAIA/kiIai0MAAABPXQRAIBqoDAELQYCAgIB4C0ECbUEBdCEDAn8gGUMAAIA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4C0ECbUEBdAwBCwJ/IAwqAghDAAAAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAshAyAZQwAAAD+SIhmLQwAAAE9dBEAgGagMAQtBgICAgHgLIglBAEggBSAJTHIgA0EASCADIAZOcnJFBEAgDiABIBFtIAJsIA0gEm1qQQxsaiIHIAcoAgAgBCADIAVsIAlqQQJ0aiIDLQAAajYCACAHIAcoAgQgAy0AAWo2AgQgByAHKAIIIAMtAAJqNgIICyANQQFqIQ0MAQsLIAFBAWohAQwACwALIAlBACAJQQBKGyEPIANBACADQQBKGyEQIApEAAAAAAAAWUCgIR4gA7chISAJtyEiQQAhAQNAIAEgD0YNCCAeIB0gAbdEAAAAAAAA4D+goiAio6AhCkEAIQ0DQCANIBBHBEAgDCsDUCAMKwNAIB4gHSANt0QAAAAAAADgP6CiICGjoCIfoiAKIAwrA0iioKAiIEQAAAAAAAAAAGENDSAMIAwrAyAgDCsDECAfoiAKIAwrAxiioKAgIKO2Ihk4AgwgDCAMKwM4IAwrAyggH6IgCiAMKwMwoqCgICCjtiIaOAIIIAggGSAaIAxBDGogDEEIahBxGiAMKgIMIRkCfyAAQQFGBEACfyAMKgIIQwAAgD+SIhqLQwAAAE9dBEAgGqgMAQtBgICAgHgLQQJtQQF0IQMCfyAZQwAAgD+SIhmLQwAAAE9dBEAgGagMAQtBgICAgHgLQQJtQQF0DAELAn8gDCoCCEMAAAA/kiIai0MAAABPXQRAIBqoDAELQYCAgIB4CyEDIBlDAAAAP5IiGYtDAAAAT10EQCAZqAwBC0GAgICAeAsiCUEASCAFIAlMciADQQBIIAMgBk5yckUEQCAOIAEgEW0gAmwgDSASbWpBDGxqIgcgBygCACAEIAMgBWwgCWpBAnRqIgMtAAFqNgIAIAcgBygCBCADLQACajYCBCAHIAcoAgggAy0AA2o2AggLIA1BAWohDQwBCwsgAUEBaiEBDAALAAsgCUEAIAlBAEobIQ8gA0EAIANBAEobIRAgCkQAAAAAAABZQKAhHiADtyEhIAm3ISJBACEBA0AgASAPRg0HIB4gHSABt0QAAAAAAADgP6CiICKjoCEKQQAhDQNAIA0gEEcEQCAMKwNQIAwrA0AgHiAdIA23RAAAAAAAAOA/oKIgIaOgIh+iIAogDCsDSKKgoCIgRAAAAAAAAAAAYQ0MIAwgDCsDICAMKwMQIB+iIAogDCsDGKKgoCAgo7YiGTgCDCAMIAwrAzggDCsDKCAfoiAKIAwrAzCioKAgIKO2Iho4AgggCCAZIBogDEEMaiAMQQhqEHEaIAwqAgwhGQJ/IABBAUYEQAJ/IAwqAghDAACAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAtBAm1BAXQhAwJ/IBlDAACAP5IiGYtDAAAAT10EQCAZqAwBC0GAgICAeAtBAm1BAXQMAQsCfyAMKgIIQwAAAD+SIhqLQwAAAE9dBEAgGqgMAQtBgICAgHgLIQMgGUMAAAA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4CyIJQQBIIAUgCUxyIANBAEggAyAGTnJyRQRAIA4gASARbSACbCANIBJtakEMbGoiByAEIAMgBWwgCWpqLQAAIgMgBygCAGo2AgAgByADIAcoAgRqNgIEIAcgAyAHKAIIajYCCAsgDUEBaiENDAELCyABQQFqIQEMAAsACyAJQQAgCUEAShshDyADQQAgA0EAShshECAKRAAAAAAAAFlAoCEeIAO3ISEgCbchIkEAIQEDQCABIA9GDQYgHiAdIAG3RAAAAAAAAOA/oKIgIqOgIQpBACENA0AgDSAQRwRAIAwrA1AgDCsDQCAeIB0gDbdEAAAAAAAA4D+goiAho6AiH6IgCiAMKwNIoqCgIiBEAAAAAAAAAABhDQsgDCAMKwMgIAwrAxAgH6IgCiAMKwMYoqCgICCjtiIZOAIMIAwgDCsDOCAMKwMoIB+iIAogDCsDMKKgoCAgo7YiGjgCCCAIIBkgGiAMQQxqIAxBCGoQcRogDCoCDCEZAn8gAEEBRgRAAn8gDCoCCEMAAIA/kiIai0MAAABPXQRAIBqoDAELQYCAgIB4C0ECbUEBdCEDAn8gGUMAAIA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4C0ECbUEBdAwBCwJ/IAwqAghDAAAAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAshAyAZQwAAAD+SIhmLQwAAAE9dBEAgGagMAQtBgICAgHgLIglBAEggBSAJTHIgA0EASCADIAZOcnJFBEAgDiABIBFtIAJsIA0gEm1qQQxsaiIHIAcoAgAgBCADIAVsIAlqQQJ0aiIDLQADajYCACAHIAcoAgQgAy0AAmo2AgQgByAHKAIIIAMtAAFqNgIICyANQQFqIQ0MAQsLIAFBAWohAQwACwALIAlBACAJQQBKGyEPIANBACADQQBKGyEQIApEAAAAAAAAWUCgIR4gA7chISAJtyEiQQAhAQNAIAEgD0YNBSAeIB0gAbdEAAAAAAAA4D+goiAio6AhCkEAIQ0DQCANIBBHBEAgDCsDUCAMKwNAIB4gHSANt0QAAAAAAADgP6CiICGjoCIfoiAKIAwrA0iioKAiIEQAAAAAAAAAAGENCiAMIAwrAyAgDCsDECAfoiAKIAwrAxiioKAgIKO2Ihk4AgwgDCAMKwM4IAwrAyggH6IgCiAMKwMwoqCgICCjtiIaOAIIIAggGSAaIAxBDGogDEEIahBxGiAMKgIMIRkCfyAAQQFGBEACfyAMKgIIQwAAgD+SIhqLQwAAAE9dBEAgGqgMAQtBgICAgHgLQQJtQQF0IQMCfyAZQwAAgD+SIhmLQwAAAE9dBEAgGagMAQtBgICAgHgLQQJtQQF0DAELAn8gDCoCCEMAAAA/kiIai0MAAABPXQRAIBqoDAELQYCAgIB4CyEDIBlDAAAAP5IiGYtDAAAAT10EQCAZqAwBC0GAgICAeAsiB0EASCAFIAdMciADQQBIIAMgBk5yckUEQAJ/IAQgAyAFbCIDIAdqQQF0ai0AAUEQa7JDfwqVQ5QiGSAEIAdB/v8DcSADakEBdGoiAy0AAEGAAWuyIhpDThoBRJSSIhuLQwAAAE9dBEAgG6gMAQtBgICAgHgLIQcgAy0AAiEJIA4gASARbSACbCANIBJtakEMbGoiAyADKAIAIAdBCHUiB0EAIAdBAEobIgdB/wEgB0H/AUkbajYCACADIAMoAggCfyAZIAlBgAFrsiIbQ6BKzEOUkiIci0MAAABPXQRAIByoDAELQYCAgIB4C0EIdSIHQQAgB0EAShsiB0H/ASAHQf8BSRtqNgIIIAMgAygCBAJ/IBtDuB5Qw5QgGSAaQ/6UyMKUkpIiGYtDAAAAT10EQCAZqAwBC0GAgICAeAtBCHUiA0EAIANBAEobIgNB/wEgA0H/AUkbajYCBAsgDUEBaiENDAELCyABQQFqIQEMAAsACyAJQQAgCUEAShshDyADQQAgA0EAShshECAKRAAAAAAAAFlAoCEeIAO3ISEgCbchIkEAIQEDQCABIA9GDQQgHiAdIAG3RAAAAAAAAOA/oKIgIqOgIQpBACENA0AgDSAQRwRAIAwrA1AgDCsDQCAeIB0gDbdEAAAAAAAA4D+goiAho6AiH6IgCiAMKwNIoqCgIiBEAAAAAAAAAABhDQkgDCAMKwMgIAwrAxAgH6IgCiAMKwMYoqCgICCjtiIZOAIMIAwgDCsDOCAMKwMoIB+iIAogDCsDMKKgoCAgo7YiGjgCCCAIIBkgGiAMQQxqIAxBCGoQcRogDCoCDCEZAn8gAEEBRgRAAn8gDCoCCEMAAIA/kiIai0MAAABPXQRAIBqoDAELQYCAgIB4C0ECbUEBdCEDAn8gGUMAAIA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4C0ECbUEBdAwBCwJ/IAwqAghDAAAAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAshAyAZQwAAAD+SIhmLQwAAAE9dBEAgGagMAQtBgICAgHgLIgdBAEggBSAHTHIgA0EASCADIAZOcnJFBEACfyAEIAMgBWwiAyAHakEBdGotAABBEGuyQ38KlUOUIhkgB0H+/wNxIANqQQF0IARqIgMtAAFBgAFrsiIaQ04aAUSUkiIbi0MAAABPXQRAIBuoDAELQYCAgIB4CyEHIAMtAAMhCSAOIAEgEW0gAmwgDSASbWpBDGxqIgMgAygCACAHQQh1IgdBACAHQQBKGyIHQf8BIAdB/wFJG2o2AgAgAyADKAIIAn8gGSAJQYABa7IiG0OgSsxDlJIiHItDAAAAT10EQCAcqAwBC0GAgICAeAtBCHUiB0EAIAdBAEobIgdB/wEgB0H/AUkbajYCCCADIAMoAgQCfyAbQ7geUMOUIBkgGkP+lMjClJKSIhmLQwAAAE9dBEAgGagMAQtBgICAgHgLQQh1IgNBACADQQBKGyIDQf8BIANB/wFJG2o2AgQLIA1BAWohDQwBCwsgAUEBaiEBDAALAAsgCUEAIAlBAEobIQ8gA0EAIANBAEobIRAgCkQAAAAAAABZQKAhHiADtyEhIAm3ISJBACEBA0AgASAPRg0DIB4gHSABt0QAAAAAAADgP6CiICKjoCEKQQAhDQNAIA0gEEcEQCAMKwNQIAwrA0AgHiAdIA23RAAAAAAAAOA/oKIgIaOgIh+iIAogDCsDSKKgoCIgRAAAAAAAAAAAYQ0IIAwgDCsDICAMKwMQIB+iIAogDCsDGKKgoCAgo7YiGTgCDCAMIAwrAzggDCsDKCAfoiAKIAwrAzCioKAgIKO2Iho4AgggCCAZIBogDEEMaiAMQQhqEHEaIAwqAgwhGQJ/IABBAUYEQAJ/IAwqAghDAACAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAtBAm1BAXQhAwJ/IBlDAACAP5IiGYtDAAAAT10EQCAZqAwBC0GAgICAeAtBAm1BAXQMAQsCfyAMKgIIQwAAAD+SIhqLQwAAAE9dBEAgGqgMAQtBgICAgHgLIQMgGUMAAAA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4CyIJQQBIIAUgCUxyIANBAEggAyAGTnJyRQRAIA4gASARbSACbCANIBJtakEMbGoiByAHKAIAIAQgAyAFbCAJakEBdGoiAy0AASIJQQN0QQRyQfwBcWo2AgAgByAHKAIIIAMtAAAiA0EEckH8AXFqNgIIIAcgBygCBCADQQV0IAlBA3ZyQQJyQf4BcWo2AgQLIA1BAWohDQwBCwsgAUEBaiEBDAALAAsgCUEAIAlBAEobIQ8gA0EAIANBAEobIRAgCkQAAAAAAABZQKAhHiADtyEhIAm3ISJBACEBA0AgASAPRg0CIB4gHSABt0QAAAAAAADgP6CiICKjoCEKQQAhDQNAIA0gEEcEQCAMKwNQIAwrA0AgHiAdIA23RAAAAAAAAOA/oKIgIaOgIh+iIAogDCsDSKKgoCIgRAAAAAAAAAAAYQ0HIAwgDCsDICAMKwMQIB+iIAogDCsDGKKgoCAgo7YiGTgCDCAMIAwrAzggDCsDKCAfoiAKIAwrAzCioKAgIKO2Iho4AgggCCAZIBogDEEMaiAMQQhqEHEaIAwqAgwhGQJ/IABBAUYEQAJ/IAwqAghDAACAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAtBAm1BAXQhAwJ/IBlDAACAP5IiGYtDAAAAT10EQCAZqAwBC0GAgICAeAtBAm1BAXQMAQsCfyAMKgIIQwAAAD+SIhqLQwAAAE9dBEAgGqgMAQtBgICAgHgLIQMgGUMAAAA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4CyIJQQBIIAUgCUxyIANBAEggAyAGTnJyRQRAIA4gASARbSACbCANIBJtakEMbGoiByAHKAIAIAQgAyAFbCAJakEBdGoiAy0AASIJQQJ0QQRyQfwBcWo2AgAgByAHKAIIIAMtAAAiA0EEckH8AXFqNgIIIAcgBygCBCADQQV0IAlBA3ZyQQRyQfwBcWo2AgQLIA1BAWohDQwBCwsgAUEBaiEBDAALAAsgCUEAIAlBAEobIQ8gA0EAIANBAEobIRAgCkQAAAAAAABZQKAhHiADtyEhIAm3ISJBACEBA0AgASAPRg0BIB4gHSABt0QAAAAAAADgP6CiICKjoCEKQQAhDQNAIA0gEEcEQCAMKwNQIAwrA0AgHiAdIA23RAAAAAAAAOA/oKIgIaOgIh+iIAogDCsDSKKgoCIgRAAAAAAAAAAAYQ0GIAwgDCsDICAMKwMQIB+iIAogDCsDGKKgoCAgo7YiGTgCDCAMIAwrAzggDCsDKCAfoiAKIAwrAzCioKAgIKO2Iho4AgggCCAZIBogDEEMaiAMQQhqEHEaIAwqAgwhGQJ/IABBAUYEQAJ/IAwqAghDAACAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAtBAm1BAXQhAwJ/IBlDAACAP5IiGYtDAAAAT10EQCAZqAwBC0GAgICAeAtBAm1BAXQMAQsCfyAMKgIIQwAAAD+SIhqLQwAAAE9dBEAgGqgMAQtBgICAgHgLIQMgGUMAAAA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4CyIJQQBIIAUgCUxyIANBAEggAyAGTnJyRQRAIA4gASARbSACbCANIBJtakEMbGoiByAHKAIAIAQgAyAFbCAJakEBdGoiAy0AAUHwAXFqQQhqNgIAIAcgBygCCCADLQAAIgNBCHJB+AFxajYCCCAHIAcoAgQgA0EEdEEIckH4AXFqNgIECyANQQFqIQ0MAQsLIAFBAWohAQwACwALIBEgEmwhAEEAIQlBACENA0AgDSATRg0EIAsgDWogDiANQQJ0aigCACAAbjoAACANQQFqIQ0MAAsACyATQQQQhgMiDkUNAwJAIAdBAU0EQCAJQQAgCUEAShshDyADQQAgA0EAShshECAKRAAAAAAAAFlAoCEeIAO3ISEgCbchIkEAIQEDQCABIA9GDQIgHiAdIAG3RAAAAAAAAOA/oKIgIqOgIQpBACENA0AgDSAQRwRAIAwrA1AgDCsDQCAeIB0gDbdEAAAAAAAA4D+goiAho6AiH6IgCiAMKwNIoqCgIiBEAAAAAAAAAABhDQYgDCAMKwMgIAwrAxAgH6IgCiAMKwMYoqCgICCjtiIZOAIMIAwgDCsDOCAMKwMoIB+iIAogDCsDMKKgoCAgo7YiGjgCCCAIIBkgGiAMQQxqIAxBCGoQcRogDCoCDCEZAn8gAEEBRgRAAn8gDCoCCEMAAIA/kiIai0MAAABPXQRAIBqoDAELQYCAgIB4C0ECbUEBdCEDAn8gGUMAAIA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4C0ECbUEBdAwBCwJ/IAwqAghDAAAAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAshAyAZQwAAAD+SIhmLQwAAAE9dBEAgGagMAQtBgICAgHgLIgdBAEggBSAHTHIgA0EASCADIAZOcnJFBEAgDiABIBFtIAJsIA0gEm1qQQJ0aiIJIAkoAgAgBCADIAVsIAdqQQNsaiIDLQABIAMtAABqIAMtAAJqQQNuajYCAAsgDUEBaiENDAELCyABQQFqIQEMAAsACyAHQX5xQQJGBEAgCUEAIAlBAEobIQ8gA0EAIANBAEobIRAgCkQAAAAAAABZQKAhHiADtyEhIAm3ISJBACEBA0AgASAPRg0CIB4gHSABt0QAAAAAAADgP6CiICKjoCEKQQAhDQNAIA0gEEcEQCAMKwNQIAwrA0AgHiAdIA23RAAAAAAAAOA/oKIgIaOgIh+iIAogDCsDSKKgoCIgRAAAAAAAAAAAYQ0GIAwgDCsDICAMKwMQIB+iIAogDCsDGKKgoCAgo7YiGTgCDCAMIAwrAzggDCsDKCAfoiAKIAwrAzCioKAgIKO2Iho4AgggCCAZIBogDEEMaiAMQQhqEHEaIAwqAgwhGQJ/IABBAUYEQAJ/IAwqAghDAACAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAtBAm1BAXQhAwJ/IBlDAACAP5IiGYtDAAAAT10EQCAZqAwBC0GAgICAeAtBAm1BAXQMAQsCfyAMKgIIQwAAAD+SIhqLQwAAAE9dBEAgGqgMAQtBgICAgHgLIQMgGUMAAAA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4CyIHQQBIIAUgB0xyIANBAEggAyAGTnJyRQRAIA4gASARbSACbCANIBJtakECdGoiCSAJKAIAIAQgAyAFbCAHakECdGoiAy0AASADLQAAaiADLQACakEDbmo2AgALIA1BAWohDQwBCwsgAUEBaiEBDAALAAsgB0F9cUEERgRAIAlBACAJQQBKGyEPIANBACADQQBKGyEQIApEAAAAAAAAWUCgIR4gA7chISAJtyEiQQAhAQNAIAEgD0YNAiAeIB0gAbdEAAAAAAAA4D+goiAio6AhCkEAIQ0DQCANIBBHBEAgDCsDUCAMKwNAIB4gHSANt0QAAAAAAADgP6CiICGjoCIfoiAKIAwrA0iioKAiIEQAAAAAAAAAAGENBiAMIAwrAyAgDCsDECAfoiAKIAwrAxiioKAgIKO2Ihk4AgwgDCAMKwM4IAwrAyggH6IgCiAMKwMwoqCgICCjtiIaOAIIIAggGSAaIAxBDGogDEEIahBxGiAMKgIMIRkCfyAAQQFGBEACfyAMKgIIQwAAgD+SIhqLQwAAAE9dBEAgGqgMAQtBgICAgHgLQQJtQQF0IQMCfyAZQwAAgD+SIhmLQwAAAE9dBEAgGagMAQtBgICAgHgLQQJtQQF0DAELAn8gDCoCCEMAAAA/kiIai0MAAABPXQRAIBqoDAELQYCAgIB4CyEDIBlDAAAAP5IiGYtDAAAAT10EQCAZqAwBC0GAgICAeAsiB0EASCAFIAdMciADQQBIIAMgBk5yckUEQCAOIAEgEW0gAmwgDSASbWpBAnRqIgkgCSgCACAEIAMgBWwgB2pBAnRqIgMtAAIgAy0AAWogAy0AA2pBA25qNgIACyANQQFqIQ0MAQsLIAFBAWohAQwACwALAkACQAJAAkACQAJAIAdBBWsOCgAHAQIDBAUAAAAHCyAJQQAgCUEAShshDyADQQAgA0EAShshECAKRAAAAAAAAFlAoCEeIAO3ISEgCbchIkEAIQEDQCABIA9GDQYgHiAdIAG3RAAAAAAAAOA/oKIgIqOgIQpBACENA0AgDSAQRwRAIAwrA1AgDCsDQCAeIB0gDbdEAAAAAAAA4D+goiAho6AiH6IgCiAMKwNIoqCgIiBEAAAAAAAAAABhDQogDCAMKwMgIAwrAxAgH6IgCiAMKwMYoqCgICCjtiIZOAIMIAwgDCsDOCAMKwMoIB+iIAogDCsDMKKgoCAgo7YiGjgCCCAIIBkgGiAMQQxqIAxBCGoQcRogDCoCDCEZAn8gAEEBRgRAAn8gDCoCCEMAAIA/kiIai0MAAABPXQRAIBqoDAELQYCAgIB4C0ECbUEBdCEDAn8gGUMAAIA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4C0ECbUEBdAwBCwJ/IAwqAghDAAAAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAshAyAZQwAAAD+SIhmLQwAAAE9dBEAgGagMAQtBgICAgHgLIgdBAEggBSAHTHIgA0EASCADIAZOcnJFBEAgDiABIBFtIAJsIA0gEm1qQQJ0aiIJIAkoAgAgBCADIAVsIAdqai0AAGo2AgALIA1BAWohDQwBCwsgAUEBaiEBDAALAAsgCUEAIAlBAEobIQ8gA0EAIANBAEobIRAgCkQAAAAAAABZQKAhHiADtyEhIAm3ISJBACEBA0AgASAPRg0FIB4gHSABt0QAAAAAAADgP6CiICKjoCEKQQAhDQNAIA0gEEcEQCAMKwNQIAwrA0AgHiAdIA23RAAAAAAAAOA/oKIgIaOgIh+iIAogDCsDSKKgoCIgRAAAAAAAAAAAYQ0JIAwgDCsDICAMKwMQIB+iIAogDCsDGKKgoCAgo7YiGTgCDCAMIAwrAzggDCsDKCAfoiAKIAwrAzCioKAgIKO2Iho4AgggCCAZIBogDEEMaiAMQQhqEHEaIAwqAgwhGQJ/IABBAUYEQAJ/IAwqAghDAACAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAtBAm1BAXQhAwJ/IBlDAACAP5IiGYtDAAAAT10EQCAZqAwBC0GAgICAeAtBAm1BAXQMAQsCfyAMKgIIQwAAAD+SIhqLQwAAAE9dBEAgGqgMAQtBgICAgHgLIQMgGUMAAAA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4CyIHQQBIIAUgB0xyIANBAEggAyAGTnJyRQRAIA4gASARbSACbCANIBJtakECdGoiCSAJKAIAIAQgAyAFbCAHakEBdGotAAFqNgIACyANQQFqIQ0MAQsLIAFBAWohAQwACwALIAlBACAJQQBKGyEPIANBACADQQBKGyEQIApEAAAAAAAAWUCgIR4gA7chISAJtyEiQQAhAQNAIAEgD0YNBCAeIB0gAbdEAAAAAAAA4D+goiAio6AhCkEAIQ0DQCANIBBHBEAgDCsDUCAMKwNAIB4gHSANt0QAAAAAAADgP6CiICGjoCIfoiAKIAwrA0iioKAiIEQAAAAAAAAAAGENCCAMIAwrAyAgDCsDECAfoiAKIAwrAxiioKAgIKO2Ihk4AgwgDCAMKwM4IAwrAyggH6IgCiAMKwMwoqCgICCjtiIaOAIIIAggGSAaIAxBDGogDEEIahBxGiAMKgIMIRkCfyAAQQFGBEACfyAMKgIIQwAAgD+SIhqLQwAAAE9dBEAgGqgMAQtBgICAgHgLQQJtQQF0IQMCfyAZQwAAgD+SIhmLQwAAAE9dBEAgGagMAQtBgICAgHgLQQJtQQF0DAELAn8gDCoCCEMAAAA/kiIai0MAAABPXQRAIBqoDAELQYCAgIB4CyEDIBlDAAAAP5IiGYtDAAAAT10EQCAZqAwBC0GAgICAeAsiB0EASCAFIAdMciADQQBIIAMgBk5yckUEQCAOIAEgEW0gAmwgDSASbWpBAnRqIgkgCSgCACAEIAMgBWwgB2pBAXRqLQAAajYCAAsgDUEBaiENDAELCyABQQFqIQEMAAsACyAJQQAgCUEAShshDyADQQAgA0EAShshECAKRAAAAAAAAFlAoCEeIAO3ISEgCbchIkEAIQEDQCABIA9GDQMgHiAdIAG3RAAAAAAAAOA/oKIgIqOgIQpBACENA0AgDSAQRwRAIAwrA1AgDCsDQCAeIB0gDbdEAAAAAAAA4D+goiAho6AiH6IgCiAMKwNIoqCgIiBEAAAAAAAAAABhDQcgDCAMKwMgIAwrAxAgH6IgCiAMKwMYoqCgICCjtiIZOAIMIAwgDCsDOCAMKwMoIB+iIAogDCsDMKKgoCAgo7YiGjgCCCAIIBkgGiAMQQxqIAxBCGoQcRogDCoCDCEZAn8gAEEBRgRAAn8gDCoCCEMAAIA/kiIai0MAAABPXQRAIBqoDAELQYCAgIB4C0ECbUEBdCEDAn8gGUMAAIA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4C0ECbUEBdAwBCwJ/IAwqAghDAAAAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAshAyAZQwAAAD+SIhmLQwAAAE9dBEAgGagMAQtBgICAgHgLIgdBAEggBSAHTHIgA0EASCADIAZOcnJFBEAgDiABIBFtIAJsIA0gEm1qQQJ0aiIJIAkoAgAgBCADIAVsIAdqQQF0aiIDLQAAIgdB+AFxIAMtAAEiA0EDdEH4AXFqIAdBBXQgA0EDdnJB/AFxakEKakEDbmo2AgALIA1BAWohDQwBCwsgAUEBaiEBDAALAAsgCUEAIAlBAEobIQ8gA0EAIANBAEobIRAgCkQAAAAAAABZQKAhHiADtyEhIAm3ISJBACEBA0AgASAPRg0CIB4gHSABt0QAAAAAAADgP6CiICKjoCEKQQAhDQNAIA0gEEcEQCAMKwNQIAwrA0AgHiAdIA23RAAAAAAAAOA/oKIgIaOgIh+iIAogDCsDSKKgoCIgRAAAAAAAAAAAYQ0GIAwgDCsDICAMKwMQIB+iIAogDCsDGKKgoCAgo7YiGTgCDCAMIAwrAzggDCsDKCAfoiAKIAwrAzCioKAgIKO2Iho4AgggCCAZIBogDEEMaiAMQQhqEHEaIAwqAgwhGQJ/IABBAUYEQAJ/IAwqAghDAACAP5IiGotDAAAAT10EQCAaqAwBC0GAgICAeAtBAm1BAXQhAwJ/IBlDAACAP5IiGYtDAAAAT10EQCAZqAwBC0GAgICAeAtBAm1BAXQMAQsCfyAMKgIIQwAAAD+SIhqLQwAAAE9dBEAgGqgMAQtBgICAgHgLIQMgGUMAAAA/kiIZi0MAAABPXQRAIBmoDAELQYCAgIB4CyIHQQBIIAUgB0xyIANBAEggAyAGTnJyRQRAIA4gASARbSACbCANIBJtakECdGoiCSAJKAIAIAQgAyAFbCAHakEBdGoiAy0AACIHQfgBcSADLQABIgNBAnRB+AFxaiAHQQV0IANBA3ZyQfgBcWpBDGpBA25qNgIACyANQQFqIQ0MAQsLIAFBAWohAQwACwALIAlBACAJQQBKGyEPIANBACADQQBKGyEQIApEAAAAAAAAWUCgIR4gA7chISAJtyEiQQAhAQNAIAEgD0YNASAeIB0gAbdEAAAAAAAA4D+goiAio6AhCkEAIQ0DQCANIBBHBEAgDCsDUCAMKwNAIB4gHSANt0QAAAAAAADgP6CiICGjoCIfoiAKIAwrA0iioKAiIEQAAAAAAAAAAGENBSAMIAwrAyAgDCsDECAfoiAKIAwrAxiioKAgIKO2Ihk4AgwgDCAMKwM4IAwrAyggH6IgCiAMKwMwoqCgICCjtiIaOAIIIAggGSAaIAxBDGogDEEIahBxGiAMKgIMIRkCfyAAQQFGBEACfyAMKgIIQwAAgD+SIhqLQwAAAE9dBEAgGqgMAQtBgICAgHgLQQJtQQF0IQMCfyAZQwAAgD+SIhmLQwAAAE9dBEAgGagMAQtBgICAgHgLQQJtQQF0DAELAn8gDCoCCEMAAAA/kiIai0MAAABPXQRAIBqoDAELQYCAgIB4CyEDIBlDAAAAP5IiGYtDAAAAT10EQCAZqAwBC0GAgICAeAsiB0EASCAFIAdMciADQQBIIAMgBk5yckUEQCAOIAEgEW0gAmwgDSASbWpBAnRqIgkgCSgCACAEIAMgBWwgB2pBAXRqIgMtAAAiB0HwAXEgB0EEdEHwAXFqIAMtAAFBCHJB+AFxakEQakEDbmo2AgALIA1BAWohDQwBCwsgAUEBaiEBDAALAAsgESASbCEAQQAhCUEAIQ0DQCANIBNGDQMgCyANaiAOIA1BAnRqKAIAIABuOgAAIA1BAWohDQwACwALQQBBA0GGGEEAEDYLQX8hCQsgDhAxIAxB4AFqJAAgCQ8LQQBBA0H+DUEAEDZBARABAAtaAQJ/IwBBEGsiAiQAIAIgATYCDCABIAAQ4QYiA00EQCAAENwBIgAgA0EBdkkEQCACIABBAXQ2AgggAkEIaiACQQxqEG8oAgAhAwsgAkEQaiQAIAMPCxC+AgALDAAgASACLQAAOgAACyEAIAAgATYCACAAIAEoAgQiATYCBCAAIAEgAmo2AgggAAtVAQF/IAAoAgQhAgNAIAIgACgCCEcEQCAAKAIQGiAAIAAoAgggAWs2AggMAQsLIAAoAgAEQCAAKAIQGiAAKAIAIQIgABA8KAIAIAAoAgBrGiACEDELC0kBAn8gACgCBCIGQQh1IQUgBkEBcQRAIAIoAgAgBRCrBCEFCyAAKAIAIgAgASACIAVqIANBAiAGQQJxGyAEIAAoAgAoAhgRBQALIAAgASACKQIANwIAIAEgAigCEDYCECABIAIpAgg3AggLBwAgAEECSQsRACAAIAEgASgCACgCKBECAAsIAEH/////BwsFAEH/AAsrAAJAIAAgAUYNAANAIAAgAUEEayIBTw0BIAAgARBJIABBBGohAAwACwALC9ABAQJ/IAJBgBBxBEAgAEErOgAAIABBAWohAAsgAkGACHEEQCAAQSM6AAAgAEEBaiEACyACQYQCcSIDQYQCRwRAIABBrtQAOwAAIABBAmohAAsgAkGAgAFxIQIDQCABLQAAIgQEQCAAIAQ6AAAgAEEBaiEAIAFBAWohAQwBCwsgAAJ/AkAgA0GAAkcEQCADQQRHDQFBxgBB5gAgAhsMAgtBxQBB5QAgAhsMAQtBwQBB4QAgAhsgA0GEAkYNABpBxwBB5wAgAhsLOgAAIANBhAJHC00AIABBADYCFCAAIAE2AhggAEEANgIMIABCgqCAgOAANwIEIAAgAUU2AhAgAEEgakEAQSgQORogAEEcahCXByAAQQA2AkggAEF/NgJMC6oBAQF/AkAgA0GAEHFFDQAgAkUgA0HKAHEiBEEIRiAEQcAARnJyDQAgAEErOgAAIABBAWohAAsgA0GABHEEQCAAQSM6AAAgAEEBaiEACwNAIAEtAAAiBARAIAAgBDoAACAAQQFqIQAgAUEBaiEBDAELCyAAAn9B7wAgA0HKAHEiAUHAAEYNABpB2ABB+AAgA0GAgAFxGyABQQhGDQAaQeQAQfUAIAIbCzoAAAsMACAAEEAgAUECdGoLrwQBC38jAEGAAWsiCiQAIAogATYCeCACIAMQ8AMhCCAKQcwCNgIQIApBCGpBACAKQRBqIgkQZiEPAkAgCEHlAE8EQCAIEDciCUUNASAPIAkQeQsgCSEHIAIhAQNAIAEgA0YEQANAAkAgACAKQfgAahCLAUEAIAgbRQRAIAAgCkH4AGoQcwRAIAUgBSgCAEECcjYCAAsMAQsgABBoIQ0gBkUEQCAEIA0QgQEhDQsgDEEBaiEQQQAhDiAJIQcgAiEBA0AgASADRgRAIBAhDCAORQ0DIAAQehogCSEHIAIhASAIIAtqQQJJDQMDQCABIANGBEAMBQUCQCAHLQAAQQJHDQAgARA1IAxGDQAgB0EAOgAAIAtBAWshCwsgB0EBaiEHIAFBDGohAQwBCwALAAUCQCAHLQAAQQFHDQAgASAMEMIDKAIAIRECQCAGBH8gEQUgBCAREIEBCyANRgRAQQEhDiABEDUgEEcNAiAHQQI6AAAgC0EBaiELDAELIAdBADoAAAsgCEEBayEICyAHQQFqIQcgAUEMaiEBDAELAAsACwsCQAJAA0AgAiADRg0BIAktAABBAkcEQCAJQQFqIQkgAkEMaiECDAELCyACIQMMAQsgBSAFKAIAQQRyNgIACyAPEGUgCkGAAWokACADDwUCQCABEL8BRQRAIAdBAToAAAwBCyAHQQI6AAAgC0EBaiELIAhBAWshCAsgB0EBaiEHIAFBDGohAQwBCwALAAsQdQALEQAgACABIAAoAgAoAgwRAwALtgQBC38jAEGAAWsiCiQAIAogATYCeCACIAMQ8AMhCCAKQcwCNgIQIApBCGpBACAKQRBqIgkQZiEPAkAgCEHlAE8EQCAIEDciCUUNASAPIAkQeQsgCSEHIAIhAQNAIAEgA0YEQANAAkAgACAKQfgAahCMAUEAIAgbRQRAIAAgCkH4AGoQdARAIAUgBSgCAEECcjYCAAsMAQsgABBpIQ0gBkUEQCAEIA0QxAMhDQsgDEEBaiEQQQAhDiAJIQcgAiEBA0AgASADRgRAIBAhDCAORQ0DIAAQexogCSEHIAIhASAIIAtqQQJJDQMDQCABIANGBEAMBQUCQCAHLQAAQQJHDQAgARA1IAxGDQAgB0EAOgAAIAtBAWshCwsgB0EBaiEHIAFBDGohAQwBCwALAAUCQCAHLQAAQQFHDQAgASAMEEEsAAAhEQJAIA1B/wFxIAYEfyARBSAEIBEQxAMLQf8BcUYEQEEBIQ4gARA1IBBHDQIgB0ECOgAAIAtBAWohCwwBCyAHQQA6AAALIAhBAWshCAsgB0EBaiEHIAFBDGohAQwBCwALAAsLAkACQANAIAIgA0YNASAJLQAAQQJHBEAgCUEBaiEJIAJBDGohAgwBCwsgAiEDDAELIAUgBSgCAEEEcjYCAAsgDxBlIApBgAFqJAAgAw8FAkAgARC/AUUEQCAHQQE6AAAMAQsgB0ECOgAAIAtBAWohCyAIQQFrIQgLIAdBAWohByABQQxqIQEMAQsACwALEHUAC38CAn8CfiMAQaABayIEJAAgBCABNgI8IAQgATYCFCAEQX82AhggBEEQaiIFQgAQxAEgBCAFIANBARCABSAEKQMIIQYgBCkDACEHIAIEQCACIAEgBCgCFCAEKAKIAWogBCgCPGtqNgIACyAAIAY3AwggACAHNwMAIARBoAFqJAALCwAgAEGkuQQQywELJwEBfyAAQQRqENAEIQIgAEHMlgM2AgAgAkHglgM2AgAgAiABEMADCycBAX8gAEEEahDdBCECIABBrJUDNgIAIAJBwJUDNgIAIAIgARDAAwsLACAAQZy5BBDLAQu4AQEBfyMAQRBrIgEkACAAIAAoAgBBDGsoAgBqKAIYBEAgASAANgIMIAFBADoACCAAIAAoAgBBDGsoAgBqENADBEAgACAAKAIAQQxrKAIAaigCSARAIAAgACgCAEEMaygCAGooAkgQywMLIAFBAToACAsCQCABLQAIRQ0AIAAgACgCAEEMaygCAGooAhgQzwJBf0cNACAAIAAoAgBBDGsoAgBqQQEQxQILIAFBCGoQzgILIAFBEGokAAsUACAAQdiVAzYCACAAQQRqEEUgAAtdAQJ/AkAgACgCACICRQ0AAn8gAigCGCIDIAIoAhxGBEAgAiABEMMBIAIoAgAoAjQRAwAMAQsgAiADQQFqNgIYIAMgAToAACABEMMBC0F/ELsBRQ0AIABBADYCAAsLCQAgABCCAxAxC4sCAgd/AXwjAEEgayIGJAAgBiAEQQR0EDciCjYCECAKBEACQCAGIARBGGwQNyILNgIUIAtFDQAgBEEAIARBAEobIQwDQCAJIAxGRQRAIAogCUEEdCIHaiIIIAIgB2oiBysDADkDACAIIAcrAwg5AwggCyAJQRhsIghqIgcgAyAIaiIIKwMAOQMAIAcgCCsDCDkDCCAHIAgrAxA5AxAgCUEBaiEJDAELCyAGIAQ2AhggACgCACAGQRBqIAEgBSAGQQhqEN4CQQBIBEAgBkKAgICAwPD1y8EANwMICyAGKAIQEDEgBigCFBAxIAYrAwghDSAGQSBqJAAgDQ8LC0EAQQNB/g1BABA2QQEQAQALCAAgACgCEEULCQAgABCEAxAxCwoAIABBGHRBGHULFAAgAEG4lAM2AgAgAEEEahBFIAALDAAgABDNAhogABAxCwkAIAAgARDwBAvTAwICfgJ/IwBBIGsiBCQAAkAgAUL///////////8AgyIDQoCAgICAgMCAPH0gA0KAgICAgIDA/8MAfVQEQCABQgSGIABCPIiEIQMgAEL//////////w+DIgBCgYCAgICAgIAIWgRAIANCgYCAgICAgIDAAHwhAgwCCyADQoCAgICAgICAQH0hAiAAQoCAgICAgICACFINASACIANCAYN8IQIMAQsgAFAgA0KAgICAgIDA//8AVCADQoCAgICAgMD//wBRG0UEQCABQgSGIABCPIiEQv////////8Dg0KAgICAgICA/P8AhCECDAELQoCAgICAgID4/wAhAiADQv///////7//wwBWDQBCACECIANCMIinIgVBkfcASQ0AIARBEGogACABQv///////z+DQoCAgICAgMAAhCICIAVBgfcAaxCIASAEIAAgAkGB+AAgBWsQ/gEgBCkDCEIEhiAEKQMAIgBCPIiEIQIgBCkDECAEKQMYhEIAUq0gAEL//////////w+DhCIAQoGAgICAgICACFoEQCACQgF8IQIMAQsgAEKAgICAgICAgAhSDQAgAkIBgyACfCECCyAEQSBqJAAgAiABQoCAgICAgICAgH+DhL8LRQEBfyMAQRBrIgUkACAFIAEgAiADIARCgICAgICAgICAf4UQnQEgBSkDACEBIAAg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ACABEEoLFwEBfyAAEIABIQEgABDaBiAAIAEQ2AYLBABBAQsxAQF/IAAQ0gYgACgCAARAIAAgACgCABDQBiAAEDIaIAAoAgAhASAAEJACGiABEDELCywBAX8gABDbBiAAKAIABEAgABDaBiAAEDIaIAAoAgAhASAAEO8BGiABEDELCxgBAX8gABBGIQIgACABEMgGIAAgAhCtAwtUAQJ/IwBBIGsiAiQAAkAgABDvASABSQRAIAAQ1AYgAUkNASAAEDIhAyAAIAJBCGogASAAEIABIAMQkAQiABCOBCAAEI0ECyACQSBqJAAPCxCRAgAL5AcBB38gASAAEKIBIgJLBEAjAEEgayIIJAACQCABIAJrIgUgABAyKAIAIAAoAgRrQQV1TQRAIwBBEGsiAyQAIAMgADYCACADIAAoAgQiATYCBCADIAEgBUEFdGo2AgggAygCBCECIAMoAgghAQNAIAEgAkYEQCADEHIgA0EQaiQABSAAEDIaIAIQzgYgAyACQSBqIgI2AgQMAQsLDAELIAAQMiEHIAhBCGohAgJ/IAAQogEgBWohAyMAQRBrIgYkACAGIAM2AgwjAEEQayIEJAAgABAyGiAEQf///z82AgwgBEH/////BzYCCCAEQQxqIARBCGoQlQIoAgAhASAEQRBqJAAgASADTwRAIAAQkAIiAyABQQF2SQRAIAYgA0EBdDYCCCAGQQhqIAZBDGoQbygCACEBCyAGQRBqJAAgAQwBCxCRAgALIQYgABCiASEDQQAhASMAQRBrIgQkACAEQQA2AgwgAkEMaiAHENQBIAYEQCACKAIQGiAGQf///z9LBEAQ8wEACyAGQQV0EFshAQsgAiABNgIAIAIgASADQQV0aiIDNgIIIAIgAzYCBCACEDwgASAGQQV0ajYCACAEQRBqJAAjAEEQayIDJAAgAyACKAIINgIAIAIoAgghASADIAJBCGo2AgggAyABIAVBBXRqNgIEIAMoAgAhBQNAIAMoAgQgBUcEQCACKAIQGiADKAIAEM4GIAMgAygCAEEgaiIFNgIADAELCyADELIBIANBEGokACAAENIGIAAQMhogACgCACEDIAAoAgQhBSACQQRqIQcDQCADIAVHBEAgBygCAEEgayIEQgA3AgAgBEIANwIQIARCADcCCCAEQRhqIgEQswIaIAQgBUEgayIFKAIANgIA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CwALIAQgAjsBACACIANODQVBACEKIAxBACAMQQBKGyELIAAhAQNAIAogC0YNBiADIAEoAgBGBEAgASACNgIACyAKQQFqIQogAUEEaiEBDAALAAsgBEECay4BACIBQQBKBEAgA0ECdCAAakEEaygCACICIAFB//8DcUECdCAAakEEaygCACIDSgRAIAQgAzsBAEEAIQogDEEAIAxBAEobIQsgACEBA0AgCiALRgRAIAMhAgwHCyACIAEoAgBGBEAgASADNgIACyAKQQFqIQogAUEEaiEBDAALAAsgBCACOwEAIAIgA04NBEEAIQogDEEAIAxBAEobIQsgACEBA0AgCiALRg0FIAMgASgCAEYEQCABIAI2AgALIApBAWohCiABQQRqIQEMAAsACyAEIAM7AQAgA0EcbCAQaiICQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACAOajYCACAJIAJBEGsiASgCAEgEQCABIAk2AgALIAJBBGsgDjYCAAwFCyACQQBKBEAgBCACOwEAIAFBHGwgEGoiAkEcayIBIAEoAgBBAWo2AgAgAkEYayIBIAEoAgAgCWo2AgAgAkEUayIBIAEoAgAgDmo2AgAgCSACQQxrIgEoAgBKBEAgASAJNgIACyACQQRrIA42AgAMBQsgBEECay8BACICQRB0QRB1IgFBAEoEQCAEIAE7AQAgAkEcbCAQaiICQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACAOajYCACACQQxrIgEoAgAgCU4NBSABIAk2AgAMBQsgDEGAgAJOBEBBAEEDQeQLQQAQNkF/IQoMCQsgBCAMQQFqIgE7AQAgACAMQQJ0aiABQRB0QRB1NgIAIBAgDEEcbGoiAiAONgIYIAIgDjYCFCACIAk2AhAgAiAJNgIMIAIgDjYCCCACIAk2AgQgAkEBNgIAIAEhDAwECyAEQQA7AQAMAwsgBEEEaiEEIA5BAWohDiAGIAhqQQRqIQYMBQsgAkEQdEEQdUEcbCAQaiICQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACAOajYCAAwBCyACQRB0QRB1QRxsIBBqIgJBBGsgDjYCACACQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACAOajYCAAsgBEECaiEEIAZBAmohBiAJQQFqIQkMAAsACwsgDEEAIAxBAEobQQFqIQNBASEBQQEhBiAAIQkDQCABIANHBEACQCABIAkoAgAiAkYEQCAGIgpBAWohBgwBCyACQQJ0IABqQQRrKAIAIQoLIAkgCjYCACAJQQRqIQkgAUEBaiEBDAELCyAHIAZBAWsiCTYCCEEAIAlFDQEaIAdBjIAIaiEIIAdBDGpBACAJQQJ0EDkhBiAHQZCAKGpBACAJQQR0EDkhBUEAIQEDQCABIAlOBEBBACEJIAxBACAMQQBKGyEEA0AgBCAJRgRAQQAhCiAHKAIIIgBBACAAQQBKGyEAQQAhAQNAIAAgAUYNBSAFIAFBBHRqIgIgAisDACAGIAFBAnRqKAIAtyIXozkDACACIAIrAwggF6M5AwggAUEBaiEBDAALAAsgBiAAIAlBAnRqKAIAQQFrIgJBAnQiA2oiASABKAIAIBAgCUEcbGoiDCgCAGo2AgAgBSACQQR0IgFqIgIgAisDACAMKAIEt6A5AwAgAiACKwMIIAwoAgi3oDkDCCAMKAIMIgIgASAIaiIBKAIASARAIAEgAjYCAAsgDCgCECICIAggA0ECdCIDQQRyaiIBKAIASgRAIAEgAjYCAAsgDCgCFCICIAggA0EIcmoiASgCAEgEQCABIAI2AgALIAwoAhgiAiAIIANBDHJqIgEoAgBKBEAgASACNgIACyAJQQFqIQkMAAsABSAIIAFBBHRqIgIgEjYCACACQQA2AgQgAiAUNgIIIAJBADYCDCABQQFqIQEgBygCCCEJDAELAAsACyAKCw8LIAgEQAJ/IAAhBEEAIQMgASIGQQAgAUEAShshACAHKAIAIgEgAiIFQQFrIgsgBmxBAXRqIQkgASECA0AgACADRwRAIAlBADsBACACQQA7AQAgA0EBaiEDIAJBAmohAiAJQQJqIQkMAQsLIAVBACAFQQBKGyEMIAEgBkEBayIKQQF0aiEJQQAhAyABIQIDQCADIAxHBEAgCUEAOwEAIAJBADsBACADQQFqIQMgCSAGQQF0IgBqIQkgACACaiECDAELCyALQQEgC0EBShshEiAHQZCA0ABqIQ0gB0GQgMgAaiEAIAggBkEBaiICaiEIIAIgBGohDiAKQQEgCkEBShsiFEEBayEQIAEgAkEBdGohAkEAIAZrQQF0IRVBACEMQQEhDwJAA0AgDyASRwRAIA4gEGohFiAIIBBqIRFBASEJA0ACQAJAAkAgCSAURwRAIA4tAAAgCC0AAEsEQCACIBVqIgQvAQAiA0EQdEEQdSIBQQBKBEAgAiABOwEAIANBHGwgDWoiA0EEayAPNgIAIANBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAlqNgIAIANBFGsiASABKAIAIA9qNgIADAULIARBAmsvAQAiA0EQdEEQdSEBIAQuAQIiBEEASgRAIAFBAEoEQCAEQQJ0IABqQQRrKAIAIgEgA0ECdCAAakEEaygCACIESgRAIAIgBDsBAEEAIQogDEEAIAxBAEobIQsgACEDA0AgCiALRgRAIAQhAQwICyABIAMoAgBGBEAgAyAENgIACyAKQQFqIQogA0EEaiEDDAALAAsgAiABOwEAIAEgBE4NBUEAIQogDEEAIAxBAEobIQsgACEDA0AgCiALRg0GIAQgAygCAEYEQCADIAE2AgALIApBAWohCiADQQRqIQMMAAsACyACQQJrLgEAIgNBAEoEQCAEQQJ0IABqQQRrKAIAIgEgA0H//wNxQQJ0IABqQQRrKAIAIgRKBEAgAiAEOwEAQQAhCiAMQQAgDEEAShshCyAAIQMDQCAKIAtGBEAgBCEBDAcLIAEgAygCAEYEQCADIAQ2AgALIApBAWohCiADQQRqIQMMAAsACyACIAE7AQAgASAETg0EQQAhCiAMQQAgDEEAShshCyAAIQMDQCAKIAtGDQUgBCADKAIARgRAIAMgATYCAAsgCkEBaiEKIANBBGohAwwACwALIAIgBDsBACAEQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAlqNgIAIANBFGsiASABKAIAIA9qNgIAIAkgA0EQayIBKAIASARAIAEgCTYCAAsgA0EEayAPNgIADAULIAFBAEoEQCACIAE7AQAgA0EcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACAPajYCACAJIANBDGsiASgCAEoEQCABIAk2AgALIANBBGsgDzYCAAwFCyACQQJrLwEAIgNBEHRBEHUiAUEASgRAIAIgATsBACADQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAlqNgIAIANBFGsiASABKAIAIA9qNgIAIANBDGsiASgCACAJTg0FIAEgCTYCAAwFCyAMQYCAAk4EQEEAQQNB5AtBABA2QX8hCgwJCyACIAxBAWoiATsBACAAIAxBAnRqIAFBEHRBEHU2AgAgDSAMQRxsaiIDIA82AhggAyAPNgIUIAMgCTYCECADIAk2AgwgAyAPNgIIIAMgCTYCBCADQQE2AgAgASEMDAQLIAJBADsBAAwDCyACQQRqIQIgEUECaiEIIBZBAmohDiAPQQFqIQ8MBQsgAUEQdEEQdUEcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACAPajYCAAwBCyABQRB0QRB1QRxsIA1qIgNBBGsgDzYCACADQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACAPajYCAAsgAkECaiECIAhBAWohCCAOQQFqIQ4gCUEBaiEJDAALAAsLIAxBACAMQQBKG0EBaiECQQEhA0EBIQggACEJA0AgAiADRwRAAkAgAyAJKAIAIgFGBEAgCCIKQQFqIQgMAQsgAUECdCAAakEEaygCACEKCyAJIAo2AgAgCUEEaiEJIANBAWohAwwBCwsgByAIQQFrIgk2AghBACAJRQ0BGiAHQYyACGohCiAHQQxqQQAgCUECdBA5IQsgB0GQgChqQQAgCUEEdBA5IQhBACEDA0AgAyAJTgRAQQAhCSAMQQAgDEEAShshBANAIAQgCUYEQEEAIQogBygCCCIAQQAgAEEAShshAEEAIQMDQCAAIANGDQUgCCADQQR0aiIBIAErAwAgCyADQQJ0aigCALciF6M5AwAgASABKwMIIBejOQMIIANBAWohAwwACwALIAsgACAJQQJ0aigCAEEBayICQQJ0IgNqIgEgASgCACANIAlBHGxqIgUoAgBqNgIAIAggAkEEdCIBaiICIAIrAwAgBSgCBLegOQMAIAIgAisDCCAFKAIIt6A5AwggBSgCDCICIAEgCmoiASgCAEgEQCABIAI2AgALIAUoAhAiAiAKIANBAnQiA0EEcmoiASgCAEoEQCABIAI2AgALIAUoAhQiAiAKIANBCHJqIgEoAgBIBEAgASACNgIACyAFKAIYIgIgCiADQQxyaiIBKAIASgRAIAEgAjYCAAsgCUEBaiEJDAALAAUgCiADQQR0aiIBIAY2AgAgAUEANgIEIAEgBTYCCCABQQA2AgwgA0EBaiEDIAcoAgghCQwBCwALAAsgCgsPCyAGRQRAAn8gACEEQQAhAyABIghBACABQQBKGyEAIAcoAgAiASACIgZBAWsiCSAIbEEBdGohCyABIQIDQCAAIANHBEAgC0EAOwEAIAJBADsBACADQQFqIQMgAkECaiECIAtBAmohCwwBCwsgBkEAIAZBAEobIQwgASAIQQFrIgpBAXRqIQtBACEDIAEhAgNAIAMgDEcEQCALQQA7AQAgAkEAOwEAIANBAWohAyALIAhBAXQiAGohCyAAIAJqIQIMAQsLIAlBASAJQQFKGyEQIAdBkIDQAGohDiAHQZCAyABqIQAgBCAIQQFqIgJqIQwgCkEBIApBAUobIhJBAWshFCABIAJBAXRqIQJBACAIa0EBdCEVQQAhCkEBIQ0CQANAIA0gEEcEQCAMIBRqIRZBASELA0ACQAJAAkAgCyASRwRAIAUgDC0AAEgEQCACIBVqIgQvAQAiA0EQdEEQdSIBQQBKBEAgAiABOwEAIANBHGwgDmoiA0EEayANNgIAIANBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA1qNgIADAULIARBAmsvAQAiA0EQdEEQdSEBIAQuAQIiBEEASgRAIAFBAEoEQCAEQQJ0IABqQQRrKAIAIgEgA0ECdCAAakEEaygCACIESgRAIAIgBDsBAEEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRgRAIAQhAQwICyABIAMoAgBGBEAgAyAENgIACyAJQQFqIQkgA0EEaiEDDAALAAsgAiABOwEAIAEgBE4NBUEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRg0GIAQgAygCAEYEQCADIAE2AgALIAlBAWohCSADQQRqIQMMAAsACyACQQJrLgEAIgNBAEoEQCAEQQJ0IABqQQRrKAIAIgEgA0H//wNxQQJ0IABqQQRrKAIAIgRKBEAgAiAEOwEAQQAhCSAKQQAgCkEAShshESAAIQMDQCAJIBFGBEAgBCEBDAcLIAEgAygCAEYEQCADIAQ2AgALIAlBAWohCSADQQRqIQMMAAsACyACIAE7AQAgASAETg0EQQAhCSAKQQAgCkEAShshESAAIQMDQCAJIBFGDQUgBCADKAIARgRAIAMgATYCAAsgCUEBaiEJIANBBGohAwwACwALIAIgBDsBACAEQRxsIA5qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA1qNgIAIAsgA0EQayIBKAIASARAIAEgCzYCAAsgA0EEayANNgIADAULIAFBAEoEQCACIAE7AQAgA0EcbCAOaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACANajYCACALIANBDGsiASgCAEoEQCABIAs2AgALIANBBGsgDTYCAAwFCyACQQJrLwEAIgNBEHRBEHUiAUEASgRAIAIgATsBACADQRxsIA5qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA1qNgIAIANBDGsiASgCACALTg0FIAEgCzYCAAwFCyAKQYCAAk4EQEEAQQNB5AtBABA2QX8hCQwJCyACIApBAWoiATsBACAAIApBAnRqIAFBEHRBEHU2AgAgDiAKQRxsaiIDIA02AhggAyANNgIUIAMgCzYCECADIAs2AgwgAyANNgIIIAMgCzYCBCADQQE2AgAgASEKDAQLIAJBADsBAAwDCyACQQRqIQIgFkECaiEMIA1BAWohDQwFCyABQRB0QRB1QRxsIA5qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA1qNgIADAELIAFBEHRBEHVBHGwgDmoiA0EEayANNgIAIANBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA1qNgIACyACQQJqIQIgDEEBaiEMIAtBAWohCwwACwALCyAKQQAgCkEAShtBAWohAkEBIQNBASEMIAAhCwNAIAIgA0cEQAJAIAMgCygCACIBRgRAIAwiCUEBaiEMDAELIAFBAnQgAGpBBGsoAgAhCQsgCyAJNgIAIAtBBGohCyADQQFqIQMMAQsLIAcgDEEBayILNgIIQQAgC0UNARogB0GMgAhqIQkgB0EMakEAIAtBAnQQOSEMIAdBkIAoakEAIAtBBHQQOSEFQQAhAwNAIAMgC04EQEEAIQsgCkEAIApBAEobIQQDQCAEIAtGBEBBACEJIAcoAggiAEEAIABBAEobIQBBACEDA0AgACADRg0FIAUgA0EEdGoiASABKwMAIAwgA0ECdGooAgC3IhejOQMAIAEgASsDCCAXozkDCCADQQFqIQMMAAsACyAMIAAgC0ECdGooAgBBAWsiAkECdCIDaiIBIAEoAgAgDiALQRxsaiIGKAIAajYCACAFIAJBBHQiAWoiAiACKwMAIAYoAgS3oDkDACACIAIrAwggBigCCLegOQMIIAYoAgwiAiABIAlqIgEoAgBIBEAgASACNgIACyAGKAIQIgIgCSADQQJ0IgNBBHJqIgEoAgBKBEAgASACNgIACyAGKAIUIgIgCSADQQhyaiIBKAIASARAIAEgAjYCAAsgBigCGCICIAkgA0EMcmoiASgCAEoEQCABIAI2AgALIAtBAWohCwwACwAFIAkgA0EEdGoiASAINgIAIAFBADYCBCABIAY2AgggAUEANgIMIANBAWohAyAHKAIIIQsMAQsACwALIAkLDwsCfyAAIQYgASIIQQJtIhJBACASQQBKGyEAIAcoAgAiAyACQQJtIhRBAWsiCiASbEEBdGohCUEAIQEgAyEEA0AgACABRwRAIAlBADsBACAEQQA7AQAgAUEBaiEBIARBAmohBCAJQQJqIQkMAQsLIBRBACAUQQBKGyECIAMgEkEBayIMQQF0aiEJQQAhASADIQQDQCABIAJHBEAgCUEAOwEAIARBADsBACABQQFqIQEgCSASQQF0IgBqIQkgACAEaiEEDAELCyAKQQEgCkEBShshFSAMQQEgDEEBShshFiAHQZCA0ABqIRAgB0GQgMgAaiEAIAhBAXQgBmpBAmohBiASQQF0IANqQQJqIQRBACASa0EBdCERQQAhDEEBIQ4CQANAIA4gFUcEQEEBIQkDQAJAAkACQCAJIBZHBEAgBSAGLQAASARAIAQgEWoiAy8BACICQRB0QRB1IgFBAEoEQCAEIAE7AQAgAkEcbCAQaiICQQRrIA42AgAgAkEcayIBIAEoAgBBAWo2AgAgAkEYayIBIAEoAgAgCWo2AgAgAkEUayIBIAEoAgAgDmo2AgAMBQsgA0ECay8BACIBQRB0QRB1IQIgAy4BAiIDQQBKBEAgAkEASgRAIANBAnQgAGpBBGsoAgAiAiABQQJ0IABqQQRrKAIAIgNKBEAgBCADOwEAQQAhCiAMQQAgDEEAShshCyAAIQEDQCAKIAtGBEAgAyECDAgLIAIgASgCAEYEQCABIAM2AgALIApBAWohCiABQQRqIQEMAAsACyAEIAI7AQAgAiADTg0FQQAhCiAMQQAgDEEAShshCyAAIQEDQCAKIAtGDQYgAyABKAIARgRAIAEgAjYCAAsgCkEBaiEKIAFBBGohAQwACwALIARBAmsuAQAiAUEASgRAIANBAnQgAGpBBGsoAgAiAiABQf//A3FBAnQgAGpBBGsoAgAiA0oEQCAEIAM7AQBBACEKIAxBACAMQQBKGyELIAAhAQNAIAogC0YEQCADIQIMBwsgAiABKAIARgRAIAEgAzYCAAsgCkEBaiEKIAFBBGohAQwACwALIAQgAjsBACACIANODQRBACEKIAxBACAMQQBKGyELIAAhAQNAIAogC0YNBSADIAEoAgBGBEAgASACNgIACyAKQQFqIQogAUEEaiEBDAALAAsgBCADOwEAIANBHGwgEGoiAkEcayIBIAEoAgBBAWo2AgAgAkEYayIBIAEoAgAgCWo2AgAgAkEUayIBIAEoAgAgDmo2AgAgCSACQRBrIgEoAgBIBEAgASAJNgIACyACQQRrIA42AgAMBQsgAkEASgRAIAQgAjsBACABQRxsIBBqIgJBHGsiASABKAIAQQFqNgIAIAJBGGsiASABKAIAIAlqNgIAIAJBFGsiASABKAIAIA5qNgIAIAkgAkEMayIBKAIASgRAIAEgCTYCAAsgAkEEayAONgIADAULIARBAmsvAQAiAkEQdEEQdSIBQQBKBEAgBCABOwEAIAJBHGwgEGoiAkEcayIBIAEoAgBBAWo2AgAgAkEYayIBIAEoAgAgCWo2AgAgAkEUayIBIAEoAgAgDmo2AgAgAkEMayIBKAIAIAlODQUgASAJNgIADAULIAxBgIACTgRAQQBBA0HkC0EAEDZBfyEKDAkLIAQgDEEBaiIBOwEAIAAgDEECdGogAUEQdEEQdTYCACAQIAxBHGxqIgIgDjYCGCACIA42AhQgAiAJNgIQIAIgCTYCDCACIA42AgggAiAJNgIEIAJBATYCACABIQwMBAsgBEEAOwEADAMLIARBBGohBCAOQQFqIQ4gBiAIakEEaiEGDAULIAJBEHRBEHVBHGwgEGoiAkEcayIBIAEoAgBBAWo2AgAgAkEYayIBIAEoAgAgCWo2AgAgAkEUayIBIAEoAgAgDmo2AgAMAQsgAkEQdEEQdUEcbCAQaiICQQRrIA42AgAgAkEcayIBIAEoAgBBAWo2AgAgAkEYayIBIAEoAgAgCWo2AgAgAkEUayIBIAEoAgAgDmo2AgALIARBAmohBCAGQQJqIQYgCUEBaiEJDAALAAsLIAxBACAMQQBKG0EBaiEDQQEhAUEBIQYgACEJA0AgASADRwRAAkAgASAJKAIAIgJGBEAgBiIKQQFqIQYMAQsgAkECdCAAakEEaygCACEKCyAJIAo2AgAgCUEEaiEJIAFBAWohAQwBCwsgByAGQQFrIgk2AghBACAJRQ0BGiAHQYyACGohCCAHQQxqQQAgCUECdBA5IQYgB0GQgChqQQAgCUEEdBA5IQVBACEBA0AgASAJTgRAQQAhCSAMQQAgDEEAShshBANAIAQgCUYEQEEAIQogBygCCCIAQQAgAEEAShshAEEAIQEDQCAAIAFGDQUgBSABQQR0aiICIAIrAwAgBiABQQJ0aigCALciF6M5AwAgAiACKwMIIBejOQMIIAFBAWohAQwACwALIAYgACAJQQJ0aigCAEEBayICQQJ0IgNqIgEgASgCACAQIAlBHGxqIgwoAgBqNgIAIAUgAkEEdCIBaiICIAIrAwAgDCgCBLegOQMAIAIgAisDCCAMKAIIt6A5AwggDCgCDCICIAEgCGoiASgCAEgEQCABIAI2AgALIAwoAhAiAiAIIANBAnQiA0EEcmoiASgCAEoEQCABIAI2AgALIAwoAhQiAiAIIANBCHJqIgEoAgBIBEAgASACNgIACyAMKAIYIgIgCCADQQxyaiIBKAIASgRAIAEgAjYCAAsgCUEBaiEJDAALAAUgCCABQQR0aiICIBI2AgAgAkEANgIEIAIgFDYCCCACQQA2AgwgAUEBaiEBIAcoAgghCQwBCwALAAsgCgsPCyAEQQFGBEAgCARAAn8gACEEQQAhAyABIgZBACABQQBKGyEAIAciDCgCACIBIAIiBUEBayILIAZsQQF0aiEJIAEhAgNAIAAgA0cEQCAJQQA7AQAgAkEAOwEAIANBAWohAyACQQJqIQIgCUECaiEJDAELCyAFQQAgBUEAShshByABIAZBAWsiCkEBdGohCUEAIQMgASECA0AgAyAHRwRAIAlBADsBACACQQA7AQAgA0EBaiEDIAkgBkEBdCIAaiEJIAAgAmohAgwBCwsgC0EBIAtBAUobIRIgDEGQgNAAaiEPIAxBkIDIAGohACAIIAZBAWoiAmohByACIARqIQ4gDCgCBCACaiENIApBASAKQQFKGyIUQQFrIRAgASACQQF0aiECQQAgBmtBAXQhFUEAIQhBASETAkADQCASIBNHBEAgDiAQaiEWIAcgEGohEUEBIQkDQAJAAkACQCAJIBRHBEAgDi0AACAHLQAATQRAIA1B/wE6AAAgAiAVaiIELwEAIgNBEHRBEHUiAUEASgRAIAIgATsBACADQRxsIA9qIgNBBGsgEzYCACADQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACATajYCAAwFCyAEQQJrLwEAIgNBEHRBEHUhASAELgECIgRBAEoEQCABQQBKBEAgBEECdCAAakEEaygCACIBIANBAnQgAGpBBGsoAgAiBEoEQCACIAQ7AQBBACEKIAhBACAIQQBKGyELIAAhAwNAIAogC0YEQCAEIQEMCAsgASADKAIARgRAIAMgBDYCAAsgCkEBaiEKIANBBGohAwwACwALIAIgATsBACABIARODQVBACEKIAhBACAIQQBKGyELIAAhAwNAIAogC0YNBiAEIAMoAgBGBEAgAyABNgIACyAKQQFqIQogA0EEaiEDDAALAAsgAkECay4BACIDQQBKBEAgBEECdCAAakEEaygCACIBIANB//8DcUECdCAAakEEaygCACIESgRAIAIgBDsBAEEAIQogCEEAIAhBAEobIQsgACEDA0AgCiALRgRAIAQhAQwHCyABIAMoAgBGBEAgAyAENgIACyAKQQFqIQogA0EEaiEDDAALAAsgAiABOwEAIAEgBE4NBEEAIQogCEEAIAhBAEobIQsgACEDA0AgCiALRg0FIAQgAygCAEYEQCADIAE2AgALIApBAWohCiADQQRqIQMMAAsACyACIAQ7AQAgBEEcbCAPaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACATajYCACAJIANBEGsiASgCAEgEQCABIAk2AgALIANBBGsgEzYCAAwFCyABQQBKBEAgAiABOwEAIANBHGwgD2oiA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgCWo2AgAgA0EUayIBIAEoAgAgE2o2AgAgCSADQQxrIgEoAgBKBEAgASAJNgIACyADQQRrIBM2AgAMBQsgAkECay8BACIDQRB0QRB1IgFBAEoEQCACIAE7AQAgA0EcbCAPaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACATajYCACADQQxrIgEoAgAgCU4NBSABIAk2AgAMBQsgCEGAgAJOBEBBAEEDQeQLQQAQNkF/IQoMCQsgAiAIQQFqIgE7AQAgACAIQQJ0aiABQRB0QRB1NgIAIA8gCEEcbGoiAyATNgIYIAMgEzYCFCADIAk2AhAgAyAJNgIMIAMgEzYCCCADIAk2AgQgA0EBNgIAIAEhCAwECyACQQA7AQAgDUEAOgAADAMLIA1BAmohDSACQQRqIQIgEUECaiEHIBZBAmohDiATQQFqIRMMBQsgAUEQdEEQdUEcbCAPaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACATajYCAAwBCyABQRB0QRB1QRxsIA9qIgNBBGsgEzYCACADQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACATajYCAAsgDUEBaiENIAJBAmohAiAHQQFqIQcgDkEBaiEOIAlBAWohCQwACwALCyAIQQAgCEEAShtBAWohAkEBIQNBASEHIAAhCQNAIAIgA0cEQAJAIAMgCSgCACIBRgRAIAciCkEBaiEHDAELIAFBAnQgAGpBBGsoAgAhCgsgCSAKNgIAIAlBBGohCSADQQFqIQMMAQsLIAwgB0EBayIJNgIIQQAgCUUNARogDEGMgAhqIQogDEEMakEAIAlBAnQQOSELIAxBkIAoakEAIAlBBHQQOSEHQQAhAwNAIAMgCU4EQEEAIQkgCEEAIAhBAEobIQQDQCAEIAlGBEBBACEKIAwoAggiAEEAIABBAEobIQBBACEDA0AgACADRg0FIAcgA0EEdGoiASABKwMAIAsgA0ECdGooAgC3IhejOQMAIAEgASsDCCAXozkDCCADQQFqIQMMAAsACyALIAAgCUECdGooAgBBAWsiAkECdCIDaiIBIAEoAgAgDyAJQRxsaiIFKAIAajYCACAHIAJBBHQiAWoiAiACKwMAIAUoAgS3oDkDACACIAIrAwggBSgCCLegOQMIIAUoAgwiAiABIApqIgEoAgBIBEAgASACNgIACyAFKAIQIgIgCiADQQJ0IgNBBHJqIgEoAgBKBEAgASACNgIACyAFKAIUIgIgCiADQQhyaiIBKAIASARAIAEgAjYCAAsgBSgCGCICIAogA0EMcmoiASgCAEoEQCABIAI2AgALIAlBAWohCQwACwAFIAogA0EEdGoiASAGNgIAIAFBADYCBCABIAU2AgggAUEANgIMIANBAWohAyAMKAIIIQkMAQsACwALIAoLDwsgBkUEQAJ/IAAhBEEAIQMgASIIQQAgAUEAShshACAHIgwoAgAiASACIgZBAWsiCSAIbEEBdGohCyABIQIDQCAAIANHBEAgC0EAOwEAIAJBADsBACADQQFqIQMgAkECaiECIAtBAmohCwwBCwsgBkEAIAZBAEobIQcgASAIQQFrIgpBAXRqIQtBACEDIAEhAgNAIAMgB0cEQCALQQA7AQAgAkEAOwEAIANBAWohAyALIAhBAXQiAGohCyAAIAJqIQIMAQsLIAlBASAJQQFKGyEQIAxBkIDQAGohDSAMQZCAyABqIQAgBCAIQQFqIgJqIQcgDCgCBCACaiEOIApBASAKQQFKGyISQQFrIRQgASACQQF0aiECQQAgCGtBAXQhFUEAIQpBASEPAkADQCAPIBBHBEAgByAUaiEWQQEhCwNAAkACQAJAIAsgEkcEQCAFIActAABOBEAgDkH/AToAACACIBVqIgQvAQAiA0EQdEEQdSIBQQBKBEAgAiABOwEAIANBHGwgDWoiA0EEayAPNgIAIANBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA9qNgIADAULIARBAmsvAQAiA0EQdEEQdSEBIAQuAQIiBEEASgRAIAFBAEoEQCAEQQJ0IABqQQRrKAIAIgEgA0ECdCAAakEEaygCACIESgRAIAIgBDsBAEEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRgRAIAQhAQwICyABIAMoAgBGBEAgAyAENgIACyAJQQFqIQkgA0EEaiEDDAALAAsgAiABOwEAIAEgBE4NBUEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRg0GIAQgAygCAEYEQCADIAE2AgALIAlBAWohCSADQQRqIQMMAAsACyACQQJrLgEAIgNBAEoEQCAEQQJ0IABqQQRrKAIAIgEgA0H//wNxQQJ0IABqQQRrKAIAIgRKBEAgAiAEOwEAQQAhCSAKQQAgCkEAShshESAAIQMDQCAJIBFGBEAgBCEBDAcLIAEgAygCAEYEQCADIAQ2AgALIAlBAWohCSADQQRqIQMMAAsACyACIAE7AQAgASAETg0EQQAhCSAKQQAgCkEAShshESAAIQMDQCAJIBFGDQUgBCADKAIARgRAIAMgATYCAAsgCUEBaiEJIANBBGohAwwACwALIAIgBDsBACAEQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA9qNgIAIAsgA0EQayIBKAIASARAIAEgCzYCAAsgA0EEayAPNgIADAULIAFBAEoEQCACIAE7AQAgA0EcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACAPajYCACALIANBDGsiASgCAEoEQCABIAs2AgALIANBBGsgDzYCAAwFCyACQQJrLwEAIgNBEHRBEHUiAUEASgRAIAIgATsBACADQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA9qNgIAIANBDGsiASgCACALTg0FIAEgCzYCAAwFCyAKQYCAAk4EQEEAQQNB5AtBABA2QX8hCQwJCyACIApBAWoiATsBACAAIApBAnRqIAFBEHRBEHU2AgAgDSAKQRxsaiIDIA82AhggAyAPNgIUIAMgCzYCECADIAs2AgwgAyAPNgIIIAMgCzYCBCADQQE2AgAgASEKDAQLIAJBADsBACAOQQA6AAAMAwsgDkECaiEOIAJBBGohAiAWQQJqIQcgD0EBaiEPDAULIAFBEHRBEHVBHGwgDWoiA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgC2o2AgAgA0EUayIBIAEoAgAgD2o2AgAMAQsgAUEQdEEQdUEcbCANaiIDQQRrIA82AgAgA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgC2o2AgAgA0EUayIBIAEoAgAgD2o2AgALIA5BAWohDiACQQJqIQIgB0EBaiEHIAtBAWohCwwACwALCyAKQQAgCkEAShtBAWohAkEBIQNBASEHIAAhCwNAIAIgA0cEQAJAIAMgCygCACIBRgRAIAciCUEBaiEHDAELIAFBAnQgAGpBBGsoAgAhCQsgCyAJNgIAIAtBBGohCyADQQFqIQMMAQsLIAwgB0EBayILNgIIQQAgC0UNARogDEGMgAhqIQkgDEEMakEAIAtBAnQQOSEHIAxBkIAoakEAIAtBBHQQOSEFQQAhAwNAIAMgC04EQEEAIQsgCkEAIApBAEobIQQDQCAEIAtGBEBBACEJIAwoAggiAEEAIABBAEobIQBBACEDA0AgACADRg0FIAUgA0EEdGoiASABKwMAIAcgA0ECdGooAgC3IhejOQMAIAEgASsDCCAXozkDCCADQQFqIQMMAAsACyAHIAAgC0ECdGooAgBBAWsiAkECdCIDaiIBIAEoAgAgDSALQRxsaiIGKAIAajYCACAFIAJBBHQiAWoiAiACKwMAIAYoAgS3oDkDACACIAIrAwggBigCCLegOQMIIAYoAgwiAiABIAlqIgEoAgBIBEAgASACNgIACyAGKAIQIgIgCSADQQJ0IgNBBHJqIgEoAgBKBEAgASACNgIACyAGKAIUIgIgCSADQQhyaiIBKAIASARAIAEgAjYCAAsgBigCGCICIAkgA0EMcmoiASgCAEoEQCABIAI2AgALIAtBAWohCwwACwAFIAkgA0EEdGoiASAINgIAIAFBADYCBCABIAY2AgggAUEANgIMIANBAWohAyAMKAIIIQsMAQsACwALIAkLDwsCfyAAIQYgASIIQQJtIhBBACAQQQBKGyEAIAcoAgAiAyACQQJtIhRBAWsiCiAQbEEBdGohCUEAIQEgAyEEA0AgACABRwRAIAlBADsBACAEQQA7AQAgAUEBaiEBIARBAmohBCAJQQJqIQkMAQsLIBRBACAUQQBKGyECIAMgEEEBayIMQQF0aiEJQQAhASADIQQDQCABIAJHBEAgCUEAOwEAIARBADsBACABQQFqIQEgCSAQQQF0IgBqIQkgACAEaiEEDAELCyAKQQEgCkEBShshFSAMQQEgDEEBShshFiAHQZCA0ABqIQ4gB0GQgMgAaiEAIBBBAWoiASAHKAIEaiEMIAhBAXQgBmpBAmohEiADIAFBAXRqIQRBACAQa0EBdCERQQAhBkEBIQ0CQANAIA0gFUcEQEEBIQkDQAJAAkACQCAJIBZHBEAgBSASLQAATgRAIAxB/wE6AAAgBCARaiIDLwEAIgJBEHRBEHUiAUEASgRAIAQgATsBACACQRxsIA5qIgJBBGsgDTYCACACQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACANajYCAAwFCyADQQJrLwEAIgFBEHRBEHUhAiADLgECIgNBAEoEQCACQQBKBEAgA0ECdCAAakEEaygCACICIAFBAnQgAGpBBGsoAgAiA0oEQCAEIAM7AQBBACEKIAZBACAGQQBKGyELIAAhAQNAIAogC0YEQCADIQIMCAsgAiABKAIARgRAIAEgAzYCAAsgCkEBaiEKIAFBBGohAQwACwALIAQgAjsBACACIANODQVBACEKIAZBACAGQQBKGyELIAAhAQNAIAogC0YNBiADIAEoAgBGBEAgASACNgIACyAKQQFqIQogAUEEaiEBDAALAAsgBEECay4BACIBQQBKBEAgA0ECdCAAakEEaygCACICIAFB//8DcUECdCAAakEEaygCACIDSgRAIAQgAzsBAEEAIQogBkEAIAZBAEobIQsgACEBA0AgCiALRgRAIAMhAgwHCyACIAEoAgBGBEAgASADNgIACyAKQQFqIQogAUEEaiEBDAALAAsgBCACOwEAIAIgA04NBEEAIQogBkEAIAZBAEobIQsgACEBA0AgCiALRg0FIAMgASgCAEYEQCABIAI2AgALIApBAWohCiABQQRqIQEMAAsACyAEIAM7AQAgA0EcbCAOaiICQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACANajYCACAJIAJBEGsiASgCAEgEQCABIAk2AgALIAJBBGsgDTYCAAwFCyACQQBKBEAgBCACOwEAIAFBHGwgDmoiAkEcayIBIAEoAgBBAWo2AgAgAkEYayIBIAEoAgAgCWo2AgAgAkEUayIBIAEoAgAgDWo2AgAgCSACQQxrIgEoAgBKBEAg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IAcgFGohFkEBIQsDQAJAAkACQCALIBJHBEAgBSAHLQAASARAIA5B/wE6AAAgAiAVaiIELwEAIgNBEHRBEHUiAUEASgRAIAIgATsBACADQRxsIA1qIgNBBGsgDzYCACADQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACAPajYCAAwFCyAEQQJrLwEAIgNBEHRBEHUhASAELgECIgRBAEoEQCABQQBKBEAgBEECdCAAakEEaygCACIBIANBAnQgAGpBBGsoAgAiBEoEQCACIAQ7AQBBACEJIApBACAKQQBKGyERIAAhAwNAIAkgEUYEQCAEIQEMCAsgASADKAIARgRAIAMgBDYCAAsgCUEBaiEJIANBBGohAwwACwALIAIgATsBACABIARODQVBACEJIApBACAKQQBKGyERIAAhAwNAIAkgEUYNBiAEIAMoAgBGBEAgAyABNgIACyAJQQFqIQkgA0EEaiEDDAALAAsgAkECay4BACIDQQBKBEAgBEECdCAAakEEaygCACIBIANB//8DcUECdCAAakEEaygCACIESgRAIAIgBDsBAEEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRgRAIAQhAQwHCyABIAMoAgBGBEAgAyAENgIACyAJQQFqIQkgA0EEaiEDDAALAAsgAiABOwEAIAEgBE4NBEEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRg0FIAQgAygCAEYEQCADIAE2AgALIAlBAWohCSADQQRqIQMMAAsACyACIAQ7AQAgBEEcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACAPajYCACALIANBEGsiASgCAEgEQCABIAs2AgALIANBBGsgDzYCAAwFCyABQQBKBEAgAiABOwEAIANBHGwgDWoiA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgC2o2AgAgA0EUayIBIAEoAgAgD2o2AgAgCyADQQxrIgEoAgBKBEAgASALNgIACyADQQRrIA82AgAMBQsgAkECay8BACIDQRB0QRB1IgFBAEoEQCACIAE7AQAgA0EcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgC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ACACIANODQRBACEKIAZBACAGQQBKGyELIAAhAQNAIAogC0YNBSADIAEoAgBGBEAgASACNgIACyAKQQFqIQogAUEEaiEBDAALAAsgBCADOwEAIANBHGwgDmoiAkEcayIBIAEoAgBBAWo2AgAgAkEYayIBIAEoAgAgCWo2AgAgAkEUayIBIAEoAgAgDWo2AgAgCSACQRBrIgEoAgBIBEAgASAJNgIACyACQQRrIA02AgAMBQsgAkEASgRAIAQgAjsBACABQRxsIA5qIgJBHGsiASABKAIAQQFqNgIAIAJBGGsiASABKAIAIAlqNgIAIAJBFGsiASABKAIAIA1qNgIAIAkgAkEMayIBKAIASgRAIAEgCTYCAAsgAkEEayANNgIADAULIARBAmsvAQAiAkEQdEEQdSIBQQBKBEAgBCABOwEAIAJBHGwgDmoiAkEcayIBIAEoAgBBAWo2AgAgAkEYayIBIAEoAgAgCWo2AgAgAkEUayIBIAEoAgAgDWo2AgAgAkEMayIBKAIAIAlODQUgASAJNgIADAULIAZBgIACTgRAQQBBA0HkC0EAEDZBfyEKDAkLIAQgBkEBaiIBOwEAIAAgBkECdGogAUEQdEEQdTYCACAOIAZBHGxqIgIgDTYCGCACIA02AhQgAiAJNgIQIAIgCTYCDCACIA02AgggAiAJNgIEIAJBATYCACABIQYMBAsgBEEAOwEAIAxBADoAAAwDCyAMQQJqIQwgBEEEaiEEIA1BAWohDSAIIBJqQQRqIRIMBQsgAkEQdEEQdUEcbCAOaiICQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACANajYCAAwBCyACQRB0QRB1QRxsIA5qIgJBBGsgDTYCACACQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACANajYCAAsgDEEBaiEMIARBAmohBCASQQJqIRIgCUEBaiEJDAALAAsLIAZBACAGQQBKG0EBaiEDQQEhAUEBIQwgACEJA0AgASADRwRAAkAgASAJKAIAIgJGBEAgDCIKQQFqIQwMAQsgAkECdCAAakEEaygCACEKCyAJIAo2AgAgCUEEaiEJIAFBAWohAQwBCwsgByAMQQFrIgk2AghBACAJRQ0BGiAHQYyACGohDCAH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BEHopgQoAgBBAWoiBTYCACAAIAU2AgAgAwRAA0AgAiAEQQN0aiIGKAIARQRAIAYgBTYCACACIARBA3RqIgAgATYCBCAAQQA2AgggAyQBIAIPCyAEQQFqIgQgA0cNAAsLIAAgASACIANBBHRBCHIQ0AIgA0EBdCIAEPYEIQEgACQBIAELHwBB4KYEKAIARQRAQeCmBCAANgIAQeSmBCABNgIACwu+DwIFfw9+IwBB0AJrIgUkACAEQv///////z+DIQsgAkL///////8/gyEKIAIgBIVCgICAgICAgICAf4MhDSAEQjCIp0H//wFxIQgCQAJAIAJCMIinQf//AXEiCUH//wFrQYKAfk8EQCAIQf//AWtBgYB+Sw0BCyABUCACQv///////////wCDIgxCgICAgICAwP//AFQgDEKAgICAgIDA//8AURtFBEAgAkKAgICAgIAghCENDAILIANQIARC////////////AIMiAkKAgICAgIDA//8AVCACQoCAgICAgMD//wBRG0UEQCAEQoCAgICAgCCEIQ0gAyEBDAILIAEgDEKAgICAgIDA//8AhYRQBEAgAyACQoCAgICAgMD//wCFhFAEQEIAIQFCgICAgICA4P//ACENDAMLIA1CgICAgICAwP//AIQhDUIAIQEMAgsgAyACQoCAgICAgMD//wCFhFAEQEIAIQEMAgsgASAMhFAEQEKAgICAgIDg//8AIA0gAiADhFAbIQ1CACEBDAILIAIgA4RQBEAgDUKAgICAgIDA//8AhCENQgAhAQwCCyAMQv///////z9YBEAgBUHAAmogASAKIAEgCiAKUCIGG3kgBkEGdK18pyIGQQ9rEIgBQRAgBmshBiAFKQPIAiEKIAUpA8ACIQELIAJC////////P1YNACAFQbACaiADIAsgAyALIAtQIgcbeSAHQQZ0rXynIgdBD2sQiAEgBiAHakEQayEGIAUpA7gCIQsgBSkDsAIhAwsgBUGgAmogC0KAgICAgIDAAIQiEkIPhiADQjGIhCICQgBCgICAgLDmvIL1ACACfSIEQgAQggEgBUGQAmpCACAFKQOoAn1CACAEQgAQggEgBUGAAmogBSkDmAJCAYYgBSkDkAJCP4iEIgRCACACQgAQggEgBUHwAWogBEIAQgAgBSkDiAJ9QgAQggEgBUHgAWogBSkD+AFCAYYgBSkD8AFCP4iEIgRCACACQgAQggEgBUHQAWogBEIAQgAgBSkD6AF9QgAQggEgBUHAAWogBSkD2AFCAYYgBSkD0AFCP4iEIgRCACACQgAQggEgBUGwAWogBEIAQgAgBSkDyAF9QgAQggEgBUGgAWogAkIAIAUpA7gBQgGGIAUpA7ABQj+IhEIBfSICQgAQggEgBUGQAWogA0IPhkIAIAJCABCCASAFQfAAaiACQgBCACAFKQOoASAFKQOgASIMIAUpA5gBfCIEIAxUrXwgBEIBVq18fUIAEIIBIAVBgAFqQgEgBH1CACACQgAQggEgBiAJIAhraiEGAn8gBSkDcCITQgGGIg4gBSkDiAEiD0IBhiAFKQOAAUI/iIR8IhBC5+wAfSIUQiCIIgIgCkKAgICAgIDAAIQiFUIBhiIWQiCIIgR+IhEgAUIBhiIMQiCIIgsgECAUVq0gDiAQVq0gBSkDeEIBhiATQj+IhCAPQj+IfHx8QgF9IhNCIIgiEH58Ig4gEVStIA4gDiATQv////8PgyITIAFCP4giFyAKQgGGhEL/////D4MiCn58Ig5WrXwgBCAQfnwgBCATfiIRIAogEH58Ig8gEVStQiCGIA9CIIiEfCAOIA4gD0IghnwiDlatfCAOIA4gFEL/////D4MiFCAKfiIRIAIgC358Ig8gEVStIA8gDyATIAxC/v///w+DIhF+fCIPVq18fCIOVq18IA4gBCAUfiIYIBAgEX58IgQgAiAKfnwiCiALIBN+fCIQQiCIIAogEFatIAQgGFStIAQgClatfHxCIIaEfCIEIA5UrXwgBCAPIAIgEX4iAiALIBR+fCILQiCIIAIgC1atQiCGhHwiAiAPVK0gAiAQQiCGfCACVK18fCICIARUrXwiBEL/////////AFgEQCAWIBeEIRUgBUHQAGogAiAEIAMgEhCCASABQjGGIAUpA1h9IAUpA1AiAUIAUq19IQpCACABfSELIAZB/v8AagwBCyAFQeAAaiAEQj+GIAJCAYiEIgIgBEIBiCIEIAMgEhCCASABQjCGIAUpA2h9IAUpA2AiDEIAUq19IQpCACAMfSELIAEhDCAGQf//AGoLIgZB//8BTgRAIA1CgICAgICAwP//AIQhDUIAIQEMAQsCfiAGQQBKBEAgCkIBhiALQj+IhCEKIARC////////P4MgBq1CMIaEIQwgC0IBhgwBCyAGQY9/TARAQgAhAQwCCyAFQUBrIAIgBEEBIAZrEP4BIAVBMGogDCAVIAZB8ABqEIgBIAVBIGogAyASIAUpA0AiAiAFKQNIIgwQggEgBSkDOCAFKQMoQgGGIAUpAyAiAUI/iIR9IAUpAzAiBCABQgGGIgFUrX0hCiAEIAF9CyEEIAVBEGogAyASQgNCABCCASAFIAMgEkIFQgAQggEgDCACIAIgAyACQgGDIgEgBHwiA1QgCiABIANWrXwiASASViABIBJRG618IgJWrXwiBCACIAIgBEKAgICAgIDA//8AVCADIAUpAxBWIAEgBSkDGCIEViABIARRG3GtfCICVq18IgQgAiAEQoCAgICAgMD//wBUIAMgBSkDAFYgASAFKQMIIgNWIAEgA1Ebca18IgEgAlStfCANhCENCyAAIAE3AwAgACANNwMIIAVB0AJqJAALxAECAX8CfkF/IQMCQCAAQgBSIAFC////////////AIMiBEKAgICAgIDA//8AViAEQoCAgICAgMD//wBRGw0AQQAgAkL///////////8AgyIFQoCAgICAgMD//wBWIAVCgICAgICAwP//AFEbDQAgACAEIAWEhFAEQEEADwsgASACg0IAWQRAQQAgASACUyABIAJRGw0BIAAgASAChYRCAFIPCyAAQgBSIAEgAlUgASACURsNACAAIAEgAoWEQgBSIQMLIAMLiQwBBn8gACABaiEFAkACQCAAKAIEIgJBAXENACACQQNxRQ0BIAAoAgAiAiABaiEBAkAgACACayIAQYSjBCgCAEcEQCACQf8BTQRAIAAoAggiBCACQQN2IgJBA3RBmKMEakYaIAAoAgwiAyAERw0CQfCiBEHwogQoAgBBfiACd3E2AgAMAwsgACgCGCEGAkAgACAAKAIMIgJHBEAgACgCCCIDQYCjBCgCAEkaIAMgAjYCDCACIAM2AggMAQsCQCAAQRRqIgQoAgAiAw0AIABBEGoiBCgCACIDDQBBACECDAELA0AgBCEHIAMiAkEUaiIEKAIAIgMNACACQRBqIQQgAigCECIDDQALIAdBADYCAAsgBkUNAgJAIAAoAhwiBEECdEGgpQRqIgMoAgAgAEYEQCADIAI2AgAgAg0BQfSiBEH0ogQoAgBBfiAEd3E2AgAMBAsgBkEQQRQgBigCECAARhtqIAI2AgAgAkUNAwsgAiAGNgIYIAAoAhAiAwRAIAIgAzYCECADIAI2AhgLIAAoAhQiA0UNAiACIAM2AhQgAyACNgIYDAILIAUoAgQiAkEDcUEDRw0BQfiiBCABNgIAIAUgAkF+cTYCBCAAIAFBAXI2AgQgBSABNgIADwsgBCADNgIMIAMgBDYCCAsCQCAFKAIEIgJBAnFFBEBBiKMEKAIAIAVGBEBBiKMEIAA2AgBB/KIEQfyiBCgCACABaiIBNgIAIAAgAUEBcjYCBCAAQYSjBCgCAEcNA0H4ogRBADYCAEGEowRBADYCAA8LQYSjBCgCACAFRgRAQYSjBCAANgIAQfiiBEH4ogQoAgAgAWoiATYCACAAIAFBAXI2AgQgACABaiABNgIADwsgAkF4cSABaiEBAkAgAkH/AU0EQCAFKAIIIgQgAkEDdiICQQN0QZijBGpGGiAEIAUoAgwiA0YEQEHwogRB8KIEKAIAQX4gAndxNgIADAILIAQgAzYCDCADIAQ2AggMAQsgBSgCGCEGAkAgBSAFKAIMIgJHBEAgBSgCCCIDQYCjBCgCAEkaIAMgAjYCDCACIAM2AggMAQsCQCAFQRRqIgMoAgAiBA0AIAVBEGoiAygCACIEDQBBACECDAELA0AgAyEHIAQiAkEUaiIDKAIAIgQNACACQRBqIQMgAigCECIEDQALIAdBADYCAAsgBkUNAAJAIAUoAhwiBEECdEGgpQRqIgMoAgAgBUYEQCADIAI2AgAgAg0BQfSiBEH0ogQoAgBBfiAEd3E2AgAMAgsgBkEQQRQgBigCECAFRhtqIAI2AgAgAkUNAQsgAiAGNgIYIAUoAhAiAwRAIAIgAzYCECADIAI2AhgLIAUoAhQiA0UNACACIAM2AhQgAyACNgIYCyAAIAFBAXI2AgQgACABaiABNgIAIABBhKMEKAIARw0BQfiiBCABNgIADwsgBSACQX5xNgIEIAAgAUEBcjYCBCAAIAFqIAE2AgALIAFB/wFNBEAgAUF4cUGYowRqIQICf0HwogQoAgAiA0EBIAFBA3Z0IgFxRQRAQfCiBCABIANyNgIAIAIMAQsgAigCCAshASACIAA2AgggASAANgIMIAAgAjYCDCAAIAE2AggPC0EfIQQgAUH///8HTQRAIAFBCHYiAiACQYD+P2pBEHZBCHEiBHQiAiACQYDgH2pBEHZBBHEiA3QiAiACQYCAD2pBEHZBAnEiAnRBD3YgAyAEciACcmsiAkEBdCABIAJBFWp2QQFxckEcaiEECyAAIAQ2AhwgAEIANwIQIARBAnRBoKUEaiEHAkACQEH0ogQoAgAiA0EBIAR0IgJxRQRAQfSiBCACIANyNgIAIAcgADYCACAAIAc2AhgMAQsgAUEAQRkgBEEBdmsgBEEfRht0IQQgBygCACECA0AgAiIDKAIEQXhxIAFGDQIgBEEddiECIARBAXQhBCADIAJBBHFqIgdBEGooAgAiAg0ACyAHIAA2AhAgACADNgIYCyAAIAA2AgwgACAANgIIDwsgAygCCCIBIAA2AgwgAyAANgIIIABBADYCGCAAIAM2AgwgACABNgIICwsSACAARQRAQQAPCyAAIAEQ2AMLdAEDfyAARQRAQQBBA0GGwABBABA2DwsgACgCACIBRQRADwsgASgCABAxQQAhAQN/IAAoAgAiAygCCCECIAMoAgwgAUwEfyACEDEgACgCABAxIABBADYCAEEABSACIAFBDGxqKAIAEDEgAUEBaiEBDAELCxoL5R4CD38FfiMAQZABayIEJAAgBEEAQZABEDkiA0F/NgJMIAMgADYCLCADQYMCNgIgIAMgADYCVCABIQQgAiEOQQAhACMAQbACayIGJAAgAygCTBoCQAJAAkACQCADKAIEDQAgAxCRAxogAygCBA0ADAELIAQtAAAiAUUNAgJAAkACQAJAA0ACQAJAIAFB/wFxEN0BBEADQCAEIgFBAWohBCABLQABEN0BDQALIANCABDEAQNAAn8gAygCBCICIAMoAmhHBEAgAyACQQFqNgIEIAItAAAMAQsgAxBRCxDdAQ0ACyADKAIEIQQgAykDcEIAWQRAIAMgBEEBayIENgIECyAEIAMoAixrrCADKQN4IBR8fCEUDAELAn8CQAJAIAQtAABBJUYEQCAELQABIgFBKkYNASABQSVHDQILIANCABDEAQJAIAQtAABBJUYEQANAAn8gAygCBCIBIAMoAmhHBEAgAyABQQFqNgIEIAEtAAAMAQsgAxBRCyIBEN0BDQALIARBAWohBAwBCyADKAIEIgEgAygCaEcEQCADIAFBAWo2AgQgAS0AACEBDAELIAMQUSEBCyAELQAAIAFHBEAgAykDcEIAWQRAIAMgAygCBEEBazYCBAsgAUEATg0NQQAhByANDQ0MCwsgAygCBCADKAIsa6wgAykDeCAUfHwhFCAEIQEMAwtBACEIIARBAmoMAQsCQCABEK4BRQ0AIAQtAAJBJEcNACAELQABQTBrIQEjAEEQayICIA42AgwgAiAOIAFBAnRBBGtBACABQQFLG2oiAUEEajYCCCABKAIAIQggBEEDagwBCyAOKAIAIQggDkEEaiEOIARBAWoLIQFBACEMQQAhBCABLQAAEK4BBEADQCABLQAAIARBCmxqQTBrIQQgAS0AASECIAFBAWohASACEK4BDQALCyABLQAAIgpB7QBHBH8gAQVBACEJIAhBAEchDCABLQABIQpBACEAIAFBAWoLIgJBAWohAUEDIQUgDCEHAkACQAJAAkACQAJAIApBwQBrDjoEDAQMBAQEDAwMDAMMDAwMDAwEDAwMDAQMDAQMDAwMDAQMBAQEBAQABAUMAQwEBAQMDAQCBAwMBAwCDAsgAkECaiABIAItAAFB6ABGIgIbIQFBfkF/IAIbIQUMBAsgAkECaiABIAItAAFB7ABGIgIbIQFBA0EBIAIbIQUMAwtBASEFDAILQQIhBQwBC0EAIQUgAiEBC0EBIAUgAS0AACICQS9xQQNGIgUbIQ8CQCACQSByIAIgBRsiC0HbAEYNAAJAIAtB7gBHBEAgC0HjAEcNASAEQQEgBEEBShshBAwCCyAIIA8gFBD+BAwCCyADQgAQxAEDQAJ/IAMoAgQiAiADKAJoRwRAIAMgAkEBajYCBCACLQAADAELIAMQUQsQ3QENAAsgAygCBCECIAMpA3BCAFkEQCADIAJBAWsiAjYCBAsgAiADKAIsa6wgAykDeCAUfHwhFAsgAyAErCISEMQBAkAgAygCBCICIAMoAmhHBEAgAyACQQFqNgIEDAELIAMQUUEASA0GCyADKQNwQgBZBEAgAyADKAIEQQFrNgIEC0EQIQICQAJAAkACQAJAAkACQAJAAkACQCALQdgAaw4hBgkJAgkJCQkJAQkCBAEBAQkFCQkJCQkDBgkJAgkECQkGAAsgC0HBAGsiAkEGS0EBIAJ0QfEAcUVyDQgLIAZBCGogAyAPQQAQgAUgAykDeEIAIAMoAgQgAygCLGusfVINBQwMCyALQRByQfMARgRAIAZBIGpBf0GBAhA5GiAGQQA6ACAgC0HzAEcNBiAGQQA6AEEgBkEAOgAuIAZBADYBKgwGCyAGQSBqIAEtAAEiAkHeAEYiBUGBAhA5GiAGQQA6ACAgAUECaiABQQFqIAUbIQcCfwJAAkAgAUECQQEgBRtqLQAAIgFBLUcEQCABQd0ARg0BIAJB3gBHIQUgBwwDCyAGIAJB3gBHIgU6AE4MAQsgBiACQd4ARyIFOgB+CyAHQQFqCyEBA0ACQCABLQAAIgJBLUcEQCACRQ0PIAJB3QBGDQgMAQtBLSECIAEtAAEiB0UgB0HdAEZyDQAgAUEBaiEKAkAgByABQQFrLQAAIgFNBEAgByECDAELA0AgAUEBaiIBIAZBIGpqIAU6AAAgASAKLQAAIgJJDQALCyAKIQELIAIgBmogBToAISABQQFqIQEMAAsAC0EIIQIMAgtBCiECDAELQQAhAgtCACESQQAhBUEAIQdBACEKIwBBEGsiECQAAkAgAkEBRyACQSRNcUUEQEHYmARBHDYCAAwBCwNAAn8gAygCBCIEIAMoAmhHBEAgAyAEQQFqNgIEIAQtAAAMAQsgAxBRCyIEEN0BDQALAkACQCAEQStrDgMAAQABC0F/QQAgBEEtRhshCiADKAIEIgQgAygCaEcEQCADIARBAWo2AgQgBC0AACEEDAELIAMQUSEECwJAAkACQAJAIAJBAEcgAkEQR3EgBEEwR3JFBEACfyADKAIEIgQgAygCaEcEQCADIARBAWo2AgQgBC0AAAwBCyADEFELIgRBX3FB2ABGBEBBECECAn8gAygCBCIEIAMoAmhHBEAgAyAEQQFqNgIEIAQtAAAMAQsgAxBRCyIEQdGNA2otAABBEEkNAyADKQNwQgBZBEAgAyADKAIEQQFrNgIECyADQgAQxAEMBgsgAg0BQQghAgwCCyACQQogAhsiAiAEQdGNA2otAABLDQAgAykDcEIAWQRAIAMgAygCBEEBazYCBAsgA0IAEMQBQdiYBEEcNgIADAQLIAJBCkcNACAEQTBrIgVBCU0EQEEAIQIDQCACQQpsIAVqIgJBmbPmzAFJAn8gAygCBCIEIAMoAmhHBEAgAyAEQQFqNgIEIAQtAAAMAQsgAxBRCyIEQTBrIgVBCU1xDQALIAKtIRILAkAgBUEJSw0AIBJCCn4hEyAFrSEVA0ACfyADKAIEIgIgAygCaEcEQCADIAJBAWo2AgQgAi0AAAwBCyADEFELIgRBMGsiBUEJSyATIBV8IhJCmrPmzJmz5swZWnINASASQgp+IhMgBa0iFUJ/hVgNAAtBCiECDAILQQohAiAFQQlNDQEMAgsgAiACQQFrcQRAIARB0Y0Dai0AACIHIAJJBEADQCACIAVsIAdqIgVBx+PxOEkCfyADKAIEIgQgAygCaEcEQCADIARBAWo2AgQgBC0AAAwBCyADEFELIgRB0Y0Dai0AACIHIAJJcQ0ACyAFrSESCyACIAdNDQEgAq0hEwNAIBIgE34iFSAHrUL/AYMiFkJ/hVYNAiAVIBZ8IRIgAgJ/IAMoAgQiBCADKAJoRwRAIAMgBEEBajYCBCAELQAADAELIAMQUQsiBEHRjQNqLQAAIgdNDQIgECATQgAgEkIAEIIBIBApAwhQDQALDAELIAJBF2xBBXZBB3FB0Y8DaiwAACERIARB0Y0Dai0AACIFIAJJBEADQCAHIBF0IAVyIgdBgICAwABJAn8gAygCBCIEIAMoAmhHBEAgAyAEQQFqNgIEIAQtAAAMAQsgAxBRCyIEQdGNA2otAAAiBSACSXENAAsgB60hEgsgAiAFTQ0AQn8gEa0iE4giFSASVA0AA0AgBa1C/wGDIBIgE4aEIRIgAgJ/IAMoAgQiBCADKAJoRwRAIAMgBEEBajYCBCAELQAADAELIAMQUQsiBEHRjQNqLQAAIgVNDQEgEiAVWA0ACwsgAiAEQdGNA2otAABNDQADQCACAn8gAygCBCIEIAMoAmhHBEAgAyAEQQFqNgIEIAQtAAAMAQsgAxBRC0HRjQNqLQAASw0AC0HYmARBxAA2AgBBACEKQn8hEgsgAykDcEIAWQRAIAMgAygCBEEBazYCBAtBACASQn9RIApBAXIbBEBB2JgEQcQANgIAQn4hEgwBCyASIAqsIhOFIBN9IRILIBBBEGokACADKQN4QgAgAygCBCADKAIsa6x9UQ0HIAhFIAtB8ABHckUEQCAIIBI+AgAMAwsgCCAPIBIQ/gQMAgsgCEUNASAGKQMQIRIgBikDCCETAkACQAJAIA8OAwABAgQLIAggEyASEPQEOAIADAMLIAggEyASENYDOQMADAILIAggEzcDACAIIBI3AwgMAQsgBEEBakEfIAtB4wBGIgobIQUCQCAPQQFGBEAgCCECIAwEQCAFQQJ0EDciAkUNBwsgBkIANwOoAkEAIQQDQCACIQACQANAAn8gAygCBCICIAMoAmhHBEAgAyACQQFqNgIEIAItAAAMAQsgAxBRCyICIAZqLQAhRQ0BIAYgAjoAGyAGQRxqIAZBG2pBASAGQagCahCIAyICQX5GDQBBACEJIAJBf0YNCyAABEAgACAEQQJ0aiAGKAIcNgIAIARBAWohBAsgDCAEIAVGcUUNAAtBASEHIAAgBUEBdEEBciIFQQJ0ENACIgINAQwLCwtBACEJIAAhBSAGQagCagR/IAYoAqgCBUEACw0IDAELIAwEQEEAIQQgBRA3IgJFDQYDQCACIQADQAJ/IAMoAgQiAiADKAJoRwRAIAMgAkEBajYCBCACLQAADAELIAMQUQsiAiAGai0AIUUEQEEAIQUgACEJDAQLIAAgBGogAjoAACAEQQFqIgQgBUcNAAtBASEHIAAgBUEBdEEBciIFENACIgINAAsgACEJQQAhAAwJC0EAIQQgCARAA0ACfyADKAIEIgAgAygCaEcEQCADIABBAWo2AgQgAC0AAAwBCyADEFELIgAgBmotACEEQCAEIAhqIAA6AAAgBEEBaiEEDAEFQQAhBSAIIgAhCQwDCwALAAsDQAJ/IAMoAgQiACADKAJoRwRAIAMgAEEBajYCBCAALQAADAELIAMQUQsgBmotACENAAtBACEAQQAhCUEAIQULIAMoAgQhAiADKQNwQgBZBEAgAyACQQFrIgI2AgQLIAMpA3ggAiADKAIsa6x8IhNQIAtB4wBGIBIgE1Jxcg0CIAwEQCAIIAA2AgALAkAgCg0AIAUEQCAFIARBAnRqQQA2AgALIAlFBEBBACEJDAELIAQgCWpBADoAAAsgBSEACyADKAIEIAMoAixrrCADKQN4IBR8fCEUIA0gCEEAR2ohDQsgAUEBaiEEIAEtAAEiAQ0BDAgLCyAFIQAMAQtBASEHQQAhCUEAIQAMAgsgDCEHDAMLIAwhBwsgDQ0BC0F/IQ0LIAdFDQAgCRAxIAAQMQsgBkGwAmokACANIQAgA0GQAWokACAAC0MAAkAgAEUNAAJAAkACQAJAIAFBAmoOBgABAgIEAwQLIAAgAjwAAA8LIAAgAj0BAA8LIAAgAj4CAA8LIAAgAjcDAAsLkAQCA38BfgJAAkACfwJAAkACfyAAKAIEIgIgACgCaEcEQCAAIAJBAWo2AgQgAi0AAAwBCyAAEFELIgJBK2sOAwABAAELIAJBLUYgAUUCfyAAKAIEIgMgACgCaEcEQCAAIANBAWo2AgQgAy0AAAwBCyAAEFELIgNBOmsiAUF1S3INARogACkDcEIAUw0CIAAgACgCBEEBazYCBAwCCyACQTprIQEgAiEDQQALIQQgAUF2SQ0AIANBMGsiAUEKSQRAQQAhAgNAIAMgAkEKbGohAQJ/IAAoAgQiAiAAKAJoRwRAIAAgAkEBajYCBCACLQAADAELIAAQUQshAyABQTBrIQIgAkHMmbPmAEggA0EwayIBQQlNcQ0ACyACrCEFCwJAIAFBCk8NAANAIAOtIAVCCn58QjB9IQUCfyAAKAIEIgEgACgCaEcEQCAAIAFBAWo2AgQgAS0AAAwBCyAAEFELIgNBMGsiAUEJSw0BIAVCro+F18fC66MBUw0ACwsgAUEKSQRAA0ACfyAAKAIEIgEgACgCaEcEQCAAIAFBAWo2AgQgAS0AAAwBCyAAEFELQTBrQQpJDQALCyAAKQNwQgBZBEAgACAAKAIEQQFrNgIEC0IAIAV9IAUgBBshBQwBC0KAgICAgICAgIB/IQUgACkDcEIAUw0AIAAgACgCBEEBazYCBEKAgICAgICAgIB/DwsgBQvRMgMQfwd+AXwjAEEwayIMJAACQCACQQJNBEAgAkECdCICQbyNA2ooAgAhDyACQbCNA2ooAgAhDgNAAn8gASgCBCICIAEoAmhHBEAgASACQQFqNgIEIAItAAAMAQsgARBRCyICEN0BDQALQQEhBgJAAkAgAkEraw4DAAEAAQtBf0EBIAJBLUYbIQYgASgCBCICIAEoAmhHBEAgASACQQFqNgIEIAItAAAhAgwBCyABEFEhAgsCQAJAA0AgBUHZ5AFqLAAAIAJBIHJGBEACQCAFQQZLDQAgASgCBCICIAEoAmhHBEAgASACQQFqNgIEIAItAAAhAgwBCyABEFEhAgsgBUEBaiIFQQhHDQEMAgsLIAVBA0cEQCAFQQhGDQEgA0UgBUEESXINAiAFQQhGDQELIAEpA3AiFEIAWQRAIAEgASgCBEEBazYCBAsgA0UgBUEESXINACAUQgBTIQIDQCACRQRAIAEgASgCBEEBazYCBAsgBUEBayIFQQNLDQALC0IAIRQjAEEQayICJAACfiAGskMAAIB/lLwiA0H/////B3EiAUGAgIAEa0H////3B00EQCABrUIZhkKAgICAgICAwD98DAELIAOtQhmGQoCAgICAgMD//wCEIAFBgICA/AdPDQAaQgAgAUUNABogAiABrUIAIAFnIgFB0QBqEIgBIAIpAwAhFCACKQMIQoCAgICAgMAAhUGJ/wAgAWutQjCGhAshFSAMIBQ3AwAgDCAVIANBgICAgHhxrUIghoQ3AwggAkEQaiQAIAwpAwghFCAMKQMAIRUMAgsCQAJAAkAgBQ0AQQAhBQNAIAVB7PoBaiwAACACQSByRw0BAkAgBUEBSw0AIAEoAgQiAiABKAJoRwRAIAEgAkEBajYCBCACLQAAIQIMAQsgARBRIQILIAVBAWoiBUEDRw0ACwwBCwJAAkAgBQ4EAAEBAgELAkAgAkEwRw0AAn8gASgCBCIFIAEoAmhHBEAgASAFQQFqNgIEIAUtAAAMAQsgARBRC0FfcUHYAEYEQCMAQbADayICJAACfyABKAIEIgUgASgCaEcEQCABIAVBAWo2AgQgBS0AAAwBCyABEFELIQUCQAJ/A0AgBUEwRwRAAkAgBUEuRw0EIAEoAgQiBSABKAJoRg0AIAEgBUEBajYCBCAFLQAADAMLBSABKAIEIgUgASgCaEcEf0EBIQogASAFQQFqNgIEIAUtAAAFQQEhCiABEFELIQUMAQsLIAEQUQshBUEBIQQgBUEwRw0AA0AgF0IBfSEXAn8gASgCBCIFIAEoAmhHBEAgASAFQQFqNgIEIAUtAAAMAQsgARBRCyIFQTBGDQALQQEhCgtCgICAgICAwP8/IRUDQAJAIAVBIHIhCwJAAkAgBUEwayIIQQpJDQAgBUEuRyALQeEAa0EGT3ENAiAFQS5HDQAgBA0CQQEhBCAUIRcMAQsgC0HXAGsgCCAFQTlKGyEFAkAgFEIHVwRAIAUgCUEEdGohCQwBCyAUQhxYBEAgAkEwaiAFEKMBIAJBIGogGSAVQgBCgICAgICAwP0/EF0gAkEQaiACKQMwIAIpAzggAikDICIZIAIpAygiFRBdIAIgAikDECACKQMYIBYgGBCdASACKQMIIRggAikDACEWDAELIAVFIAdyDQAgAkHQAGogGSAVQgBCgICAgICAgP8/EF0gAkFAayACKQNQIAIpA1ggFiAYEJ0BIAIpA0ghGEEBIQcgAikDQCEWCyAUQgF8IRRBASEKCyABKAIEIgUgASgCaEcEfyABIAVBAWo2AgQgBS0AAAUgARBRCyEFDAELCwJ+IApFBEACQAJAIAEpA3BCAFkEQCABIAEoAgQiBUEBazYCBCADRQ0BIAEgBUECazYCBCAERQ0CIAEgBUEDazYCBAwCCyADDQELIAFCABDEAQsgAkHgAGogBrdEAAAAAAAAAACiEM4BIAIpA2AhFiACKQNoDAELIBRCB1cEQCAUIRUDQCAJQQR0IQkgFUIBfCIVQghSDQALCwJAAkACQCAFQV9xQdAARgRAIAEgAxD/BCIVQoCAgICAgICAgH9SDQMgAwRAIAEpA3BCAFkNAgwDC0IAIRYgAUIAEMQBQgAMBAtCACEVIAEpA3BCAFMNAgsgASABKAIEQQFrNgIEC0IAIRULIAlFBEAgAkHwAGogBrdEAAAAAAAAAACiEM4BIAIpA3AhFiACKQN4DAELIBcgFCAEG0IChiAVfEIgfSIUQQAgD2utVQRAQdiYBEHEADYCACACQaABaiAGEKMBIAJBkAFqIAIpA6ABIAIpA6gBQn9C////////v///ABBdIAJBgAFqIAIpA5ABIAIpA5gBQn9C////////v///ABBdIAIpA4ABIRYgAikDiAEMAQsgD0HiAWusIBRXBEAgCUEATgRAA0AgAkGgA2ogFiAYQgBCgICAgICAwP+/fxCdASAWIBhCgICAgICAgP8/EPkEIQEgAkGQA2ogFiAYIBYgAikDoAMgAUEASCIDGyAYIAIpA6gDIAMbEJ0BIBRCAX0hFCACKQOYAyEYIAIpA5ADIRYgCUEBdCABQQBOciIJQQBODQALCwJ+IBQgD6x9QiB8IhWnIgFBACABQQBKGyAOIBUgDq1TGyIBQfEATgRAIAJBgANqIAYQowEgAikDiAMhFyACKQOAAyEZQgAMAQsgAkHgAmpEAAAAAAAA8D9BkAEgAWsQ6AEQzgEgAkHQAmogBhCjASACQfACaiACKQPgAiACKQPoAiACKQPQAiIZIAIpA9gCIhcQgwUgAikD+AIhGiACKQPwAgshFSACQcACaiAJIAlBAXFFIBYgGEIAQgAQ/wFBAEcgAUEgSHFxIgFqEJ0CIAJBsAJqIBkgFyACKQPAAiACKQPIAhBdIAJBkAJqIAIpA7ACIAIpA7gCIBUgGhCdASACQaACaiAZIBdCACAWIAEbQgAgGCABGxBdIAJBgAJqIAIpA6ACIAIpA6gCIAIpA5ACIAIpA5gCEJ0BIAJB8AFqIAIpA4ACIAIpA4gCIBUgGhDXAyACKQPwASIVIAIpA/gBIhdCAEIAEP8BRQRAQdiYBEHEADYCAAsgAkHgAWogFSAXIBSnEIIFIAIpA+ABIRYgAikD6AEMAQtB2JgEQcQANgIAIAJB0AFqIAYQowEgAkHAAWogAikD0AEgAikD2AFCAEKAgICAgIDAABBdIAJBsAFqIAIpA8ABIAIpA8gBQgBCgICAgICAwAAQXSACKQOwASEWIAIpA7gBCyEUIAwgFjcDECAMIBQ3AxggAkGwA2okACAMKQMYIRQgDCkDECEVDAYLIAEpA3BCAFMNACABIAEoAgRBAWs2AgQLIAEhBSAGIQkgAyEKQQAhA0EAIQYjAEGQxgBrIgQkAEEAIA4gD2oiEmshEwJAAn8DQCACQTBHBEACQCACQS5HDQQgBSgCBCIBIAUoAmhGDQAgBSABQQFqNgIEIAEtAAAMAwsFIAUoAgQiASAFKAJoRwR/QQEhAyAFIAFBAWo2AgQgAS0AAAVBASEDIAUQUQshAgwBCwsgBRBRCyECQQEhByACQTBHDQADQCAUQgF9IRQCfyAFKAIEIgEgBSgCaEcEQCAFIAFBAWo2AgQgAS0AAAwBCyAFEFELIgJBMEYNAAtBASEDCyAEQQA2ApAGIAwCfgJAAkACQAJAAkAgAkEuRiIBIAJBMGsiCEEJTXIEQANAAkAgAUEBcQRAIAdFBEAgFSEUQQEhBwwCCyADRSEBDAQLIBVCAXwhFSAGQfwPTARAIA0gFacgAkEwRhshDSAEQZAGaiAGQQJ0aiIBIAsEfyACIAEoAgBBCmxqQTBrBSAICzYCAEEBIQNBACALQQFqIgEgAUEJRiIBGyELIAEgBmohBgwBCyACQTBGDQAgBCAEKAKARkEBcjYCgEZB3I8BIQ0LAn8gBSgCBCIBIAUoAmhHBEAgBSABQQFqNgIEIAEtAAAMAQsgBRBRCyICQS5GIgEgAkEwayIIQQpJcg0ACwsgFCAVIAcbIRQgA0UgAkFfcUHFAEdyRQRAAkAgBSAKEP8EIhZCgICAgICAgICAf1INACAKRQ0FQgAhFiAFKQNwQgBTDQAgBSAFKAIEQQFrNgIECyADRQ0DIBQgFnwhFAwFCyADRSEBIAJBAEgNAQsgBSkDcEIAUw0AIAUgBSgCBEEBazYCBAsgAUUNAgtB2JgEQRw2AgALQgAhFSAFQgAQxAFCAAwBCyAEKAKQBiIBRQRAIAQgCbdEAAAAAAAAAACiEM4BIAQpAwAhFSAEKQMIDAELIBQgFVIgFUIJVXIgDkEeTEEAIAEgDnYbckUEQCAEQTBqIAkQowEgBEEgaiABEJ0CIARBEGogBCkDMCAEKQM4IAQpAyAgBCkDKBBdIAQpAxAhFSAEKQMYDAELIA9Bfm2tIBRTBEBB2JgEQcQANgIAIARB4ABqIAkQowEgBEHQAGogBCkDYCAEKQNoQn9C////////v///ABBdIARBQGsgBCkDUCAEKQNYQn9C////////v///ABBdIAQpA0AhFSAEKQNIDAELIA9B4gFrrCAUVQRAQdiYBEHEADYCACAEQZABaiAJEKMBIARBgAFqIAQpA5ABIAQpA5gBQgBCgICAgICAwAAQXSAEQfAAaiAEKQOAASAEKQOIAUIAQoCAgICAgMAAEF0gBCkDcCEVIAQpA3gMAQsgCwRAIAtBCEwEQCAEQZAGaiAGQQJ0aiIBKAIAIQUDQCAFQQpsIQUgC0EBaiILQQlHDQALIAEgBTYCAAsgBkEBaiEGCwJAIA0gFKciB0ogDUEJTnIgB0ERSnINACAHQQlGBEAgBEHAAWogCRCjASAEQbABaiAEKAKQBhCdAiAEQaABaiAEKQPAASAEKQPIASAEKQOwASAEKQO4ARBdIAQpA6ABIRUgBCkDqAEMAgsgB0EITARAIARBkAJqIAkQowEgBEGAAmogBCgCkAYQnQIgBEHwAWogBCkDkAIgBCkDmAIgBCkDgAIgBCkDiAIQXSAEQeABakEAIAdrQQJ0QbCNA2ooAgAQowEgBEHQAWogBCkD8AEgBCkD+AEgBCkD4AEgBCkD6AEQ+AQgBCkD0AEhFSAEKQPYAQwCCyAOIAdBfWxqQRtqIgFBHkxBACAEKAKQBiICIAF2Gw0AIARB4AJqIAkQowEgBEHQAmogAhCdAiAEQcACaiAEKQPgAiAEKQPoAiAEKQPQAiAEKQPYAhBdIARBsAJqIAdBAnRB6IwDaigCABCjASAEQaACaiAEKQPAAiAEKQPIAiAEKQOwAiAEKQO4AhBdIAQpA6ACIRUgBCkDqAIMAQsDQCAEQZAGaiAGIgJBAWsiBkECdGooAgBFDQALQQAhCwJAIAdBCW8iA0UEQEEAIQEMAQtBACEBIANBCWogAyAHQQBIGyEDAkAgAkUEQEEAIQIMAQtBgJTr3ANBACADa0ECdEGwjQNqKAIAIgZtIQpBACEIQQAhBQNAIARBkAZqIAVBAnRqIg0gCCANKAIAIg0gBm4iEGoiCDYCACABQQFqQf8PcSABIAhFIAEgBUZxIggbIQEgB0EJayAHIAgbIQcgCiANIAYgEGxrbCEIIAVBAWoiBSACRw0ACyAIRQ0AIARBkAZqIAJBAnRqIAg2AgAgAkEBaiECCyAHIANrQQlqIQcLA0AgBEGQBmogAUECdGohBQJAA0AgB0EkTgRAIAdBJEcNAiAFKAIAQdHp+QRPDQILIAJB/w9qIQNBACEIA0AgCK0gBEGQBmogA0H/D3EiBkECdGoiAzUCAEIdhnwiFEKBlOvcA1QEf0EABSAUIBRCgJTr3AOAIhVCgJTr3AN+fSEUIBWnCyEIIAMgFKciAzYCACACIAIgAiAGIAMbIAEgBkYbIAYgAkEBa0H/D3FHGyECIAZBAWshAyABIAZHDQALIAtBHWshCyAIRQ0ACyACIAFBAWtB/w9xIgFGBEAgBEGQBmoiAyACQf4PakH/D3FBAnRqIgYgBigCACACQQFrQf8PcSICQQJ0IANqKAIAcjYCAAsgB0EJaiEHIARBkAZqIAFBAnRqIAg2AgAMAQsLAkADQCACQQFqQf8PcSEGIARBkAZqIAJBAWtB/w9xQQJ0aiEIA0BBCUEBIAdBLUobIQoCQANAIAEhA0EAIQUCQANAAkAgAyAFakH/D3EiASACRg0AIARBkAZqIAFBAnRqKAIAIgEgBUECdEGAjQNqKAIAIg1JDQAgASANSw0CIAVBAWoiBUEERw0BCwsgB0EkRw0AQgAhFEEAIQVCACEVA0AgAiADIAVqQf8PcSIBRgRAIAJBAWpB/w9xIgJBAnQgBGpBADYCjAYLIARBgAZqIARBkAZqIAFBAnRqKAIAEJ0CIARB8AVqIBQgFUIAQoCAgIDlmreOwAAQXSAEQeAFaiAEKQPwBSAEKQP4BSAEKQOABiAEKQOIBhCdASAEKQPoBSEVIAQpA+AFIRQgBUEBaiIFQQRHDQALIARB0AVqIAkQowEgBEHABWogFCAVIAQpA9AFIAQpA9gFEF0gBCkDyAUhFUIAIRQgBCkDwAUhFiALQfEAaiIHIA9rIgZBACAGQQBKGyAOIAYgDkgiBRsiAUHwAEwNAgwFCyAKIAtqIQsgAyACIgFGDQALQYCU69wDIAp2IQ1BfyAKdEF/cyEQQQAhBSADIQEDQCAEQZAGaiADQQJ0aiIRIAUgESgCACIRIAp2aiIFNgIAIAFBAWpB/w9xIAEgBUUgASADRnEiBRshASAHQQlrIAcgBRshByAQIBFxIA1sIQUgA0EBakH/D3EiAyACRw0ACyAFRQ0BIAEgBkcEQCAEQZAGaiACQQJ0aiAFNgIAIAYhAgwDCyAIIAgoAgBBAXI2AgAMAQsLCyAEQZAFakQAAAAAAADwP0HhASABaxDoARDOASAEQbAFaiAEKQOQBSAEKQOYBSAWIBUQgwUgBCkDuAUhGSAEKQOwBSEYIARBgAVqRAAAAAAAAPA/QfEAIAFrEOgBEM4BIARBoAVqIBYgFSAEKQOABSAEKQOIBRCBBSAEQfAEaiAWIBUgBCkDoAUiFCAEKQOoBSIXENcDIARB4ARqIBggGSAEKQPwBCAEKQP4BBCdASAEKQPoBCEVIAQpA+AEIRYLAkAgA0EEakH/D3EiCiACRg0AAkAgBEGQBmogCkECdGooAgAiCkH/ybXuAU0EQCAKRSADQQVqQf8PcSACRnENASAEQfADaiAJt0QAAAAAAADQP6IQzgEgBEHgA2ogFCAXIAQpA/ADIAQpA/gDEJ0BIAQpA+gDIRcgBCkD4AMhFAwBCyAKQYDKte4BRwRAIARB0ARqIAm3RAAAAAAAAOg/ohDOASAEQcAEaiAUIBcgBCkD0AQgBCkD2AQQnQEgBCkDyAQhFyAEKQPABCEUDAELIAm3IRsgAiADQQVqQf8PcUYEQCAEQZAEaiAbRAAAAAAAAOA/ohDOASAEQYAEaiAUIBcgBCkDkAQgBCkDmAQQnQEgBCkDiAQhFyAEKQOABCEUDAELIARBsARqIBtEAAAAAAAA6D+iEM4BIARBoARqIBQgFyAEKQOwBCAEKQO4BBCdASAEKQOoBCEXIAQpA6AEIRQLIAFB7wBKDQAgBEHQA2ogFCAXQgBCgICAgICAwP8/EIEFIAQpA9ADIAQpA9gDQgBCABD/AQ0AIARBwANqIBQgF0IAQoCAgICAgMD/PxCdASAEKQPIAyEXIAQpA8ADIRQLIARBsANqIBYgFSAUIBcQnQEgBEGgA2ogBCkDsAMgBCkDuAMgGCAZENcDIAQpA6gDIRUgBCkDoAMhFgJAQX4gEmsgB0H/////B3FODQAgBCAVQv///////////wCDNwOYAyAEIBY3A5ADIARBgANqIBYgFUIAQoCAgICAgID/PxBdIAQpA5ADIAQpA5gDQoCAgICAgIC4wAAQ+QQhAiAVIAQpA4gDIAJBAEgiAxshFSAWIAQpA4ADIAMbIRZBACATIAsgAkEATmoiC0HuAGpOIBQgF0IAQgAQ/wFBAEcgBSAFIAEgBkdxIAMbcRsNAEHYmARBxAA2AgALIARB8AJqIBYgFSALEIIFIAQpA/ACIRUgBCkD+AILNwMoIAwgFTcDICAEQZDGAGokACAMKQMoIRQgDCkDICEVDAQLIAEpA3BCAFkEQCABIAEoAgRBAWs2AgQLDAELAkACfyABKAIEIgIgASgCaEcEQCABIAJBAWo2AgQgAi0AAAwBCyABEFELQShGBEBBASEFDAELQoCAgICAgOD//wAhFCABKQNwQgBTDQMgASABKAIEQQFrNgIEDAMLA0ACfyABKAIEIgIgASgCaEcEQCABIAJBAWo2AgQgAi0AAAwBCyABEFELIgJBMGtBCkkgAkHBAGtBGklyIAJB3wBGckUgAkHhAGtBGk9xRQRAIAVBAWohBQwBCwtCgICAgICA4P//ACEUIAJBKUYNAiABKQNwIhdCAFkEQCABIAEoAgRBAWs2AgQLAkAgAwRAIAUNAQwECwwBCwNAIAVBAWshBSAXQgBZBEAgASABKAIEQQFrNgIECyAFDQALDAILQdiYBEEcNgIAIAFCABDEAQtCACEUCyAAIBU3AwAgACAUNwMIIAxBMGokAAvQBgIEfwN+IwBBgAFrIgUkAAJAAkACQCADIARCAEIAEP8BRQ0AAn8gBEL///////8/gyEJAn8gBEIwiKdB//8BcSIGQf//AUcEQEEEIAYNARpBAkEDIAMgCYRQGwwCCyADIAmEUAsLIQcgAkIwiKciCEH//wFxIgZB//8BRg0AIAcNAQsgBUEQaiABIAIgAyAEEF0gBSAFKQMQIgEgBSkDGCICIAEgAhD4BCAFKQMIIQIgBSkDACEEDAELIAEgAkL///////8/gyAGrUIwhoQiCiADIARC////////P4MgBEIwiKdB//8BcSIHrUIwhoQiCRD/AUEATARAIAEgCiADIAkQ/wEEQCABIQQMAgsgBUHwAGogASACQgBCABBdIAUpA3ghAiAFKQNwIQQMAQsgBgR+IAEFIAVB4ABqIAEgCkIAQoCAgICAgMC7wAAQXSAFKQNoIgpCMIinQfgAayEGIAUpA2ALIQQgB0UEQCAFQdAAaiADIAlCAEKAgICAgIDAu8AAEF0gBSkDWCIJQjCIp0H4AGshByAFKQNQIQMLIAlC////////P4NCgICAgICAwACEIQkgCkL///////8/g0KAgICAgIDAAIQhCiAGIAdKBEADQAJ+IAogCX0gAyAEVq19IgtCAFkEQCALIAQgA30iBIRQBEAgBUEgaiABIAJCAEIAEF0gBSkDKCECIAUpAyAhBAwFCyALQgGGIARCP4iEDAELIApCAYYgBEI/iIQLIQogBEIBhiEEIAZBAWsiBiAHSg0ACyAHIQYLAkAgCiAJfSADIARWrX0iCUIAUwRAIAohCQwBCyAJIAQgA30iBIRCAFINACAFQTBqIAEgAkIAQgAQXSAFKQM4IQIgBSkDMCEEDAELIAlC////////P1gEQANAIARCP4ghASAGQQFrIQYgBEIBhiEEIAEgCUIBhoQiCUKAgICAgIDAAFQNAAsLIAhBgIACcSEHIAZBAEwEQCAFQUBrIAQgCUL///////8/gyAGQfgAaiAHcq1CMIaEQgBCgICAgICAwMM/EF0gBSkDSCECIAUpA0AhBAwBCyAJQv///////z+DIAYgB3KtQjCGhCECCyAAIAQ3AwAgACACNwMIIAVBgAFqJAALvwIBAX8jAEHQAGsiBCQAAkAgA0GAgAFOBEAgBEEgaiABIAJCAEKAgICAgICA//8AEF0gBCkDKCECIAQpAyAhASADQf//AUkEQCADQf//AGshAwwCCyAEQRBqIAEgAkIAQoCAgICAgID//wAQXSADQf3/AiADQf3/AkgbQf7/AWshAyAEKQMYIQIgBCkDECEBDAELIANBgYB/Sg0AIARBQGsgASACQgBCgICAgICAgDkQXSAEKQNIIQIgBCkDQCEBIANB9IB+SwRAIANBjf8AaiEDDAELIARBMGogASACQgBCgICAgICAgDkQXSADQeiBfSADQeiBfUobQZr+AWohAyAEKQM4IQIgBCkDMCEBCyAEIAEgAkIAIANB//8Aaq1CMIYQXSAAIAQpAwg3AwggACAEKQMANwMAIARB0ABqJAALNQAgACABNwMAIAAgAkL///////8/gyAEQjCIp0GAgAJxIAJCMIinQf//AXFyrUIwhoQ3AwgLEAAgACABIAJBAEEAEIkFGgvEAgACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCABQQlrDhIACgsMCgsCAwQFDAsMDAoLBwgJCyACIAIoAgAiAUEEajYCACAAIAEoAgA2AgAPCwALIAIgAigCACIBQQRqNgIAIAAgATIBADcDAA8LIAIgAigCACIBQQRqNgIAIAAgATMBADcDAA8LIAIgAigCACIBQQRqNgIAIAAgATAAADcDAA8LIAIgAigCACIBQQRqNgIAIAAgATEAADcDAA8LAAsgAiACKAIAQQdqQXhxIgFBCGo2AgAgACABKwMAOQMADwsgACACIAMRAgALDwsgAiACKAIAIgFBBGo2AgAgACABNAIANwMADwsgAiACKAIAIgFBBGo2AgAgACABNQIANwMADwsgAiACKAIAQQdqQXhxIgFBCGo2AgAgACABKQMANwMAC20BBH8gACgCACwAABCuAUUEQEEADwsDQCAAKAIAIQNBfyEBIAJBzJmz5gBNBEBBfyADLAAAQTBrIgQgAkEKbCIBaiAEIAFB/////wdzShshAQsgACADQQFqNgIAIAEhAiADLAABEK4BDQALIAILDAAgACAAKAIAEPEEC/8SAhJ/AX4jAEHQAGsiCCQAIAggATYCTCAIQTdqIRcgCEE4aiESAkACQAJAAkADQCABIQwgByAOQf////8Hc0oNASAHIA5qIQ4CQAJAAkAgDCIHLQAAIgkEQANAAkACQCAJQf8BcSIBRQRAIAchAQwBCyABQSVHDQEgByEJA0AgCS0AAUElRwRAIAkhAQwCCyAHQQFqIQcgCS0AAiEKIAlBAmoiASEJIApBJUYNAAsLIAcgDGsiByAOQf////8HcyIYSg0HIAAEQCAAIAwgBxCDAQsgBw0GIAggATYCTCABQQFqIQdBfyEPAkAgASwAARCuAUUNACABLQACQSRHDQAgAUEDaiEHIAEsAAFBMGshD0EBIRMLIAggBzYCTEEAIQ0CQCAHLAAAIglBIGsiAUEfSwRAIAchCgwBCyAHIQpBASABdCIBQYnRBHFFDQADQCAIIAdBAWoiCjYCTCABIA1yIQ0g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ABpBAiABQZYBSw0AGkEAQQFBlgEgAWt0IgFBAWsgAHENABpBAUECIAAgAXEbCwsTACAAQQF0QYCAgAhqQYGAgAhJCxUBAX8jAEEQayIBIAA4AgwgASoCDAsQACABjCABIAAbEJYFIAGUCwwAIAAgAJMiACAAlQs5AQF+An4gACgCTEEASARAIAAQmwUMAQsgABCbBQsiAUKAgICACFkEQEHYmARBPTYCAEF/DwsgAacLDAAgACAAKAIAEOYEC3ACAn8BfiAAKAIoIQJBASEBAkAgAEIAIAAtAABBgAFxBH9BAUECIAAoAhQgACgCHEYbBUEBCyACERMAIgNCAFMNACADIAAoAggiAQR/IABBBGoFIAAoAhwiAUUNASAAQRRqCygCACABa6x8IQMLIAMLWQEBfyAAIAAoAkgiAUEBayABcjYCSCAAKAIAIgFBCHEEQCAAIAFBIHI2AgBBfw8LIABCADcCBCAAIAAoAiwiATYCHCAAIAE2AhQgACABIAAoAjBqNgIQQQALLAAgACgCABogACgCACAAENwBahogACgCACAAEI0BahogACgCACAAENwBahoLlwIBBX8gASgCTBpB/wEhBSAAIQMCQANAAkACQAJAIAEoAgQiAiABKAIIIgRGDQACfyACQQogBCACaxDcAyIGBEAgBiABKAIEIgJrQQFqDAELIAEoAgggASgCBCICawshBCADIAIgBCAFIAQgBUkbIgIQPhogASABKAIEIAJqIgQ2AgQgAiADaiEDIAYNAiAFIAJrIgVFDQIgBCABKAIIRg0AIAEgBEEBajYCBCAELQAAIQIMAQsgARCQAyICQQBODQBBACECIAAgA0YNAyABLQAAQRBxDQEMAwsgAyACOgAAIANBAWohAyACQf8BcUEKRg0AIAVBAWsiBQ0BCwsgAEUEQEEAIQIMAQsgA0EAOgAAIAAhAgsgAgt1AgJ8AX4gAAJ+EA8iAUQAAAAAAECPQKMiAplEAAAAAAAA4ENjBEAgArAMAQtCgICAgICAgICAfwsiAzcDACAAAn8gASADQugHfrmhRAAAAAAAQI9AoiIBmUQAAAAAAADgQWMEQCABqgwBC0GAgICAeAs2AggLRQIBfgF8An4QD0QAAAAAAECPQKMiAplEAAAAAAAA4ENjBEAgArAMAQtCgICAgICAgICAfwshASAABEAgACAB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QQFqOwEGIAEgC2ogAGoiAiAELQAYQQFqOwEAIAIgBC0AGUEBajsBAiACIAQtABpBAWo7AQQgAiAELQAbQQFqOwEGIAEgD2ogAGoiASAELQAcQQFqOwEAIAEgBC0AHUEBajsBAiABIAQtAB5BAWo7AQQgASAELQAfQQFqOwEGIARBIGohBCAHQQFqIgdBBEcNAAsgDUGAC2okAAvLAwEEfyAAKALkAyAAQQFB/A8gACgCBCgCABEEACIAQfwHaiIBNgIoIABC/////w83AvgHIABCgYCAgCA3AoAIIABCg4CAgMAANwKICCAAQv3///9vNwLwByAAQoWAgIDgADcCkAggAEL7////TzcC6AcgAEKHgICAgAE3ApgIIABC+f///69/NwLgByAAQomAgICgATcCoAggAEL3////j383AtgHIABCi4CAgMABNwKoCCAAQvX////vfjcC0AcgAEKNgICA4AE3ArAIIABC8////89+NwLIByAAQQ82ArgIIABC8f///69+NwLAB0EQIQJBECEDA0AgASADQQJ0IgBqIAI2AgAgASAAa0EAIAJrIgQ2AgAgASAAQQRyaiACNgIAIAEgA0F/c0ECdGogBDYCACACQQFqIQJBMCEAIANBAmoiA0EwRw0ACwNAIAEgAEECdCICakEgNgIAIAEgAmtBYDYCACABIAJBBHJqQSA2AgAgASAAQX9zQQJ0akFgNgIAIAEgAkEIcmpBIDYCACABQX4gAGtBAnRqQWA2AgAgASACQQxyakEgNgIAIAFBfSAAa0ECdGpBYDYCACAAQQRqIgBBgAJHDQALC/cCAQp/IAAoAuQDIgQgACgCWCIBQQFGIgI2AhwgBCAAQQFB/gVBgAIgAhsgACgCeCAAKAIEKAIIEQgANgIYIAAoAnhBAEoEQCAEKAIUIQYgAUEBRyEIA0AgBiAEIAdBAnQiAWooAiAiAm0hBiAIRQRAIAQoAhggAWoiAyADKAIAQf8BajYCAAsgAkH+AWogAkEBayIJQQF0IgptIQUgBCgCGCABaigCACEBQQAhAkEAIQMDQCADIAVKBEADQCADIAJBAWoiAkEBdEEBckH/AWwgCWogCm0iBUoNAAsLIAEgA2ogAiAGbDoAACADQQFqIgNBgAJHDQALIAhFBEBBASECA0AgASACayIFIAEtAAA6AAAgASACaiIDIAEt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BCADEJwEIAMQmwQLIAlBIGokAAwBCyACIANJBEAgBCAEKAIAIAJqEIAECwsgAEEQaiABEKoGIAdBEGokAAsgACAAEDIaA0AgAQRAIAEoAgAhACABEDEgACEBDAELCwsZACABQf////8ASwRAEPMBAAsgAUEEdBBbC4oDAgN/AXwjAEEQayIBJAACQCAAvCIDQf////8HcSICQdqfpPoDTQRAIAJBgICAzANJDQEgALsQxQEhAAwBCyACQdGn7YMETQRAIAC7IQQgAkHjl9uABE0EQCADQQBIBEAgBEQYLURU+yH5P6AQxgGMIQAMAwsgBEQYLURU+yH5v6AQxgEhAAwCC0QYLURU+yEJwEQYLURU+yEJQCADQQBOGyAEoJoQxQEhAAwBCyACQdXjiIcETQRAIAJB39u/hQRNBEAgALshBCADQQBIBEAgBETSITN/fNkSQKAQxgEhAAwDCyAERNIhM3982RLAoBDGAYwhAAwCC0QYLURU+yEZQEQYLURU+yEZwCADQQBIGyAAu6AQxQEhAAwBCyACQYCAgPwHTwRAIAAgAJMhAAwBCwJAAkACQAJAIAAgAUEIahChBUEDcQ4DAAECAwsgASsDCBDFASEADAMLIAErAwgQxgEhAAwCCyABKwMImhDFASEADAELIAErAwgQxgGMIQALIAFBEGokACAAC/QCAgN/AXwjAEEQayIBJAACfSAAvCIDQf////8HcSICQdqfpPoDTQRAQwAAgD8gAkGAgIDMA0kNARogALsQxgEMAQsgAkHRp+2DBE0EQCACQeSX24AETwRARBgtRFT7IQlARBgtRFT7IQnAIANBAEgbIAC7oBDGAYwMAgsgALshBCADQQBIBEAgBEQYLURU+yH5P6AQxQEMAgtEGC1EVPsh+T8gBKEQxQEMAQsgAkHV44iHBE0EQCACQeDbv4UETwRARBgtRFT7IRlARBgtRFT7IRnAIANBAEgbIAC7oBDGAQwCCyADQQBIBEBE0iEzf3zZEsAgALuhEMUBDAILIAC7RNIhM3982RLAoBDFAQwBCyAAIACTIAJBgICA/AdPDQAaAkACQAJAAkAgACABQQhqEKEFQQNxDgMAAQIDCyABKwMIEMYBDAMLIAErAwiaEMUBDAILIAErAwgQxgGMDAELIAErAwgQxQELIQAgAUEQaiQAIAALWAECfyAAEDwoAgAEQCAAIABBCGoiASgCABDbBSABQQA2AgAgABCUASECQQAhAQNAIAEgAkYEQCAAEDxBADYCAAUgACABEDpBADYCACABQQFqIQEMAQsLCwsUACAAIABBCGooAgAQ2wUgABCxAgv2CAIGfwZ8IwBBgAJrIgIkAAJAIAErAxAiCCAIoiABKwMAIgggCKIgASsDCCIJIAmioKAiCUQAAAAAAAAAAGEEQCACQgA3A8gBIAJCgICAgICAgPg/NwPAAUQAAAAAAAAAACEIDAELIAIgCCAJnyIIozkDwAEgAiABKwMIIAijOQPIASABKwMQIAijIQoLIAIgCDkD2AEgAiAKOQPQASACIAErAxg5A+ABIAIgASsDIDkD6AEgAiABKwMoOQPwASACKwPYASEIIwBBEGsiASQAAnwgCL1CIIinQf////8HcSIDQfvDpP8DTQRARAAAAAAAAPA/IANBnsGa8gNJDQEaIAhEAAAAAAAAAAAQ0wIMAQsgCCAIoSADQYCAwP8HTw0AGgJAAkACQAJAIAggARCiBUEDcQ4DAAECAwsgASsDACABKwMIENMCDAMLIAErAwAgASsDCEEBENICmgwCCyABKwMAIAErAwgQ0wKaDAELIAErAwAgASsDCEEBENICCyEJIAFBEGokACACIAkiCiACKwPAASIJIAmiRAAAAAAAAPA/IAqhIgmioDkDYCACIAIrA8ABIAIrA8gBoiAJoiENIAIrA9ABIQwjAEEQayIBJAACQCAIvUIgiKdB/////wdxIgNB+8Ok/wNNBEAgA0GAgMDyA0kNASAIRAAAAAAAAAAAQQAQ0gIhCAwBCyADQYCAwP8HTwRAIAggCKEhCAwBCwJAAkACQAJAIAggARCiBUEDcQ4DAAECAwsgASsDACABKwMIQQEQ0gIhCAwDCyABKwMAIAErAwgQ0wIhCAwCCyABKwMAIAErAwhBARDSApohCAwBCyABKwMAIAErAwgQ0wKaIQgLIAFBEGokACANIAwgCKKhOQNoIAIgAisDwAEgAisD0AGiIAmiIAggAisDyAGioDkDcCACIAIrA+ABOQN4IAIgAisDyAEgAisDwAGiIAmiIAggAisD0AGioDkDgAEgAiAKIAIrA8gBIgsgC6IgCaKgOQOIASACIAIrA8gBIAIrA9ABoiAJoiAIIAIrA8ABoqE5A5ABIAIgAisD6AE5A5gBIAIgAisD0AEgAisDwAGiIAmiIAggAisDyAGioTkDoAEgAiACKwPQASACKwPIAaIgCaIgCCACKwPAAaKgOQOoASACIAogAisD0AEiCCAIoiAJoqA5A7ABIAIgAisD8AE5A7gBA38gBEEDRgR/A39BACEBIAZBA0YEfyACQYACaiQAQQAFA0AgAUEERwRAIAFBA3QiBCAAIAZBBXQiA2pqIAIgA2ogBGorAwA5AwAgAUEBaiEBDAELCyAGQQFqIQYMAQsLBSAAIARBBXQiB2oiAysDECEIIAMrAwghCSADKwMAIQpBACEBA0AgAUEERwRAIAFBA3QiBSACIAdqaiAIIAJB4ABqIAVqIgVBQGsrAwCiIAogBSsDAKIgCSAFKwMgoqCgOQMAIAFBAWohAQwBCwsgAiAHaiIBIAMrAxggASsDGKA5AxggBEEBaiEEDAELCxoLMAECfQJ/QQEgACoCACICIAEqAgAiA10NABpBACACIANeDQAaIAAoAgQgASgCBEgLC20AIAAqAiAgASoCIJQgACoCHCABKgIclCAAKgIYIAEqAhiUIAAqAhQgASoCFJQgACoCECABKgIQlCAAKgIMIAEqAgyUIAAqAgggASoCCJQgACoCACABKgIAlCAAKgIEIAEqAgSUkpKSkpKSkpIL0gEBAX8jAEEwayIEJAAgBEKGgICAEDcCJCAEIAA2AiAgBEEBNgIYIAQgAzYCFCAEIAE2AhAgBEEGNgIIIAQgAzYCBCAEIAI2AgACQCAEELgGIgNFBEBBfyEADAELAkAgAyAEEOkCIgJFBEBBfyEAIAMhAQwBCwJAIAMgBEEQahDpAiIBRQRAQX8hACACIQEMAQtBACEAAkAgAhDkAkEASARAQX8hAAwBCyAEQSBqIAIgARCFBBoLIAMQQiACIQMLIAMQQgsgARBCCyAEQTBqJAAgAAsQACAAQgA3AgAgAEEANgIIC2UBAn0gACoCECAAKgIUIAAqAhwgACoCIBCgASEBIAAqAgwgACoCFCAAKgIYIAAqAiAQoAEhAiAAKgIMIAAqAhAgACoCGCAAKgIcEKABIAAqAgiUIAEgACoCAJQgAiAAKgIElJOSCwwAIAAgASkCADcCAAvYAgEKfSAFIAYqAgAgByoCAJIgCCoCAJIgCSoCAJJDAACAPpQiCjgCACAFIAYqAgQgByoCBJIgCCoCBJIgCSoCBJJDAACAPpQiCzgCBCAGKgIAIAqTIgwgDJQgBioCBCALkyINIA2UkpEgByoCACAKkyIOIA6UIAcqAgQgC5MiDyAPlJKRkiAIKgIAIAqTIhAgEJQgCCoCBCALkyIRIBGUkpGSIAkqAgAgCpMiCiAKlCAJKgIEIAuTIgsgC5SSkZJDAACAPpQiEkMAAAAAXARAIARDAACAPyASlbtEzTt/Zp6g9j+itiITOAIAIAAgDCATlDgCACAAIA0gBCoCAJQ4AgQgASAOIAQqAgCUOAIAIAEgDyAEKgIAlDgCBCACIBAgBCoCAJQ4AgAgAiARIAQqAgCUOAIEIAMgCiAEKgIAlDgCACADIAsgBCoCAJQ4AgQLIBJDAAAAAFwLQgECfyMAQRBrIgEkACABIAA2AgggASgCCCECIwBBEGsiACQAIAAgAjYCCCAAKAIIIQIgAEEQaiQAIAFBEGokACACC/QLAgZ/CnwjAEHgAWsiBSQAIAVB0ABqIQcjAEHgBmsiBCQAIAUgAisDECADKwMQIguiIAIrAwAgAysDAKIgAisDCCADKwMIIgyioKAgAisDGKA5AwggBSACKwM4IAsgAisDMKIgAisDICADKwMAIgqiIAwgAisDKKKgoKA5AxAgBSACKwNYIAsgAisDUKIgCiACKwNAoiACKwNIIAMrAwgiC6KgoKA5AxggBCALIAIrAwAiDqI5A8gEIAQgCiAOojkDwAQgBCAOIAMrAxAiDKI5A9AEIAQgDCACKwMIIg+iOQPoBCAEIAsgD6I5A+AEIAQgCiAPojkD2AQgBCACKwMQIg05A5gFIAQgDzkDkAUgBCAOOQOIBSAEIAwgDaI5A4AFIAQgCyANojkD+AQgBCAKIA2iOQPwBCAEIAwgAisDICIOojkDsAUgBCALIA6iOQOoBSAEIAogDqI5A6AFIAQgDCACKwMoIg+iOQPIBSAEIAsgD6I5A8AFIAQgCiAPojkDuAUgBCACKwMwIg05A/gFIAQgDzkD8AUgBCAOOQPoBSAEIAwgDaI5A+AFIAQgCyANojkD2AUgBCAKIA2iOQPQBSAEIAwgAisDQCIOojkDkAYgBCALIA6iOQOIBiAEIAogDqI5A4AGIAQgDCACKwNIIg+iOQOoBiAEIAsgD6I5A6AGIAQgCiAPojkDmAYgBCACKwNQIg05A9gGIAQgDzkD0AYgBCAOOQPIBiAEIAwgDaI5A8AGIAQgCyANojkDuAYgBCAKIA2iOQOwBiAEQQBBwAAQOSICQgA3A0ggAkFAa0KAgICAgICA+L9/NwMAIAJCADcDUCACQgA3A1ggAkIANwNgIAJCgICAgICAgPg/NwNoIAJB8ABqQQBBMBA5GiACQoCAgICAgID4PzcDoAEgAkGoAWpBAEHIABA5GiACQoCAgICAgID4v383A/ABIAJB+AFqQQBBMBA5GiACQgA3A7ACIAJCgICAgICAgPi/fzcDqAIgAkIANwO4AiACQgA3A8ACIAJCADcDyAIgAkKAgICAgICA+D83A9ACIAJB2AJqQQBB8AAQORogAkKAgICAgICA+D83A8gDIAJB0ANqQQBBMBA5GiACQoCAgICAgID4PzcDgAQgAkGIBGpBAEEwEDkaIAJCgICAgICAgPg/NwO4BANAQQAhAyAGQQNHBEADQCADQQZHBEAgA0EDdCIIIAcgBkEwbGpqIQlBACECRAAAAAAAAAAAIQoDQCACQQxHBEAgBEHABGogBkHgAGxqIAJBA3RqKwMAIAQgAkEwbGogCGorAwCiIAqgIQogAkEBaiECDAELCyAJIAo5AwAgA0EBaiEDDAELCyAGQQFqIQYMAQsLIARB4AZqJABBfyEEAkAgASsDWCABKwNQIAUrAxgiDKIgASsDQCILIAUrAwgiDqIgBSsDECIPIAErA0iioKCgIgpEAAAAAAAAAABiBH8gASsDOCEQIAErAzAhESABKwMoIRIgASsDICETIAUgASsDACINIAqiIAErAxggASsDECAMoiANIA6iIA8gASsDCKKgoKAiDSALoqEgCiAKoiILozkDICAFIAErAwggCqIgDSABKwNIoqEgC6M5AyggBSABKwMQIAqiIA0gASsDUKKhIAujOQMwIAUgASsDICAKoiAQIBEgDKIgEyAOoiAPIBKioKCgIgwgASsDQKKhIAujOQM4IAUgASsDKCAKoiAMIAErA0iioSALozkDQCAFIAErAzAgCqIgDCABKwNQoqEgC6M5A0hBAAVBfwtBAE4EQEEAIQIDQEEAIQQgAkECRg0CA0AgBEEGRwRAIARBA3QiASAAIAJBMGxqaiEGQQAhA0QAAAAAAAAAACEKA0AgA0EDRwRAIAVBIGogAkEYbGogA0EDdGorAwAgBUHQAGogA0EwbGogAWorAwCiIAqgIQogA0EBaiEDDAELCyAGIAo5AwAgBEEBaiEEDAELCyACQQFqIQIMAAsAC0EAQQNB2BZBABA2CyAFQeABaiQAIAQLEgAgACAAKAIAIAFBAnRqNgIACzABAX8jAEEQayICJAAgAiABNgIAIAIgADYCCCACIAJBCGoQ6gMhACACQRBqJAAgAAsNACAAKAIAIAAoAgRGC1cBAn8jAEEgayIDJAAgABAyIgIgA0EIaiAAIAAQPUEBahD7AyAAED0gAhC2AiICKAIIIAEQtwIgAiACKAIIQQhqNgIIIAAgAhDoAiACEOcCIANBIGokAAupBAIJfwF+IAAQvQIhAiAAEO4CIQMjAEEgayIGJAAgBiADNgIQIAYgAjYCGCAGQRBqIAZBGGoQqAMhBCMAQRBrIgUkACAFIAM2AgAgBSACNgIIIARBAk4EQCAFKAIIIQIgBRDSASgCACEDIwBBEGsiASQAIAEgAikCACIKNwMIIAIgAykCADcCACADIAo3AgAgAUEQaiQAIAUoAgghAiMAQTBrIgEkACABIAI2AiAgASACNgIoIAFBIGogAUEoahCoAyECAkAgBEEBayIEQQJIDQAgBEECa0EBdiIJIAJIDQAgASABQShqIAJBAXQiA0EBciICEO4BNgIYAkAgA0ECaiIDIARODQAgAUEYaiIHKAIAIQggASAHQQEQ7gE2AhAgCCABKAIQEKcCRQ0AIAFBGGoQnwEaIAMhAgsgASgCGCABKAIgEKcCDQAgASABKAIgKQIANwMQA0ACQCABKAIgIAEoAhgpAgA3AgAgASABKAIYNgIgIAIgCUoNACABIAFBKGogAkEBdCIDQQFyIgIQ7gE2AhgCQCADQQJqIgMgBE4NACABQRhqIgcoAgAhCCABIAdBARDuATYCCCAIIAEoAggQpwJFDQAgAUEYahCfARogAyECCyABKAIYIAFBEGoQpwJFDQELCyABKAIgIAEpAxA3AgALIAFBMGokAAsgBUEQaiQAIAZBIGokACAAKAIEQQhrIQIgABA9IQMgACACEK8DIAAgAxCMBAutAQIIfAF/QX8hCyABKwNYIAErA1AgAisDECIDoiABKwNAIAIrAwAiBKIgAisDCCIFIAErA0iioKCgIgZEAAAAAAAAAABiBH8gASsDOCEHIAErAzAhCCABKwMoIQkgASsDICEKIAAgASsDGCABKwMQIAOiIAErAwAgBKIgBSABKwMIoqCgoCAGozkDACAAIAcgCCADoiAKIASiIAUgCaKgoKAgBqM5AwhBAAVBfwsLuQICAX0BfyACIAEQ5gUiA4tgIgRFBEAgAEMAAIA/IAOVIgIgASoCECABKgIUIAEqAhwgASoCIBCgAZQ4AgAgACACIAEqAgggASoCBCABKgIgIAEqAhwQoAGUOAIEIAAgAiABKgIEIAEqAgggASoCECABKgIUEKABlDgCCCAAIAIgASoCFCABKgIMIAEqAiAgASoCGBCgAZQ4AgwgACACIAEqAgAgASoCCCABKgIYIAEqAiAQoAGUOAIQIAAgAiABKgIIIAEqAgAgASoCFCABKgIMEKABlDgCFCAAIAIgASoCDCABKgIQIAEqAhggASoCHBCgAZQ4AhggACACIAEqAgQgASoCACABKgIcIAEqAhgQoAGUOAIcIAAgAiABKgIAIAEqAgQgASoCDCABKgIQEKABlDgCIAsgBEULeAECfyMAQRBrIgIkACAAQgA3AgAgAkEANgIMIABBCGoQpQIgAQRAIAAQtQIgAUkEQEGQrgEQlgIACyAAIAAQMiABEIgEIgM2AgAgACADNgIEIAAQMiADIAFBA3RqNgIAIABBABCpAyAAIAEQ/AMLIAJBEGokACAACyEAIAAoAgQgABAyKAIARwRAIAAgARDtAg8LIAAgARDuBQsIACAAQfwAaguuAQEDfyMAQRBrIgckACAFEG4hBSAAIAQQPRCfAyAHQQxqIQgDQCAEED0gBksEQCAHQQhqIAggASADIAQgBhBNKAIEEGsqAgAgAyAEIAYQTSgCBBBrKgIEEOwDIAUgByoCCCACIAQgBhBNKAIAEGsqAgCTEG4gByoCDCACIAQgBhBNKAIAEGsqAgSTEG6SYARAIAAgBCAGEE0Q8wULIAZBAWohBgwBCwsgB0EQaiQAC7ctAh9/D30jAEFAaiIUJAAgFEEwaiADED0Q8gUhHyAUQSBqIAMQPRDyBSEgA38gAxA9IBFNBH9BACERIBRBADYCGCAUQQA2AgwgFEIANwMAIBQgBrIiJjgCHCAUICY4AhQgFCAFsiImOAIQIBQgJjgCCCAfQQAQTSEXICBBABBNIRggBEEMaiIBIAMQPSIZEIoCIAAhDyAUIQAgBEEYaiEVIAQqAiQhJiAEKAIoIR0gBCgCLCEkIAQoAjAhAiMAQRBrIhskAAJAIAQiIRBGIB1BCWxPBEAgARBGIBlPBEAgFRA9IB1PBEAgGUEESA0DIBtB0gk2AgwgAUEAEDohEyAmEG4hLiACIBkQpgMhJSATIBkQgAYgEyAZIBkgG0EMahDxAwNAIA4gHU4gDCAkTnJFBEAgEyAZQQQgG0EMahDxAyAXIBMoAgxBA3QiAmohASACIBhqIQJBACEDAkAgFyATKAIAQQN0IglqIgQgFyATKAIEQQN0IghqIgogFyATKAIIQQN0IhBqIgcQpwFDAAAAAF4gCSAYaiIJIAggGGoiCCAQIBhqIhAQpwFDAAAAAF5zDQAgCiAHIAEQpwFDAAAAAF4gCCAQIAIQpwFDAAAAAF5zDQAgByABIAQQpwFDAAAAAF4gECACIAkQpwFDAAAAAF5zDQAgASAEIAoQpwFDAAAAAF4gAiAJIAgQpwFDAAAAAF5zRSEDCwJAIANFDQAgISAOQQlsIiIQOiEBIBcgEygCAEEDdCICaiEDIBcgEygCBEEDdCIEaiEKIBcgEygCCEEDdCIHaiEJIBcgEygCDEEDdCIIaiEQIAIgGGohEiAEIBhqIRYgByAYaiEHIAggGGohCEEAIQIjAEGQAWsiBCQAAkAgBEFAayAEQThqIARBMGogBEEoaiAEQdwAaiAEQdAAaiADIAogCSAQEOgFRQ0AIARBIGogBEEYaiAEQRBqIARBCGogBEHYAGogBEHIAGogEiAWIAcgCBDoBUUNACAEQeAAaiEQIwBBoAJrIgokACAKIARBQGsgBEEgahCcAyAKQcgAaiIJIARBOGogBEEYahCcAyAKQZABaiIIIARBMGogBEEQahCcAyAKQdgBaiILIARBKGogBEEIahCcA0EAIRJBACEWIwBBoAJrIgMkACMAQSBrIgckACAHIAoQWTgCACAHIApBJGoiDRBZOAIEIAcgCRBZOAIIIAcgCkHsAGoQWTgCDCAHIAgQWTgCECAHIApBtAFqEFk4AhQgByALEFk4AhggByAKQfwBahBZOAIcIAdBB0EGQQVBBEEDQQIgByoCBCAHKgIAXiIJIAcqAgggByAJQQJ0aioCAF4bIgkgByoCDCAHIAlBAnRqKgIAXhsiCSAHKgIQIAcgCUECdGoqAgBeGyIJIAcqAhQgByAJQQJ0aioCAF4bIgkgByoCGCAHIAlBAnRqKgIAXhsiCSAHKgIcIAcgCUECdGoqAgBeGyIJQQJ0aiIIKgIAIiZDAAAAAFwEQCAKIAogCUEkbGoQsAEgAyAKQwAAgD8gCCoCAJGVENABIANBJGogDUE/EO0BCyAHQSBqJAACQCAmQwAAAABbDQAjAEEgayIHJAAgA0EkaiIJIAMgCkEkaiIIEGQgA0HIAGoiCyADIApByABqEGQgA0HsAGoiDSADIApB7ABqEGQgA0GQAWoiGiADIApBkAFqEGQgA0G0AWoiHCADIApBtAFqEGQgA0HYAWoiHiADIApB2AFqEGQgA0H8AWoiIyADIApB/AFqEGQgByAJEFk4AgAgByALEFk4AgQgByANEFk4AgggByAaEFk4AgwgByAcEFk4AhAgByAeEFk4AhQgByAjEFk4AhggB0EGQQVBBEEDQQIgByoCBCAHKgIAXiILIAcqAgggByALQQJ0aioCAF4bIgsgByoCDCAHIAtBAnRqKgIAXhsiCyAHKgIQIAcgC0ECdGoqAgBeGyILIAcqAhQgByALQQJ0aioCAF4bIgsgByoCGCAHIAtBAnRqKgIAXhsiC0ECdGoiDSoCACImQwAAAABcBEAgCSAJIAtBJGwiC2oQsAEgCCAIIAtqELABIAkgCUMAAIA/IA0qAgCRlRDQAQsgB0EgaiQAICZDAAAAAFsNACMAQSBrIgckACADQcgAaiIJIANBJGoiCCAKQcgAaiILEGQgA0HsAGoiDSAIIApB7ABqEGQgA0GQAWoiGiAIIApBkAFqEGQgA0G0AWoiHCAIIApBtAFqEGQgA0HYAWoiHiAIIApB2AFqEGQgA0H8AWoiIyAIIApB/AFqEGQgByAJEFk4AgAgByANEFk4AgQgByAaEFk4AgggByAcEFk4AgwgByAeEFk4AhAgByAjEFk4AhQgB0EFQQRBA0ECIAcqAgQgByoCAF4iCCAHKgIIIAcgCEECdGoqAgBeGyIIIAcqAgwgByAIQQJ0aioCAF4bIgggByoCECAHIAhBAnRqKgIAXhsiCCAHKgIUIAcgCEECdGoqAgBeGyIIQQJ0aiINKgIAIiZDAAAAAFwEQCAJIAkgCEEkbCIIahCwASALIAggC2oQsAEgCSAJQwAAgD8gDSoCAJGVENABCyAHQSBqJAAgJkMAAAAAWw0AIwBBIGsiByQAIANB7ABqIgkgA0HIAGoiCCAKQewAaiILEGQgA0GQAWoiDSAIIApBkAFqEGQgA0G0AWoiGiAIIApBtAFqEGQgA0HYAWoiHCAIIApB2AFqEGQgA0H8AWoiHiAIIApB/AFqEGQgByAJEFk4AgAgByANEFk4AgQgByAaEFk4AgggByAcEFk4AgwgByAeEFk4AhAgB0EEQQNBAiAHKgIEIAcqAgBeIgggByoCCCAHIAhBAnRqKgIAXhsiCCAHKgIMIAcgCEECdGoqAgBeGyIIIAcqAhAgByAIQQJ0aioCAF4bIghBAnRqIg0qAgAiJkMAAAAAXARAIAkgCSAIQSRsIghqELABIAsgCCALahCwASAJIAlDAACAPyANKgIAkZUQ0AELIAdBIGokACAmQwAAAABbDQAjAEEQayIHJAAgA0GQAWoiCSADQewAaiIIIApBkAFqIgsQZCADQbQBaiINIAggCkG0AWoQZCADQdgBaiIaIAggCkHYAWoQZCADQfwBaiIcIAggCkH8AWoQZCAHIAkQWTgCACAHIA0QWTgCBCAHIBoQWTgCCCAHIBwQWTgCDCAHQQNBAiAHKgIEIAcqAgBeIgggByoCCCAHIAhBAnRqKgIAXhsiCCAHKgIMIAcgCEECdGoqAgBeGyIIQQJ0aiINKgIAIiZDAAAAAFwEQCAJIAkgCEEkbCIIahCwASALIAggC2oQsAEgCSAJQwAAgD8gDSoCAJGVENABCyAHQRBqJAAgJkMAAAAAWw0AIwBBEGsiByQAIANBtAFqIgkgA0GQAWoiCCAKQbQBaiILEGQgA0HYAWoiDSAIIApB2AFqEGQgA0H8AWoiGiAIIApB/AFqEGQgByAJEFk4AgQgByANEFk4AgggByAaEFk4AgwgB0EEaiIIQQIgCCoCBCAIKgIAXiINIAgqAgggCCANQQJ0aioCAF4bIghBAnRqIg0qAgAiJkMAAAAAXARAIAkgCSAIQSRsIghqELABIAsgCCALahCwASAJIAlDAACAPyANKgIAkZUQ0AELIAdBEGokACAmQwAAAABbDQAjAEEQayIHJAAgA0HYAWoiCSADQbQBaiILIApB2AFqIggQZCADQfwBaiINIAsgCkH8AWoQZCAHIAkQWTgCCCAHIA0QWTgCDCAHQQhqIAcqAgwgByoCCF4iC0ECdGoiDSoCACImQwAAAABcBEAgCSAJIAtBJGwiC2oQsAEgCCAIIAtqELABIAkgCUMAAIA/IA0qAgCRlRDQAQsgB0EQaiQAICZDAAAAAFsNACADQfwBaiIHIANB2AFqIApB/AFqEGQgBxBZIiZDAAAAAFwEQCAHIAdDAACAPyAmkZUQ0AELICZDAAAAAFsNACMAQYADayIHJAAgByAHIANBABDgATgC0AIgByAHQSRqIANBARDgATgC1AIgByAHQcgAaiADQQIQ4AE4AtgCIAcgB0HsAGogA0EDEOABOALcAiAHIAdBkAFqIANBBBDgATgC4AIgByAHQbQBaiADQQUQ4AE4AuQCIAcgB0HYAWogA0EGEOABOALoAiAHIAdB/AFqIANBBxDgATgC7AIgByAHQaACaiADQQgQ4AE4AvACIAdB0AJqIglBCEEHQQZBBUEEQQNBAiAJKgIEIAkqAgBeIgggCSoCCCAJIAhBAnRqKgIAXhsiCCAJKgIMIAkgCEECdGoqAgBeGyIIIAkqAhAgCSAIQQJ0aioCAF4bIgggCSoCFCAJIAhBAnRqKgIAXhsiCCAJKgIYIAkgCEECdGoqAgBeGyIIIAkqAhwgCSAIQQJ0aioCAF4bIgggCSoCICAJIAhBAnRqKgIAXhsiCUECdGoqAgAiJkMAAAAAXARAIBAgByAJQSRsahDvAwsgB0GAA2okACAmQwAAAABcIRYLIANBoAJqJAAgFgRAIBAQ5gWLu0TxaOOItfjkPmNFIRILIApBoAJqJAAgEkUNACAEKgJUISogBCoCUCEvIAQqAmwhMCAEKgJMISggBCoCcCErIAQqAnghKSAEKgJgISwgASAEKgJIIi0gBCoCfCIxlCAEKgJkIAQqAlgiJ5WSIjIgBCoCXCImlDgCBCABICkgLZQgLCAnlZIiLCAmlDgCACAEKgJIIS0gBCoCgAEhMyAEKgJoITQgASAxICiUICsgJ5WSIisgJpQ4AhAgASApICiUIDAgJ5WSIiggJpQ4AgwgASAqjCAmlCIpIDKUIC+MICaUIiogLJQgMyAtlCA0ICeVkpKSOAIIIAEgKSArlCAqICiUIAQqAoABIAQqAkyUIAQqAnQgJ5WSkpI4AhQgASAEKgJ4ICaUIic4AhggASAEKgJ8ICaUIiY4AhwgASAEKgKAASAnIAQqAlCUkyAmIAQqAlSUkzgCIEEBIQILIARBkAFqJAAgAkUNACAhICIQOiESQQAhCyMAQTBrIggkACAIQShqIgEgEiAAEOoBIAhBIGoiAiASIABBCGoiChDqASAIQRhqIgMgEiAAQRBqIhAQ6gEgCEEQaiABEOcFIAhBCGogAhDnBQJAIAAgCiAQIAEgAiADEJ0DRQ0AQQMhFiAIQRhqIQEgCEEgaiECIAhBKGohAyAAIQkgCiEHA0AgFkEERwRAIAMiBCASIBBBCGoiEBDqASAWQQFqIRYgCUEIaiIJIAdBCGoiByAQIAIgASADEJ0DISIgAiEDIAEhAiAEIQEgIg0BDAILCyAHIBAgACACIAEgCEEQahCdA0UNACAQIAAgCiABIAhBEGogCEEIahCdAyELCyAIQTBqJAAgC0UNACAOQQFqIQ4LIAxBAWohDAwBCwsgDkUEQEEAIQ4MBAtDAACAPyAulSEmQQAhACAOQQAgDkEAShshAUEAIQwDQCABIAxGBEADQCAAIBlIIA5BAkpxRQRAIA5BASAOQQFKGyEAIBVBABBNKAIEIQEgFUEAEE0qAgAhJkEBIQwDQCAAIAxGBEAgDyAhIAFBCWwQOhDvAyAPKgIgISYgD0GAgID8AzYCICAPIA8qAgBDAACAPyAmlSImlDgCACAPICYgDyoCBJQ4AgQgDyAmIA8qAgiUOAIIIA8gJiAPKgIMlDgCDCAPICYgDyoCEJQ4AhAgDyAmIA8qAhSUOAIUIA8gJiAPKgIYlDgCGCAPICYgDyoCHJQ4AhxBASEODAkFICYgFSAMEE0qAgBeBEAgFSAMEE0qAgAhJiAVIAwQTSgCBCEBCyAMQQFqIQwMAQsACwALIAAgJSAZIABrEKYDIABqIgQgACAEShshCkEAIQEDQCABIA5GBEAgFUEAEE0hCSAOQQJtIA5BAXFqQQFrIQhBACEMIwBBEGsiEiQAIBJBCGoQswIhBwJAAkAgDiIKQQBKBEAgCEEATA0BIApBAWshDiAJIAhBAWsiHUEDdGohEANAIAwgDkgEQCAHIBAqAgA4AgAgByAQKAIENgIEIA4hACAMIQEDQCABIQIDQCACIgFBAWohAiAJIAFBA3RqIhYgBxDiBQ0ACyAAIQMDQCADIgBBAWshAyAHIAkgAEEDdGoiCxDiBQ0ACyAAIAFOBEAgFiALEMcBIAIhASADIQALIAAgAU4NAAsgDiAAIAEgCEgbIQ4gASAMIAAgHUgbIQwMAQsLIBsgECkCADcCACASQRBqJAAMAgtB0LEEQfjPARAwQZXQARAwQfbLABAwQdIAEDNB1tIAEDBBp9IBEDAQNBAAAAtB0LEEQczSARAwQZXQARAwQfbLABAwQdMAEDNB1tIAEDBB6dIBEDAQNBAAAAsgCkEBdSEOIAQhAAwCCyAhIBUgARBNKAIEQQlsEDohByAAIQwDQCAKIAxGBEAgAUEBaiEBDAIFIBcgEyAMQQJ0aigCAEEDdCIJaiEDIwBBEGsiAiQAIAJBCGogAkEMaiAHIAMqAgAgAyoCBBDsAyACIAIqAgggCSAYaiIDKgIAkzgCACACIAIqAgwgAyoCBJM4AgQgAioCACInICeUIAIqAgQiJyAnlJIgJpRDAACAP5IQzwYhJyACQRBqJAAgFSABEE0iAiAnIAIqAgCSOAIAIAxBAWohDAwBCwALAAsACwAFIBUgDBBNQQA2AgAgFSAMEE0gDDYCBCAMQQFqIQwMAQsACwALQdCxBEH4zgEQMEG9ywEQMEH2ywAQMEH5ABAzQdbSABAwQYLfARAwEDQQAAALQdCxBEGvzQEQMEG9ywEQMEH2ywAQMEH4ABAzQdbSABAwQZXOARAwEDQQAAALQdCxBEGkygEQMEG9ywEQMEH2ywAQMEH3ABAzQdbSABAwQcrMARAwEDQQAAALIBtBEGokACAOBEAjAEHwAGsiACQAAn9BACAAQSBqIA9DrMUnNxDxBUUNABogAEIANwMYIABBADYCFCAAIAWyIiY4AhAgACAGsiInOAIMIAAgJjgCCCAAICc4AgQgAEEANgIAIABB6ABqIgIgAEEgaiIBIABBGGoQ6gEgAEHgAGoiBCABIABBEGoQ6gEgAEHYAGoiAyABIABBCGoQ6gEgAEHQAGoiDCABIAAQ6gEjAEEwayIBJAAgAUEoaiIPIAQgAhDgAiABQSBqIg4gAyACEOACIAFBGGoiGyAMIAIQ4AIgAUEQaiICIAQgAxDgAiABQQhqIgQgDCADEOACIA8gDhCbAyEmIA4gGxCbAyEnIA8gGxCbAyEoIAIgBBCbAyEpICYgJxCeAyAoEJ4DICkQngMhJiABQTBqJABBACAFIAZst0QtQxzr4jYaP6K2ICZeDQAaIABB6ABqIgEgAEHgAGoiAiAAQdgAaiIDEKcBISZBAUF/IAIgAyAAQdAAaiIEEKcBQwAAAABeG0EBQX8gJkMAAAAAXhtqQQFBfyADIAQgARCnAUMAAAAAXhtqQQFBfyAEIAEgAhCnAUMAAAAAXhtqIgEgAUEfdSIBcyABa0EERgshESAAQfAAaiQACyAgENMBGiAfENMBGiAUQUBrJAAgEQUgASADIBEQTSgCABBrKgIAISYgICAREE0gJjgCACABIAMgERBNKAIAEGsqAgQhJiAgIBEQTSAmOAIEIAIgAyAREE0oAgQQayoCACEmIB8gERBNICY4AgAgAiADIBEQTSgCBBBrKgIEISYgHyAREE0gJjgCBCARQQFqIREMAQsLC4EIAgN/Bn0jAEEgayIEJAAgBCADIAEoAlhvIAEoAlRvIAEoAjRvIgU2AgwgBCADIAVrIAEoAlhvIAEoAlRvIAEoAjRtIgU2AgggBCADIAQoAgwgASgCNCAFbGprIAEoAlhvIAEoAlRtIgU2AgQgBCADIAQoAgwgASgCVCAFbCABKAI0IAQoAghsamprIAEoAlhtIgM2AgACQAJAAkACQAJAAkACQAJAAkAgBCgCDCIFQQBOBEAgBSABKAI0Tg0BIAQoAggiBUEASA0CIAUgASgCOE4NAyAEKAIEIgVBAEgNBCAFIAEoAjxODQUgA0EASA0GIAMgASgCQE4NBwwJC0HQsQRB/L8BEDBB58ABEDBB9ssAEDBBvgEQM0HW0gAQMEHtwQEQMBA0DAcLQdCxBEHKwgEQMEHnwAEQMEH2ywAQMEG/ARAzQdbSABAwQe3BARAwEDQMBgtB0LEEQfLCARAwQefAARAwQfbLABAwQcABEDNB1tIAEDBB5cMBEDAQNAwFC0HQsQRB98MBEDBB58ABEDBB9ssAEDBBwQEQM0HW0gAQMEHlwwEQMBA0DAQLQdCxBEHTxAEQMEHnwAEQMEH2ywAQMEHCARAzQdbSABAwQa7FARAwEDQMAwtB0LEEQfrFARAwQefAARAwQfbLABAwQcMBEDNB1tIAEDBBrsUBEDAQNAwCC0HQsQRB4sYBEDBB58ABEDBB9ssAEDBBxAEQM0HW0gAQMEHAxwEQMBA0DAELQdCxBEGPyAEQMEHnwAEQMEH2ywAQMEHFARAzQdbSABAwQcDHARAwEDQLEAAACyAAEJICIAEQ9AUQRiEFIAEoAnAhAwJAIAIQPSAFTwRAIAVBACAFQQBKGyEFA0AgBSAGRg0CIAMqAgQhByADKgIIIQggAyoCDCEJIAQoAgi3RAAAAAAAAOA/oLYhCiAEKAIEt0QAAAAAAADgP6C2IQsgBCgCALdEAAAAAAAA4D+gtiEMIAQgAyoCACAEKAIMt0QAAAAAAADgP6C2k4s4AhwgBCAHIAqTizgCGCAEIAkgDJOLOAIQIAQgCCALk4siByABKAI8siAHkxCeAyIHOAIUIAdDAAAAAGAEQAJAIAQqAhxDAACAP11FDQAgBCoCGEMAAIA/XUUNACAEKgIUQwAAgD9dRQ0AIAQqAhBDAACAP11FDQAgACACIAEQ9AUgBhA6KAIAEE0Q8wULIANBEGohAyAGQQFqIQYMAQVB0LEEQaPJARAwQefAARAwQfbLABAwQc0CEDNB1tIAEDBBgsoBEDAQNBAAAAsACwALQdCxBEGevwEQMEHXwwAQMEH2ywAQMEHWAhAzQdbSABAwQem/ARAwEDQQAAALIARBIGokAAvQGQMKfRF/AnwjAEEwayIWJAAgFkEgaiADED1BAnQQ7QMhGSAWQRBqIAMQPUECdBDtAyEaAkADfyADED0gE00EfyAEsiIIQ83MTD6UIAiSIgiMIQkgBbIiCkPNzEw+lCAKkiIKjCELIABBCjYCQCAAQQw2AjwgAEEANgI4IABBADYCNCAAQoCAgPyLgIDAPzcCJCAAIAo4AiAgACALOAIcIAAgCDgCGCAAIAk4AhQgAEGAgICJBDYCLCAAQQA2AlQgAEEANgJYQwAAIEEQzwYhCCAAQQE6ABAgAEMAAIA/IAiVOAIwIABB3ABqIgEQ3wUgACAHQQF1sjgCDCAAIAZBAXWyOAIIIAAgBzYCBCAAIAY2AgAgGUEAEDohGyAaQQAQOiEcIAMQPSESQQAhAyMAQRBrIhMkACABEN8FIBIEQCAAQfAAaiIdIBJBAnQQkwIgAEH8AGoiHiASEIoCIAAtABAEQAJAIwBBEGsiGCQAIAAoAgAgACgCBBC0AiEBIBggEhDtAyEUAkACQCASQQBKBEAgACgCAEEATA0BIAAoAgRBAEwNAiAcQQxqIQIgG0EMaiEEIAGyIQhBACEGA0AgBiASRgRAAn0gFEEAEDohFSAUEEYiAUECbSABQQFxakEBayEXQQAhBgJAIAFBAEoEQCAXQQBMDQEgAUEBayEHIBUgF0EBayIfQQJ0aiEgA0AgICoCACEIIAciASAGIgJKBEADQCACIQQDQCAEIgJBAWohBCAVIAJBAnRqIiEqAgAgCF0NAAsgASEFA0AgBSIBQQFrIQUgCCAVIAFBAnRqIiIqAgBdDQALIAEgAk4EQCAhICIQtQYgBCECIAUhAQsgASACTg0ACyAHIAEgAiAXSBshByACIAYgASAfSBshBgwBCwsgCAwCC0HQsQRBkKwBEDBBl64BEDBBgB0QMEE1EDNB8SAQMEH4rwEQMBA0EAAAC0HQsQRBwbEBEDBBl64BEDBBgB0QMEE2EDNB8SAQMEHesQEQMBA0EAAACyEIIABBBQJ/IAAqAhggACoCFJMgCEMAAIA+lCIIlY0iCYtDAAAAT10EQCAJqAwBC0GAgICAeAsQtAI2AjQgAEEFAn8gACoCICAAKgIckyAIlY0iCItDAAAAT10EQCAIqAwBC0GAgICAeAsQtAIiATYCOCAAIAEgACgCNGwiATYCVCAAIAAoAjwgAWw2AlggFBB+IBhBEGokAAwFBSAEIAZBBHQiAWoqAgAgASACaioCABDfAiEJIBQgBhA6IAkgCJQ4AgAgBkEBaiEGDAELAAsAC0HQsQRB3PEAEDBBzRIQMEGAHRAwQdABEDNB8SAQMEGJ9QAQMBA0DAcLQdCxBEHI+QAQMEHNEhAwQYAdEDBB0QEQM0HxIBAwQaT9ABAwEDQMBgtB0LEEQZiAARAwQc0SEDBBgB0QMEHSARAzQfEgEDBBsoIBEDAQNAwFCwsgEkEAIBJBAEobIRhBACECA0AgAyAYRgRAIB0gAkECdBCTAiAeIAIQigIFIBsgA0EEdCIEaiIBKgIAIQ0gASoCBCEOIAEqAgghCCABKgIMIQsgBCAcaiIBKgIAIQkgASoCBCEKIAEqAgghDCABKgIMIQ8jAEEQayIBJAAgEyAIIAyTIgg4AgREGC1EVPshGUAhIwJAIAi7IiREGC1EVPshCcBlRQRARBgtRFT7IRnAISMgJEQYLURU+yEJQGRFDQELIBMgIyAkoLYiCDgCBAsCQAJAIAi7IiNEGC1EVPshCcBkBEAgI0QYLURU+yEJQGVFDQEgEyALIA8Q3wIiCDgCACATKgIEIgsQ3gUhDCALEN0FIQsgASAMIAiUIgw4AgwgASAMOAIAIAEgCyAIlCIIOAIIIAEgCIw4AgQgEyATKgIAEKQCIAAqAjCUOAIAIAEqAgghCCABKgIMIQsgEyANIAEqAgAiDSAJlCABKgIEIgwgCpSSkyANIAAqAgiUIAwgACoCDJSSkjgCDCATIA4gCCAJlCALIAqUkpMgCCAAKgIIlCALIAAqAgyUkpI4AgggAUEQaiQADAILQdCxBEHUxQAQMEGPhAEQMEGAHRAwQdQDEDNB8SAQMEHLygAQMBA0DAcLQdCxBEHJ0AAQMEGPhAEQMEGAHRAwQdUDEDNB8SAQMEHLygAQMBA0DAYLAn8gEyoCCCEIIBMqAgQhCyATKgIAIQlBACEVAkACQAJAAkACQAJAAkACQAJAAkAgEyoCDCIKIAAqAhQiDV0NACAAKgIYIg4gCl8NACAAKgIcIgwgCF4NACAAKgIgIg8gCF8NACALuyIjRBgtRFT7IQnAZSAjRBgtRFT7IQlAZHINACAAKgIkIhAgCV4NACAAKgIoIhEgCV8NACAKIA1gRQ0BIAogDl1FDQIgCCAMYEUNAyAIIA9dRQ0EICNEGC1EVPshCcBkRQ0FICNEGC1EVPshCUBlRQ0GIAkgEGBFDQcgCSARXUUNCCAAKAI0IQEgACAKIAAqAhQiCpMgACoCGCAKkxDfAiABspQ4AkQgACgCOCEBIAAgCCAAKgIcIgiTIAAqAiAgCJMQ3wIgAbKUOAJIIAAgC7tEGC1EVPshCUCgRIPIyW0wX8Q/oiAAKAI8t6K2OAJMIAAoAkAhASAAIAkgACoCJCIIkyAAKgIoIAiTEN8CIAGylDgCUCAAKgJEQwAAAL+SjiEIIAAqAkhDAAAAv5KOIQkgACoCUEMAAAC/ko4hCgJ/IAAqAkxDAAAAv5KOIguLQwAAAE9dBEAgC6gMAQtBgICAgHgLIAAoAjwiF2ogF28hBgJ/IAiLQwAAAE9dBEAgCKgMAQtBgICAgHgLIQECfyAJi0MAAABPXQRAIAmoDAELQYCAgIB4CyEEIAFBAEghBwJ/IAqLQwAAAE9dBEAgCqgMAQtBgICAgHgLIQUgBw0AIARBAEggAUEBaiIHIAAoAjROcg0AQQAgBEEBaiISIAAoAjhODQoaIAVBAEgNACAFQQFqIhQgACgCQE4NACAAIAAgASAEIAYgBRCTARCSASAAIAAgByAEIAYgBRCTARCSASAAIAAgByASIAYgBRCTARCSASAAIAAgByASIAZBAWogF28iFSAFEJMBEJIBIAAgACAHIBIgFSAUEJMBEJIBIAAgACAHIBIgBiAUEJMBEJIBIAAgACAHIAQgFSAFEJMBEJIBIAAgACAHIAQgFSAUEJMBEJIBIAAgACAHIAQgBiAUEJMBEJIBIAAgACABIBIgBiAFEJMBEJIBIAAgACABIBIgFSAFEJMBEJIBIAAgACABIBIgFSAUEJMBEJIBIAAgACABIBIgBiAUEJMBEJIBIAAgACABIAQgFSAFEJMBEJIBIAAgACABIAQgFSAUEJMBEJIBIAAgACABIAQgBiAUEJMBEJIBQQEhFQsgFQwJC0HQsQRBwAgQMEGPhAEQMEGAHRAwQegCEDNB8SAQMEGBJBAwEDQMBwtB0LEEQfgpEDBBj4QBEDBBgB0QMEHpAhAzQfEgEDBBgSQQMBA0DAYLQdCxBEHqMRAwQY+EARAwQYAdEDBB6gIQM0HxIBAwQcM2EDAQNAwFC0HQsQRBxj4QMEGPhAEQMEGAHRAwQesCEDNB8SAQMEHDNhAwEDQMBAtB0LEEQdTFABAwQY+EARAwQYAdEDBB7AIQM0HxIBAwQcvKABAwEDQMAwtB0LEEQcnQABAwQY+EARAwQYAdEDBB7QIQM0HxIBAwQcvKABAwEDQMAgtB0LEEQY3XABAwQY+EARAwQYAdEDBB7gIQM0HxIBAwQbDbABAwEDQMAQtB0LEEQdjgABAwQY+EARAwQYAdEDBB7wIQM0HxIBAwQbDbABAwEDQLDAYLBEAgHSACQQJ0EDoiASAAKgJEOAIAIAEgACoCSDgCBCABIAAqAkw4AgggASAAKgJQOAIMIB4gAhA6IAM2AgAgAkEBaiECCyADQQFqIQMMAQsLCyATQRBqJAAjAEEQayIBJAAgFkEANgIMIBZBfzYCCCABQQhqIABB3ABqEPQDELICIQADQCAAIAEQRxCyAhB9BEAgABBtIQIgFioCDCACKAIEs10EQCAWIAAQbSgCADYCCCAWIAAQbSgCBLM4AgwLIAAQ8wMMAQsLIAFBEGokACAWKAIIIQAgFioCDCEIIBoQfiAZEH4gFkEwaiQAQX8gACAIQwAAQEBdGwUgASADIBMQTSgCABBrIRIgAiADIBMQTSgCBBBrIRQgGSATQQJ0IhcQOiIVIBIqAgA4AgAgFSASKgIEOAIEIBUgEioCCDgCCCAVIBIqAgw4AgwgGiAXEDoiEiAUKgIAOAIAIBIgFCoCBDgCBCASIBQqAgg4AgggEiAUKgIMOAIMIBNBAWohEwwBCwsPCxAAAAtUAQF/IwBBEGsiBCQAIAQgACADEKIEIQMgABAyGiACIAFrIgBBAEoEQCADKAIEIAEgABA+GiADIAMoAgQgAEEMbkEMbGo2AgQLIAMQciAEQRBqJAALDwAgACAAKAIAKAIANgIAC+0SAhR/AXxBxgAhFUHAhD0hFiADQQFGBEAgAUECbSEBQZChDyEWQREhFSAAQQJtIQALIAVBADYCACACQZCAyABqIRMgAUECayEYIABBAmshGUEAIQEDQAJAIAIoAgggAUwEQCAFKAIAIQYMAQsCQCACIAFBAnRqIhcoAgwiBiAVSCAGIBZKcg0AIAIgAUEEdGoiEUGMgAhqIggoAgBBAUYNACARQZCACGooAgAgGUYNACARQZSACGooAgBBAUYNACARQZiACGooAgAgGEYNACACKAIAIQwgAUEBaiEKIAQgBSgCAEGw8QRsaiEJIwBBgPEEayINJAAgDCAIKAIAIgYgCCgCCCILIABsakEBdGohByAIKAIEIQgCfwJAAkADQCAGIAhKDQECQCAHLgEAIg5BAEoEQCAOQf//A3FBAnQgE2pBBGsoAgAgCkYNAQsgB0ECaiEHIAZBAWohBgwBCwsgBkF/Rw0BC0EAQQNB3QtBABA2QX8MAQsgCSALNgLcuAIgCSAGNgIcIAlBATYCGCAJQRxqIQhBASEKQQUhBwJAA0AgDCAKQQJ0Ig4gCWoiCkHYuAJqKAIAIABsIAooAhgiD2pBAXRqIRIgB0EFaiEHQQAhCgJAA0ACQCAHQQhvIQcgCkEIRg0AIBIgB0ECdCIQQfDCAGooAgAiFCAAbCAQQdDCAGooAgAiEGpBAXRqLgEAQQBKDQIgCkEBaiEKIAdBAWohBwwBCwtBAEEDQf8XQQAQNkF/DAMLIAggDmogDyAQajYCACAJIAkoAhhBAnRqIgpB3LgCaiAUIApB2LgCaigCAGo2AgACQCAIIAkoAhgiCkECdCIOaigCACAGRw0AIAkgDmpB3LgCaigCACALRw0AIApBASAKQQFKGyEOQQAhDEEAIQhBASEHDAILIAkgCkEBaiIKNgIYIApBj84ARw0AC0EAQQNBsR5BABA2QX8MAQsDQCAHIA5HBEAgCSAHQQJ0aiIPQdy4AmooAgAgC2siEiASbCAPKAIcIAZrIg8gD2xqIg8gDCAMIA9IIg8bIQwgByAIIA8bIQggB0EBaiEHDAELC0EAIQYgCEEAIAhBAEobIQcDfyAGIAdGBH8gCUEcaiELIAlB3LgCaiEMIAghBgN/IAYgCk4Ef0EAIQYDQCAGIAdHBEAgCSAGIAhrIgogCSgCGGpBAnRqIAZBAnQiCyANQcC4AmpqKAIANgIcIAkgCSgCGCAKakECdGpB3LgCaiALIA1qKAIANgIAIAZBAWohBgwBCwsgCUEcaiAJKAIYQQJ0aiAJKAIcNgIAIAlB3LgCaiAJKAIYQQJ0aiAJKALcuAI2AgAgCSAJKAIYQQFqNgIYQQAFIAsgBiAIa0ECdCIKaiALIAZBAnQiDmooAgA2AgAgCiAMaiAMIA5qKAIANgIAIAZBAWohBiAJKAIYIQoMAQsLBSAGQQJ0IgsgDUHAuAJqaiAJIAtqIgwoAhw2AgAgCyANaiAMQdy4AmooAgA2AgAgBkEBaiEGDAELCwshBiANQYDxBGokACAGQQBIDQAgFygCDCEMIAQgBSgCAEGw8QRsaiEKQQAhCCMAQfAAayIHJAAgCkHcuAJqIQkgCkEcaiELIAooAhgiBkECIAZBAkobQQFrIQ4gCigC3LgCIQ8gCigCHCESQQAhBkEBIQ0DQCANIA5HBEAgCiANQQJ0aiIQQdy4AmooAgAgD2siFCAUbCAQKAIcIBJrIhAgEGxqIhAgCCAIIBBIIhAbIQggDSAGIBAbIQYgDUEBaiENDAELCyAHQQA2AgwgB0EANgI8AkAgCyAJQQAgBiAMt0QAAAAAAADoP6NEexSuR+F6hD+iRAAAAAAAAPA/oiIaIAdBQGsgB0E8ahDpAUEASARAQX8hDQwBC0F/IQ0gCyAJIAYgCigCGEEBayAaIAdBEGogB0EMahDpAUEASA0AAn8gBygCPCIIQQFHIAcoAgwiDEEBR3JFBEAgBygCECEIIAYhCSAHKAJADAELIAhBAkggDHJFBEAgB0EANgI8IAdBADYCDCALIAlBACAGQQJtIgggGiAHQUBrIAdBPGoQ6QFBAEgNAiALIAkgCCAGIBogB0EQaiAHQQxqEOkBQQBIDQIgBygCPEEBRw0CIAcoAgxBAUcNAiAHKAIQIQkgBiEIIAcoAkAMAQsgCCAMQQJIcg0BIAooAhghCCAHQQA2AjwgB0EANgIMIAsgCSAGIAYgCGpBAWtBAm0iCCAaIAdBQGsgB0E8ahDpAUEASA0BIAsgCSAIIAooAhhBAWsgGiAHQRBqIAdBDGoQ6QFBAEgNASAHKAI8QQFHDQEgBygCDEEBRw0BIAcoAhAhCCAHKAJAIQkgBgshBkEAIQ0gCkEANgKc8QQgCkGo8QRqIAg2AgAgCkGk8QRqIAk2AgAgCkGg8QRqIAY2AgAgCkGs8QRqIAooAhhBAWs2AgALIAdB8ABqJAAgDUEASA0AIAQgBSgCAEGw8QRsaiAXKAIMNgIAIAQgBSgCACIGQbDxBGxqIgggEUGQgChqKwMAOQMIIAggEUGYgChqKwMAOQMQIAUgBkEBaiIINgIAQTwhBiAIQTxGDQELIAFBAWohAQwBCwtBACECQQAhAQNAIAEgBk4EQANAIAIgBkgEQCAEIAIiAUGw8QRsaigCAEUEQANAIAYgAUEBaiIASgRAIAQgAUGw8QRsaiAEIABBsPEEbGpBsPEEED4aIAUoAgAhBiAAIQEMAQsLIAUgBkEBayIGNgIACyACQQFqIQIMAQsLAkAgA0EBRw0AQQAhAANAIAAgBk4NASAEIAQoAgBBAnQ2AgAgBCAEKwMIIhogGqA5AwggBCAEKwMQIhogGqA5AxAgBCgCGCEDQQAhAQNAIAEgA0gEQCAEIAFBAnRqIgIgAigCHEEBdDYCHCACQdy4AmoiAiACKAIAQQF0NgIAIAFBAWohAQwBCwsgAEEBaiEAIARBsPEEaiEEIAUoAgAhBgwACwALQQAPCyAEIAFBsPEEbGohCCABQQFqIgAhAQNAIAEgBk4EQCAAIQEMAgUgCCsDCCAEIAFBsPEEbGoiBisDCKEiGiAaoiAIKwMQIAYrAxChIhogGqKgIRoCQAJAIAgoAgAiCSAGKAIAIhNKBEAgGiAJQQRtt2MNAQwCCyAIIQYgGiATQQRtt2NFDQELIAZBADYCAAsgAUEBaiEBIAUoAgAhBgwBCwALAAsACwkAIAFBBGoQfguJAQECfyMAQRBrIgQkACABEDIhASAAQRgQWyAEQQhqIAFBABCtAhCsAiIAKAIAQQhqIQUgAygCACEDIwBBEGsiASQAIAEgAzYCCCAFIAEoAggoAgA2AgAgBUEEahBSGiABQRBqJAAgABBTQQE6AAQgACgCACACNgIEIAAoAgBBADYCACAEQRBqJAALuQIAIAAoAgAgASgCABBwIAAoAgQgASgCBBBwaiAAKAIIIAEoAggQcGogACgCDCABKAIMEHBqIAAoAhAgASgCEBBwaiAAKAIUIAEoAhQQcGogACgCGCABKAIYEHBqIAAoAhwgASgCHBBwaiAAKAIgIAEoAiAQcGogACgCJCABKAIkEHBqIAAoAiggASgCKBBwaiAAKAIsIAEoAiwQcGogACgCMCABKAIwEHBqIAAoAjQgASgCNBBwaiAAKAI4IAEoAjgQcGogACgCPCABKAI8EHBqIAAoAkAgASgCQBBwaiAAKAJEIAEoAkQQcGogACgCSCABKAJIEHBqIAAoAkwgASgCTBBwaiAAKAJQIAEoAlAQcGogACgCVCABKAJUEHBqIAAoAlggASgCWBBwaiAAKAJcIAEoAlwQcGoLCgAgAEEMaigCAAs/AQJ/AkAgAUEATA0AIABBADYCAEEBIQIDQCABIAJGDQEgACACQQJ0aiADQQFqIgM2AgAgAkEBaiECDAALAAsLrQIBBH8gASAAEEYiA0sEQCMAQSBrIgYkAAJAIAEgA2siASAAEDIoAgAgACgCBGtBAnVNBEAjAEEQayIEJAAgBCAAIAEQugIiAygCBCEBIAMoAgghBQNAIAEgBUYEQCADEHIgBEEQaiQABSAAEDIgASACEOwBIAMgAUEEaiIBNgIEDAELCwwBCyAAEDIhAyAGQQhqIAAgABBGIAFqEKQDIAAQRiADELwCIQMjAEEQayIEJAAgBCADQQhqIAEQrAMiASgCACEFA0AgASgCBCAFRwRAIAMoAhAgASgCACACEOwBIAEgASgCAEEEaiIFNgIADAELCyABELIBIARBEGokACAAIAMQ6wIgAxC7AgsgBkEgaiQADwsgASADSQRAIAAgACgCACABQQJ0ahCYBAsLCAAgAEHoAGoLCwAgAEEAIAEQORoLzBICFH8BfSMAQTBrIgwkAAJAAkACQAJAAkACQAJAIABBDGoiCSgCBCAAKAJsELQCIAVOBEAgAUEBEKMDIAEQqgIgBRCKAiAFQQAgBUEAShshAgNAIAIgBkYNAiAEIAZBAnRqKAIAIQAgARCqAiAGEDogADYCACAGQQFqIQYMAAsACyAMQRhqEI0CIQcgAiEVIAMhDyMAQRBrIhMkAAJAAkACQAJAIAkoAgQgCUEMaiIZEEZGBEAgD0EATA0BIAUgD0oNAiAJKAIEIAVKDQMgE0F/NgIMIAlBGGoiDSAFIBNBDGoQgQYgE0F/NgIIIAlBJGoiGCAFIBNBCGoQgQYgCUEwaiIQIAUQigIgEEEAEDogEBBGEIAGQX8hAwNAIAkoAgggCEwEQCAJKAIEIBkQRkcEQEHQsQRBspkBEDBBjZoBEDBB9ssAEDBBuwEQM0HW0gAQMEGQnAEQMBA0DA4LBSAQQQAQOiAQEEYgCSgCBCAJKAIAEPEDIBBBABA6IQ4gCSgCBCELQQAhFEEAIQICQAJAAkACQCAYEEYgBUYEQCAPQQBMDQEgBSAPSg0CIAtBAEwNAyAFQQAgBUEAShshEQNAIBEgFEYNBSAEIBRBAnRqIRJBACEWQX8hBgNAIAsgFkYEQCAUQQFqIRQgAiAGaiECDAIFIAYgFSASKAIAQeAAbGogFSAEIA4gFkECdGoiFygCAEECdGooAgBB4ABsahChAyIKSwRAIBcoAgAhBiAYIBQQOiAGNgIAIAohBgsgFkEBaiEWDAELAAsACwALQdCxBEGfgwEQMEGNmgEQMEH2ywAQMEHGARAzQdbSABAwQdiqARAwEDQQAAALQdCxBEGNnwEQMEGNmgEQMEH2ywAQMEHHARAzQdbSABAwQZqgARAwEDQQAAALQdCxBEGyogEQMEGNmgEQMEH2ywAQMEHIARAzQdbSABAwQb6jARAwEDQQAAALQdCxBEGxrwEQMEGNmgEQMEH2ywAQMEHJARAzQdbSABAwQdivARAwEDQQAAALIAIgA0kEQCANIBgQsQMgGUEAEDogEEEAEDogCSgCBBDtASACIQMLIAhBAWohCAwBCwsgE0EQaiQADAQLQdCxBEGymQEQMEGNmgEQMEH2ywAQMEGaARAzQdbSABAwQZCcARAwEDQMCgtB0LEEQY2fARAwQY2aARAwQfbLABAwQZsBEDNB1tIAEDBBmqABEDAQNAwJC0HQsQRBsqIBEDBBjZoBEDBB9ssAEDBBnAEQM0HW0gAQMEG+owEQMBA0DAgLQdCxBEHwpwEQMEGNmgEQMEH2ywAQMEGdARAzQdbSABAwQeioARAwEDQMBwsgCUEYaiINEEYgBUcNAUEAIQYCQANAAkAgDRBGIAZNBEAgBxD/BUEBRw0BIAFBARCjAyABEKoCIAUQigJBACEGIAVBACAFQQBKGyECA0AgAiAGRg0EIAQgBkECdGooAgAhACABEKoCIAYQOiAANgIAIAZBAWohBgwACwALIA0gBhA6KAIAQX9GDQUgDSAGEDooAgAgBU4NBiAEIA0gBhA6KAIAQQJ0aigCACAPTg0HIAQgDSAGEDooAgBBAnRqIQojAEEgayIRJAAgESAKEOMCNgIQIBFBGGohFyARQRBqIQNBACEOIwBBIGsiCCQAIAcQPBogCigCACESIAcQlAEhAiAIQQA6AB8CQAJAIAJFDQAgByASIAIQXyIOEDooAgAiC0UNAANAIAsoAgAiC0UNASASIAsoAgRHBEAgCygCBCACEF8gDkcNAgsgBxBeIAtBCGogChCMAkUNAAsMAQsgCEEQaiAHIBIgAxD9BSAHEDwoAgAhCiAHEF4hAwJAIAIEQCAKQQFqsyADKgIAIAKzlF5FDQELIAggAhCLAkEBcyACQQF0cjYCDCAIAn8gBxA8KAIAQQFqsyAHEF4qAgCVjSIaQwAAgE9dIBpDAAAAAGBxBEAgGqkMAQtBAAs2AgggByAIQQxqIAhBCGoQbygCABCvAiASIAcQlAEiAhBfIQ4LAkAgByAOEDooAgAiA0UEQCAIKAIQIAdBCGoiAygCADYCACAHIAgoAhA2AgggByAOEDogAzYCACAIKAIQKAIARQ0BIAgoAhAhAyAHIAgoAhAoAgAoAgQgAhBfEDogAzYCAAwBCyAIKAIQIAMoAgA2AgAgAyAIKAIQNgIACyAIQRBqIgMQuQEhCyAHEDwiAiACKAIAQQFqNgIAIAhBAToAHyADKAIAIQogA0EANgIAIAoEQCADEFMiAi0ABARAIAIoAgAgCkEIahD8BQsgCgRAIAIoAgAaIAoQMQsLCyAXIAhBEGogCxB3IAhBH2oQrgIgCEEgaiQAIBcQbSECIBFBIGokACACQQRqIAQgBkECdGoQogMgBkEBaiEGDAELCyABEIIGIQUgBxD/BSEEIwBBIGsiAyQAAkACQCAFEMgBIARJBEAgBRDqAiAESQ0BIAUQMiECIAUgA0EIaiAEIAUQRiACELwCIgIQ6wIgAhC7AgsgA0EgaiQADAELELACAAsgDEEQaiAHEPQDELICIQQDQCAEIAxBCGoQRxCyAhB9RQ0BIAQQbUEEahBGRQ0HQYABEFshBSAAEIUGIQMgFSAEEG0oAgBB4ABsaiECIAVBAToAZCAFIAM2AgAgBUHoAGoQUhogBUH0AGoQUhogBUEEaiACQeAAED4aIAwgBTYCCCAFQQAQowMgARCCBiAMQQhqEKIDIAQQbSECIAAgDCgCCCAVIA8gAkEEaiICQQAQOiACEEYQhAYgBBDzAwwACwALIAcoAgghACAHEDIhAgNAIAAEQCAAKAIAIQEgAiAAQQhqEPwFIAAQMSABIQAMAQsLIAcQsQILIAxBMGokAA8LQdCxBEGfgwEQMEGVhQEQMEH2ywAQMEHrAhAzQdbSABAwQdCHARAwEDQMBAtB0LEEQcOKARAwQZWFARAwQfbLABAwQe0CEDNB1tIAEDBBzowBEDAQNAwDC0HQsQRBso8BEDBBlYUBEDBB9ssAEDBB7gIQM0HW0gAQMEH5jwEQMBA0DAILQdCxBEG1kgEQMEGVhQEQMEH2ywAQMEHvAhAzQdbSABAwQfmPARAwEDQMAQtB0LEEQb+UARAwQZWFARAwQfbLABAwQYMDEDNB1tIAEDBBt5YBEDAQNAsQAAALEwAgACAAKAIEIgBBAWo2AgQgAAsJACAAQQA6AAALKAEBfyAAIAEoAgA2AgAgASgCACEDIAAgATYCCCAAIAIgA2o2AgQgAAtFAQN/IABB6ABqIQEDQCABEEYgAksEQCABIAIQOigCACIDBEAgAxCIBgsgAxAxIAJBAWohAgwBCwsgAEH0AGoQfiABEH4LJQEBfyAAKAIAIQIgACABNgIAIAIEQCACBEAgAhCIBgsgAhAxCwsxAQF/IAAQ7AIgACgCAARAIAAgACgCABCvAyAAEDIaIAAoAgAhASAAELoBGiABEDELC2MBAX8gAQRAIAFBJGoiAEHUAGoQigYgAEHIAGoQfiAAQQxqIgJBMGoQfiACQSRqEH4gAkEYahB+IAJBDGoQfiAAQQhqQQAQiQYgAUEIaiIAQRBqEN8DIABBBGoQqQULIAEQMQsUACAAQQA2AgQgAEGY7gM2AgAgAAsJACAAIAE2AggLEwAgAEEINgIEIABBDGpBCBCKAgsgAQF/IAAoAgAhAiAAIAE2AgAgAgRAIAAQUyACEKQGCwuqAgEHfyAAEFMhAgJAIAEEQCAAIAIgARC5AhCPBiAAEFMgATYCAEEAIQIDQCABIAJGBEAgAEEIaiICKAIAIgNFDQMgACADKAIEIAEQXyIHEDogAjYCAANAIAMoAgAiAkUNBAJAIAIoAgQgARBfIgQgB0YNACACIQUgACAEEDooAgBFBEAgACAEEDogAzYCACAEIQcMAQsDQAJAIAUiBigCAEUEQEEAIQUMAQsgABBeGiACQQhqIAYoAgBBCGoQqAEhCCAGKAIAIQUgCA0BCwsgAyAFNgIAIAYgACAEEDooAgAoAgA2AgAgACAEEDooAgAgAjYCAAwBCyACIQMMAAsABSAAIAIQOkEANgIAIAJBAWohAgwBCwALAAsgAEEAEI8GIAAQU0EANgIACwspAQF/A0AgAkEIRkUEQCABIAJqIAAgAmstAAc6AAAgAkEBaiECDAELCwsIACAAIAEQdwspAQF/A0AgAkEERkUEQCABIAJqIAAgAmstAAM6AAAgAkEBaiECDAELCwskAEGolQQtAABBAXFFBEBBnJUEEKoDQaiVBEEBOgAAC0GclQQLoQEBBX8jAEEQayIDJAAgABA8GiABKAIAIQQCQAJAIAAQlAEiBUUNACAAIAQgBRBfIgYQOigCACICRQ0AA0AgAigCACICRQ0BIAQgAigCBEcEQCACKAIEIAUQXyAGRw0CCyAEIAIoAgRHDQAgABBeIAJBCGogARCMAkUNAAsgA0EIaiACEHcoAgAhAgwBCyADEPoDIgI2AggLIANBEGokACACCwoAIAFBBGoQ1QQLCAAgABCzAhoL5gEBBX8jAEHAAWsiAiQAIAAgAkEIaiIBEJMGIABBBGogAUEEchCTBgNAAkBBACEBIANBA0YEQCAAKAKwASIDQQN0QYitAWooAgAiBEEAIARBAEobIQQDQCABIARGDQIgACABQQN0IgVqQegAaiACIAVqQfAAahCRBiABQQFqIQEMAAsABQNAIAFBBEZFBEAgAUEDdCIEIAAgA0EFdCIFampBCGogAiAFaiAEakEQahCRBiABQQFqIQEMAQsLIANBAWohAwwCCwALCyACIAM2ArgBIAAgAkEIakG4ARA+GiACQcABaiQAC0ABAX8gABDqBiABSQRAEL4CAAsgACAAEDIgARCkBCICNgIAIAAgAjYCBCAAEDIgAiABQRRsajYCACAAQQAQ5wYLVgEBfyMAQRBrIgQkACAEIAAgAxCzBCEDIAAQMiEAA0AgASACRwRAIAAgAygCBCABELkDIAMgAygCBEEUajYCBCABQRRqIQEMAQsLIAMQciAEQRBqJAALJgAgACgCABogACgCACAAENwBahogACgCABogACgCACAAEI0BahoLBAAgAQshAQF/IAEgAGshAyAAIAFHBEAgAiAAIAMQ1AILIAIgA2oLBwAgASAAawtOAQF/IwBBEGsiBCQAIAQgACADELYDIQMgABAyGiACIAFrIgBBAEoEQCADKAIEIAEgABA+GiADIAMoAgQgAGo2AgQLIAMQciAEQRBqJAALFwAgAEIANwIAIABBAToAECAAQgA3AggLKwAgACgCABogACgCACAAENsBQRRsahogACgCABogACgCACAAEHxBFGxqGguCCwEWfAJAAkACQAJAAkACQCAFQQFrDgQBAgMABQsgACsDECIRRAAAAAAAABhAoiEXIAArAxgiEkQAAAAAAAAYQKIhGCACIAArAzgiGaEgACsDKCIaoyIKIAqiIQIgASAAKwMwIhuhIAArAyAiDqMiCSAJoiEBIAArA0AhFSAAKwMIIRMgACsDACEUIBIgEqAhDyARIBGgIRZBASEFIAohBiAJIQcDQAJAAkAgAUQAAAAAAAAAAGIgAkQAAAAAAAAAAGJyRQRARAAAAAAAAAAAIQcMAQsgBiAPIAcgEiABIAGgIAIgAaAiEKCiIBMgEKIgEKIgFCAQokQAAAAAAADwP6CgIgsgB6IgBiAWIAeioqCgIAmhIBggB6IgFiAGoiATIAIgAqIgAUQAAAAAAAAUQKIgAaIgAiABRAAAAAAAAAhAoiIHoiIMoKCiIBQgByACoKJEAAAAAAAA8D+goKCgo6EiB6IiDSAGoiALIAaiIBEgAiACoCAQoKKgoCAKoSANIBcgBqIgEyACRAAAAAAAABRAoiACoiABIAGiIAygoKIgFCACRAAAAAAAAAhAoiABoKJEAAAAAAAA8D+goKCgo6EhBiAFQQRHDQEgBiEICyADIBsgDiAHoiAVo6A5AwAgGSAaIAiiIBWjoCECDAULIAVBAWohBSAGIAaiIQIgByAHoiEBDAALAAsgASAAKwMAIguhIgEgAaIgAiAAKwMIoSIGIAaioCIHnyICmiEMIAArAxhEAAAAAITXl0GjIghEAAAAAAAACMCiIQ0gCJohCkEBIQUDQEQAAAAAAAAAACEIAkAgAkQAAAAAAAAAAGIEQCAGIAIgCiAHokQAAAAAAADwP6AgAqIgDKAgDSAHokQAAAAAAADwP6CjoSIIoiACoyEGIAEgCKIgAqMhASAFQQNHDQEgASEJIAYhCAsgAyALIAkgACsDEKOgOQMAIAggACsDEKMgACsDCKAhAgwECyAFQQFqIQUgASABoiAGIAaioCIHnyECDAALAAsgASAAKwMAIg6hIgYgBqIgAiAAKwMIoSIHIAeioCICnyIBmiEPIAArAxhEAAAAAITXl0GjIglEAAAAAAAACMCiIQsgACsDIEQAAAAAhNeXQaNEAAAAAABq+ECjIghEAAAAAAAAFMCiIQwgCZohDSAImiEKQQEhBQNARAAAAAAAAAAAIQlEAAAAAAAAAAAhCAJAIAFEAAAAAAAAAABiBEAgByABIAIgCqIgAqIgDSACokQAAAAAAADwP6CgIAGiIA+gIAwgAqIgAqIgCyACokQAAAAAAADwP6Cgo6EiAqIgAaMhByAGIAKiIAGjIQYgBUEDRw0BIAYhCSAHIQgLIAMgDiAJIAArAxCjoDkDACAIIAArAxCjIAArAwigIQIMAwsgBUEBaiEFIAYgBqIgByAHoqAiAp8hAQwACwALIAEgACsDACIOoSAAKwMYoyIGIAaiIAIgACsDCKEiByAHoqAiAp8iAZohDyAAKwMgRAAAAACE15dBoyIJRAAAAAAAAAjAoiELIAArAyhEAAAAAITXl0GjRAAAAAAAavhAoyIIRAAAAAAAABTAoiEMIAmaIQ0gCJohCkEBIQUDQEQAAAAAAAAAACEJRAAAAAAAAAAAIQgCQCABRAAAAAAAAAAAYgRAIAcgASACIAqiIAKiIA0gAqJEAAAAAAAA8D+goCABoiAPoCAMIAKiIAKiIAsgAqJEAAAAAAAA8D+goKOhIgKiIAGjIQcgBiACoiABoyEGIAVBA0cNASAGIQkgByEICyADIA4gCSAAKwMQo6A5AwAgCCAAKwMQoyAAKwMIoCECDAILIAVBAWohBSAGIAaiIAcgB6KgIgKfIQEMAAsACyAEIAI5AwALC1MBA38jAEEQayIDJAAgAyAAIAEQswQiAigCBCEBIAIoAgghBANAIAEgBEYEQCACEHIgA0EQaiQABSAAEDIaIAEQoAYgAiABQRRqIgE2AgQMAQsLCwwAIAAoAgAaIAEQMQsKACABQQRqENEBCyoBAX8jAEEQayICJAAgAkEIaiABEIEEIgEgABD4AyABENEBIAJBEGokAAsYAQF/IAAQfCECIAAgARDxBCAAIAIQoQYLKQEBfyMAQRBrIgIkACACIAE2AgwgACACQQxqEJ4BIQAgAkEQaiQAIAALzAQCCH8BfSMAQSBrIgUkACAFIAEQ4wI2AhAgBUEYaiEIIAVBEGohCSMAQSBrIgIkACAAEDwaIAEoAgAhBiAAEJQBIQMgAkEAOgAfAkACQCADRQ0AIAAgBiADEF8iBxA6KAIAIgRFDQADQCAEKAIAIgRFDQEgBiAEKAIERwRAIAQoAgQgAxBfIAdHDQILIAAQXiAEQQhqIAEQjAJFDQALDAELIAJBEGogACAGIAkQ/QUgABA8KAIAIQEgABBeIQQCQCADBEAgAUEBarMgBCoCACADs5ReRQ0BCyACIAMQiwJBAXMgA0EBdHI2AgwgAgJ/IAAQPCgCAEEBarMgABBeKgIAlY0iCkMAAIBPXSAKQwAAAABgcQRAIAqpDAELQQALNgIIIAAgAkEMaiACQQhqEG8oAgAQrwIgBiAAEJQBIgMQXyEHCwJAIAAgBxA6KAIAIgFFBEAgAigCECAAQQhqIgEoAgA2AgAgACACKAIQNgIIIAAgBxA6IAE2AgAgAigCECgCAEUNASACKAIQIQEgACACKAIQKAIAKAIEIAMQXxA6IAE2AgAMAQsgAigCECABKAIANgIAIAEgAigCEDYCAAsgAkEQaiIBELkBIQQgABA8IgAgACgCAEEBajYCACACQQE6AB8gASgCACEAIAFBADYCACAABEAgARBTIgEtAAQEQCABKAIAIABBCGoQlgYLIAAEQCABKAIAGiAAEDELCwsgCCACQRBqIAQQdyACQR9qEK4CIAJBIGokACAIEG0hACAFQSBqJAAgAEEEagv/AQEEfyABIAAQfCICSwRAIwBBIGsiBCQAAkAgASACayIDIAAQMigCACAAKAIEa0EUbU0EQCAAIAMQowYMAQsgABAyIQEgBEEIaiAAIAAQfCADahCsBCAAEHwgARD2BiECIwBBEGsiASQAIAEgAigCCDYCACACKAIIIQUgASACQQhqNgIIIAEgBSADQRRsajYCBCABKAIAIQMDQCABKAIEIANHBEAgAigCEBogASgCABCgBiABIAEoAgBBFGoiAzYCAAwBCwsgARCyASABQRBqJAAgACACEPQGIAIQ8gYLIARBIGokAA8LIAEgAkkEQCAAIAAoAgAgAUEUbGoQpwYLC58BAQR/IwBBIGsiAiQAIAAgATYCACACQRhqIAEQqAYhA0EQEFshBCMAQSBrIgUkACAFIAE2AgwgBBD3AyIEQezaATYCACAEQQxqIAVBCGogBUEMahCrAhCrAhogBUEgaiQAIAAgBDYCBCADELkBGiACIAE2AgQgAiABNgIAIAMoAgAhASADQQA2AgAgAQRAIAMgARCLBgsgAkEgaiQAIAALngEBAn8gAEIANwIAIABBCGoiAUEANgIAIAFBBGoQUhogAUEQahBSGiAAQSRqIgFC0gk3AgAgAUEIahCDBBogAUEMaiICQgA3AgQgAiABNgIAIAJBDGoQUhogAkEYahBSGiACQSRqEFIaIAJBMGoQUhogAUHIAGoQUhogAUHUAGoQqgMgAUEQNgJsIAFCADcCZCACEI4GIAJBARCNBiAAC6cCAQN/IAAoAgAhAiAAIAE2AgAgAgRAIAIEQCACQZQGaiIAQRhqENMBGiAAQQxqEH4gABB+IAJBjAVqIgBB/ABqEH4gAEHwAGoQfiAAQdwAahDgBSACQfwEahDTARogAkGgAWoiAEGQAWoQfiAAQdwAaiIBQShqEJYEIAFBHGoQfiAAQcgAahCXBCAAQTxqEJcEIABBIGoQlgQgAEEQaiIAEMwCIAAoAgAEQCAAIAAoAgAQzQYgABAyGiAAKAIAIQEgABCzARogARAxCyACQdwAahCHBBogAkHIAGoiAygCCCEAIAMQMiEEA0AgAARAIAAoAgAhASAEIABBCGoQpQYgABAxIAEhAAwBCwsgAxCxAiACQUBrENEBIAJBDGoQ0wEaCyACEDELC2EBA38gACgCACECIAAgATYCACACBEAgAgRAIAJBBGoiAygCCCEAIAMQMiEEA0AgAARAIAAoAgAhASAEIABBCGoQlgYgABAxIAEhAAwBCwsgAxCxAiACQQAQrQYLIAIQMQsLCQAgAUEAOwEACwsAIAAgAUECEPIBC40CAgx/AX1BfyEKAkAgASgCCCIGIAIoAgRHDQAgACgCBCIDIAEoAgRHDQAgACgCCCIHIAIoAghHDQBBACEKIANBACADQQBKGyELIAdBACAHQQBKGyEMIAZBACAGQQBKGyENIAAoAgAhAwNAIAQgC0YNASAEIAZsIQ5BACEFA0AgBSAMRkUEQEEAIQAgA0EANgIAIAIoAgAgBUECdGohCCABKAIAIA5BAnRqIQlDAAAAACEPA0AgACANRkUEQCADIAkqAgAgCCoCAJQgD5IiDzgCACAAQQFqIQAgCUEEaiEJIAggB0ECdGohCAwBCwsgBUEBaiEFIANBBGohAwwBCwsgBEEBaiEEDAALAAsgCgsVACAAQcjaATYCACAAQQRqEDgaIAALTQECfyMAQSBrIgMkACAAIAMgAEE4akEAEDogAigCACACKAIEIAIoAgggAigCDBDXBSIEIAIQ5gIgACABIAQQ5gIgBBCaAyADQSBqJAALNQAgACgCABogACgCACAAEI8CQQF0ahogACgCACAAEI4CQQF0ahogACgCACAAEI8CQQF0ahoLHAEBfSAAKgIAIQIgACABKgIAOAIAIAEgAjgCAAsMACAAIAEQ8QFBAXML5AEBAX8jAEEgayIDJAAgAyABNgIQIAMgADYCGCADIAI2AgggAygCECADKAIYEJABIQEgAygCCCADKAIQEJABIQACQAJ/An8gAUUEQEEAIQEgAEUNAyADKAIQIAMoAggQxwFBASEBIAMoAhAgAygCGBCQAUUNAyADQRBqIQAgA0EYagwBCyADKAIYIQIgAARAIANBCGohAEEBDAILIAIgAygCEBDHAUEBIQEgAygCCCADKAIQEJABRQ0CIANBCGohACADQRBqCygCACECQQILIQEgAiAAKAIAEMcBCyADQSBqJAAgAQvHAQEJfyAAKAIIIAAoAgQQsQEiAgRAQX8hBwJAIAIoAgQiAyAAKAIIRw0AIAIoAggiASAAKAIERw0AQQAhByADQQAgA0EAShshCCABQQAgAUEAShshCSACKAIAIQRBACEBA0AgASAIRg0BIAAoAgAgAUEDdGohBUEAIQYDQCAGIAlHBEAgBCAFKwMAOQMAIAZBAWohBiAEQQhqIQQgBSADQQN0aiEFDAELCyABQQFqIQEMAAsACyAHQQBOBEAgAg8LIAIQQgtBAAsSACAAEDwoAgAgACgCAGtBA3ULDQAgACABIAJBAxClBAsuAQF/IAAoAgQgASgCCBDGBiICBEAgAiAAIAEQsQZBAE4EQCACDwsgAhBCC0EACwsAIABBAEEkEDkaC1oBAn8jAEEQayICJAAgAiABNgIMIAEgABDUBiIDTQRAIAAQ7wEiACADQQF2SQRAIAIgAEEBdDYCCCACQQhqIAJBDGoQbygCACEDCyACQRBqJAAgAw8LEJECAAsLACABIAJBJBA+GgsNACAAIAEgAkEkEKYEC90BAQZ/IAAQzAIgABAyGiAAKAIAIQYgACgCBCECIAFBBGohBANAIAIgBkcEQCAEKAIAQQxrIQMjAEEQayIFJAAgA0IANwIAIAVBADYCDCACQQxrIgIQMhogA0EIahDnARogAyACKAIANgIAIAMgAigCBDYCBCACEDIoAgAhByADEDIgBzYCACACEDJBADYCACACQgA3AgAgBUEQaiQAIAQgBCgCAEEMazYCAAwBCwsgACAEEEkgAEEEaiABQQhqEEkgABAyIAEQPBBJIAEgASgCBDYCACAAIAAQbBCfBAt1AQJ/IwBBEGsiAiQAIAIgACgCCDYCACAAKAIIIQMgAiAAQQhqNgIIIAIgAyABQQxsajYCBCACKAIAIQEDQCACKAIEIAFHBEAgACgCEBogAigCABCqAyACIAIoAgBBDGoiATYCAAwBCwsgAhCyASACQRBqJAALWgECfyMAQRBrIgIkACACIAE2AgwgASAAEKAEIgNNBEAgABCzASIAIANBAXZJBEAgAiAAQQF0NgIIIAJBCGogAkEMahBvKAIAIQMLIAJBEGokACADDwsQkQIAC1MBA38jAEEQayIDJAAgAyAAIAEQogQiAigCBCEBIAIoAgghBANAIAEgBEYEQCACEHIgA0EQaiQABSAAEDIaIAEQqgMgAiABQQxqIgE2AgQMAQsLCwkAIABBADYCAAsSACAAEDwoAgAgACgCAGtBAnULCwAgACABQQIQ6AYLWQECfyMAQRBrIgIkACACIABBCGogARCsAyIBKAIAIQMDQCABKAIEIANHBEAgACgCEBogASgCABDEBiABIAEoAgBBBGoiAzYCAAwBCwsgARCyASACQRBqJAALCwAgACABQQQQ8gELCwAgACABQSQQ8gELCAAgABDTARoLLgEBfyAAKAIEIQIDQCABIAJHBEAgABAyGiACQQxrIgIQygYMAQsLIAAgATYCBAsxAQF/IAAQzAIgACgCAARAIAAgACgCABDLBiAAEDIaIAAoAgAhASAAELMBGiABEDELCy4BAX8gACgCBCECA0AgASACRwRAIAAQMhogAkEM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QQNsIARqQQJ0akH/ASANQQAgDWsgBhtrIgY2AgAgAygCFCABaigCACIBIAMoAhwgCmwgAmpBAnRqIQcCQCAERQRAIAcgBjYCAAwBCyAHIAcoAgAgBmo2AgAgBEECRw0AIAEgAygCHCAKbCACakECdGoiASABKAIAQQNtNgIACyACQQFqIQIgBiAPaiEPIAMoAhwhAQwCBUEAQQNB5idBABA2IA4QMUF/DA0LAAsLIApBAWohCgwBCwsgBEEBaiEEDAELCyAPIAMoAhwiAiACbEEDbG0hBkEAIQFBACEEA0AgAiACbEEDbCABSwRAIAMoAgwgDEECdGooAgAgAUECdGoiAiACKAIAIAZrIgI2AgAgAiACbCAEaiEEIAFBAWohASADKAIcIQIMAQsLIAxBA3QiByADKAIQakRIr7ya8td6PiAEt58iESARRAAAAAAAAAAAYRs5AwBBACEBQQAhBANAIAIgAmwgAUsEQCADKAIUIAxBAnRqKAIAIAFBAnRqIgIgAigCACAGayICNgIAIAIgAmwgBGohBCABQQFqIQEgAygCHCECDAELCyADKAIYIAdqREivvJry13o+IAS3nyIRIBFEAAAAAAAAAABhGzkDACALQQFqIQsMAQsLIA4QMSADKAIIIAVBAnRqQQE2AgAgAyADKAIAQQFqNgIAIAUFQX8LDAMLIAJBAWohAgwACwALQQBBA0G4HkEAEDZBfwshASAIEDELIAlBIGokACABCwwAIAAgACgCABDIBgsTACAAIAE2AlQgAEE8aiABEJkEC3kBA38gACAAKAIAQQxrKAIAakEKEJUHIQMjAEEQayIBJAAgAUEIaiICIAAQgAMaAkAgAi0AAEUNACABIAAQuQQiAiADEM0DIAIQ9AJFDQAgACAAKAIAQQxrKAIAakEBEMUCCyABQQhqEM4CIAFBEGokACAAEIMDIAALJgAgACgCABogACgCACAAENwBahogACgCACAAENwBahogACgCABoLCQAgAEF/EL8CC9EPAhV/AX4jAEHQHWsiBCQAIARB0BxqIhBBwOQAQTwQPhogBEGQHGoiCkGA5QBBwAAQPhogBEGQG2pBwOUAQfwAED4aIARBkBpqQcDmAEGAARA+GiAEQZAWakHA5wBB/AMQPhogBEGQEmpBwOsAQYAEED4aQXQhEkECIQtBDSERQQ8hDgJ/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C2ooAgBsaiECIAFBAWohAQwBCwsgArcgDyARQQN0aisDAKMgFKMiFSATIBMgFWMiARshEyAMIAogARshCiADIAggARshCCADQQFqIQMMAAsACyAHQQFqIQcMAQsLCyAFIAg2AgAgBCAKNgIAIAYgEzkDACALEDFBAA8LIARBADYCACAFQQA2AgAgBkKAgICAgICA+L9/NwMAIAsQMUF+DwsgBEEANgIAIAVBADYCACAGQoCAgICAgID4v383AwAgCxAxQX4PC0EAQQNB/g1BABA2QQEQAQALWgECfyMAQRBrIgIkACACIAE2AgwgASAAEKAEIgNNBEAgABCzASIAIANBAXZJBEAgAiAAQQF0NgIIIAJBCGogAkEMahBvKAIAIQMLIAJBEGokACADDwsQvgIACxYAIAEgAikCADcCACABIAIoAgg2AggLLAAgACgCABogACgCACAAENsBQRRsahogACgCACAAENsBQRRsahogACgCABoLPgECf0EMEDciAwR/IAMgACABbCACdBA3IgQ2AgAgBEUEQCADEDFBAA8LIAMgATYCCCADIAA2AgQgAwVBAAsLPgADQCABIAJHBEAgASABLAAAIgBBAE4EfyADKAIAIAEsAABBAnRqKAIABSAACzoAACABQQFqIQEMAQsLIAILDQAgAEHMmbPmABC/Ags/AANAIAEgAkcEQCABIAEoAgAiAEH/AE0EfyADKAIAIAEoAgBBAnRqKAIABSAACzYCACABQQRqIQEMAQsLIAILpwEBBH8jAEGAAmsiACQAIABCJTcD+AEgAEH4AWoiB0EBckGV/AEgBSACKAIEEMEDEFwhCCAAIAQ3AwAgAEHgAWoiBiAGQRggCCAHIAAQqwEgBmoiCCACENkBIQkgAEEQaiIHIAIQTiAGIAkgCCAAQSBqIgYgAEEcaiAAQRhqIAcQvQcgBxBFIAEgBiAAKAIcIAAoAhggAiADEJkCIQEgAEGAAmokACABC6cBAQN/IwBBoAFrIgAkACAAQiU3A5gBIABBmAFqIgZBAXJBxPwBIAUgAigCBBDBAxBcIQcgACAENgIAIABBiwFqIgQgBEENIAcgBiAAEKsBIARqIgcgAhDZASEIIABBEGoiBiACEE4gBCAIIAcgAEEgaiIEIABBHGogAEEYaiAGEL0HIAYQRSABIAQgACgCHCAAKAIYIAIg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ASAKEDgaIAAQ9AEMAQsgAhCrByEAAkAgAQRAIAogABD2ASADIAooAgA2AAAgCiAAEPUBDAELIAogABC7AyADIAooAgA2AAAgCiAAEMABCyAIIAoQhwEgChA4GiAEIAAQvQE6AAAgBSAAEJkBOgAAIAogABCYASAGIAoQhwEgChA4GiAKIAAQwQEgByAKEIcBIAoQOBogABD0AQs2AgAgCkEQaiQACzEBAX8jAEEQayICJAAgAiAAKAIANgIIIAJBCGogARDrBSACKAIIIQAgAkEQaiQAIAALCwAgAEGouAQQywELCwAgAEGwuAQQywELFQAgACABKAIAENwEIAEoAgAQ6wEaC/QPAQt/IwBBsARrIgskACALIAo2AqQEIAsgATYCqAQCQCAAIAtBqARqEHMEQCAFIAUoAgBBBHI2AgBBACEADAELIAtBzQI2AmAgCyALQYgBaiALQZABaiALQeAAaiIBEGYiDygCACIKNgKEASALIApBkANqNgKAASABEEQhESALQdAAahBEIQwgC0FAaxBEIQ4gC0EwahBEIQ0gC0EgahBEIRAjAEEQayIBJAAgCwJ/IAIEQCABIAMQpgciAhD2ASALIAEoAgA2AHggASACEPUBIA0gARDVASABEDgaIAEgAhDAASAOIAEQ1QEgARA4GiALIAIQvQE2AnQgCyACEJkBNgJwIAEgAhCYASARIAEQhwEgARA4GiABIAIQwQEgDCABENUBIAEQOBogAhD0AQwBCyABIAMQpQciAhD2ASALIAEoAgA2AHggASACEPUBIA0gARDVASABEDgaIAEgAhDAASAOIAEQ1QEgARA4GiALIAIQvQE2AnQgCyACEJkBNgJwIAEgAhCYASARIAEQhwEgARA4GiABIAIQwQEgDCABENUBIAEQOBogAhD0AQs2AhwgAUEQaiQAIAkgCCgCADYCACAEQYAEcSISQQl2IRNBACEDQQAhAQNAIAEhAgJAAkACQAJAIANBBEYNACAAIAtBqARqEIsBRQ0AQQAhCgJAAkACQAJAAkACQCALQfgAaiADaiwAAA4FAQAEAwUJCyADQQNGDQcgB0EBIAAQaBC2AQRAIAtBEGogABCnByAQIAsoAhAQrwQMAgsgBSAFKAIAQQRyNgIAQQAhAAwGCyADQQNGDQYLA0AgACALQagEahCLAUUNBiAHQQEgABBo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QCACEDUgCk0NAQJAIAAgC0GoBGoQdEUEQCAAEGlB/wFxIAIgChBBLQAARg0BCyAFIAUoAgBBBHI2AgBBACEADAMLIAAQexogCkEBaiEKDAALAAtBASEAIA8oAgAgCygChAFGDQBBACEAIAtBADYCGCARIA8oAgAgCygChAEgC0EYahCKASALKAIYBEAgBSAFKAIAQQRyNgIADAELQQEhAAsgEBA4GiANEDgaIA4QOBogDBA4GiAREDgaIA8QZQwDCyACIQELIANBAWohAwwACwALIAtBsARqJAAgAAsMACAAQQFBLRC7BxoLDAAgAEEBQS0QogcaCxwBAX8gAC0AACECIAAgAS0AADoAACABIAI6AAALZAEBfyMAQRBrIgYkACAGQQA6AA8gBiAFOgAOIAYgBDoADSAGQSU6AAwgBQRAIAZBDWogBkEOahCyBwsgAiABIAEgAigCABCeBiAGQQxqIAMgACgCABAZIAFqNgIAIAZBEGokAAtCACABIAIgAyAEQQQQ1gEhASADLQAAQQRxRQRAIAAgAUHQD2ogAUHsDmogASABQeQASBsgAUHFAEgbQewOazYCAAsLQAAgAiADIABBCGogACgCCCgCBBEAACIAIABBoAJqIAUgBEEAEMMDIABrIgBBnwJMBEAgASAAQQxtQQxvNgIACwtAACACIAMgAEEIaiAAKAIIKAIAEQAAIgAgAEGoAWogBSAEQQAQwwMgAGsiAEGnAUwEQCABIABBDG1BB282AgALC0IAIAEgAiADIARBBBDXASEBIAMtAABBBHFFBEAgACABQdAPaiABQewOaiABIAFB5ABIGyABQcUASBtB7A5rNgIACwtAACACIAMgAEEIaiAAKAIIKAIEEQAAIgAgAEGgAmogBSAEQQAQxQMgAGsiAEGfAkwEQCABIABBDG1BDG82AgALC0AAIAIgAyAAQQhqIAAoAggoAgARAAAiACAAQagBaiAFIARBABDFAyAAayIAQacBTARAIAEgAEEMbUEHbzYCAAsLMgACQEF/IAAoAkwQuwFFBEAgACgCTCEADAELIAAgAEEgEJUHIgA2AkwLIABBGHRBGHULwgEBBX8jAEEQayIHJAAjAEEQayIFJAAgACEDAkAgAUHv////A00EQAJAIAEQugMEQCADIAEQnAEgAyEGDAELIAMgAyABEMECQQFqIgAQwAIiBhCVASADIAAQtQEgAyABEI8BCyAGIQQgASIABH8gAARAA0AgBCACNgIAIARBBGohBCAAQQFrIgANAAsLQQAFIAQLGiAFQQA2AgwgBiABQQJ0aiAFQQxqEKoBIAVBEGokAAwBCxC0AQALIAdBEGokACADC70FAQp/IwBBEGsiCSQAIAYQkQEhCiAJIAYQyQIiDRCYASAFIAM2AgACQAJAIAAiBy0AACIGQStrDgMAAQABCyAKIAZBGHRBGHUQmgEhBiAFIAUoAgAiB0EEajYCACAHIAY2AgAgAEEBaiEHCwJAAkAgAiAHIgZrQQFMDQAgBy0AAEEwRw0AIActAAFBIHJB+ABHDQAgCkEwEJoBIQYgBSAFKAIAIghBBGo2AgAgCCAGNgIAIAogBywAARCaASEGIAUgBSgCACIIQQRqNgIAIAggBjYCACAHQQJqIgchBgNAIAIgBk0NAiAGLAAAEFwQxgRFDQIgBkEBaiEGDAALAAsDQCACIAZNDQEgBiwAACEIEFwaIAgQrgFFDQEgBkEBaiEGDAALAAsCQCAJEL8BBEAgCiAHIAYgBSgCABDlASAFIAUoAgAgBiAHa0ECdGo2AgAMAQsgByAGEJgCIA0QmQEhDiAHIQgDQCAGIAhNBEAgAyAHIABrQQJ0aiAFKAIAEL4DBQJAIAkgCxBBLAAAQQBMDQAgDCAJIAsQQSwAAEcNACAFIAUoAgAiDEEEajYCACAMIA42AgAgCyALIAkQNUEBa0lqIQtBACEMCyAKIAgsAAAQmgEhDyAFIAUoAgAiEEEEajYCACAQIA82AgAgCEEBaiEIIAxBAWohDAwBCwsLAkACQANAIAIgBk0NASAGLQAAIgdBLkcEQCAKIAdBGHRBGHUQmgEhByAFIAUoAgAiCEEEajYCACAIIAc2AgAgBkEBaiEGDAELCyANEL0BIQcgBSAFKAIAIgtBBGoiCDYCACALIAc2AgAgBkEBaiEGDAELIAUoAgAhCAsgCiAGIAIgCBDlASAFIAUoAgAgAiAGa0ECdGoiBTYCACAEIAUgAyABIABrQQJ0aiABIAJGGzYCACAJEDgaIAlBEGokAAveAwEIfyMAQRBrIgokACAGEJEBIQsgCiAGEMkCIgYQmAECQCAKEL8BBEAgCyAAIAIgAxDlASAFIAMgAiAAa0ECdGoiBjYCAAwBCyAFIAM2AgACQAJAIAAiCC0AACIHQStrDgMAAQABCyALIAdBGHRBGHUQmgEhCCAFIAUoAgAiB0EEajYCACAHIAg2AgAgAEEBaiEICwJAIAIgCGtBAkgNACAILQAAQTBHDQAgCC0AAUEgckH4AEcNACALQTAQmgEhByAFIAUoAgAiCUEEajYCACAJIAc2AgAgCyAILAABEJoBIQcgBSAFKAIAIglBBGo2AgAgCSAHNgIAIAhBAmohCAsgCCACEJgCQQAhCSAGEJkBIQxBACEHIAghBgN/IAIgBk0EfyADIAggAGtBAnRqIAUoAgAQvgMgBSgCAAUCQCAKIAcQQS0AAEUNACAJIAogBxBBLAAARw0AIAUgBSgCACIJQQRqNgIAIAkgDDYCACAHIAcgChA1QQFrSWohB0EAIQkLIAsgBiwAABCaASENIAUgBSgCACIOQQRqNgIAIA4gDTYCACAGQQFqIQYgCUEBaiEJDAELCyEGCyAEIAYgAyABIABrQQJ0aiABIAJGGzYCACAKEDgaIApBEGokAAuoBQEKfyMAQRBrIgkkACAGEJcBIQogCSAGEMsCIg0QmAEgBSADNgIAAkACQCAAIgctAAAiBkEraw4DAAEAAQsgCiAGQRh0QRh1EIEBIQYgBSAFKAIAIgdBAWo2AgAgByAGOgAAIABBAWohBwsCQAJAIAIgByIGa0EBTA0AIActAABBMEcNACAHLQABQSByQfgARw0AIApBMBCBASEGIAUgBSgCACIIQQFqNgIAIAggBjoAACAKIAcsAAEQgQEhBiAFIAUoAgAiCEEBajYCACAIIAY6AAAgB0ECaiIHIQYDQCACIAZNDQIgBiwAABBcEMYERQ0CIAZBAWohBgwACwALA0AgAiAGTQ0BIAYsAAAhCBBcGiAIEK4BRQ0BIAZBAWohBgwACwALAkAgCRC/AQRAIAogByAGIAUoAgAQ+wEgBSAFKAIAIAYgB2tqNgIADAELIAcgBhCYAiANEJkBIQ4gByEIA0AgBiAITQRAIAMgByAAa2ogBSgCABCYAgUCQCAJIAwQQSwAAEEATA0AIAsgCSAMEEEsAABHDQAgBSAFKAIAIgtBAWo2AgAgCyAOOgAAIAwgDCAJEDVBAWtJaiEMQQAhCwsgCiAILAAAEIEBIQ8gBSAFKAIAIhBBAWo2AgAgECAPOgAAIAhBAWohCCALQQFqIQsMAQsLCwNAAkAgAiAGSwRAIAYtAAAiB0EuRw0BIA0QvQEhByAFIAUoAgAiCEEBajYCACAIIAc6AAAgBkEBaiEGCyAKIAYgAiAFKAIAEPsBIAUgBSgCACACIAZraiIFNgIAIAQgBSADIAEgAGtqIAEgAkYbNgIAIAkQOBogCUEQaiQADwsgCiAHQRh0QRh1EIEBIQcgBSAFKAIAIghBAWo2AgAgCCAHOgAAIAZBAWohBgwACwAL1QMBCH8jAEEQayIKJAAgBhCXASELIAogBhDLAiIGEJgBAkAgChC/AQRAIAsgACACIAMQ+wEgBSADIAIgAGtqIgY2AgAMAQsgBSADNgIAAkACQCAAIggtAAAiB0Eraw4DAAEAAQsgCyAHQRh0QRh1EIEBIQggBSAFKAIAIgdBAWo2AgAgByAIOgAAIABBAWohCAsCQCACIAhrQQJIDQAgCC0AAEEwRw0AIAgtAAFBIHJB+ABHDQAgC0EwEIEBIQcgBSAFKAIAIglBAWo2AgAgCSAHOgAAIAsgCCwAARCBASEHIAUgBSgCACIJQQFqNgIAIAkgBzoAACAIQQJqIQgLIAggAhCYAkEAIQkgBhCZASEMQQAhByAIIQYDfyACIAZNBH8gAyAIIABraiAFKAIAEJgCIAUoAgAFAkAgCiAHEEEtAABFDQAgCSAKIAcQQSwAAEcNACAFIAUoAgAiCUEBajYCACAJIAw6AAAgByAHIAoQNUEBa0lqIQdBACEJCyALIAYsAAAQgQEhDSAFIAUoAgAiDkEBajYCACAOIA06AAAgBkEBaiEGIAlBAWohCQwBCwshBgsgBCAGIAMgASAAa2ogASACRhs2AgAgChA4GiAKQRBqJAALDQAgAEGgmwM2AgAgAAugAwECfyMAQeACayIAJAAgACACNgLQAiAAIAE2AtgCIAMQ2gEhBiADIABB4AFqEPcCIQcgAEHQAWogAyAAQcwCahD2AiAAQcABahBEIgEgARBUED8gACABQQAQQSICNgK8ASAAIABBEGo2AgwgAEEANgIIA0ACQCAAQdgCaiAAQdACahCLAUUNACAAKAK8ASABEDUgAmpGBEAgARA1IQMgASABEDVBAXQQPyABIAEQVBA/IAAgAyABQQAQQSICajYCvAELIABB2AJqEGggBiACIABBvAFqIABBCGogACgCzAIgAEHQAWogAEEQaiAAQQxqIAcQyAINACAAQdgCahB6GgwBCwsCQCAAQdABahA1RQ0AIAAoAgwiAyAAQRBqa0GfAUoNACAAIANBBGo2AgwgAyAAKAIINgIACyAFIAIgACgCvAEgBCAGEMgHNgIAIABB0AFqIABBEGogACgCDCAEEIoBIABB2AJqIABB0AJqEHMEQCAEIAQoAgBBAnI2AgALIAAoAtgCIQIgARA4GiAAQdABahA4GiAAQeACaiQAIAILRQEBfyMAQRBrIgMkACADIAE2AgwgAyACNgIIIAMgA0EMahDKASEBIABBwfkBIAMoAggQ/QQhACABEMkBIANBEGokACAACw0AIAAoAgAgASgCAEgLsQICBH4FfyMAQSBrIggkAAJAAkACQCABIAJHBEBB2JgEKAIAIQxB2JgEQQA2AgAjAEEQayIJJAAQXBojAEEQayIKJAAjAEEQayILJAAgCyABIAhBHGpBAhDGAyALKQMAIQQgCiALKQMINwMIIAogBDcDACALQRBqJAAgCikDACEEIAkgCikDCDcDCCAJIAQ3AwAgCkEQaiQAIAkpAwAhBCAIIAkpAwg3AxAgCCAENwMIIAlBEGokACAIKQMQIQQgCCkDCCEFQdiYBCgCACIBRQ0BIAgoAhwgAkcNAiAFIQYgBCEHIAFBxABHDQMMAgsgA0EENgIADAILQdiYBCAMNgIAIAgoAhwgAkYNAQsgA0EENgIAIAYhBSAHIQQLIAAgBTcDACAAIAQ3AwggCEEgaiQAC7YBAgJ8A38jAEEQayIFJAACQAJAAkAgACABRwRAQdiYBCgCACEHQdiYBEEANgIAEFwaIwBBEGsiBiQAIAYgACAFQQxqQQEQxgMgBikDACAGKQMIENYDIQMgBkEQaiQAQdiYBCgCACIARQ0BIAUoAgwgAUcNAiADIQQgAEHEAEcNAwwCCyACQQQ2AgAMAgtB2JgEIAc2AgAgBSgCDCABRg0BCyACQQQ2AgAgBCEDCyAFQRBqJAAgAwu2AQICfQN/IwBBEGsiBSQAAkACQAJAIAAgAUcEQEHYmAQoAgAhB0HYmARBADYCABBcGiMAQRBrIgYkACAGIAAgBUEMakEAEMYDIAYpAwAgBikDCBD0BCEDIAZBEGokAEHYmAQoAgAiAEUNASAFKAIMIAFHDQIgAyEEIABBxABHDQMMAgsgAkEENgIADAILQdiYBCAHNgIAIAUoAgwgAUYNAQsgAkEENgIAIAQhAwsgBUEQaiQAIAMLxwECA38BfiMAQRBrIgQkAAJ+AkACQCAAIAFHBEACQAJAIAAtAAAiBUEtRw0AIABBAWoiACABRw0ADAELQdiYBCgCACEGQdiYBEEANgIAEFwaIAAgBEEMaiADELIEIQcCQEHYmAQoAgAiAARAIAQoAgwgAUcNASAAQcQARg0EDAULQdiYBCAGNgIAIAQoAgwgAUYNBAsLCyACQQQ2AgBCAAwCCyACQQQ2AgBCfwwBC0IAIAd9IAcgBUEtRhsLIQcgBEEQaiQAIAcL2AECA38BfiMAQRBrIgQkAAJ/AkACQAJAIAAgAUcEQAJAAkAgAC0AACIFQS1HDQAgAEEBaiIAIAFHDQAMAQtB2JgEKAIAIQZB2JgEQQA2AgAQXBogACAEQQxqIAMQsgQhBwJAQdiYBCgCACIABEAgBCgCDCABRw0BIABBxABGDQUMBAtB2JgEIAY2AgAgBCgCDCABRg0DCwsLIAJBBDYCAEEADAMLIAdC/////w9YDQELIAJBBDYCAEF/DAELQQAgB6ciAGsgACAFQS1GGwshACAEQRBqJAAgAAuVAwEBfyMAQZACayIAJAAgACACNgKAAiAAIAE2AogCIAMQ2gEhBiAAQdABaiADIABB/wFqEPgCIABBwAFqEEQiASABEFQQPyAAIAFBABBBIgI2ArwBIAAgAEEQajYCDCAAQQA2AggDQAJAIABBiAJqIABBgAJqEIwBRQ0AIAAoArwBIAEQNSACakYEQCABEDUhAyABIAEQNUEBdBA/IAEgARBUED8gACADIAFBABBBIgJqNgK8AQsgAEGIAmoQaSAGIAIgAEG8AWogAEEIaiAALAD/ASAAQdABaiAAQRBqIABBDGpBsLgDEMoCDQAgAEGIAmoQexoMAQsLAkAgAEHQAWoQNUUNACAAKAIMIgMgAEEQamtBnwFKDQAgACADQQRqNgIMIAMgACgCCDYCAAsgBSACIAAoArwBIAQgBhDIBzYCACAAQdABaiAAQRBqIAAoAgwgBBCKASAAQYgCaiAAQYACahB0BEAgBCAEKAIAQQJyNgIACyAAKAKIAiECIAEQOBogAEHQAWoQOBogAEGQAmokACACC90BAgN/AX4jAEEQayIEJAACfwJAAkACQCAAIAFHBEACQAJAIAAtAAAiBUEtRw0AIABBAWoiACABRw0ADAELQdiYBCgCACEGQdiYBEEANgIAEFwaIAAgBEEMaiADELIEIQcCQEHYmAQoAgAiAARAIAQoAgwgAUcNASAAQcQARg0FDAQLQdiYBCAGNgIAIAQoAgwgAUYNAwsLCyACQQQ2AgBBAAwDCyAHQv//A1gNAQsgAkEENgIAQf//AwwBC0EAIAenIgBrIAAgBUEtRhsLIQAgBEEQaiQAIABB//8DcQu3AQIBfgJ/IwBBEGsiBSQAAkACQCAAIAFHBEBB2JgEKAIAIQZB2JgEQQA2AgAQXBogACAFQQxqIAMQgAchBAJAQdiYBCgCACIABEAgBSgCDCABRw0BIABBxABGDQMMBAtB2JgEIAY2AgAgBSgCDCABRg0DCwsgAkEENgIAQgAhBAwBCyACQQQ2AgAgBEIAVQRAQv///////////wAhBAwBC0KAgICAgICAgIB/IQQLIAVBEGokACAEC8QBAgJ/AX4jAEEQayIEJAACfwJAAkAgACABRwRAQdiYBCgCACEFQdiYBEEANgIAEFwaIAAgBEEMaiADEIAHIQYCQEHYmAQoAgAiAARAIAQoAgwgAUcNASAAQcQARg0EDAMLQdiYBCAFNgIAIAQoAgwgAUYNAgsLIAJBBDYCAEEADAILIAZCgICAgHhTIAZC/////wdVcg0AIAanDAELIAJBBDYCAEH/////ByAGQgBVDQAaQYCAgIB4CyEAIARBEGokACAAC5sBAQR/IwBBEGsiBSQAIAEgAhDVAyIEQe////8DTQRAAkAgBBC6AwRAIAAgBBCcASAAIQMMAQsgACAAIAQQwQJBAWoiBhDAAiIDEJUBIAAgBhC1ASAAIAQQjwELA0AgASACRwRAIAMgARCqASADQQRqIQMgAUEEaiEBDAELCyAFQQA2AgwgAyAFQQxqEKoBIAVBEGokAA8LELQBAAtpACAARQRADwsCQCAAKAIAIAFGDQAgACABNgIAIAFFBEAgAEHkhqcCaiIAKAIAEDEgAEEANgIADAELIABB5IanAmogACgCKCAAKAIkbBA3IgA2AgAgAA0AQQBBA0H+DUEAEDZBARABAAsLVAECfwJAA0AgAyAERwRAQX8hACABIAJGDQIgASgCACIFIAMoAgAiBkgNAiAFIAZKBEBBAQ8FIANBBGohAyABQQRqIQEMAgsACwsgASACRyEACyAAC0ABAX9BACEAA38gASACRgR/IAAFIAEsAAAgAEEEdGoiAEGAgICAf3EiA0EYdiADciAAcyEAIAFBAWohAQwBCwsLGwAjAEEQayIBJAAgACACIAMQ2gQgAUEQaiQAC14BA38gASAEIANraiEFAkADQCADIARHBEBBfyEAIAEgAkYNAiABLAAAIgYgAywAACIHSA0CIAYgB0oEQEEBDwUgA0EBaiEDIAFBAWohAQwCCwALCyACIAVHIQALIAAL9wEBBX8jAEEgayICJAACfwJAAkAgAUF/ELsBDQAgAiABNgIUIAAtACwEQCACQRRqQQRBASAAKAIgEM8BQQFHDQIMAQsgAiACQRhqIgU2AhAgAkEgaiEGIAJBFGohAwNAIAAoAiQgACgCKCADIAUgAkEMaiACQRhqIAYgAkEQahD+AiEEIAIoAgwgA0YNAiAEQQNGBEAgA0EBQQEgACgCIBDPAUEBRg0CDAMLIARBAUsNAiACQRhqIgNBASACKAIQIANrIgMgACgCIBDPASADRw0CIAIoAgwhAyAEQQFGDQALCyABENkEDAELQX8LIQAgAkEgaiQAIAALZgEBfwJAIAAtACxFBEAgAkEAIAJBAEobIQIDQCACIANGDQIgACABKAIAIAAoAgAoAjQRAwBBf0YEQCADDwUgAUEEaiEBIANBAWohAwwBCwALAAsgAUEEIAIgACgCIBDPASECCyACCyYAIAAgACgCACgCGBEAABogACABEMcDIgE2AiQgACABEJsCOgAsC/IBAQN/IwBBIGsiAiQAIAFBfxC7ASEEIAAtADQhAwJAIAQEQCADDQEgACAAKAIwIgFBfxC7AUEBczoANAwBCwJAIANFDQAgAiAAKAIwNgIQAkACQAJAIAAoAiQgACgCKCACQRBqIAJBFGoiAyACQQxqIAJBGGogAkEgaiADEP4CQQFrDgMCAgABCyAAKAIwIQMgAiACQRlqNgIUIAIgAzoAGAsDQCACKAIUIgMgAkEYak0NAiACIANBAWsiAzYCFCADLAAAIAAoAiAQ/AJBf0cNAAsLQX8hAQwBCyAAQQE6ADQgACABNgIwCyACQSBqJAAgAQsJACAAQQEQygQLCQAgAEEAEMoECzMAIAAgARDHAyIBNgIkIAAgARDPAjYCLCAAIAAoAiQQmwI6ADUgACgCLEEJTgRAEHUACwv6AQEFfyMAQSBrIgIkAAJ/AkACQCABQX8QuwENACACIAEQ0gM6ABcgAC0ALARAIAJBF2pBAUEBIAAoAiAQzwFBAUcNAgwBCyACIAJBGGoiBTYCECACQSBqIQYgAkEXaiEDA0AgACgCJCAAKAIoIAMgBSACQQxqIAJBGGogBiACQRBqEP4CIQQgAigCDCADRg0CIARBA0YEQCADQQFBASAAKAIgEM8BQQFGDQIMAwsgBEEBSw0CIAJBGGoiA0EBIAIoAhAgA2siAyAAKAIgEM8BIANHDQIgAigCDCEDIARBAUYNAAsLIAEQ2QQMAQtBfwshACACQSBqJAAgAAtpAQF/AkAgAC0ALEUEQCACQQAgAkEAShshAgNAIAIgA0YNAiAAIAEsAAAQwwEgACgCACgCNBEDAEF/RgRAIAMPBSABQQFqIQEgA0EBaiEDDAELAAsACyABQQEgAiAAKAIgEM8BIQILIAILJgAgACAAKAIAKAIYEQAAGiAAIAEQygMiATYCJCAAIAEQmwI6ACwL9QEBA38jAEEgayICJAAgAUF/ELsBIQQgAC0ANCEDAkAgBARAIAMNASAAIAAoAjAiAUF/ELsBQQFzOgA0DAELAkAgA0UNACACIAAoAjAQ0gM6ABMCQAJAAkAgACgCJCAAKAIoIAJBE2ogAkEUaiIDIAJBDGogAkEYaiACQSBqIAMQ/gJBAWsOAwICAAELIAAoAjAhAyACIAJBGWo2AhQgAiADOgAYCwNAIAIoAhQiAyACQRhqTQ0CIAIgA0EBayIDNgIUIAMsAAAgACgCIBD8AkF/Rw0ACwtBfyEBDAELIABBAToANCAAIAE2AjALIAJBIGokACABCwkAIABBARDOBAsJACAAQQAQzgQLMwAgACABEMoDIgE2AiQgACABEM8CNgIsIAAgACgCJBCbAjoANSAAKAIsQQlOBEAQdQALCx4AQaiwBBCDA0H4sgQQgwNB/LAEEMsDQcyzBBDLAwunIQIYfwJ9IwBB0ABrIhAkAAJAAkACQEEAQQMgAEUgAUVyBH9B1j8FIAEoAgQNAUHWxwALQQAQNkF/IRcMAQsgACgCHBAxAkAgASgCBCIEBEAgACAEQYQBbBA3IgI2AhwgAkUNAwNAIAMgBE4NAiADQYQBbCIEIAAoAhxqIAEoAgAgBGpBhAEQPhogA0EBaiEDIAEoAgQhBAwACwALQQAhBCAAQQA2AhwLIAAgBDYCICAAKAIkBEBBACEDA0AgACgCJCEEIAAoAiggA0oEQCAEIANBDGxqKAIAEDEgA0EBaiEDDAELCyAEEDELAkAgASgCDCIDBEAgACADQQxsEDciBDYCJCAERQ0DA0AgAyAJTA0CIAlBDGwiAiAAKAIkaiIIIAEoAggiBCACaiIKKAIINgIIIAggCigCBDYCBAJAAkAgCigCBCIMBEAgCCAMQQxsEDciCjYCAEEAIQMgCkUNBwNAIAMgDE4NAiADQQxsIgogACgCJCACaigCAGoiDCACIARqKAIAIApqIgQpAgA3AgAgDCAEKAIINgIIIANBAWohAyABKAIIIgQgAmooAgQhDAwACwALIApBADYCAAwBCyABKAIMIQMLIAlBAWohCQwACwALQQAhAyAAQQA2AiQLIAAgAzYCKCAAKAI0IgMEQCADEDEgAEIANwI0CwJAAkAgASgCDCIBQQBMDQAgACABNgI4IAAgAUHEAGwQNyIENgI0IARFDQFBACEDA0AgASADRg0BIAQgA0HEAGxqQQA2AkAgA0EBaiEDDAALAAsgACgCICIBRQ0BIAFBACABQQBKGyEYA0BBACEBIBIgACgCKE4NAgNAIBJBDGwiBSAAKAIkaigCBCABTARAIBJBAWohEgwCCyAQQUBrEFIhCiAQQTBqEFIhCUEAIQQgEEEgahBSIQwDQCAEIBhGBEAgECAKEHw2AgBBAEEBQYPTACAQEDYgACARQQJ0aiAAKAIkIAVqIgMoAgg2AjwgACgCACETIAMoAgAgAUEMbGoiAygCACEEIAMoAgQhAyMAQSBrIgskACALIBE2AhwgC0EQakGUARBbEKwGEKsGIggoAgAgBBCVASAIKAIAIAMQjwEgCCgCABAyQeAAEJUBIAgoAgAQMhBeIAoQfBCqBiAKIAgoAgAQMhBeIgJHBEAgCigCACEGIAooAgQhAyMAQRBrIgUkAAJAIAIQ2wEgAyAGa0EUbSIHTwRAIAUgAzYCDCACEHwgB08iDwR/IAMFIAUgBjYCDCACEHwhBCAFIAUoAgwgBEEUbGo2AgwgBSgCDAshBCACKAIAIQ0gBCAGayEOIAQgBkcEQCANIAYgDhDUAgsgD0UEQCACIAUoAgwgAyAHIAIQfGsQmgYMAgsgAiANIA5BFG1BFGxqEKcGDAELIAIoAgAEQCACEHwhBCACEIcFIAIgBBChBiACEDIaIAIoAgAhBCACENsBGiAEEDEgAhAyQQA2AgAgAkIANwIACyACIAIgBxCsBBCZBiACIAYgAyAHEJoGCyAFQRBqJAALIAgoAgAQMhBTIQQgDBCNASEDAkAgAyAEEI0BIgJLBEAjAEEgayIGJAACQCADIAJrIgMgBBAyKAIAIAQoAgRrTQRAIwBBEGsiBSQAIAUgBCADELYDIgIoAgQhAyACKAIIIQcDQCADIAdGBEAgAhByIAVBEGokAAUgBBAyGiADEIYGIAIgA0EBaiIDNgIEDAELCwwBCyAEEDIhAiAGQQhqIAQgBBCNASADahC0AyAEEI0BIAIQnQQhBSMAQRBrIgckACAHIAVBCGogAxCHBiIDKAIAIQIDQCADKAIEIAJHBEAgBSgCEBogAygCABCGBiADIAMoAgBBAWoiAjYCAAwBCwsgAxCyASAHQRBqJAAgBCAFEJwEIAUQmwQLIAZBIGokAAwBCyACIANLBEAgBCAEKAIAIANqEIAECwsgDCAIKAIAEDIQUyIDRwRAIAwoAgAhBSAMKAIEIQIjAEEQayIEJAACQCAFIAIQ/QMiBiADENwBTQRAIAQgAjYCDCAFIAMQjQEgBk8iBwR/IAIFIAQgBTYCDCAEIAMQjQEgBCgCDGo2AgwgBCgCDAsgAygCABCdBiEFIAdFBEAgAyAEKAIMIAIgBiADEI0BaxCfBgwCCyADIAUQgAQMAQsgAygCAARAIAMQjQEhByADEJoFIAMgBxCbBiADEDIaIAMoAgAhByADENwBGiAHEDEgAxAyQQA2AgAgA0IANwIACyADIAYQtAMhByADEOEGIAdJBEAQvgIACyADEDIaIAMgBxBbIg02AgAgAyANNgIEIAMQMiAHIA1qNgIAIANBABDgBiADIAUgAiAGEJ8GCyAEQRBqJAALIAgoAgAiA0EkaiICQQxqQYABEI0GIAJBDGoQjgYgAkEINgJoIAJBEDYCbCADQQhqIgMQU0EAEK0FIQ0gAxB/IQVBACEEIwBBEGsiAyQAIwBBEGsiBiQAIANCADcCACAGQQA2AgwgA0EIahClAiAFBEAgAxDqAiAFSQRAELACAAsgAyADEDIgBRC5AiIHNgIAIAMgBzYCBCADEDIgByAFQQJ0ajYCACADQQAQuAIgAyAFEK4DCyAGQRBqJAADQCADEEYgBE0EQCADQQAQOiEGIAMQRiEHQYABEFshBCACEIUGIQ4gBEEBOgBkIAQgDjYCACAEQegAahBSGiAEQfQAahBSGiAEQQRqQeAAEIMGIAJBCGogBBCJBiACKAIIQQAQowMgAiACKAIIIA0gBSAGIAcQhAYgAxB+IANBEGokAAUgAyAEEDogBDYCACAEQQFqIQQMAQsLIBMoAgAoAgAhAyALIAtBCGogCBCBBCkCADcDACMAQSBrIgUkACAFIBE2AhwgBSADQcgAaiIEIAVBHGoQSzYCGCAFEEc2AgggBUEYaiAFQQhqEH0EQEEQEAYgBUEIakGjDhCWARDlAkGI2gFBDxAFAAsjAEEgayINJAAgDSAFQRxqIg8Q4wI2AhAgDUEYaiEUQQAhByMAQSBrIgMkACAEEDwaIA8oAgAhDiAEEJQBIQYgA0EAOgAfAkACQCAGRQ0AIAQgDiAGEF8iBxA6KAIAIgJFDQADQCACKAIAIgJFDQEgDiACKAIERwRAIAIoAgQgBhBfIAdHDQILIAQQXiACQQhqIA8QjAJFDQALDAELIwBBEGsiFSQAIANBEGogBBAyIgJBARCkBCAVQQhqIAJBABCtAhCsAiICKAIAQQhqIRYgDSgCECEZIwBBEGsiDyQAIA8gGTYCCCAWIA8oAggoAgA2AgAgFkEEahCzAhogD0EQaiQAIAIQU0EBOgAEIAIoAgAgDjYCBCACKAIAQQA2AgAgFUEQaiQAIAQQPCgCACECIAQQXiEPAkAgBgRAIAJBAWqzIA8qAgAgBrOUXkUNAQsgAyAGEIsCQQFzIAZBAXRyNgIMIAMCfyAEEDwoAgBBAWqzIAQQXioCAJWNIhpDAACAT10gGkMAAAAAYHEEQCAaqQwBC0EACzYCCCAEIANBDGogA0EIahBvKAIAEK8CIA4gBBCUASIGEF8hBwsCQCAEIAcQOigCACICRQRAIAMoAhAgBEEIaiICKAIANgIAIAQgAygCEDYCCCAEIAcQOiACNgIAIAMoAhAoAgBFDQEgAygCECECIAQgAygCECgCACgCBCAGEF8QOiACNgIADAELIAMoAhAgAigCADYCACACIAMoAhA2AgALIANBEGoiBhC5ASECIAQQPCIEIAQoAgBBAWo2AgAgA0EBOgAfIAYoAgAhBCAGQQA2AgAgBARAIAYQUyIGLQAEBEAgBigCACAEQQhqEKUGCyAEBEAgBigCABogBBAxCwsLIBQgA0EQaiACEHcgA0EfahCuAiADQSBqJAAgFBBtIQMgDUEgaiQAIANBBGogCxCmBiALENEBIAVBIGokACAJIBMoAgBBBGogC0EcahCpBiICRwRAIAkoAgAhBiAJKAIEIQMjAEEQayIFJAACQCAGIAMQ8AMiByACELMBTQRAIAUgAzYCDCACEGwgB08iDwR/IAMFIAUgBjYCDCACEGwhBCAFIAUoAgwgBEEMbGo2AgwgBSgCDAshBCACKAIAIQ0gBCAGayEOIAQgBkcEQCANIAYgDhDUAgsgD0UEQCACIAUoAgwgAyAHIAIQbGsQ+QUMAgsgAhBsIQMgAiANIA5BDG1BDGxqEIgHIAIgAxCrAwwBCyACKAIABEAgAhBsIQQgAhDJBCACIAQQqwMgAhAyGiACKAIAIQQgAhCzARogBBAxIAIQMkEANgIAIAJCADcCAAsgAiAHEOUGIQQgAhCgBCAESQRAEL4CAAsgAiACEDIgBBDjBiINNgIAIAIgDTYCBCACEDIgDSAEQQxsajYCACACQQAQnwQgAiAGIAMgBxD5BQsgBUEQaiQACyAIENEBIAtBIGokACAMEKkFIAkQ1QQgChDfAyABQQFqIQEgEUEBaiERDAILAkAgBEGEAWwiBiAAKAIcaiICKAKAASAAKAIkIAVqIgMoAgAgAUEMbGooAghHDQAgAigCfCADKAIIRw0AQQAhAyAQQQhqIgggAioCACACKgIEIAIqAnAgAioCdCACKAJ4QQBHENIEIQsCQCAKKAIEIAoQMigCAEkEQCMAQRBrIgckACAHIApBARCzBCECIAoQMiACKAIEIAsQuQMgAiACKAIEQRRqNgIEIAIQciAHQRBqJAAMAQsjAEEgayIHJAAgChAyIgIgB0EIaiAKIAoQfEEBahCsBCAKEHwgAhD2BiICKAIIIAsQuQMgAiACKAIIQRRqNgIIIAogAhD0BiACEPIGIAdBIGokAAsgACgCHCAGaiICKgIIIRogAioCDCEbIAhDAAAAADgCCCAIIBs4AgQgCCAaOAIAAkAgCSgCBCAJEDIoAgBJBEAjAEEQayILJAAgCyAJQQEQogQhAiAJEDIgAigCBCAIEOYGIAIgAigCBEEMajYCBCACEHIgC0EQaiQADAELIwBBIGsiCyQAIAkQMiICIAtBCGogCSAJEGxBAWoQ5QYgCRBsIAIQoQQiAigCCCAIEOYGIAIgAigCCEEMajYCCCAJEMwCIAkQMhogAkEEaiIHIgggCCgCACAJKAIEIAkoAgAiDWsiCEF0bUEMbGoiDjYCACAIQQBKBEAgDiANIAgQPhoLIAkgBxBJIAlBBGogAkEIahBJIAkQMiACEDwQSSACIAIoAgQ2AgAgCSAJEGwQnwQgAigCBCEIA0AgCCACKAIIRwRAIAIoAhAaIAIgAigCCEEMazYCCAwBCwsgAigCAARAIAIoAhAaIAIoAgAhCCACEJ4EGiAIEDELIAtBIGokAAsDQCADQeAARg0BIAAoAhwgBmogA2pBEGohCAJAIAwoAgQgDBAyKAIARwRAIwBBEGsiCyQAIAsgDEEBELYDIQIgDBAyIAIoAgQgCBC1AyACIAIoAgRBAWo2AgQgAhByIAtBEGokAAwBCyMAQSBrIgskACAMEDIiAiALQQhqIAwgDBCNAUEBahC0AyAMEI0BIAIQnQQiAigCCCAIELUDIAIgAigCCEEBajYCCCAMIAIQnAQgAhCbBCALQSBqJAALIANBAWohAwwACwALIARBAWohBAwACwALAAsACwwBCyAQQdAAaiQAIBcPC0EAQQNBt88AQQAQNkEBEAEAC7QBAQR/IwBBEGsiBSQAA0ACQCACIANMDQAgACgCGCIEIAAoAhwiBk8EQCAAIAEoAgAgACgCACgCNBEDAEF/Rg0BIANBAWohAyABQQRqIQEFIAUgBiAEa0ECdTYCDCAFIAIgA2s2AgggBUEMaiAFQQhqEJwCIQQgACgCGCABIAQoAgAiBBDMASAAIARBAnQiBiAAKAIYajYCGCADIARqIQMgASAGaiEBCwwBCwsgBUEQaiQAIAMLLAAgACAAKAIAKAIkEQAAQX9GBEBBfw8LIAAgACgCDCIAQQRqNgIMIAAoAgALygEBBH8jAEEQayIEJAADQAJAIAIgBUwNAAJ/IAAoAgwiAyAAKAIQIgZJBEAgBEH/////BzYCDCAEIAYgA2tBAnU2AgggBCACIAVrNgIEIARBDGogBEEIaiAEQQRqEJwCEJwCIQMgASAAKAIMIAMoAgAiAxDMASAAIANBAnQiBiAAKAIMajYCDCABIAZqDAELIAAgACgCACgCKBEAACIDQX9GDQEgASADNgIAQQEhAyABQQRqCyEBIAMgBWohBQwBCwsgBEEQaiQAIAULDAAgABDMAxogABAxC68BAQR/IwBBEGsiBSQAA0ACQCACIARMDQAgACgCGCIDIAAoAhwiBk8EQCAAIAEsAAAQwwEgACgCACgCNBEDAEF/Rg0BIARBAWohBCABQQFqIQEFIAUgBiADazYCDCAFIAIgBGs2AgggBUEMaiAFQQhqEJwCIQMgACgCGCABIAMoAgAiAxDNASAAIAMgACgCGGo2AhggAyAEaiEEIAEgA2ohAQsMAQsLIAVBEGokACAECy8AIAAgACgCACgCJBEAAEF/RgRAQX8PCyAAIAAoAgwiAEEBajYCDCAALAAAEMMBC8ABAQR/IwBBEGsiBCQAA0ACQCACIAVMDQACQCAAKAIMIgMgACgCECIGSQRAIARB/////wc2AgwgBCAGIANrNgIIIAQgAiAFazYCBCAEQQxqIARBCGogBEEEahCcAhCcAiEDIAEgACgCDCADKAIAIgMQzQEgACAAKAIMIANqNgIMDAELIAAgACgCACgCKBEAACIDQX9GDQEgASADENIDOgAAQQEhAwsgASADaiEBIAMgBWohBQwBCwsgBEEQaiQAIAULDAAgABDTAxogABAxC1QBAn8gASAAKAJUIgEgAUEAIAJBgAJqIgMQ3AMiBCABayADIAQbIgMgAiACIANLGyICED4aIAAgASADaiIDNgJUIAAgAzYCCCAAIAEgAmo2AgQgAgupAQEEfyAAKAJUIgMoAgQiBSAAKAIUIAAoAhwiBmsiBCAEIAVLGyIEBEAgAygCACAGIAQQPhogAyADKAIAIARqNgIAIAMgAygCBCAEayIFNgIECyADKAIAIQQgBSACIAIgBUsbIgUEQCAEIAEgBRA+GiADIAMoAgAgBWoiBDYCACADIAMoAgQgBWs2AgQLIARBADoAACAAIAAoAiwiATYCHCAAIAE2AhQgAgspACABIAEoAgBBB2pBeHEiAUEQajYCACAAIAEpAwAgASkDCBDWAzkDAAvHGAMSfwF8An4jAEGwBGsiCyQAIAtBADYCLAJAIAG9IhlCAFMEQEEBIRBBzugBIRMgAZoiAb0hGQwBCyAEQYAQcQRAQQEhEEHR6AEhEwwBC0HU6AFBz+gBIARBAXEiEBshEyAQRSEVCwJAIBlCgICAgICAgPj/AINCgICAgICAgPj/AFEEQCAAQSAgAiAQQQNqIgMgBEH//3txEIkBIAAgEyAQEIMBIABB7PoBQduXAiAFQSBxIgUbQe/+AUHzmgIgBRsgASABYhtBAxCDASAAQSAgAiADIARBgMAAcxCJASADIAIgAiADSBshCQwBCyALQRBqIRECQAJ/AkAgASALQSxqEIoFIgEgAaAiAUQAAAAAAAAAAGIEQCALIAsoAiwiBkEBazYCLCAFQSByIg5B4QBHDQEMAwsgBUEgciIOQeEARg0CIAsoAiwhCkEGIAMgA0EASBsMAQsgCyAGQR1rIgo2AiwgAUQAAAAAAACwQaIhAUEGIAMgA0EASBsLIQwgC0EwakEAQaACIApBAEgbaiINIQcDQCAHAn8gAUQAAAAAAADwQWMgAUQAAAAAAAAAAGZxBEAgAasMAQtBAAsiAzYCACAHQQRqIQcgASADuKFEAAAAAGXNzUGiIgFEAAAAAAAAAABiDQALAkAgCkEATARAIAohAyAHIQYgDSEIDAELIA0hCCAKIQMDQCADQR0gA0EdSBshAwJAIAdBBGsiBiAISQ0AIAOtIRpCACEZA0AgBiAZQv////8PgyAGNQIAIBqGfCIZIBlCgJTr3AOAIhlCgJTr3AN+fT4CACAGQQRrIgYgCE8NAAsgGaciBkUNACAIQQRrIgggBjYCAAsDQCAIIAciBkkEQCAGQQRrIgcoAgBFDQELCyALIAsoAiwgA2siAzYCLCAGIQcgA0EASg0ACwsgA0EASARAIAxBGWpBCW5BAWohDyAOQeYARiESA0BBACADayIDQQkgA0EJSBshCQJAIAYgCE0EQCAIKAIAIQcMAQtBgJTr3AMgCXYhFEF/IAl0QX9zIRZBACEDIAghBwNAIAcgAyAHKAIAIhcgCXZqNgIAIBYgF3EgFGwhAyAHQQRqIgcgBkkNAAsgCCgCACEHIANFDQAgBiADNgIAIAZBBGohBgsgCyALKAIsIAlqIgM2AiwgDSAIIAdFQQJ0aiIIIBIbIgcgD0ECdGogBiAGIAdrQQJ1IA9KGyEGIANBAEgNAAsLQQAhAwJAIAYgCE0NACANIAhrQQJ1QQlsIQNBCiEHIAgoAgAiCUEKSQ0AA0AgA0EBaiEDIAkgB0EKbCIHTw0ACwsgDEEAIAMgDkHmAEYbayAOQecARiAMQQBHcWsiByAGIA1rQQJ1QQlsQQlrSARAQQRBpAIgCkEASBsgC2ogB0GAyABqIglBCW0iD0ECdGpB0B9rIQpBCiEHIAkgD0EJbGsiCUEHTARAA0AgB0EKbCEHIAlBAWoiCUEIRw0ACwsCQCAKKAIAIhIgEiAHbiIPIAdsayIJRSAKQQRqIhQgBkZxDQACQCAPQQFxRQRARAAAAAAAAEBDIQEgB0GAlOvcA0cgCCAKT3INASAKQQRrLQAAQQFxRQ0BC0QBAAAAAABAQyEBC0QAAAAAAADgP0QAAAAAAADwP0QAAAAAAAD4PyAGIBRGG0QAAAAAAAD4PyAJIAdBAXYiFEYbIAkgFEkbIRgCQCAVDQAgEy0AAEEtRw0AIBiaIRggAZohAQsgCiASIAlrIgk2AgAgASAYoCABYQ0AIAogByAJaiIDNgIAIANBgJTr3ANPBEADQCAKQQA2AgAgCCAKQQRrIgpLBEAgCEEEayIIQQA2AgALIAogCigCAEEBaiIDNgIAIANB/5Pr3ANLDQALCyANIAhrQQJ1QQlsIQNBCiEHIAgoAgAiCUEKSQ0AA0AgA0EBaiEDIAkgB0EKbCIHTw0ACwsgCkEEaiIHIAYgBiAHSxshBgsDQCAGIgcgCE0iCUUEQCAHQQRrIgYoAgBFDQELCwJAIA5B5wBHBEAgBEEIcSEKDAELIANBf3NBfyAMQQEgDBsiBiADSiADQXtKcSIKGyAGaiEMQX9BfiAKGyAFaiEFIARBCHEiCg0AQXchBgJAIAkNACAHQQRrKAIAIg5FDQBBCiEJQQAhBiAOQQpwDQADQCAGIgpBAWohBiAOIAlBCmwiCXBFDQALIApBf3MhBgsgByANa0ECdUEJbCEJIAVBX3FBxgBGBEBBACEKIAwgBiAJakEJayIGQQAgBkEAShsiBiAGIAxKGyEMDAELQQAhCiAMIAMgCWogBmpBCWsiBkEAIAZBAEobIgYgBiAMShshDAtBfyEJIAxB/f///wdB/v///wcgCiAMciISG0oNASAMIBJBAEdqQQFqIQ4CQCAFQV9xIhVBxgBGBEAgAyAOQf////8Hc0oNAyADQQAgA0EAShshBgwBCyARIAMgA0EfdSIGcyAGa60gERCeAiIGa0EBTARAA0AgBkEBayIGQTA6AAAgESAGa0ECSA0ACwsgBkECayIPIAU6AAAgBkEBa0EtQSsgA0EASBs6AAAgESAPayIGIA5B/////wdzSg0CCyAGIA5qIgMgEEH/////B3NKDQEgAEEgIAIgAyAQaiIFIAQQiQEgACATIBAQgwEgAEEwIAIgBSAEQYCABHMQiQECQAJAAkAgFUHGAEYEQCALQRBqIgZBCHIhAyAGQQlyIQogDSAIIAggDUsbIgkhCANAIAg1AgAgChCeAiEGAkAgCCAJRwRAIAYgC0EQak0NAQNAIAZBAWsiBkEwOgAAIAYgC0EQaksNAAsMAQsgBiAKRw0AIAtBMDoAGCADIQYLIAAgBiAKIAZrEIMBIAhBBGoiCCANTQ0ACyASBEAgAEG/pgJBARCDAQsgDEEATCAHIAhNcg0BA0AgCDUCACAKEJ4CIgYgC0EQaksEQANAIAZBAWsiBkEwOgAAIAYgC0EQaksNAAsLIAAgBiAMQQkgDEEJSBsQgwEgDEEJayEGIAhBBGoiCCAHTw0DIAxBCUohAyAGIQwgAw0ACwwCCwJAIAxBAEgNACAHIAhBBGogByAISxshCSALQRBqIgZBCHIhAyAGQQlyIQ0gCCEHA0AgDSAHNQIAIA0QngIiBkYEQCALQTA6ABggAyEGCwJAIAcgCEcEQCAGIAtBEGpNDQEDQCAGQQFrIgZBMDoAACAGIAtBEGpLDQALDAELIAAgBkEBEIMBIAZBAWohBiAKIAxyRQ0AIABBv6YCQQEQgwELIAAgBiAMIA0gBmsiBiAGIAxKGxCDASAMIAZrIQwgB0EEaiIHIAlPDQEgDEEATg0ACwsgAEEwIAxBEmpBEkEAEIkBIAAgDyARIA9rEIMBDAILIAwhBgsgAEEwIAZBCWpBCUEAEIkBCyAAQSAgAiAFIARBgMAAcxCJASAFIAIgAiAFSBshCQwBCyATIAVBGnRBH3VBCXFqIQwCQCADQQtLDQBBDCADayEGRAAAAAAAADBAIRgDQCAYRAAAAAAAADBAoiEYIAZBAWsiBg0ACyAMLQAAQS1GBEAgGCABmiAYoaCaIQEMAQsgASAYoCAYoSEBCyARIAsoAiwiBiAGQR91IgZzIAZrrSAREJ4CIgZGBEAgC0EwOgAPIAtBD2ohBgsgEEECciEKIAVBIHEhCCALKAIsIQcgBkECayINIAVBD2o6AAAgBkEBa0EtQSsgB0EASBs6AAAgBEEIcSEGIAtBEGohBwNAIAciBQJ/IAGZRAAAAAAAAOBBYwRAIAGqDAELQYCAgIB4CyIHQeCLA2otAAAgCHI6AAAgBiADQQBKckUgASAHt6FEAAAAAAAAMECiIgFEAAAAAAAAAABhcSAFQQFqIgcgC0EQamtBAUdyRQRAIAVBLjoAASAFQQJqIQcLIAFEAAAAAAAAAABiDQALQX8hCUH9////ByAKIBEgDWsiBWoiBmsgA0gNACAAQSAgAiAGAn8CQCADRQ0AIAcgC0EQamsiCEECayADTg0AIANBAmoMAQsgByALQRBqayIICyIHaiIDIAQQiQEgACAMIAoQgwEgAEEwIAIgAyAEQYCABHMQiQEgACALQRBqIAgQgwEgAEEwIAcgCGtBAEEAEIkBIAAgDSAFEIMBIABBICACIAMgBEGAwABzEIkBIAMgAiACIANIGyEJCyALQbAEaiQAIAkLBABCAAsEAEEACwkAIAAoAjwQDAvXAQEEfyMAQSBrIgQkACAEIAE2AhAgBCACIAAoAjAiA0EAR2s2AhQgACgCLCEGIAQgAzYCHCAEIAY2AhhBICEDAkACQCAAIAAoAjwgBEEQakECIARBDGoQHxCHAwR/QSAFIAQoAgwiA0EASg0BQSBBECADGwsgACgCAHI2AgAMAQsgBCgCFCIGIAMiBU8NACAAIAAoAiwiAzYCBCAAIAMgBSAGa2o2AgggACgCMARAIAAgA0EBajYCBCABIAJqQQFrIAMtAAA6AAALIAIhBQsgBEEgaiQAIAUL2AIBB38jAEEgayIDJAAgAyAAKAIcIgQ2AhAgACgCFCEFIAMgAjYCHCADIAE2AhggAyAFIARrIgE2AhQgASACaiEFIANBEGohAUECIQcCfwJAAkACQCAAKAI8IAFBAiADQQxqEA0QhwMEQCABIQQMAQsDQCAFIAMoAgwiBkYNAiAGQQBIBEAgASEEDAQLIAEgBiABKAIEIghLIglBA3RqIgQgBiAIQQAgCRtrIgggBCgCAGo2AgAgAUEMQQQgCRtqIgEgASgCACAIazYCACAFIAZrIQUgACgCPCAEIgEgByAJayIHIANBDGoQDRCHA0UNAAsLIAVBf0cNAQsgACAAKAIsIgE2AhwgACABNgIUIAAgASAAKAIwajYCECACDAELIABBADYCHCAAQgA3AxAgACAAKAIAQSByNgIAQQAgB0ECRg0AGiACIAQoAgRrCyEBIANBIGokACABC0YBAX8gACgCPCEDIwBBEGsiACQAIAMgAacgAUIgiKcgAkH/AXEgAEEIahAXEIcDIQIgACkDCCEBIABBEGokAEJ/IAEgAhsLBgBB2JgECyQBAX9BzJgEKAIAIgAEQANAIAAoAgARDgAgACgCBCIADQALCwsKACAAKAIEEIwFC58BAQR/IANBAEoEQCAAKAJwIQIgACgC5AMoAhghBwNAIAIEQCABIAVBAnRqKAIAIQAgAiEGA0AgByAALQAAQQF2QfwAcWooAgAgAC0AAUEEdEHAH3FqIAAtAAJBAnZBPnFqIgQgBC8BACIEIARBAWoiBCAEIARB//8DcUcbOwEAIABBA2ohACAGQQFrIgYNAAsLIAVBAWoiBSADRw0ACwsL/goBGn8gACAAKALkAyITKAIQNgKIASAAQQEgEygCFCIIQQV0IAAoAgQoAgARBAAiC0KAgICA8AM3AhAgC0KAgICA8Ac3AgggC0KAgICA8AM3AgAgACALEN4DQQEhCgJAAkAgCEECSA0AA0ACQAJAAkAgCCAKQQF0TgRAIApBAXEhBCAPDQFBACECQQAhAyALIQEMAgtBACEJQQAhAkEAIQMgCyEBIA9BA08EQCAKQfz///8HcSEHQQAhBANAIAFB4ABqIAFBQGsgAUEgaiABIAIgASgCGCICIANKIgUbIAEoAjgiBiACIAMgBRsiAkoiAxsgASgCWCIFIAYgAiADGyICSiIDGyABKAJ4IgYgBSACIAMbIgNKIgUbIQIgBiADIAUbIQMgAUGAAWohASAEQQRqIgQgB0cNAAsLIApBA3EiBEUNAgNAIAEgAiABKAIYIgcgA0oiBRshAiAHIAMgBRshAyABQSBqIQEgCUEBaiIJIARHDQALDAILIApB/v///wdxIQdBACECQQAhAyALIQFBACEJA0AgAyABKAIcIgVIBEAgASACIAEoAhhBAEoiBhshAiAFIAMgBhshAwsgAyABKAI8IgVIBEAgAUEgaiACIAEoAjhBAEoiBhshAiAFIAMgBhshAwsgAUFAayEBIAlBAmoiCSAHRw0ACwsgBEUNACABKAIcIANMDQAgASACIAEoAhhBAEobIQILIAJFDQEgCyAKQQV0aiIBIAIoAgQ2AgQgASACKAIMNgIMIAEgAigCFDYCFCABIAIoAgA2AgAgASACKAIINgIIIAEgAigCEDYCEAJAAn8CQAJAAkBBAiACKAIEIgQgAigCACIHa0EEdCIJIAIoAgwiBSACKAIIIgZrQQxsIgNMIAIoAhQiDSACKAIQIg5rQQN0IAkgAyADIAlIG0obDgMAAQIECyACIAQgB2pBAm0iAzYCBCABDAILIAIgBSAGakECbSIDNgIMIAFBCGoMAQsgAiANIA5qQQJtIgM2AhQgAUEQagsgA0EBajYCAAsgACACEN4DIAAgARDeAyAPQQFqIQ8gCkEBaiIKIAhHDQALIAgiCkEATA0BC0EAIQ0DQEEAIQRBACEHQQAhBUEAIQYgCyANQQV0aiIBKAIAIg4gASgCBCIWTARAIAEoAgghAyAAKALkAygCGCEXIAEoAhAiCEEBaiEPIAhBA3RBBHIhGCABKAIUIhAgCGtBAWpBAXEhGSABKAIMIRQDQCADIBRMBEAgDkEDdEEEciERIBcgDkECdGooAgAhGiADIQEDQCABIQkCQCAIIBBKDQAgGiAJQQZ0aiAIQQF0aiECIAlBAnRBAnIhEgJ/IBlFBEAgAiEBIAgMAQsgAkECaiEBIAIvAQAiAgRAIAIgGGwgBmohBiACIBJsIAVqIQUgAiARbCAHaiEHIAIgBGohBAsgDwshAiAIIBBGDQADQCABLwEAIgwEQCAMIBJsIAVqIQUgDCARbCAHaiEHIAJBA3RBBHIgDGwgBmohBiAEIAxqIQQLIAJBAWohFSABLwECIgwEQCAMIBJsIAVqIQUgDCARbCAHaiEHIBVBA3RBBHIgDGwgBmohBiAEIAxqIQQLIAFBBGohASACQQJqIQIgECAVRw0ACwsgCUEBaiEBIAkgFEcNAAsLIA4gFkchASAOQQFqIQ4gAQ0ACwsgACgCiAEoAgAgDWogByAEQQF1IgFqIARtOgAAIAAoAogBKAIEIA1qIAEgBWogBG06AAAgACgCiAEoAgggDWogASAGaiAEbToAACANQQFqIg0gCkcNAAsgCiEICyAAIAg2AoQBIAAoAgAiASAINgIYIAFB4gA2AhQgAEEBIAAoAgAoAgQRAgAgE0EBNgIcC7MFASN/IANBAEoEQCAAKALQAiESIAAoAogBIgUoAgghGyAFKAIEIRwgBSgCACEdIAAoAuQDIgooAighEyAKKAIYIR4gACgCcCIUQQFrIR8gFEEDbCIFQQNrISAgBUEDakEBdCEhA0AgAiAVQQJ0IgVqKAIAIQsgASAFaigCACEHAn8gCigCJARAIAsgH2ohCyAHICBqIQdBfSEMQX8hFkEAIQQgCigCICAhagwBC0EDIQxBASEEQQEhFiAKKAIgCyEFIAogBDYCJAJAIBRFBEBBACENQQAhDkEAIQ8MAQsgDEECaiEiIAxBAWohI0EAIRBBACEJQQAhEUEAIRdBACEYQQAhGUEAIQ9BACEOQQAhDSAUIRogBSEEA0AgCyAeIBIgEyAQIAQgDEEBdGoiBS4BAGpBCGpBBHVBAnRqKAIAIActAABqai0AACIkQQN2IiVBAnRqKAIAIBIgEyAJIAQgI0EBdGouAQBqQQhqQQR1QQJ0aigCACAHLQABamotAAAiEEECdiIJQQZ0aiASIBMgESAEICJBAXRqLgEAakEIakEEdUECdGooAgAgBy0AAmpqLQAAIhFBA3YiBkEBdGoiCC8BACImBH8gJgUgACAlIAkgBhCmBSAILwEAC0EBayIGOgAAIAYgHWotAAAhCSAGIBxqLQAAIQggBCARIAYgG2otAABrIgZBA2wgDWo7AQQgBCAQIAhrIghBA2wgDmo7AQIgBCAkIAlrIgRBA2wgD2o7AQAgCyAWaiELIAcgDGohByAGQQdsIREgCEEHbCEJIARBB2whECAGQQVsIBlqIQ0gCEEFbCAYaiEOIARBBWwgF2ohDyAEIRcgCCEYIAYhGSAFIQQgGkEBayIaDQALCyAFIA07AQQgBSAOOwECIAUgDzsBACAVQQFqIhUgA0cNAAsLC78BAQt/IANBAEoEQCAAKAJwIQkgACgC5AMoAhghCgNAIAkEQCABIAZBAnQiBWooAgAhBCACIAVqKAIAIQcgCSEFA0AgCiAELQAAQQN2IgtBAnRqKAIAIAQtAAFBAnYiDEEGdGogBC0AAkEDdiINQQF0aiIOLwEAIghFBEAgACALIAwgDRCmBSAOLQAAIQgLIARBA2ohBCAHIAhBAWs6AAAgB0EBaiEHIAVBAWsiBQ0ACwsgBkEBaiIGIANHDQALCwu0BQEEfyAAKALkAyIDKAIYIQICQAJAAn8gACgCWEUEQCABDQJB9AEMAQsgAEECNgJYIAENAUH1AQshASADQfYBNgIIIAMgATYCBEEBIQECQCAAKAKEASIEQQBMBH9BOgUgBEGBAkkNAUGAAiEBQTsLIQQgACgCACIFIAE2AhggBSAENgIUIAAgACgCACgCABEBAAsgACgCWEECRw0BIAAoAnBBBmxBDGohASADKAIgIgRFBEAgAyAAQQEgASAAKAIEKAIEEQQAIgQ2AiALIARBACABEDkaIAMoAihFBEAgABCnBQsgA0EANgIkDAELIANBATYCHCADQfcBNgIIIANB+AE2AgQLIAMoAhwEQCACKAIAQQBBgCAQORogAigCBEEAQYAgEDkaIAIoAghBAEGAIBA5GiACKAIMQQBBgCAQORogAigCEEEAQYAgEDkaIAIoAhRBAEGAIBA5GiACKAIYQQBBgCAQORogAigCHEEAQYAgEDkaIAIoAiBBAEGAIBA5GiACKAIkQQBBgCAQORogAigCKEEAQYAgEDkaIAIoAixBAEGAIBA5GiACKAIwQQBBgCAQORogAigCNEEAQYAgEDkaIAIoAjhBAEGAIBA5GiACKAI8QQBBgCAQORogAigCQEEAQYAgEDkaIAIoAkRBAEGAIBA5GiACKAJIQQBBgCAQORogAigCTEEAQYAgEDkaIAIoAlBBAEGAIBA5GiACKAJUQQBBgCAQORogAigCWEEAQYAgEDkaIAIoAlxBAEGAIBA5GiACKAJgQQBBgCAQORogAigCZEEAQYAgEDkaIAIoAmhBAEGAIBA5GiACKAJsQQBBgCAQORogAigCcEEAQYAgEDkaIAIoAnRBAEGAIBA5GiACKAJ4QQBBgCAQORogAigCfEEAQYAgEDkaIANBADYCHAsLDQAgACgC5ANBATYCHAu3AwEYfyADQQBKBEAgACgC0AIhEiAAKALkAyEFQQAgACgCeCIJayETIAAoAnAiCkEBayIUIAlsIRUgCkEBakEBdCEWA0AgAiANQQJ0IgBqIhcoAgBBACAKEDkaIAlBAEoEQCAAIAFqIRhBACEGA0AgGCgCACAGaiEHIBcoAgAhAAJ/IAUoAlQEQCAAIBRqIQAgByAVaiEHQX8hDiATIQ8gBSAGQQJ0aigCRCAWagwBC0EBIQ4gCSEPIAUgBkECdGooAkQLIQRBACELAkAgCkUEQCAEIQhBACEMDAELIAZBAnQiCCAFKAIQaigCACEZIAUoAhggCGooAgAhGkEAIRAgCiERQQAhDANAIAAgGiASIActAAAgCyAEIA5BAXRqIgguAQBqQQhqQQR1amotAAAiC2otAAAiGyAALQAAajoAACAEIAsgGSAbai0AAGsiBEEDbCAMajsBACAEQQdsIQsgBEEFbCAQaiEMIAAgDmohACAHIA9qIQcgBCEQIAghBCARQQFrIhENAAsLIAggDDsBACAGQQFqIgYgCUcNAAsLIAUgBSgCVEU2AlQgDUEBaiINIANHDQALCwvxAgEPfyADQQBKBEAgACgCeCEGIAAoAuQDIQcgACgCcCIIQX5xIQ8gCEEBcSEQA0AgAiAKQQJ0IgBqIhEoAgBBACAIEDkaIAcoAjAhDSAGQQBKBEAgACABaiESQQAhCQNAAkAgCEUNACAHIAlBAnQiAGooAjQgDUEGdGohCyAHKAIYIABqKAIAIQwgEigCACAJaiEEIBEoAgAhAEEAIQVBACEOIAhBAUcEQANAIAAgAC0AACAMIAsgBUECdGooAgAgBC0AAGpqLQAAajoAACAAIAAtAAEgDCALIAVBAWpBD3FBAnRqKAIAIAQgBmoiBC0AAGpqLQAAajoAASAAQQJqIQAgBUECakEPcSEFIAQgBmohBCAOQQJqIg4gD0cNAAsLIBBFDQAgACAALQAAIAwgCyAFQQJ0aigCACAELQAAamotAABqOgAACyAJQQFqIgkgBkcNAAsLIAcgDUEBakEPcTYCMCAKQQFqIgogA0cNAAsLC40CAQ5/IANBAEoEQCAAKAJwIQogACgC5AMiBCgCGCIAKAIIIQwgACgCBCENIAAoAgAhDiAEKAIwIQYDQCAKBEAgBkEGdCIAIAQoAjxqIQ8gBCgCOCAAaiEQIAQoAjQgAGohESABIAdBAnQiBWooAgAhACACIAVqKAIAIQhBACEJIAohBQNAIAggDSAQIAlBAnQiC2ooAgAgAC0AAWpqLQAAIA4gCyARaigCACAALQAAamotAABqIAwgCyAPaigCACAALQACamotAABqOgAAIAhBAWohCCAAQQNqIQAgCUEBakEPcSEJIAVBAWsiBQ0ACwsgBCAGQQFqQQ9xIgY2AjAgB0EBaiIHIANHDQALCwvqAgEPfyADQQBKBEAgACgCcCEMIAAoAuQDKAIYIQYgACgCeCIHQXxxIREgB0EDcSENIAdBAWtBA0khEgNAIAwEQCABIAhBAnQiAGooAgAhCSAAIAJqKAIAIQogDCEOA0ACQCAHQQBMBEBBACEEDAELQQAhD0EAIQRBACEFIAkhAEEAIRAgEkUEQANAIAQgBiAFQQJ0IgtqKAIAIAAtAABqLQAAaiAGIAtBBHJqKAIAIAAtAAFqLQAAaiAGIAtBCHJqKAIAIAAtAAJqLQAAaiAGIAtBDHJqKAIAIAAtAANqLQAAaiEEIAVBBGohBSAAQQRqIQAgEEEEaiIQIBFHDQALCyANBEADQCAEIAYgBUECdGooAgAgAC0AAGotAABqIQQgBUEBaiEFIABBAWohACAPQQFqIg8gDUcNAAsLIAcgCWohCQsgCiAEOgAAIApBAWohCiAOQQFrIg4NAAsLIAhBAWoiCCADRw0ACwsLoAIBCX8gA0EASgRAIAAoAuQDKAIYIgQoAgghByAEKAIEIQggBCgCACEJIAAoAnAiBkEBayELIAZBAXEhDANAAkAgBkUNACABIApBAnQiBGooAgAhACACIARqKAIAIQUgDAR/IAUgByAALQACai0AACAIIAAtAAFqLQAAIAkgAC0AAGotAABqajoAACAFQQFqIQUgAEEDaiEAIAsFIAYLIQQgBkEBRg0AA0AgBSAHIAAtAAJqLQAAIAggAC0AAWotAAAgCSAALQAAai0AAGpqOgAAIAUgByAALQAFai0AACAIIAAtAARqLQAAIAkgAC0AA2otAABqajoAASAFQQJqIQUgAEEGaiEAIARBAmsiBA0ACwsgCkEBaiIKIANHDQALCwvlBAEIfyAAIAAoAuQDIgIoAhA2AogBIAAgAigCFDYChAECQAJAAkACQAJAIAAoAlgOAwABAgMLIAAoAnhBA0YEQCACQe0BNgIEDwsgAkHuATYCBA8LIAAoAnghASACQQA2AjAgAkHvAUHwASABQQNGGzYCBCACKAIcRQRAIAAQqAULIAIoAjQNAiAAKAJ4IgNBAEwNAiAAKALkAyEGQQAhAgNAIAYgAkECdGoiCCgCICEEQQAhAQJAAkAgAkUNAANAIAYgAUECdGoiBSgCICAERwRAIAFBAWoiASACRw0BDAILCyAFKAI0IgUNAQsgBEEJdEGABGshB0EAIQQgAEEBQYAIIAAoAgQoAgARBAAhBQNAQQAhAQNAIARBBHQgAWpB8MYCaiwAACIJQf8BcUGCfGwhAyAFIARBBnRqIAFBAnRqAn8gCUEASARAQQBB/4N8IANrIAdtawwBCyADQYH8A2ogB20LNgIAIAFBAWoiAUEQRw0ACyAEQQFqIgRBEEcNAAsgACgCeCEDCyAIIAU2AjQgAkEBaiICIANIDQALDAILIAJBADYCVCACQfEBNgIEAkAgAigCRARAIAAoAnghAwwBCyAAKAJ4QQBMDQIgACgCcEEBdEEEaiEEQQAhAQNAIAIgAUECdGogAEEBIAQgACgCBCgCBBEEADYCRCABQQFqIgEgACgCeCIDSA0ACwsgA0EATA0BIAAoAnBBAXRBBGohA0EAIQEDQCACIAFBAnRqKAJEQQAgAxA5GiABQQFqIgEgACgCeEgNAAsMAQsgACgCACIBQTE2AhQgACABKAIAEQEACwsaAQF/IAAoAgAiAUEvNgIUIAAgASgCABEBAAvWAQEDfyAAKAIEIQQgAkHxk+vcA08EQCAAKAIAQriAgIAwNwIUIAAgACgCACgCABEBAAsgAkEIIAJBB3EiA2tBACADG2ohAyABQQJPBEAgACgCACICIAE2AhggAkEPNgIUIAAgACgCACgCABEBAAsgA0EQaiIFEDciAkUEQCAAKAIAQriAgIDAADcCFCAAIAAoAgAoAgARAQALIAQgBCgCTCAFajYCTCAEIAFBAnRqIgAoAjwhASACQQA2AgggAiADNgIEIAIgATYCACAAIAI2AjwgAkEQagt6AQJ/IAAoAgQhBiABQQFHBEAgACgCACIHIAE2AhggB0EPNgIUIAAgACgCACgCABEBAAsgACABQYABENUCIgBBADYCKCAAIAI2AiAgACAFNgIMIAAgAzYCCCAAIAQ2AgQgAEEANgIAIAAgBigCRDYCLCAGIAA2AkQgAAt6AQJ/IAAoAgQhBiABQQFHBEAgACgCACIHIAE2AhggB0EPNgIUIAAgACgCACgCABEBAAsgACABQYABENUCIgBBADYCKCAAIAI2AiAgACAFNgIMIAAgAzYCCCAAIAQ2AgQgAEEANgIAIAAgBigCSDYCLCAGIAA2AkggAAv1AwEFfyAAKAIEIgUoAkQiAQRAA0AgASgCAEUEQCABKAIIIgMgASgCBGwgBGohBCADIAEoAgxsIAJqIQILIAEoAiwiAQ0ACwsgBSgCSCIBBEADQCABKAIARQRAIAEoAggiAyABKAIEbEEHdCAEaiEEIAEoAgwgA2xBB3QgAmohAgsgASgCLCIBDQALCwJAIAJBAEwNAEGAlOvcAyEDIAUoAkwaIAQgBCIBSgRAIAEgAm0iAUEBIAFBAUobIQMLIAUoAkQiAQRAA0AgASgCAEUEQAJAIAMgASgCBCICQQFrIAEoAgwiBG5BAWpOBEAgASACNgIQDAELIAEgAyAEbDYCECAAIAEoAgggAmwQqgUgAUEBNgIoIAEoAhAhAgsgASAAQQEgASgCCCACEKsFNgIAIAUoAlAhAiABQQA2AiQgAUIANwIYIAEgAjYCFAsgASgCLCIBDQALCyAFKAJIIgFFDQADQCABKAIARQRAAkAgAyABKAIEIgJBAWsgASgCDCIEbkEBak4EQCABIAI2AhAMAQsgASADIARsNgIQIAAgAiABKAIIbEEHdBCqBSABQQE2AiggASgCECECCyABIABBASABKAIIIAIQrAU2AgAgBSgCUCECIAFBADYCJCABQgA3AhggASACNgIUCyABKAIsIgENAAsLC+0GAQd/AkACQCACIANqIgggASgCBEsNACABKAIMIANJDQAgASgCAA0BCyAAKAIAIgNBFzYCFCAAIAMoAgARAQALAkAgAiABKAIYIgNPBEAgCCABKAIQIANqTQ0BCyABKAIoRQRAIAAoAgAiA0HHADYCFCAAIAMoAgARAQALIAEoAiQEQAJAIAEoAhAiB0EATA0AIAFBMGohCSABKAIIIgogASgCGGwhBSABKAIUIQZBACEDA0AgBiAHIANrIgcgBiAHSBsiBiABKAIcIAEoAhggA2oiB2siCyAGIAtIGyIGIAEoAgQgB2siByAGIAdIGyIGQQBMDQEgACAJIAEoAgAgA0ECdGooAgAgBSAGIApsIgYgASgCNBEFACAFIAZqIQUgASgCECIHIAEoAhQiBiADaiIDSg0ACwsgAUEANgIkC0EAIQMgASACIAggASgCECIHayIFQQAgBUEAShsgASgCGCACSRsiBTYCGCAHQQBMDQAgAUEwaiEJIAEoAggiCiAFbCEFIAEoAhQhBgNAIAYgByADayIHIAYgB0gbIgYgASgCHCABKAIYIANqIgdrIgsgBiALSBsiBiABKAIEIAdrIgcgBiAHSBsiBkEATA0BIAAgCSABKAIAIANBAnRqKAIAIAUgBiAKbCIGIAEoAjARBQAgBSAGaiEFIAEoAhAiByABKAIUIgYgA2oiA0oNAAsLAkACQAJAIAEoAhwiBSAITw0AAkACQAJAIAIgBUsEQCACIQUgBEUNASAAKAIAIgNBFzYCFCAAIAMoAgARAQAMAgsgBA0BCyABKAIgDQEgACgCACIDQRc2AhQgACADKAIAEQEADAQLIAEgCDYCHCABKAIgRQ0CCyAFIAEoAhgiAGsiAyAIIABrIgZPDQAgASgCCCEAIAggBUF/c2ohByAIIAVrQQNxIggEQEEAIQUDQCABKAIAIANBAnRqKAIAQQAgABA5GiADQQFqIQMgBUEBaiIFIAhHDQALCyAHQQNJDQADQCADQQJ0IgUgASgCAGooAgBBACAAEDkaIAUgASgCAGooAgRBACAAEDkaIAUgASgCAGooAghBACAAEDkaIAUgASgCAGooAgxBACAAEDkaIANBBGoiAyAGRw0ACwsgBEUNAQsgAUEBNgIkCyABKAIAIAIgASgCGGtBAnRqC/YGAQd/AkACQCACIANqIgggASgCBEsNACABKAIMIANJDQAgASgCAA0BCyAAKAIAIgNBFzYCFCAAIAMoAgARAQALAkAgAiABKAIYIgNPBEAgCCABKAIQIANqTQ0BCyABKAIoRQRAIAAoAgAiA0HHADYCFCAAIAMoAgARAQALIAEoAiQEQAJAIAEoAhAiB0EATA0AIAFBMGohCSABKAIIQQd0IgogASgCGGwhBSABKAIUIQZBACEDA0AgBiAHIANrIgcgBiAHSBsiBiABKAIcIAEoAhggA2oiB2siCyAGIAtIGyIGIAEoAgQgB2siByAGIAdIGyIGQQBMDQEgACAJIAEoAgAgA0ECdGooAgAgBSAGIApsIgYgASgCNBEFACAFIAZqIQUgASgCECIHIAEoAhQiBiADaiIDSg0ACwsgAUEANgIkC0EAIQMgASACIAggASgCECIHayIFQQAgBUEAShsgASgCGCACSRsiBTYCGCAHQQBMDQAgAUEwaiEJIAEoAghBB3QiCiAFbCEFIAEoAhQhBgNAIAYgByADayIHIAYgB0gbIgYgASgCHCABKAIYIANqIgdrIgsgBiALSBsiBiABKAIEIAdrIgcgBiAHSBsiBkEATA0BIAAgCSABKAIAIANBAnRqKAIAIAUgBiAKbCIGIAEoAjARBQAgBSAGaiEFIAEoAhAiByABKAIUIgYgA2oiA0oNAAsLAkACQAJAIAEoAhwiBSAITw0AAkACQAJAIAIgBUsEQCACIQUgBEUNASAAKAIAIgNBFzYCFCAAIAMoAgARAQAMAgsgBA0BCyABKAIgDQEgACgCACIDQRc2AhQgACADKAIAEQEADAQLIAEgCDYCHCABKAIgRQ0CCyAFIAEoAhgiAGsiAyAIIABrIgZPDQAgASgCCEEHdCEAIAggBUF/c2ohByAIIAVrQQNxIggEQEEAIQUDQCABKAIAIANBAnRqKAIAQQAgABA5GiADQQFqIQMgBUEBaiIFIAhHDQALCyAHQQNJDQADQCADQQJ0IgUgASgCAGooAgBBACAAEDkaIAUgASgCAGooAgRBACAAEDkaIAUgASgCAGooAghBACAAEDkaIAUgASgCAGooAgxBACAAEDkaIANBBGoiAyAGRw0ACwsgBEUNAQsgAUEBNgIkCyABKAIAIAIgASgCGGtBAnRqCx4AIABBARDgAyAAQQAQ4AMgACgCBBAxIABBADYCBAtnAQF/IAMoAgAgBGogACgC0AJBgANrIgAgASgCVCIBKAIgIAIvARBsIgUgASgCACACLwEAbEGEIGoiAWpBA3ZB/wdxai0AADoAACADKAIEIARqIAAgASAFa0EDdkH/B3FqLQAAOgAAC9sDAQ1/IAMoAgAgBGoiBSAAKALQAkGAA2siACABKAJUIgEoAmAgAi4BMGwiBiABKAIgIAIuARBsIgdqQdEibCIIIAdB/jBsaiIHIAEoAkAgAi8BIGwiCSABKAIAIAIvAQBsIgpqQQ10Ig1qQYCAghBqIgsgASgCZCACLgEybCIOIAEoAiQgAi4BEmwiDGpB0SJsIg8gDEH+MGxqIgwgASgCRCACLwEibCIQIAEoAgQgAi8BAmwiAWpBDXQiAmoiEWpBEHZB/wdxai0AADoAACAFIAAgCyARa0EQdkH/B3FqLQAAOgABIAMoAgQgBGoiBSAAIAggBkHfiX9saiIGIAogCWtBDXQiCGpBgICCEGoiCSAPIA5B34l/bGoiCiABIBBrQQ10IgFqIgtqQRB2Qf8HcWotAAA6AAAgBSAAIAkgC2tBEHZB/wdxai0AADoAASADKAIIIARqIgUgACAIIAZrQYCAghBqIgYgASAKayIBakEQdkH/B3FqLQAAOgAAIAUgACAGIAFrQRB2Qf8HcWotAAA6AAEgAygCDCAEaiIBIAAgDSAHa0GAgIIQaiIDIAIgDGsiAmpBEHZB/wdxai0AADoAACABIAAgAyACa0EQdkH/B3FqLQAAOgABC9IDAQx/IAAoAtACIQ4gASgCVCEAIwBB0ABrIgchAQNAIAAoAkAhCiACLgEgIQsgASACLgEAIAAoAgBsQQ10QYAIciIMIAAoAoABIAIuAUBsIg1BvqV/bGpBC3UiDyAAKAIgIAIuARBsIgUgACgCYCACLgEwbCIGIAAoAqABIAIuAVBsIglqa0ECdCIQazYCMCABIA8gEGo2AgwgASAKIAtsQbHOAGwiCiANQaEtbCAMaiILaiIMIAUgCWpBthdsIg0gBSAGakENdGoiBWtBC3U2AjwgASAFIAxqQQt1NgIAIAEgCyAKayIFIA0gCSAGa0ENdGoiBmtBC3U2AiQgASAFIAZqQQt1NgIYIAFBBGohASAAQQRqIQAgAkECaiECIAhBAWoiCEEDRw0ACyAOQYADayEAIAchAkEAIQEDQCADIAFBAnRqKAIAIARqIgcgACACKAIAQQ10QYCAiMAAaiIIIAIoAggiBUGhLWxqIgYgAigCBEGxzgBsIglqQRJ2Qf8HcWotAAA6AAAgByAAIAYgCWtBEnZB/wdxai0AADoAAiAHIAAgBUG+pf//AGwgCGpBEnZB/wdxai0AADoAASACQQxqIQIgAUEBaiIBQQZHDQALC6UGARJ/IAAoAtACIQsgASgCVCEBIwBBgAFrIgkhAEEEIQcDQCAAAn8CQCACLgEQIgYgAi8BICIFckH//wNxDQBBACEFIAIvATANACACLwFADQAgAi8BUA0AIAIvAWANACACLwFwDQAgACACLgEAIAEoAgBsQQJ0IgU2AmAgACAFNgJQIAAgBTYCQCAAIAU2AjAgACAFNgIgIAAgBTYCECAAIAU2AgBBHAwBCyAAIAEoAsABIAIuAWBsIgogASgCQCAFQRB0QRB1bCIFakHRImwiDCAFQf4wbGoiESACLgFAIAEoAoABbEENdCINIAIuAQAgASgCAGxBDXRBgAhyIg5qIhJqIg8gASgCICAGbCIFIAEoAuABIAIuAXBsIgZqQbNGbCITIAVBi+AAbGogBSABKAKgASACLgFQbCIIaiIQIAEoAmAgAi4BMGwiBSAGaiIUakGhywBsIhUgEEGEZ2xqIhBqIhZrQQt1NgJwIAAgDyAWakELdTYCACAAIAwgCkHfiX9saiIKIA4gDWsiDGoiDSAVIBRBu4J/bGoiDiAFIAhqQf3bfmwiDyAFQdTEAWxqaiIFa0ELdTYCYCAAIAUgDWpBC3U2AhAgACAMIAprIgUgDyAIQbODAWxqIBBqIghrQQt1NgJQIAAgBSAIakELdTYCICAAIBMgBkGOE2xqIA5qIgUgEiARayIGakELdTYCMCAGIAVrQQt1IQVBEAtBAnRqIAU2AgAgAkECaiECIAFBBGohASAAQQRqIQAgB0EBSyEFIAdBAWshByAFDQALIAtBgANrIQAgCSECQQAhBwNAIAMgB0ECdGooAgAgBGoiASAAIAIoAgwiCSACKAIEIgVqQdEibCIKIAVB/jBsaiIFIAIoAgBBkIABaiIGIAIoAggiCGpBDXQiC2pBEnZB/wdxai0AADoAACABIAAgCyAFa0ESdkH/B3FqLQAAOgADIAEgACAKIAlB34l/bGoiCSAGIAhrQQ10IgVqQRJ2Qf8HcWotAAA6AAEgASAAIAUgCWtBEnZB/wdxai0AADoAAiACQRBqIQIgB0EBaiIHQQhHDQALC4sGARJ/IwBB0AFrIg8kACAAKALQAiENIAEoAlQhASAPIQADQCABKALAASEIIAIuAWAhBiABKAJAIQkgAi4BICEOIAAgAi4BACABKAIAbEENdEGACHIiBSABKAKAASACLgFAbCILQb6lf2xqQQt1IhAgASgCICACLgEQbCIHIAEoAqABIAIuAVBsIhEgASgCYCACLgEwbCISIAEoAuABIAIuAXBsIhNrIgxqa0ECdCIUazYCjAEgACAQIBRqNgIoIAAgBiAIbCIIIAkgDmwiBmpBmjVsIgkgBkHxIGxqIgYgC0GdyQBsIAVqIg5qIhAgDEHjE2wiFCARQQ10IhFqIhUgEiATaiISQe88bCITIAdBs9kAbGpqIhZrQQt1NgK0ASAAIBAgFmpBC3U2AgAgACAOIAZrIgYgB0GUDmwgE2sgFWoiDmtBC3U2AmQgACAGIA5qQQt1NgJQIAAgC0GEZGwgBWoiBSAJIAhB3PR+bGoiC2siCCARIBRrIAxBDHRrIgwgB0GMKWwgEkHPJWwiBmtqIglrQQt1NgJ4IAAgCCAJakELdTYCPCAAIAUgC2oiBSAHQdPQAGwgBiAMamsiB2tBC3U2AqABIAAgBSAHakELdTYCFCAAQQRqIQAgAUEEaiEBIAJBAmohAiAKQQFqIgpBBUcNAAsgDUGAA2shASAPIQBBACEHA0AgAyAHQQJ0aigCACAEaiICIAEgACgCDCIKIAAoAgQiBWpBmjVsIgsgBUHxIGxqIgUgACgCAEENdEGAgIjAAGoiDCAAKAIIIg0gACgCECIIayIGQdAWbGoiCSAIIA1qQcwybCINaiIIakESdkH/B3FqLQAAOgAAIAIgASAIIAVrQRJ2Qf8HcWotAAA6AAQgAiABIAsgCkHc9H5saiIKIAkgDWsiBWpBEnZB/wdxai0AADoAASACIAEgBSAKa0ESdkH/B3FqLQAAOgADIAIgASAGQcCl//8AbCAMakESdkH/B3FqLQAAOgACIABBFGohACAHQQFqIgdBCkcNAAsgD0HQAWokAAvtBgESfyMAQaACayISJAAgACgC0AIhEyABKAJUIQEgEiEAA0AgASgCgAEhDSACLgFAIQogACABKAJAIAIuASBsIgggASgCwAEgAi4BYGwiD2tBDXQiCyACLgEAIAEoAgBsQQ10QYAIciIGaiIMIAEoAiAgAi4BEGwiBSABKALgASACLgFwbCIHayIQIAEoAmAgAi4BMGwiDiABKAKgASACLgFQbCIJayIUakHRImwiFSAQQf4wbGoiEGtBC3U2AvABIAAgDCAQakELdTYCGCAAIAYgC2siCyAVIBRB34l/bGoiDGtBC3U2AqgBIAAgCyAMakELdTYCYCAAIAogDWxBsc4AbCIKIAZqIgsgD0ENdCIPIAhBttcAbGoiDGsiECAHIAUgCWoiFGpBjTdsIg0gDkGvXWwiFSAFQdxUbGogB0GMgX9samoiFmtBC3U2ApABIAAgECAWakELdTYCeCAAIAsgDGoiCyANIBRB2xBsaiIMIA5Bz9MAbCIOIAVB9xFsamoiBWtBC3U2AogCIAAgBSALakELdTYCACAAIAhBthdsIA9rIgUgBiAKayIGaiIIIAcgCWpBi71/bCIKIAlBsKF/bCAVamogDGoiCWtBC3U2AtgBIAAgCCAJakELdTYCMCAAIAYgBWsiBiAHQcblAGwgDmsgDWogCmoiB2tBC3U2AsABIAAgBiAHakELdTYCSCAAQQRqIQAgAUEEaiEBIAJBAmohAiARQQFqIhFBBkcNAAsgE0GAA2shASASIQBBACEHA0AgAyAHQQJ0aigCACAEaiICIAEgACgCFCIGIAAoAgQiBWpBthdsIhEgACgCDCIJIAVqQQ10aiIIIAAoAgBBDXRBgICIwABqIg4gACgCECINQaEtbGoiEyAAKAIIQbHOAGwiCmoiD2pBEnZB/wdxai0AADoAACACIAEgDyAIa0ESdkH/B3FqLQAAOgAFIAIgASAFIAYgCWprQQ10IgUgDUG+pX9sIA5qIghqQRJ2Qf8HcWotAAA6AAEgAiABIAggBWtBEnZB/wdxai0AADoABCACIAEgESAGIAlrQQ10aiIGIBMgCmsiBWpBEnZB/wdxai0AADoAAiACIAEgBSAGa0ESdkH/B3FqLQAAOgADIABBGGohACAHQQFqIgdBDEcNAAsgEkGgAmokAAujCAEVfyMAQZADayITJAAgACgC0AIhFCABKAJUIQEgEyEAA0AgASgCwAEhDSACLgFgIQggASgCQCEJIAIuASAhDCAAIAIuAQAgASgCAGxBDXRBgAhyIgogASgCgAEgAi4BQGwiC0G+pX9sakELdSIOIAEoAuABIAIuAXBsIg8gASgCICACLgEQbCIHIAEoAmAgAi4BMGwiBWsiESABKAKgASACLgFQbCIGa2pBAnQiEms2ApgCIAAgDiASajYCVCAAIAggDWwiCCAJIAxsIglqQeLGAGwiDCAIQfyRf2xqIg4gC0GSFGwgCmoiEmoiFSAFIAZqQe91bCAPQQ10Ig1rIg8gBSAHakG31QBsIhcgBUHuZGxqaiIWa0ELdTYC0AIgACAVIBZqQQt1NgIcIAAgCEHhp39sIAlBoydsaiIIIAtByUdsIApqIhVqIhYgDyAGIAdqIg9B0swAbCIYIAZBieh+bGpqIhlrQQt1NgK0AiAAIBYgGWpBC3U2AjggACASIA5rIg4gEUHyHWwgDWsiESAGIAVrQfjZAGwiEiAFQZkrbGpqIgVrQQt1NgLgASAAIAUgDmpBC3U2AowBIAAgC0HG0QBsIApqIgUgDCAJQb0RbGoiCmsiCyAPQZQwbCIJIAdBi7x/bGogEWoiDGtBC3U2AsQBIAAgCyAMakELdTYCqAEgACAFIApqIgUgFyAHQfC3f2xqIBhqIA1qIgdrQQt1NgLsAiAAIAUgB2pBC3U2AgAgACAVIAhrIgUgEiAGQeaTf2xqIAlqIA1qIgZrQQt1NgL8ASAAIAUgBmpBC3U2AnAgAEEEaiEAIAFBBGohASACQQJqIQIgEEEBaiIQQQdHDQALIBRBgANrIQEgEyEAQQAhBQNAIAMgBUECdGooAgAgBGoiAiABIAAoAgwiByAAKAIEIgZqQe87bCIIIAYgB2tB8wpsIglrIAAoAhQiCiAGakGjJ2wiFGoiDCAAKAIQIgYgACgCGCILa0G3OGwiDiALQYN7bGogACgCAEENdEGAgIjAAGoiDSALIAAoAggiEGoiC0HG0QBsaiIPaiIRakESdkH/B3FqLQAAOgAAIAIgASARIAxrQRJ2Qf8HcWotAAA6AAYgAiABIAcgCmpB4ad/bCIHIAggCWpqIgggECAGa0GSFGwiCSAGQZWKf2wgDWpqIA5qIgxqQRJ2Qf8HcWotAAA6AAEgAiABIAwgCGtBEnZB/wdxai0AADoABSACIAEgFCAKQd73AGxqIAdqIgcgCSAQQfHhfmxqIA9qIgpqQRJ2Qf8HcWotAAA6AAIgAiABIAogB2tBEnZB/wdxai0AADoABCACIAEgBiALa0HB2gBsIA1qQRJ2Qf8HcWotAAA6AAMgAEEcaiEAIAVBAWoiBUEORw0ACyATQZADaiQAC8AJARp/IwBBgARrIhQkACAAKALQAiEQIAEoAlQhASAUIQADQCAAIAEoAkAgAi4BIGwiDCABKALAASACLgFgbCINayIJQePYAGwiDiANQYOkAWxqIhEgASgCgAEgAi4BQGwiCkHP0wBsIhUgAi4BACABKAIAbEENdEGACHIiC2oiFmoiEiABKAJgIAIuATBsIgggASgCICACLgEQbCIFakHO1gBsIhMgBUHW7X5saiABKAKgASACLgFQbCIHIAVqIhlB6c8AbCIXaiABKALgASACLgFwbCIGIAVqQfzFAGwiGmoiGGtBC3U2AuADIAAgEiAYakELdTYCACAAIAlB1BFsIgkgDEHNOWxqIhIgCkHRImwiCiALaiIYaiIbIAYgCGoiHEGrVWwiHSAHIAhqQfAIbCIeIBMgCEHNBGxqamoiE2tBC3U2AsADIAAgEyAbakELdTYCICAAIA4gDEHCWWxqIgwgCyAKayIOaiIKIAYgB2pBsql/bCITIB4gB0H6t39saiAXamoiF2tBC3U2AqADIAAgCiAXakELdTYCQCAAIAkgDUGwX2xqIg0gCyAVayILaiIJIB0gBkGYxABsaiAaaiATaiIKa0ELdTYCgAMgACAJIApqQQt1NgJgIAAgCyANayILIAYgB2tBoxpsIg0gBSAGa0G2OWwiCSAcQZewf2wiCiAGQYXJAWxqamoiBmtBC3U2AuACIAAgBiALakELdTYCgAEgACAOIAxrIgYgGUHVKmwiCyAHIAhrQYnaAGwiDCAHQfpObGpqIA1qIgdrQQt1NgLAAiAAIAYgB2pBC3U2AqABIAAgGCASayIHIAUgCGtBoxpsIgYgCEGa/gBsaiAMaiAKaiIIa0ELdTYCoAIgACAHIAhqQQt1NgLAASAAIBYgEWsiCCAGIAVBwop/bGogC2ogCWoiBWtBC3U2AoACIAAgBSAIakELdTYC4AEgAEEEaiEAIAFBBGohASACQQJqIQIgD0EBaiIPQQhHDQALIBBBgANrIQEgFCEAQQAhCANAIAMgCEECdGooAgAgBGoiAiABIAAoAgQiBSAAKAIcIgdqQbNGbCILIAVBi+AAbGogBSAAKAIUIgZqIg8gACgCDCIFIAdqIgxqQaHLAGwiDSAPQYRnbGoiD2oiECAAKAIYIgkgACgCCCIOakHRImwiESAOQf4wbGoiDiAAKAIAQZCAAWoiCiAAKAIQIhVqQQ10IhZqIhJqQRJ2Qf8HcWotAAA6AAAgAiABIBIgEGtBEnZB/wdxai0AADoAByACIAEgDSAMQbuCf2xqIgwgBSAGakH9235sIg0gBUHUxAFsamoiBSARIAlB34l/bGoiECAKIBVrQQ10IglqIhFqQRJ2Qf8HcWotAAA6AAEgAiABIBEgBWtBEnZB/wdxai0AADoABiACIAEgDSAGQbODAWxqIA9qIgUgCSAQayIGakESdkH/B3FqLQAAOgACIAIgASAGIAVrQRJ2Qf8HcWotAAA6AAUgAiABIAsgB0GOE2xqIAxqIgUgFiAOayIHakESdkH/B3FqLQAAOgADIAIgASAHIAVrQRJ2Qf8HcWotAAA6AAQgAEEgaiEAIAhBAWoiCEEQRw0ACyAUQYAEaiQAC2EAIAMoAgAgBGoiAyAAKALQAkGAA2siACABKAJUIgEoAgQgAi8BAmwiBCABKAIAIAIvAQBsQYQgaiIBakEDdkH/B3FqLQAAOgAAIAMgACABIARrQQN2Qf8HcWotAAA6AAELuwMBDX8gAygCACAEaiIFIAAoAtACQYADayIAIAEoAlQiASgCLCACLgEWbCIGIAEoAgwgAi4BBmwiB2oiCCABKAIkIAIuARJsIgogASgCBCACLgECbCILaiIJakHRImwiDCAJQf4wbGoiCSABKAIgIAIvARBsIg0gASgCACACLwEAbCIOakGEIGoiDyABKAIoIAIvARRsIhAgASgCCCACLwEEbCICaiIBakENdCIRakEQdkH/B3FqLQAAOgAAIAUgACARIAlrQRB2Qf8HcWotAAA6AAMgBSAAIAwgCEHfiX9saiIIIA8gAWtBDXQiAWpBEHZB/wdxai0AADoAASAFIAAgASAIa0EQdkH/B3FqLQAAOgACIAMoAgQgBGoiASAAIAcgBmsiAyALIAprIgRqQdEibCIFIARB/jBsaiIEIA4gDWtBhCBqIgYgAiAQayICakENdCIHakEQdkH/B3FqLQAAOgAAIAEgACAHIARrQRB2Qf8HcWotAAA6AAMgASAAIAUgA0HfiX9saiIDIAYgAmtBDXQiAmpBEHZB/wdxai0AADoAASABIAAgAiADa0EQdkH/B3FqLQAAOgACC8UHAQt/IAAoAtACIQkgAi4BECEFIAEoAlQiASgCICEHIwBB0ABrIgAgAi4BACABKAIAbEENdEGACHIiBiABKAJAIAIuASBsIghBvqV/bGpBC3U2AhggACAIQaEtbCAGaiIGIAUgB2xBsc4AbCIFa0ELdTYCMCAAIAUgBmpBC3U2AgAgASgCJCEFIAIuARIhByAAIAIuAQIgASgCBGxBDXRBgAhyIgYgASgCRCACLgEibCIIQb6lf2xqQQt1NgIcIAAgCEGhLWwgBmoiBiAFIAdsQbHOAGwiBWtBC3U2AjQgACAFIAZqQQt1NgIEIAEoAighBSACLgEUIQcgACACLgEEIAEoAghsQQ10QYAIciIGIAEoAkggAi4BJGwiCEG+pX9sakELdTYCICAAIAhBoS1sIAZqIgYgBSAHbEGxzgBsIgVrQQt1NgI4IAAgBSAGakELdTYCCCABKAIsIQUgAi4BFiEHIAAgAi4BBiABKAIMbEENdEGACHIiBiABKAJMIAIuASZsIghBvqV/bGpBC3U2AiQgACAIQaEtbCAGaiIGIAUgB2xBsc4AbCIFa0ELdTYCPCAAIAUgBmpBC3U2AgwgASgCMCEFIAIuARghByAAIAIuAQggASgCEGxBDXRBgAhyIgYgASgCUCACLgEobCIIQb6lf2xqQQt1NgIoIAAgCEGhLWwgBmoiBiAFIAdsQbHOAGwiBWtBC3U2AkAgACAFIAZqQQt1NgIQIAEoAjQhBSACLgEaIQcgACACLgEKIAEoAhRsQQ10QYAIciIGIAEoAlQgAi4BKmwiAUG+pX9sakELdTYCLCAAIAFBoS1sIAZqIgEgBSAHbEGxzgBsIgJrQQt1NgJEIAAgASACakELdTYCFCAJQYADayEBIAAhAkEAIQkDQCADIAlBAnRqKAIAIARqIgAgASACKAIUIgUgAigCBCIHakG2F2wiCCACKAIMIgYgB2pBDXRqIgogAigCAEENdEGAgIjAAGoiCyACKAIQIgxBoS1saiINIAIoAghBsc4AbCIOaiIPakESdkH/B3FqLQAAOgAAIAAgASAPIAprQRJ2Qf8HcWotAAA6AAUgACABIAcgBSAGamtBDXQiByAMQb6lf2wgC2oiCmpBEnZB/wdxai0AADoAASAAIAEgCiAHa0ESdkH/B3FqLQAAOgAEIAAgASAIIAUgBmtBDXRqIgUgDSAOayIHakESdkH/B3FqLQAAOgACIAAgASAHIAVrQRJ2Qf8HcWotAAA6AAMgAkEYaiECIAlBAWoiCUEDRw0ACwuRBQEQfyAAKALQAiEIIAEoAlQhACMAQYABayIFIQEDQCABIAAoAkAgAi4BIGwiBiAAKAIAIAIuAQBsIgpqQQJ0IgsgACgCYCACLgEwbCIMIAAoAiAgAi4BEGwiB2pB0SJsQYAIaiINIAdB/jBsakELdSIHazYCYCABIAcgC2o2AgAgASAKIAZrQQJ0IgYgDSAMQd+Jf2xqQQt1IgprNgJAIAEgBiAKajYCICABQQRqIQEgAEEEaiEAIAJBAmohAiAJQQFqIglBCEcNAAsgCEGAA2shACAFIQJBACEJA0AgAyAJQQJ0aigCACAEaiIBIAAgAigCBCIFIAIoAhwiCGpBs0ZsIgogBUGL4ABsaiAFIAIoAhQiBmoiCyACKAIMIgUgCGoiDGpBocsAbCIHIAtBhGdsaiILaiINIAIoAhgiDiACKAIIIg9qQdEibCIQIA9B/jBsaiIPIAIoAgBBkIABaiIRIAIoAhAiEmpBDXQiE2oiFGpBEnZB/wdxai0AADoAACABIAAgFCANa0ESdkH/B3FqLQAAOgAHIAEgACAHIAxBu4J/bGoiDCAFIAZqQf3bfmwiByAFQdTEAWxqaiIFIBAgDkHfiX9saiINIBEgEmtBDXQiDmoiEGpBEnZB/wdxai0AADoAASABIAAgECAFa0ESdkH/B3FqLQAAOgAGIAEgACAHIAZBs4MBbGogC2oiBSAOIA1rIgZqQRJ2Qf8HcWotAAA6AAIgASAAIAYgBWtBEnZB/wdxai0AADoABSABIAAgCiAIQY4TbGogDGoiBSATIA9rIghqQRJ2Qf8HcWotAAA6AAMgASAAIAggBWtBEnZB/wdxai0AADoABCACQSBqIQIgCUEBaiIJQQRHDQALC6cGARJ/IwBBoAFrIg8kACAAKALQAiEKIAEoAlQhACAPIQEDQCAAKAJgIQYgAi4BMCEFIAAoAiAhCSACLgEQIQsgASACLgEAIAAoAgBsQQ10QYAIciIMIAAoAkAgAi4BIGwiCCAAKAKAASACLgFAbCINayIOQcClf2xqQQt1NgJAIAEgDkHQFmwgDGoiDCAIIA1qQcwybCIIaiINIAUgBmwiBiAJIAtsIgVqQZo1bCIJIAVB8SBsaiIFa0ELdTYCgAEgASAFIA1qQQt1NgIAIAEgDCAIayIFIAkgBkHc9H5saiIGa0ELdTYCYCABIAUgBmpBC3U2AiAgAUEEaiEBIABBBGohACACQQJqIQIgB0EBaiIHQQhHDQALIApBgANrIQEgDyEAQQAhCgNAIAMgCkECdGooAgAgBGoiAiABIAAoAhwiBiAAKAIMIgVqIgtB7zxsIgwgACgCBCIHQbPZAGxqIAUgBmsiBkHjE2wiCCAAKAIUIg1BDXQiDmoiE2oiECAAKAIYIhEgACgCCCIFakGaNWwiEiAFQfEgbGoiFCAAKAIAQQ10QYCAiMAAaiIFIAAoAhAiCUGdyQBsaiIVaiIWakESdkH/B3FqLQAAOgAAIAIgASAWIBBrQRJ2Qf8HcWotAAA6AAkgAiABIAdB09AAbCALQc8lbCILIA4gCGsgBkEMdGsiCGprIg4gEiARQdz0fmxqIhAgCUGEZGwgBWoiEWoiEmpBEnZB/wdxai0AADoAASACIAEgEiAOa0ESdkH/B3FqLQAAOgAIIAIgASAHIAYgDWprQQ10IgYgCUG+pX9sIAVqIgVqQRJ2Qf8HcWotAAA6AAIgAiABIAUgBmtBEnZB/wdxai0AADoAByACIAEgCCAHQYwpbCALa2oiBiARIBBrIgVqQRJ2Qf8HcWotAAA6AAMgAiABIAUgBmtBEnZB/wdxai0AADoABiACIAEgB0GUDmwgDGsgE2oiByAVIBRrIgZqQRJ2Qf8HcWotAAA6AAQgAiABIAYgB2tBEnZB/wdxai0AADoABSAAQSBqIQAgCkEBaiIKQQVHDQALIA9BoAFqJAALlAcBFH8jAEHAAWsiECQAIAAoAtACIQkgASgCVCEAIBAhAQNAIAAoAkAhDCACLgEgIQ0gASACLgEAIAAoAgBsQQ10QYAIciIGIAAoAoABIAIuAUBsIg5BvqV/bGpBC3UiDyAAKAIgIAIuARBsIgcgACgCYCACLgEwbCIIIAAoAqABIAIuAVBsIgVqa0ECdCILazYCgAEgASALIA9qNgIgIAEgDCANbEGxzgBsIgwgDkGhLWwgBmoiDWoiBiAFIAdqQbYXbCIOIAcgCGpBDXRqIgdrQQt1NgKgASABIAYgB2pBC3U2AgAgASANIAxrIgcgDiAFIAhrQQ10aiIIa0ELdTYCYCABIAcgCGpBC3U2AkAgAUEEaiEBIABBBGohACACQQJqIQIgCkEBaiIKQQhHDQALIAlBgANrIQAgECEBQQAhBwNAIAMgB0ECdGooAgAgBGoiAiAAIAEoAgwiDEHP0wBsIg4gASgCBCIIQfcRbGogASgCFCIFIAhqIgkgASgCHCIKakGNN2wiDSAJQdsQbGoiD2oiCyABKAIYIhFBDXQiEiABKAIIIgZBttcAbGoiFCABKAIAQQ10QYCAiMAAaiIJIAEoAhBBsc4AbCIVaiIWaiITakESdkH/B3FqLQAAOgAAIAIgACATIAtrQRJ2Qf8HcWotAAA6AAsgAiAAIAggCmsiCyAMIAVrIhNqQdEibCIXIAtB/jBsaiILIAYgEWtBDXQiESAJaiIYakESdkH/B3FqLQAAOgABIAIgACAYIAtrQRJ2Qf8HcWotAAA6AAogAiAAIA8gBSAKakGLvX9sIg8gDEGvXWwiDCAFQbChf2xqamoiBSAGQbYXbCASayIGIAkgFWsiC2oiEmpBEnZB/wdxai0AADoAAiACIAAgEiAFa0ESdkH/B3FqLQAAOgAJIAIgACAKQcblAGwgDmsgDWogD2oiBSALIAZrIgZqQRJ2Qf8HcWotAAA6AAMgAiAAIAYgBWtBEnZB/wdxai0AADoACCACIAAgFyATQd+Jf2xqIgUgCSARayIJakESdkH/B3FqLQAAOgAEIAIgACAJIAVrQRJ2Qf8HcWotAAA6AAcgAiAAIAwgCEHcVGxqIApBjIF/bGogDWoiCiAWIBRrIghqQRJ2Qf8HcWotAAA6AAUgAiAAIAggCmtBEnZB/wdxai0AADoABiABQSBqIQEgB0EBaiIHQQZHDQALIBBBwAFqJAAL5wgBFH8jAEHgAWsiEyQAIAAoAtACIQwgASgCVCEAIBMhAQNAIAAoAqABIQcgAi4BUCEJIAAoAiAhDSACLgEQIQ4gACgCYCEIIAIuATAhFCABIAIuAQAgACgCAGxBDXRBgAhyIgUgACgCgAEgAi4BQGwiBiAAKALAASACLgFgbCIKIAAoAkAgAi4BIGwiC2oiD2tBwdoAbGpBC3U2AmAgASAPQcbRAGwgBWoiDyAGIAprQbc4bCIRIApBg3tsamoiEiAHIAlsIgogDSAObCIHakGjJ2wiDSAIIBRsIgkgB2pB7ztsIg4gByAJa0HzCmwiB2tqIghrQQt1NgLAASABIAggEmpBC3U2AgAgASALIAZrQZIUbCIIIAtB8eF+bGogD2oiCyAJIApqQeGnf2wiCSANIApB3vcAbGpqIgprQQt1NgKAASABIAogC2pBC3U2AkAgASAGQZWKf2wgBWogCGogEWoiBiAHIA5qIAlqIgVrQQt1NgKgASABIAUgBmpBC3U2AiAgAUEEaiEBIABBBGohACACQQJqIQIgEEEBaiIQQQhHDQALIAxBgANrIQAgEyEBQQAhEANAIAMgEEECdGooAgAgBGoiAiAAIAEoAhwiDkENdCILIAEoAgwiBiABKAIEIgpqQbfVAGwiCCAKQfC3f2xqIAEoAhQiBSAKaiIUQdLMAGwiD2pqIhEgASgCGCIMIAEoAggiDWpB4sYAbCISIA1BvRFsaiIWIAEoAgBBDXRBgICIwABqIgcgASgCECIJQcbRAGxqIhdqIhVqQRJ2Qf8HcWotAAA6AAAgAiAAIBUgEWtBEnZB/wdxai0AADoADSACIAAgBSAGakHvdWwgC2siESAIIAZB7mRsamoiCCASIAxB/JF/bGoiEiAHIAlBkhRsaiIVaiIYakESdkH/B3FqLQAAOgABIAIgACAYIAhrQRJ2Qf8HcWotAAA6AAwgAiAAIA8gBUGJ6H5saiARaiIIIAxB4ad/bCANQaMnbGoiDCAJQclHbCAHaiINaiIPakESdkH/B3FqLQAAOgACIAIgACAPIAhrQRJ2Qf8HcWotAAA6AAsgAiAAIA4gCiAGayIIIAVrakENdCIOIAlBvqV/bCAHaiIHakESdkH/B3FqLQAAOgADIAIgACAHIA5rQRJ2Qf8HcWotAAA6AAogAiAAIBRBlDBsIgcgBSAGa0H42QBsIgkgCyAFQeaTf2xqamoiBSANIAxrIgxqQRJ2Qf8HcWotAAA6AAQgAiAAIAwgBWtBEnZB/wdxai0AADoACSACIAAgCEHyHWwgC2siBSAJIAZBmStsamoiBiAVIBJrIgtqQRJ2Qf8HcWotAAA6AAUgAiAAIAsgBmtBEnZB/wdxai0AADoACCACIAAgByAKQYu8f2xqIAVqIgYgFyAWayIFakESdkH/B3FqLQAAOgAGIAIgACAFIAZrQRJ2Qf8HcWotAAA6AAcgAUEgaiEBIBBBAWoiEEEHRw0ACyATQeABaiQAC6YLARl/IwBBgAJrIhUkACAAKALQAiERIAEoAlQhASAVIQBBCCEKA0AgAAJ/AkAgAi4BECIGIAIvASAiBXJB//8DcQ0AQQAhBSACLwEwDQAgAi8BQA0AIAIvAVANACACLwFgDQAgAi8BcA0AIAAgAi4BACABKAIAbEECdCIFNgLAASAAIAU2AqABIAAgBTYCgAEgACAFNgJgIAAgBTYCQCAAIAU2AiAgACAFNgIAQTgMAQsgACABKALAASACLgFgbCIHIAEoAkAgBUEQdEEQdWwiBWpB0SJsIgsgBUH+MGxqIhAgAi4BQCABKAKAAWxBDXQiCSACLgEAIAEoAgBsQQ10QYAIciISaiIMaiINIAEoAiAgBmwiBSABKALgASACLgFwbCIGakGzRmwiEyAFQYvgAGxqIAUgASgCoAEgAi4BUGwiCGoiDiABKAJgIAIuATBsIgUgBmoiFGpBocsAbCIWIA5BhGdsaiIOaiIPa0ELdTYC4AEgACANIA9qQQt1NgIAIAAgCyAHQd+Jf2xqIgcgEiAJayILaiIJIBYgFEG7gn9saiISIAUgCGpB/dt+bCINIAVB1MQBbGpqIgVrQQt1NgLAASAAIAUgCWpBC3U2AiAgACALIAdrIgUgDSAIQbODAWxqIA5qIghrQQt1NgKgASAAIAUgCGpBC3U2AkAgACATIAZBjhNsaiASaiIFIAwgEGsiBmpBC3U2AmAgBiAFa0ELdSEFQSALQQJ0aiAFNgIAIAJBAmohAiABQQRqIQEgAEEEaiEAIApBAUshBSAKQQFrIQogBQ0ACyARQYADayEAIBUhAUEAIREDQCADIBFBAnRqKAIAIARqIgIgACABKAIMIgUgASgCBCIKakHO1gBsIgkgCkHW7X5saiABKAIUIgYgCmoiEkHpzwBsIgxqIAEoAhwiCCAKakH8xQBsIg1qIhMgASgCCCILIAEoAhgiEGsiDkHj2ABsIhQgEEGDpAFsaiIWIAEoAgBBDXRBgICIwABqIgcgASgCECIPQc/TAGwiGGoiGWoiF2pBEnZB/wdxai0AADoAACACIAAgFyATa0ESdkH/B3FqLQAAOgAPIAIgACAFIAhqIhNBq1VsIhcgBSAGakHwCGwiGiAJIAVBzQRsampqIgkgDkHUEWwiDiALQc05bGoiGyAHIA9B0SJsIg9qIhxqIh1qQRJ2Qf8HcWotAAA6AAEgAiAAIB0gCWtBEnZB/wdxai0AADoADiACIAAgBiAIakGyqX9sIgkgGiAGQfq3f2xqIAxqaiIMIBQgC0HCWWxqIgsgByAPayIUaiIPakESdkH/B3FqLQAAOgACIAIgACAPIAxrQRJ2Qf8HcWotAAA6AA0gAiAAIBcgCEGYxABsaiANaiAJaiIJIA4gEEGwX2xqIhAgByAYayIHaiIMakESdkH/B3FqLQAAOgADIAIgACAMIAlrQRJ2Qf8HcWotAAA6AAwgAiAAIAggBmtBoxpsIgkgCiAIa0G2OWwiDCATQZewf2wiDSAIQYXJAWxqamoiCCAHIBBrIgdqQRJ2Qf8HcWotAAA6AAQgAiAAIAcgCGtBEnZB/wdxai0AADoACyACIAAgEkHVKmwiCCAGIAVrQYnaAGwiByAGQfpObGpqIAlqIgYgFCALayILakESdkH/B3FqLQAAOgAFIAIgACALIAZrQRJ2Qf8HcWotAAA6AAogAiAAIAogBWtBoxpsIgYgBUGa/gBsaiAHaiANaiIFIBwgG2siB2pBEnZB/wdxai0AADoABiACIAAgByAFa0ESdkH/B3FqLQAAOgAJIAIgACAGIApBwop/bGogCGogDGoiBSAZIBZrIgpqQRJ2Qf8HcWotAAA6AAcgAiAAIAogBWtBEnZB/wdxai0AADoACCABQSBqIQEgEUEBaiIRQQhHDQALIBVBgAJqJAALvgwBGn8jAEGABGsiGSQAIAAoAtACIQ0gASgCVCEBIBkhAANAIAAgASgCQCACLgEgbCIKIAEoAsABIAIuAWBsIg5rIhFB49gAbCIPIA5Bg6QBbGoiEiABKAKAASACLgFAbCILQc/TAGwiEyACLgEAIAEoAgBsQQ10QYAIciIMaiIUaiIVIAEoAmAgAi4BMGwiBiABKAIgIAIuARBsIghqQc7WAGwiECAIQdbtfmxqIAEoAqABIAIuAVBsIgcgCGoiGkHpzwBsIhZqIAEoAuABIAIuAXBsIgUgCGpB/MUAbCIXaiIYa0ELdTYC4AMgACAVIBhqQQt1NgIAIAAgEUHUEWwiESAKQc05bGoiFSALQdEibCILIAxqIhhqIhsgBSAGaiIcQatVbCIdIAYgB2pB8AhsIh4gECAGQc0EbGpqaiIQa0ELdTYCwAMgACAQIBtqQQt1NgIgIAAgDyAKQcJZbGoiCiAMIAtrIg9qIgsgBSAHakGyqX9sIhAgHiAHQfq3f2xqIBZqaiIWa0ELdTYCoAMgACALIBZqQQt1NgJAIAAgESAOQbBfbGoiDiAMIBNrIgxqIhEgHSAFQZjEAGxqIBdqIBBqIgtrQQt1NgKAAyAAIAsgEWpBC3U2AmAgACAMIA5rIgwgBSAHa0GjGmwiDiAIIAVrQbY5bCIRIBxBl7B/bCILIAVBhckBbGpqaiIFa0ELdTYC4AIgACAFIAxqQQt1NgKAASAAIA8gCmsiBSAaQdUqbCIMIAcgBmtBidoAbCIKIAdB+k5samogDmoiB2tBC3U2AsACIAAgBSAHakELdTYCoAEgACAYIBVrIgcgCCAGa0GjGmwiBSAGQZr+AGxqIApqIAtqIgZrQQt1NgKgAiAAIAYgB2pBC3U2AsABIAAgFCASayIGIAUgCEHCin9saiAMaiARaiIIa0ELdTYCgAIgACAGIAhqQQt1NgLgASAAQQRqIQAgAUEEaiEBIAJBAmohAiAJQQFqIglBCEcNAAsgDUGAA2shACAZIQFBACEMA0AgAyAMQQJ0aigCACAEaiICIAAgASgCDCIGIAEoAgQiCGpBztYAbCINIAhB1u1+bGogASgCFCIHIAhqIhFB6c8AbCIPaiABKAIcIgUgCGpB/MUAbCISaiILIAEoAggiCiABKAIYIg5rIhNB49gAbCIUIA5Bg6QBbGoiFSABKAIAQQ10QYCAiMAAaiIJIAEoAhAiEEHP0wBsIhpqIhZqIhdqQRJ2Qf8HcWotAAA6AAAgAiAAIBcgC2tBEnZB/wdxai0AADoADyACIAAgBSAGaiILQatVbCIXIAYgB2pB8AhsIhggDSAGQc0EbGpqaiINIBNB1BFsIhMgCkHNOWxqIhsgCSAQQdEibCIQaiIcaiIdakESdkH/B3FqLQAAOgABIAIgACAdIA1rQRJ2Qf8HcWotAAA6AA4gAiAAIAUgB2pBsql/bCINIBggB0H6t39saiAPamoiDyAUIApBwllsaiIKIAkgEGsiFGoiEGpBEnZB/wdxai0AADoAAiACIAAgECAPa0ESdkH/B3FqLQAAOgANIAIgACAXIAVBmMQAbGogEmogDWoiDSATIA5BsF9saiIOIAkgGmsiCWoiD2pBEnZB/wdxai0AADoAAyACIAAgDyANa0ESdkH/B3FqLQAAOgAMIAIgACAFIAdrQaMabCINIAggBWtBtjlsIg8gC0GXsH9sIhIgBUGFyQFsampqIgUgCSAOayIJakESdkH/B3FqLQAAOgAEIAIgACAJIAVrQRJ2Qf8HcWotAAA6AAsgAiAAIBFB1SpsIgUgByAGa0GJ2gBsIgkgB0H6TmxqaiANaiIHIBQgCmsiCmpBEnZB/wdxai0AADoABSACIAAgCiAHa0ESdkH/B3FqLQAAOgAKIAIgACAIIAZrQaMabCIHIAZBmv4AbGogCWogEmoiBiAcIBtrIglqQRJ2Qf8HcWotAAA6AAYgAiAAIAkgBmtBEnZB/wdxai0AADoACSACIAAgByAIQcKKf2xqIAVqIA9qIgYgFiAVayIIakESdkH/B3FqLQAAOgAHIAIgACAIIAZrQRJ2Qf8HcWotAAA6AAggAUEgaiEBIAxBAWoiDEEQRw0ACyAZQYAEaiQAC6cLARh/IwBB4ANrIhgkACAAKALQAiEUIAEoAlQhASAYIQADQCABKAKgASEFIAIuAVAhCCABKAIgIRAgAi4BECEKIAEoAuABIQcgAi4BcCELIAEoAmAhFSACLgEwIQwgACACLgEAIAEoAgBsQQ10QYAIciIPIAEoAsABIAIuAWBsIg1BvqV/bGoiEiABKAJAIAIuASBsIgkgASgCgAEgAi4BQGwiDmsiBkHApX9sakELdTYC4AEgACANQZ3JAGwgD2oiEyAGQfYCbCIWIAkgDmoiDkHO1QBsIhlqaiIXIAcgC2wiB0GjnQFsIAwgFWwiC0H2qX9sIhVrIAUgCGxBsc4AbCIIIAogEGwiBSAHayIQQYLaAGxqIgpqIgxrQQt1NgLAAyAAIAwgF2pBC3U2AgAgACANQYRkbCAPaiIPIAZB0BZsIg0gDkHMMmwiDGpqIhcgCyAHayIaIAVqQZo1bCIbIAVB8SBsaiIca0ELdTYCoAMgACAXIBxqQQt1NgIgIAAgEiAGQaAtbGoiEiAQQbHOAGwgCGsiEGtBC3U2AoADIAAgECASakELdTYCQCAAIAZBuWZsIgYgDkGCI2wiDmsgE2oiECAFIAdqQegkbCISIAggFWogB0GvSGxqaiIHa0ELdTYCoAIgACAHIBBqQQt1NgKgASAAIAlBk9wAbCIHIBlrIBZqIA9qIgkgC0HmSmwiCyAFQbkebGogCGsgEmoiCGtBC3U2AuACIAAgCCAJakELdTYCYCAAIBMgDGsgDWoiCCAbIBpB3PR+bGoiDWtBC3U2AsACIAAgCCANakELdTYCgAEgACAOIAdrIAZqIA9qIgYgCyAFQee4f2xqIApqIgVrQQt1NgKAAiAAIAUgBmpBC3U2AsABIABBBGohACABQQRqIQEgAkECaiECIBFBAWoiEUEIRw0ACyAUQYADayEAIBghAUEAIQgDQCADIAhBAnRqKAIAIARqIgIgACABKAIcIgZBo50BbCABKAIMIg9B9ql/bCIQayABKAIUQbHOAGwiESABKAIEIgUgBmsiCkGC2gBsaiIVaiIUIAEoAgBBDXRBgICIwABqIg0gASgCGCIJQZ3JAGxqIhMgASgCCCIOIAEoAhAiC2siB0H2AmwiDCALIA5qIgtBztUAbCISamoiFmpBEnZB/wdxai0AADoAACACIAAgFiAUa0ESdkH/B3FqLQAAOgAOIAIgACAFIA8gBmsiFmpBmjVsIhkgBUHxIGxqIhcgCUGEZGwgDWoiFCAHQdAWbCIaIAtBzDJsIhtqaiIcakESdkH/B3FqLQAAOgABIAIgACAcIBdrQRJ2Qf8HcWotAAA6AA0gAiAAIApBsc4AbCARayIKIAlBvqV/bCANaiINIAdBoC1saiIJakESdkH/B3FqLQAAOgACIAIgACAJIAprQRJ2Qf8HcWotAAA6AAwgAiAAIAUgBmpB6CRsIgkgD0HmSmwiDyAFQbkebGogEWtqIgogDkGT3ABsIg4gEmsgDGogFGoiDGpBEnZB/wdxai0AADoAAyACIAAgDCAKa0ESdkH/B3FqLQAAOgALIAIgACAZIBZB3PR+bGoiCiATIBtrIBpqIgxqQRJ2Qf8HcWotAAA6AAQgAiAAIAwgCmtBEnZB/wdxai0AADoACiACIAAgECARaiAGQa9IbGogCWoiBiAHQblmbCIRIAtBgiNsIglrIBNqIhNqQRJ2Qf8HcWotAAA6AAUgAiAAIBMgBmtBEnZB/wdxai0AADoACSACIAAgDyAFQee4f2xqIBVqIgUgCSAOayARaiAUaiIGakESdkH/B3FqLQAAOgAGIAIgACAGIAVrQRJ2Qf8HcWotAAA6AAggAiAAIA0gB0HApf//AGxqQRJ2Qf8HcWotAAA6AAcgAUEgaiEBIAhBAWoiCEEPRw0ACyAYQeADaiQAC8cKARV/IwBBwANrIhYkACAAKALQAiEUIAEoAlQhASAWIQADQCABKALAASEHIAIuAWAhCCABKAJAIQogAi4BICEJIAAgAi4BACABKAIAbEENdEGACHIiDSABKAKAASACLgFAbCILQb6lf2xqQQt1IhEgASgC4AEgAi4BcGwiDiABKAIgIAIuARBsIgwgASgCYCACLgEwbCIFayISIAEoAqABIAIuAVBsIgZrakECdCIPazYCwAIgACAPIBFqNgJgIAAgByAIbCIIIAkgCmwiCmpB4sYAbCIJIAhB/JF/bGoiESALQZIUbCANaiIPaiIVIAUgBmpB73VsIA5BDXQiB2siDiAFIAxqQbfVAGwiFyAFQe5kbGpqIhNrQQt1NgKAAyAAIBMgFWpBC3U2AiAgACAIQeGnf2wgCkGjJ2xqIgggC0HJR2wgDWoiFWoiEyAOIAYgDGoiDkHSzABsIhggBkGJ6H5samoiGWtBC3U2AuACIAAgEyAZakELdTYCQCAAIA8gEWsiESASQfIdbCAHayISIAYgBWtB+NkAbCIPIAVBmStsamoiBWtBC3U2AoACIAAgBSARakELdTYCoAEgACALQcbRAGwgDWoiBSAJIApBvRFsaiINayILIA5BlDBsIgogDEGLvH9saiASaiIJa0ELdTYC4AEgACAJIAtqQQt1NgLAASAAIAUgDWoiBSAXIAxB8Ld/bGogGGogB2oiDGtBC3U2AqADIAAgBSAMakELdTYCACAAIBUgCGsiBSAPIAZB5pN/bGogCmogB2oiBmtBC3U2AqACIAAgBSAGakELdTYCgAEgAEEEaiEAIAFBBGohASACQQJqIQIgEEEBaiIQQQhHDQALIBRBgANrIQAgFiEBQQAhDQNAIAMgDUECdGooAgAgBGoiAiAAIAEoAhwiFEENdCILIAEoAgwiBSABKAIEIgxqQbfVAGwiCSAMQfC3f2xqIAEoAhQiBiAMaiIRQdLMAGwiDmpqIhIgASgCGCIIIAEoAggiCmpB4sYAbCIPIApBvRFsaiIVIAEoAgBBDXRBgICIwABqIgcgASgCECIQQcbRAGxqIhdqIhNqQRJ2Qf8HcWotAAA6AAAgAiAAIBMgEmtBEnZB/wdxai0AADoADSACIAAgBSAGakHvdWwgC2siEiAJIAVB7mRsamoiCSAPIAhB/JF/bGoiDyAHIBBBkhRsaiITaiIYakESdkH/B3FqLQAAOgABIAIgACAYIAlrQRJ2Qf8HcWotAAA6AAwgAiAAIA4gBkGJ6H5saiASaiIJIAhB4ad/bCAKQaMnbGoiCCAQQclHbCAHaiIKaiIOakESdkH/B3FqLQAAOgACIAIgACAOIAlrQRJ2Qf8HcWotAAA6AAsgAiAAIBQgDCAFayIJIAZrakENdCIUIBBBvqV/bCAHaiIHakESdkH/B3FqLQAAOgADIAIgACAHIBRrQRJ2Qf8HcWotAAA6AAogAiAAIBFBlDBsIgcgBiAFa0H42QBsIhAgCyAGQeaTf2xqamoiBiAKIAhrIghqQRJ2Qf8HcWotAAA6AAQgAiAAIAggBmtBEnZB/wdxai0AADoACSACIAAgCUHyHWwgC2siBiAQIAVBmStsamoiBSATIA9rIgtqQRJ2Qf8HcWotAAA6AAUgAiAAIAsgBWtBEnZB/wdxai0AADoACCACIAAgByAMQYu8f2xqIAZqIgUgFyAVayIGakESdkH/B3FqLQAAOgAGIAIgACAGIAVrQRJ2Qf8HcWotAAA6AAcgAUEgaiEBIA1BAWoiDUEORw0ACyAWQcADaiQAC/8KARZ/IwBBoANrIhYkACAAKALQAiEJIAEoAlQhASAWIQADQCABKALgASEKIAIuAXAhECABKAJgIQUgAi4BMCEGIAEoAqABIREgAi4BUCETIAEoAiAhCCACLgEQIQsgACACLgEAIAEoAgBsQQ10QYAIciIMIAEoAoABIAIuAUBsIg0gASgCwAEgAi4BYGwiDmsiDyABKAJAIAIuASBsIgdrQcHaAGxqQQt1NgLAASAAIA9BmQZsIAxqIhcgDSAOaiINQfnJAGwiDiAHQfHXAGxqaiIUIAUgBmwiBSAIIAtsIghqQdDUAGwiCyAIQdv+fmxqIBEgE2wiBiAIakG+ygBsIhFqIAogEGwiCiAIaiIQQYI8bCITaiIVa0ELdTYCgAMgACAUIBVqQQt1NgIAIAAgD0GVH2wgDGoiFCAHQeDDAGwgDUGgFGwiFWtqIhggBSAKakHCtX9sIhkgBSAGakGramwiGiALIAVByzVsampqIgtrQQt1NgLgAiAAIAsgGGpBC3U2AiAgACAHQYwgbCAOayAXaiILIAYgCmpB+FVsIg4gGiAGQbGbf2xqIBFqaiIRa0ELdTYCwAIgACALIBFqQQt1NgJAIAAgD0GCRGwgDGoiDCAHQYx1bCANQfIbbCIPa2oiDSAZIApBlI0BbGogE2ogDmoiEWtBC3U2AqACIAAgDSARakELdTYCYCAAIA8gB0HLTGxqIAxqIgwgEEHVFWwgBiAFa0GCPGxqIg8gCEGzFGxqIAVBlmJsaiIFa0ELdTYCgAIgACAFIAxqQQt1NgKAASAAIBUgB0Hur39saiAUaiIHIA8gBkHOGGxqIApBv5B/bGoiBWtBC3U2AuABIAAgBSAHakELdTYCoAEgAEEEaiEAIAFBBGohASACQQJqIQIgEkEBaiISQQhHDQALIAlBgANrIQAgFiEBQQAhDANAIAMgDEECdGooAgAgBGoiAiAAIAEoAgwiBSABKAIEIghqQdDUAGwiCSAIQdv+fmxqIAEoAhQiBiAIakG+ygBsIhBqIAEoAhwiCiAIaiIRQYI8bCITaiILIAEoAhgiEiABKAIQIg5qIg1B+ckAbCIXIAEoAggiB0Hx1wBsaiABKAIAQQ10QYCAiMAAaiIPIA4gEmsiEkGZBmxqIg5qIhRqQRJ2Qf8HcWotAAA6AAAgAiAAIBQgC2tBEnZB/wdxai0AADoADCACIAAgBSAKakHCtX9sIgsgBSAGakGramwiFCAJIAVByzVsampqIgkgEkGVH2wgD2oiFSAHQeDDAGwgDUGgFGwiGGtqIhlqQRJ2Qf8HcWotAAA6AAEgAiAAIBkgCWtBEnZB/wdxai0AADoACyACIAAgBiAKakH4VWwiCSAUIAZBsZt/bGogEGpqIhAgB0GMIGwgF2sgDmoiDmpBEnZB/wdxai0AADoAAiACIAAgDiAQa0ESdkH/B3FqLQAAOgAKIAIgACALIApBlI0BbGogE2ogCWoiCSASQYJEbCAPaiIQIAdBjHVsIA1B8htsIg1raiITakESdkH/B3FqLQAAOgADIAIgACATIAlrQRJ2Qf8HcWotAAA6AAkgAiAAIBFB1RVsIAYgBWtBgjxsaiIJIAhBsxRsaiAFQZZibGoiBSANIAdBy0xsaiAQaiIIakESdkH/B3FqLQAAOgAEIAIgACAIIAVrQRJ2Qf8HcWotAAA6AAggAiAAIAkgBkHOGGxqIApBv5B/bGoiBSAYIAdB7q9/bGogFWoiBmpBEnZB/wdxai0AADoABSACIAAgBiAFa0ESdkH/B3FqLQAAOgAHIAIgACASIAdrQcHaAGwgD2pBEnZB/wdxai0AADoABiABQSBqIQEgDEEBaiIMQQ1HDQALIBZBoANqJAALmAkBFH8jAEGAA2siFSQAIAAoAtACIRYgASgCVCEBIBUhAANAIAEoAoABIQggAi4BQCEOIAAgASgCQCACLgEgbCIPIAEoAsABIAIuAWBsIglrQQ10IgogAi4BACABKAIAbEENdEGACHIiC2oiDCABKAIgIAIuARBsIgYgASgC4AEgAi4BcGwiB2siECABKAJgIAIuATBsIhEgASgCoAEgAi4BUGwiBWsiEmpB0SJsIhMgEEH+MGxqIhBrQQt1NgLAAiAAIAwgEGpBC3U2AiAgACALIAprIgogEyASQd+Jf2xqIgxrQQt1NgLgASAAIAogDGpBC3U2AoABIAAgCCAObEGxzgBsIg4gC2oiCiAJQQ10IgkgD0G21wBsaiIMayIQIAcgBSAGaiISakGNN2wiCCARQa9dbCITIAZB3FRsaiAHQYyBf2xqaiIUa0ELdTYCwAEgACAQIBRqQQt1NgKgASAAIAogDGoiCiAIIBJB2xBsaiIMIBFBz9MAbCIRIAZB9xFsamoiBmtBC3U2AuACIAAgBiAKakELdTYCACAAIA9BthdsIAlrIgYgCyAOayILaiIPIAUgB2pBi71/bCIOIAVBsKF/bCATamogDGoiBWtBC3U2AqACIAAgBSAPakELdTYCQCAAIAsgBmsiCyAHQcblAGwgEWsgCGogDmoiB2tBC3U2AoACIAAgByALakELdTYCYCAAQQRqIQAgAUEEaiEBIAJBAmohAiANQQFqIg1BCEcNAAsgFkGAA2shACAVIQFBACELA0AgAyALQQJ0aigCACAEaiICIAAgASgCDCIPQc/TAGwiFiABKAIEIgZB9xFsaiABKAIUIgUgBmoiDSABKAIcIgdqQY03bCIRIA1B2xBsaiIOaiIJIAEoAhgiCkENdCIMIAEoAggiCEG21wBsaiIQIAEoAgBBDXRBgICIwABqIg0gASgCEEGxzgBsIhJqIhNqIhRqQRJ2Qf8HcWotAAA6AAAgAiAAIBQgCWtBEnZB/wdxai0AADoACyACIAAgBiAHayIJIA8gBWsiFGpB0SJsIhcgCUH+MGxqIgkgCCAKa0ENdCIKIA1qIhhqQRJ2Qf8HcWotAAA6AAEgAiAAIBggCWtBEnZB/wdxai0AADoACiACIAAgDiAFIAdqQYu9f2wiDiAPQa9dbCIPIAVBsKF/bGpqaiIFIAhBthdsIAxrIgggDSASayIJaiIMakESdkH/B3FqLQAAOgACIAIgACAMIAVrQRJ2Qf8HcWotAAA6AAkgAiAAIAdBxuUAbCAWayARaiAOaiIFIAkgCGsiCGpBEnZB/wdxai0AADoAAyACIAAgCCAFa0ESdkH/B3FqLQAAOgAIIAIgACAXIBRB34l/bGoiBSANIAprIg1qQRJ2Qf8HcWotAAA6AAQgAiAAIA0gBWtBEnZB/wdxai0AADoAByACIAAgDyAGQdxUbGogB0GMgX9saiARaiIHIBMgEGsiBmpBEnZB/wdxai0AADoABSACIAAgBiAHa0ESdkH/B3FqLQAAOgAGIAFBIGohASALQQFqIgtBDEcNAAsgFUGAA2okAAvnCQEUfyMAQeACayIWJAAgACgC0AIhESABKAJUIQEgFiEAA0AgASgC4AEhBSACLgFwIQ0gASgCYCEGIAIuATAhCCABKAKgASEOIAIuAVAhDyABKAIgIQkgAi4BECEQIAAgAi4BACABKAIAbEENdEGACHIiCyABKALAASACLgFgbCIMIAEoAkAgAi4BIGwiB2oiFyABKAKAASACLgFAbCIKayITQb+lf2xqQQt1NgKgASAAIBNB7NYAbCALaiILIAogDGtB/qIBbGoiEyAMQbWHAWxqIhQgBiAIbCIGIAkgEGwiCWoiEEHqOGwiFSAJQfZEbGogDiAPbCIIIAlqQfQqbCIOaiAFIA1sIgUgCCAQampBwBlsIg0gBSAJakG4F2xqIglqIg9rQQt1NgLAAiAAIA8gFGpBC3U2AgAgACALIBdBhbZ/bGoiDyAMQcNNbGoiDCANIAYgCGpBybV/bGoiECAOIAhB2rN/bGpqIg5rQQt1NgKAAiAAIAwgDmpBC3U2AkAgACALIAogB2tByRtsIgxqIAdBkZ9/bGoiCyAJIAUgBmpB9Yx/bCIJIAVBx4YBbGpqIg5rQQt1NgLgASAAIAsgDmpBC3U2AmAgACAKQbn8AGwgB0H9pn9saiAPaiIHIAhBi8AAbCAGQY2if2xqIAVBlpR/bGogDWoiCGtBC3U2AsABIAAgByAIakELdTYCgAEgACATIApBtIt/bGogDGoiCiAVIAZB2IQBbGogCWogEGoiBmtBC3U2AqACIAAgBiAKakELdTYCICAAQQRqIQAgAUEEaiEBIAJBAmohAiASQQFqIhJBCEcNAAsgEUGAA2shACAWIQFBACEMA0AgAyAMQQJ0aigCACAEaiICIAAgASgCDCIKIAEoAgQiBWoiB0HqOGwiDSAFQfZEbGogASgCFCIGIAVqQfQqbCIRaiABKAIcIgggBiAHampBwBlsIhIgBSAIakG4F2xqIg5qIg8gASgCAEENdEGAgIjAAGoiECABKAIYIgcgASgCCCIJaiIXIAEoAhAiBWsiE0Hs1gBsaiILIAUgB2tB/qIBbGoiFCAHQbWHAWxqIhVqQRJ2Qf8HcWotAAA6AAAgAiAAIBUgD2tBEnZB/wdxai0AADoACiACIAAgEiAGIApqQcm1f2xqIg8gCCAKakH1jH9sIhUgDSAKQdiEAWxqamoiDSAFIAlrQckbbCIYIBQgBUG0i39samoiFGpBEnZB/wdxai0AADoAASACIAAgFCANa0ESdkH/B3FqLQAAOgAJIAIgACARIAZB2rN/bGogD2oiDSALIBdBhbZ/bGoiESAHQcNNbGoiB2pBEnZB/wdxai0AADoAAiACIAAgByANa0ESdkH/B3FqLQAAOgAIIAIgACAVIAhBx4YBbGogDmoiByALIBhqIAlBkZ9/bGoiC2pBEnZB/wdxai0AADoAAyACIAAgCyAHa0ESdkH/B3FqLQAAOgAHIAIgACAGQYvAAGwgCkGNon9saiAIQZaUf2xqIBJqIgogBUG5/ABsIAlB/aZ/bGogEWoiBmpBEnZB/wdxai0AADoABCACIAAgBiAKa0ESdkH/B3FqLQAAOgAGIAIgACATQb+l//8AbCAQakESdkH/B3FqLQAAOgAFIAFBIGohASAMQQFqIgxBC0cNAAsgFkHgAmokAAuHCAESfyMAQcACayIUJAAgACgC0AIhESABKAJUIQEgFCEAA0AgASgCwAEhCiACLgFgIQcgASgCQCELIAIuASAhCSAAIAIuAQAgASgCAGxBDXRBgAhyIgUgASgCgAEgAi4BQGwiBkG+pX9sakELdSISIAEoAiAgAi4BEGwiCCABKAKgASACLgFQbCIMIAEoAmAgAi4BMGwiDSABKALgASACLgFwbCIOayIPamtBAnQiE2s2AuABIAAgEiATajYCQCAAIAcgCmwiCiAJIAtsIgdqQZo1bCILIAdB8SBsaiIHIAZBnckAbCAFaiIJaiISIA9B4xNsIhMgDEENdCIMaiIVIA0gDmoiDUHvPGwiDiAIQbPZAGxqaiIWa0ELdTYCoAIgACASIBZqQQt1NgIAIAAgCSAHayIHIAhBlA5sIA5rIBVqIglrQQt1NgKgASAAIAcgCWpBC3U2AoABIAAgBkGEZGwgBWoiBSALIApB3PR+bGoiBmsiCiAMIBNrIA9BDHRrIg8gCEGMKWwgDUHPJWwiB2tqIgtrQQt1NgLAASAAIAogC2pBC3U2AmAgACAFIAZqIgUgCEHT0ABsIAcgD2prIghrQQt1NgKAAiAAIAUgCGpBC3U2AiAgAEEEaiEAIAFBBGohASACQQJqIQIgEEEBaiIQQQhHDQALIBFBgANrIQAgFCECQQAhEANAIAMgEEECdGooAgAgBGoiASAAIAIoAhwiBSACKAIMIgZqIhFB7zxsIgogAigCBCIIQbPZAGxqIAYgBWsiBUHjE2wiByACKAIUIgtBDXQiCWoiEmoiDCACKAIYIg0gAigCCCIGakGaNWwiDiAGQfEgbGoiEyACKAIAQQ10QYCAiMAAaiIGIAIoAhAiD0GdyQBsaiIVaiIWakESdkH/B3FqLQAAOgAAIAEgACAWIAxrQRJ2Qf8HcWotAAA6AAkgASAAIAhB09AAbCARQc8lbCIRIAkgB2sgBUEMdGsiB2prIgkgDiANQdz0fmxqIgwgD0GEZGwgBmoiDWoiDmpBEnZB/wdxai0AADoAASABIAAgDiAJa0ESdkH/B3FqLQAAOgAIIAEgACAIIAUgC2prQQ10IgUgD0G+pX9sIAZqIgZqQRJ2Qf8HcWotAAA6AAIgASAAIAYgBWtBEnZB/wdxai0AADoAByABIAAgByAIQYwpbCARa2oiBSANIAxrIgZqQRJ2Qf8HcWotAAA6AAMgASAAIAYgBWtBEnZB/wdxai0AADoABiABIAAgCEGUDmwgCmsgEmoiCCAVIBNrIgVqQRJ2Qf8HcWotAAA6AAQgASAAIAUgCGtBEnZB/wdxai0AADoABSACQSBqIQIgEEEBaiIQQQpHDQALIBRBwAJqJAALtwcBE38jAEGgAmsiEiQAIAAoAtACIQwgASgCVCEBIBIhAANAIAEoAmAhCiACLgEwIQggASgCoAEhBiACLgFQIQ4gASgC4AEhDyACLgFwIQkgASgCICEQIAIuARAhEyAAIAIuAQAgASgCAGxBDXRBgAhyIgsgASgCwAEgAi4BYGwiEUG+pX9saiIUIAEoAkAgAi4BIGwiByABKAKAASACLgFAbCIFayIVQb6lf2xqQQt1NgKAASAAIBFBoS1sIAtqIgsgBSAHakGH1QBsIhEgBUHcD2wiFmtqIhcgBiAObCIFIBAgE2wiBmpBlzpsIg4gCCAKbEHPsX9sIgprIAkgD2wiCCAGakH6HmwiD2oiCWtBC3U2AoACIAAgCSAXakELdTYCACAAIBQgFUGhLWxqIgkgBiAFIAhqa0GxzgBsIgZrQQt1NgLgASAAIAYgCWpBC3U2AiAgACAHQavFAGwiByALIBFraiIGIAogBSAIa0GR2QBsIgVrIA5qIghrQQt1NgLAASAAIAYgCGpBC3U2AkAgACALIAdrIBZqIgcgBSAKaiAPaiIFa0ELdTYCoAEgACAFIAdqQQt1NgJgIABBBGohACABQQRqIQEgAkECaiECIA1BAWoiDUEIRw0ACyAMQYADayEBIBIhAEEAIQ0DQCADIA1BAnRqKAIAIARqIgIgASAAKAIUIgcgACgCBCIFakGXOmwiDiAAKAIMQc+xf2wiC2sgACgCHCIGIAVqQfoebCIPaiIJIAAoAgBBDXRBgICIwABqIhAgACgCGCITQaEtbGoiCiAAKAIQIgggACgCCCIMakGH1QBsIhEgCEHcD2wiFGtqIhVqQRJ2Qf8HcWotAAA6AAAgAiABIBUgCWtBEnZB/wdxai0AADoACCACIAEgBSAGIAdqa0GxzgBsIgUgE0G+pX9sIBBqIgkgDCAIayIIQaEtbGoiEGpBEnZB/wdxai0AADoAASACIAEgECAFa0ESdkH/B3FqLQAAOgAHIAIgASALIAcgBmtBkdkAbCIHayAOaiIFIAxBq8UAbCIGIAogEWtqIgxqQRJ2Qf8HcWotAAA6AAIgAiABIAwgBWtBEnZB/wdxai0AADoABiACIAEgByALaiAPaiIHIAogBmsgFGoiBWpBEnZB/wdxai0AADoAAyACIAEgBSAHa0ESdkH/B3FqLQAAOgAFIAIgASAJIAhBvqX//wBsakESdkH/B3FqLQAAOgAEIABBIGohACANQQFqIg1BCUcNAAsgEkGgAmokAAs0ACADKAIAIARqIAAoAtACIAEoAlQoAgAgAi8BAGxBhCBqQQN2Qf8HcWpBgANrLQAAOgAAC8MBAQV/IAMoAgAgBGoiBSAAKALQAkGAA2siACABKAJUIgEoAiQgAi8BEmwiBiABKAIEIAIvAQJsIgdqIgggASgCICACLwEQbCIJIAEoAgAgAi8BAGxBhCBqIgFqIgJqQQN2Qf8HcWotAAA6AAAgBSAAIAIgCGtBA3ZB/wdxai0AADoAASADKAIEIARqIgIgACAHIAZrIgMgASAJayIBakEDdkH/B3FqLQAAOgAAIAIgACABIANrQQN2Qf8HcWotAAA6AAEL1QQBD38gAygCACAEaiIFIAAoAtACQYADayIAIAIuARAgASgCVCIBKAIgbEGxzgBsIgggAi4BACABKAIAbEENdEGACHIiBiABKAJAIAIuASBsIgdBoS1saiIJakECdEGAQHFBgICIwABqIgogAi4BFCABKAIobEGxzgBsIgsgAi4BBCABKAIIbEENdEGACHIiDCABKAJIIAIuASRsIg1BoS1saiIOakELdSIPQaEtbGoiECACLgESIAEoAiRsQbHOAGwiESACLgECIAEoAgRsQQ10QYAIciISIAEoAkQgAi4BImwiAkGhLWxqIhNqQQt1QbHOAGwiAWpBEnZB/wdxai0AADoAACAFIAAgECABa0ESdkH/B3FqLQAAOgACIAUgACAPQb6l//8AbCAKakESdkH/B3FqLQAAOgABIAMoAgQgBGoiASAAIAdBvqX//wNsIAZqQQJ0QYBAcUGAgIjAAGoiBSANQb6lf2wgDGpBC3UiBkGhLWxqIgcgAkG+pX9sIBJqQQt1QbHOAGwiAmpBEnZB/wdxai0AADoAACABIAAgByACa0ESdkH/B3FqLQAAOgACIAEgACAGQb6l//8AbCAFakESdkH/B3FqLQAAOgABIAMoAgggBGoiASAAIAkgCGtBAnRBgEBxQYCAiMAAaiICIA4gC2tBC3UiA0GhLWxqIgQgEyARa0ELdUGxzgBsIgVqQRJ2Qf8HcWotAAA6AAAgASAAIAQgBWtBEnZB/wdxai0AADoAAiABIAAgA0G+pf//AGwgAmpBEnZB/wdxai0AADoAAQuTBgEHfyAAKALQAiELIwBBQGoiACABKAJUIgEoAkAgAi4BIGwiBiABKAIAIAIuAQBsIgVqQQJ0IgggASgCYCACLgEwbCIJIAEoAiAgAi4BEGwiB2pB0SJsQYAIaiIKIAdB/jBsakELdSIHazYCMCAAIAcgCGo2AgAgACAFIAZrQQJ0IgYgCiAJQd+Jf2xqQQt1IgVrNgIgIAAgBSAGajYCECAAIAEoAkQgAi4BImwiBiABKAIEIAIuAQJsIgVqQQJ0IgggASgCZCACLgEybCIJIAEoAiQgAi4BEmwiB2pB0SJsQYAIaiIKIAdB/jBsakELdSIHazYCNCAAIAcgCGo2AgQgACAFIAZrQQJ0IgYgCiAJQd+Jf2xqQQt1IgVrNgIkIAAgBSAGajYCFCAAIAEoAkggAi4BJGwiBiABKAIIIAIuAQRsIgVqQQJ0IgggASgCaCACLgE0bCIJIAEoAiggAi4BFGwiB2pB0SJsQYAIaiIKIAdB/jBsakELdSIHazYCOCAAIAcgCGo2AgggACAFIAZrQQJ0IgYgCiAJQd+Jf2xqQQt1IgVrNgIoIAAgBSAGajYCGCAAIAEoAkwgAi4BJmwiBiABKAIMIAIuAQZsIgVqQQJ0IgggASgCbCACLgE2bCIJIAEoAiwgAi4BFmwiAWpB0SJsQYAIaiICIAFB/jBsakELdSIBazYCPCAAIAEgCGo2AgwgACAFIAZrQQJ0IgEgAiAJQd+Jf2xqQQt1IgJrNgIsIAAgASACajYCHCALQYADayELIAAhAkEAIQEDQCADIAFBAnRqKAIAIARqIgAgCyACKAIMIgYgAigCBCIFakHRImwiCCAFQf4wbGoiBSACKAIAQZCAAWoiCSACKAIIIgdqQQ10IgpqQRJ2Qf8HcWotAAA6AAAgACALIAogBWtBEnZB/wdxai0AADoAAyAAIAsgCCAGQd+Jf2xqIgYgCSAHa0ENdCIFakESdkH/B3FqLQAAOgABIAAgCyAFIAZrQRJ2Qf8HcWotAAA6AAIgAkEQaiECIAFBAWoiAUEERw0ACwuhBAELfyAAKALQAiEGIAEoAlQhACMAQfAAayIKIQEDQCAAKAJgIQcgAi4BMCEFIAAoAiAhCCACLgEQIQsgASACLgEAIAAoAgBsQQ10QYAIciIMIAAoAkAgAi4BIGwiDSAAKAKAASACLgFAbCIOayIPQcClf2xqQQt1NgIoIAEgD0HQFmwgDGoiDCANIA5qQcwybCINaiIOIAUgB2wiByAIIAtsIgVqQZo1bCIIIAVB8SBsaiIFa0ELdTYCUCABIAUgDmpBC3U2AgAgASAMIA1rIgUgCCAHQdz0fmxqIgdrQQt1NgI8IAEgBSAHakELdTYCFCABQQRqIQEgAEEEaiEAIAJBAmohAiAJQQFqIglBBUcNAAsgBkGAA2shACAKIQJBACEJA0AgAyAJQQJ0aigCACAEaiIBIAAgAigCDCIKIAIoAgQiBmpBmjVsIgcgBkHxIGxqIgYgAigCAEENdEGAgIjAAGoiBSACKAIIIgggAigCECILayIMQdAWbGoiDSAIIAtqQcwybCIIaiILakESdkH/B3FqLQAAOgAAIAEgACALIAZrQRJ2Qf8HcWotAAA6AAQgASAAIAcgCkHc9H5saiIKIA0gCGsiBmpBEnZB/wdxai0AADoAASABIAAgBiAKa0ESdkH/B3FqLQAAOgADIAEgACAMQcCl//8AbCAFakESdkH/B3FqLQAAOgACIAJBFGohAiAJQQFqIglBBUcNAAsL6QQBDH8jAEGQAWsiDSQAIAAoAtACIQ4gASgCVCEAIA0hAQNAIAAoAkAhByACLgEgIQkgASACLgEAIAAoAgBsQQ10QYAIciIKIAAoAoABIAIuAUBsIgtBvqV/bGpBC3UiDyAAKAIgIAIuARBsIgUgACgCYCACLgEwbCIGIAAoAqABIAIuAVBsIgxqa0ECdCIQazYCYCABIA8gEGo2AhggASAHIAlsQbHOAGwiByALQaEtbCAKaiIJaiIKIAUgDGpBthdsIgsgBSAGakENdGoiBWtBC3U2AnggASAFIApqQQt1NgIAIAEgCSAHayIFIAsgDCAGa0ENdGoiBmtBC3U2AkggASAFIAZqQQt1NgIwIAFBBGohASAAQQRqIQAgAkECaiECIAhBAWoiCEEGRw0ACyAOQYADayEAIA0hAkEAIQgDQCADIAhBAnRqKAIAIARqIgEgACACKAIUIgUgAigCBCIGakG2F2wiDiACKAIMIgwgBmpBDXRqIgcgAigCAEENdEGAgIjAAGoiCSACKAIQIgpBoS1saiILIAIoAghBsc4AbCIPaiIQakESdkH/B3FqLQAAOgAAIAEgACAQIAdrQRJ2Qf8HcWotAAA6AAUgASAAIAYgBSAMamtBDXQiBiAKQb6lf2wgCWoiB2pBEnZB/wdxai0AADoAASABIAAgByAGa0ESdkH/B3FqLQAAOgAEIAEgACAOIAUgDGtBDXRqIgUgCyAPayIGakESdkH/B3FqLQAAOgACIAEgACAGIAVrQRJ2Qf8HcWotAAA6AAMgAkEYaiECIAhBAWoiCEEGRw0ACyANQZABaiQAC8MGARB/IwBB0AFrIhEkACAAKALQAiEOIAEoAlQhACARIQEDQCAAKAKgASEIIAIuAVAhCSAAKAIgIQ0gAi4BECEPIAAoAmAhCiACLgEwIRIgASACLgEAIAAoAgBsQQ10QYAIciIGIAAoAoABIAIuAUBsIgsgACgCwAEgAi4BYGwiBSAAKAJAIAIuASBsIgxqIhBrQcHaAGxqQQt1NgJUIAEgEEHG0QBsIAZqIhAgCyAFa0G3OGwiEyAFQYN7bGpqIhQgCCAJbCIFIA0gD2wiCGpBoydsIg0gCiASbCIJIAhqQe87bCIPIAggCWtB8wpsIghraiIKa0ELdTYCqAEgASAKIBRqQQt1NgIAIAEgDCALa0GSFGwiCiAMQfHhfmxqIBBqIgwgBSAJakHhp39sIgkgDSAFQd73AGxqaiIFa0ELdTYCcCABIAUgDGpBC3U2AjggASALQZWKf2wgBmogCmogE2oiCyAIIA9qIAlqIgZrQQt1NgKMASABIAYgC2pBC3U2AhwgAUEEaiEBIABBBGohACACQQJqIQIgB0EBaiIHQQdHDQALIA5BgANrIQAgESECQQAhCwNAIAMgC0ECdGooAgAgBGoiASAAIAIoAgwiBiACKAIEIgdqQe87bCIOIAcgBmtB8wpsIg1rIAIoAhQiBSAHakGjJ2wiD2oiCiACKAIQIgcgAigCGCIMa0G3OGwiEiAMQYN7bGogAigCAEENdEGAgIjAAGoiCCAMIAIoAggiCWoiDEHG0QBsaiIQaiITakESdkH/B3FqLQAAOgAAIAEgACATIAprQRJ2Qf8HcWotAAA6AAYgASAAIAUgBmpB4ad/bCIGIA0gDmpqIg4gCSAHa0GSFGwiDSAHQZWKf2wgCGpqIBJqIgpqQRJ2Qf8HcWotAAA6AAEgASAAIAogDmtBEnZB/wdxai0AADoABSABIAAgDyAFQd73AGxqIAZqIgYgDSAJQfHhfmxqIBBqIgVqQRJ2Qf8HcWotAAA6AAIgASAAIAUgBmtBEnZB/wdxai0AADoABCABIAAgByAMa0HB2gBsIAhqQRJ2Qf8HcWotAAA6AAMgAkEcaiECIAtBAWoiC0EHRw0ACyARQdABaiQAC4EJARJ/IwBBgAJrIhIkACAAKALQAiERIAEoAlQhASASIQBBCCEGA0AgAAJ/AkAgAi4BECIIIAIvASAiBXJB//8DcQ0AQQAhBSACLwEwDQAgAi8BQA0AIAIvAVANACACLwFgDQAgAi8BcA0AIAAgAi4BACABKAIAbEECdCIFNgLAASAAIAU2AqABIAAgBTYCgAEgACAFNgJgIAAgBTYCQCAAIAU2AiAgACAFNgIAQTgMAQsgACABKALAASACLgFgbCIJIAEoAkAgBUEQdEEQdWwiBWpB0SJsIg0gBUH+MGxqIg4gAi4BQCABKAKAAWxBDXQiCiACLgEAIAEoAgBsQQ10QYAIciILaiIPaiIMIAEoAiAgCGwiBSABKALgASACLgFwbCIIakGzRmwiEyAFQYvgAGxqIAUgASgCoAEgAi4BUGwiB2oiECABKAJgIAIuATBsIgUgCGoiFGpBocsAbCIVIBBBhGdsaiIQaiIWa0ELdTYC4AEgACAMIBZqQQt1NgIAIAAgDSAJQd+Jf2xqIgkgCyAKayINaiIKIBUgFEG7gn9saiILIAUgB2pB/dt+bCIMIAVB1MQBbGpqIgVrQQt1NgLAASAAIAUgCmpBC3U2AiAgACANIAlrIgUgDCAHQbODAWxqIBBqIgdrQQt1NgKgASAAIAUgB2pBC3U2AkAgACATIAhBjhNsaiALaiIFIA8gDmsiCGpBC3U2AmAgCCAFa0ELdSEFQSALQQJ0aiAFNgIAIAJBAmohAiABQQRqIQEgAEEEaiEAIAZBAUshBSAGQQFrIQYgBQ0ACyARQYADayEAIBIhAkEAIQgDQCACKAIAQZCAAWohBiADIAhBAnRqKAIAIARqIQECQAJAIAIoAgQiByACKAIIIgVyDQBBACEFIAIoAgwNACACKAIQDQAgAigCFA0AIAIoAhgNACACKAIcDQAgASAAIAZBBXZB/wdxajEAAEKBgoSIkKDAgAF+NwAADAELIAEgACACKAIcIhEgB2pBs0ZsIg0gB0GL4ABsaiACKAIMIgkgEWoiDiAHIAIoAhQiB2oiCmpBocsAbCILIApBhGdsaiIKaiIPIAIoAhgiDCAFakHRImwiEyAFQf4wbGoiBSACKAIQIhAgBmpBDXQiFGoiFWpBEnZB/wdxai0AADoAACABIAAgFSAPa0ESdkH/B3FqLQAAOgAHIAEgACALIA5Bu4J/bGoiDiAHIAlqQf3bfmwiCyAJQdTEAWxqaiIJIBMgDEHfiX9saiIPIAYgEGtBDXQiBmoiDGpBEnZB/wdxai0AADoAASABIAAgDCAJa0ESdkH/B3FqLQAAOgAGIAEgACALIAdBs4MBbGogCmoiByAGIA9rIgZqQRJ2Qf8HcWotAAA6AAIgASAAIAYgB2tBEnZB/wdxai0AADoABSABIAAgDSARQY4TbGogDmoiBiAUIAVrIgVqQRJ2Qf8HcWotAAA6AAMgASAAIAUgBmtBEnZB/wdxai0AADoABAsgAkEgaiECIAhBAWoiCEEIRw0ACyASQYACaiQAC5AIARF/IwBBgAJrIhAkACAAKALQAiEJIAEoAlQhASAQIQBBCCEHA0AgAAJ/AkAgAi4BECIFIAIvASAiBnJB//8DcQ0AQQAhBiACLwEwDQAgAi8BQA0AIAIvAVANACACLwFgDQAgAi8BcA0AIAAgASgCACACLgEAbCIGNgLAASAAIAY2AqABIAAgBjYCgAEgACAGNgJgIAAgBjYCQCAAIAY2AiAgACAGNgIAQTgMAQsgACABKALAASACLgFgbCIIIAEoAkAgBkEQdEEQdWwiC2oiBiABKAKAASACLgFAbCIKIAEoAgAgAi4BAGwiDGoiDWoiDiABKALgASACLgFwbCIPIAEoAiAgBWwiEWoiEiABKAKgASACLgFQbCITIAEoAmAgAi4BMGwiFGoiFWoiBWs2AuABIAAgBSAOajYCACAAIAsgCGtB6gJsQQh1IAZrIgggDCAKayILaiIKIBEgD2siDCATIBRrIg5qQdkDbEEIdSIPIAUgDkGdBWxBCHVqayIFazYCwAEgACAFIApqNgIgIAAgCyAIayIIIBIgFWtB6gJsQQh1IAVrIgVrNgKgASAAIAUgCGo2AkAgACAPIAxBlQJsQQh1IAVqayIFIA0gBmsiBmo2AmAgBiAFayEGQSALQQJ0aiAGNgIAIAJBAmohAiABQQRqIQEgAEEEaiEAIAdBAUshBiAHQQFrIQcgBg0ACyAJQYADayEAIBAhAkEAIQYDQCACKAIAQZCAAWohBSADIAZBAnRqKAIAIARqIQECQAJAIAIoAgQiCSACKAIIIgdyDQBBACEHIAIoAgwNACACKAIQDQAgAigCFA0AIAIoAhgNACACKAIcDQAgASAAIAVBBXZB/wdxajEAAEKBgoSIkKDAgAF+NwAADAELIAEgACACKAIcIgogCWoiDCACKAIMIg0gAigCFCIOaiIPaiIIIAIoAhgiESAHaiILIAIoAhAiEiAFaiITaiIUakEFdkH/B3FqLQAAOgAAIAEgACAUIAhrQQV2Qf8HcWotAAA6AAcgASAAIAkgCmsiCiAOIA1rIglqQdkDbEEIdSINIAlBnQVsQQh1IAhqayIJIAcgEWtB6gJsQQh1IAtrIgggBSASayIFaiIHakEFdkH/B3FqLQAAOgABIAEgACAHIAlrQQV2Qf8HcWotAAA6AAYgASAAIAwgD2tB6gJsQQh1IAlrIgcgBSAIayIFakEFdkH/B3FqLQAAOgACIAEgACAFIAdrQQV2Qf8HcWotAAA6AAUgASAAIA0gCkGVAmxBCHUgB2prIgcgEyALayIFakEFdkH/B3FqLQAAOgADIAEgACAFIAdrQQV2Qf8HcWotAAA6AAQLIAJBIGohAiAGQQFqIgZBCEcNAAsgEEGAAmokAAvyCAIPfQV/IwBBgAJrIhYkACAAKALQAiEXIAEoAlQhASAWIQBBCCEUA0AgAAJ/AkAgAi8BECIYIAIvASAiFXINAEEAIRUgAi8BMA0AIAIvAUANACACLwFQDQAgAi8BYA0AIAIvAXANACAAIAEqAgAgAi4BALKUIgY4AsABIAAgBjgCoAEgACAGOAKAASAAIAY4AmAgACAGOAJAIAAgBjgCICAAIAY4AgBBOAwBCyAAIAEqAgAgAi4BALKUIgcgASoCgAEgAi4BQLKUIgiSIg0gASoCQCAVQRB0QRB1spQiCSABKgLAASACLgFgspQiCpIiBpIiCyABKgJgIAIuATCylCIMIAEqAqABIAIuAVCylCIOkiIPIAEqAiAgGEEQdEEQdbKUIhAgASoC4AEgAi4BcLKUIhGSIhKSIgWTOALgASAAIAsgBZI4AgAgACAHIAiTIgcgCSAKk0PzBLU/lCAGkyIIkiIJIA4gDJMiCiAQIBGTIguSQ16D7D+UIgwgCkN1PSfAlJIgBZMiBZM4AsABIAAgCSAFkjgCICAAIAcgCJMiByASIA+TQ/MEtT+UIAWTIgWTOAKgASAAIAcgBZI4AkAgACANIAaTIgYgDCALQ9SLir+UkiAFkyIFkjgCYCAGIAWTIQZBIAtBAnRqIAY4AgAgAkECaiECIAFBBGohASAAQQRqIQAgFEEBSyEVIBRBAWshFCAVDQALIBdBgANrIQAgFiECQQAhFANAIAMgFEECdGooAgAgBGoiASAAAn8gAioCAEMAIABEkiIHIAIqAhAiCJIiDSACKgIIIgkgAioCGCIKkiIGkiILIAIqAhQiDCACKgIMIg6SIg8gAioCBCIQIAIqAhwiEZIiEpIiBZIiE4tDAAAAT10EQCATqAwBC0GAgICAeAtB/wdxai0AADoAACABIAACfyALIAWTIguLQwAAAE9dBEAgC6gMAQtBgICAgHgLQf8HcWotAAA6AAcgASAAAn8gByAIkyIHIAkgCpND8wS1P5QgBpMiCJIiCSAMIA6TIgogECARkyILkkNeg+w/lCIMIApDdT0nwJSSIAWTIgWSIgqLQwAAAE9dBEAgCqgMAQtBgICAgHgLQf8HcWotAAA6AAEgASAAAn8gCSAFkyIJi0MAAABPXQRAIAmoDAELQYCAgIB4C0H/B3FqLQAAOgAGIAEgAAJ/IAcgCJMiByASIA+TQ/MEtT+UIAWTIgWSIgiLQwAAAE9dBEAgCKgMAQtBgICAgHgLQf8HcWotAAA6AAIgASAAAn8gByAFkyIHi0MAAABPXQRAIAeoDAELQYCAgIB4C0H/B3FqLQAAOgAFIAEgAAJ/IA0gBpMiBiAMIAtD1IuKv5SSIAWTIgWSIgeLQwAAAE9dBEAgB6gMAQtBgICAgHgLQf8HcWotAAA6AAMgASAAAn8gBiAFkyIGi0MAAABPXQRAIAaoDAELQYCAgIB4C0H/B3FqLQAAOgAEIAJBIGohAiAUQQFqIhRBCEcNAAsgFkGAAmokAAsZACAAIAAoAgAoAggRAQAgABC6BUEBEAEAC1sBAX8gACgCACECIAFBAEgEQAJAIAIoAmwiAQRAIAIoAmhBA0gNAQsgACACKAIIEQEAIAIoAmwhAQsgAiABQQFqNgJsDwsgASACKAJoTARAIAAgAigCCBEBAAsLXAECfyMAQeABayIBJAAgACABQRBqIgIgACgCACgCDBECACABIAI2AgBBsPcCKAIAIQIjAEEQayIAJAAgACABNgIMIAJBxagCIAEQhAUgAEEQaiQAIAFB4AFqJAALkwICBH8DfiMAQTBrIgMkAAJAAkACfwJAIAAoAgAiAigCFCIAQQBMDQAgACACKAJ0Sg0AIAIoAnAgAEECdGoMAQsgAigCeCIERQ0BIAAgAigCfCIFSA0BIAAgAigCgAFKDQEgBCAAIAVrQQJ0agsoAgAiBA0BCyACIAA2AhggAigCcCgCACEECyAEIQACQAJAA0AgAC0AACIFRQ0BIABBAWohACAFQSVHDQALIAAtAABB8wBHDQAgAyACQRhqNgIgIAEgBCADQSBqEKICDAELIAIpAiAhBiACKQIoIQcgAikCGCEIIAMgAikCMDcDGCADIAc3AxAgAyAGNwMIIAMgCDcDACABIAQgAxCiAgsgA0EwaiQACxUAIAAoAgAiAEEANgIUIABBADYCbAvBAQEHfyAAKALAAkEASgRAIAAoAtwDIAEoAgRqIgEtAIwBIQUgAygCACEGIAEtAJYBIghBAWshCQNAIAAoAnAiAUEASgRAIAYgBEECdGooAgAiAyABaiEKIAIgB0ECdGooAgAhAQNAIAUEQCADIAEtAAAgBRA5IAVqIQMLIAFBAWohASADIApJDQALCyAIQQJPBEAgBiAEIAYgBEEBaiAJIAAoAnAQkgMLIAdBAWohByAEIAhqIgQgACgCwAJIDQALCwueAQEFfyAAKALAAkEASgRAIAMoAgAhBQNAIAUgBCAFIARBAXJBASAAKAJwIgFBAEoEfyAFIARBAnRqKAIAIgMgAWohByACIAZBAnRqKAIAIQEDQCADIAEtAAAiCDoAASADIAg6AAAgAUEBaiEBIANBAmoiAyAHSQ0ACyAAKAJwBSABCxCSAyAGQQFqIQYgBEECaiIEIAAoAsACSA0ACwsLhAEBBH8gACgCwAIiAUEASgRAIAMoAgAhBQNAIAAoAnAiA0EASgRAIAMgBSAEQQJ0IgNqKAIAIgFqIQYgAiADaigCACEDA0AgASADLQAAIgc6AAEgASAHOgAAIANBAWohAyABQQJqIgEgBkkNAAsgACgCwAIhAQsgBEEBaiIEIAFIDQALCwsJACADIAI2AgALCQAgA0EANgIACx8BAX8gACgC3AMiASAAKALAAjYCXCABIAAoAnQ2AmALowIBBX8gACgC3AMiAygCXCIHIAAoAsACIghOBEAgACgCJEEASgRAIANBDGohCiAAKALYASEIQQAhBwNAIAAgCCABIAdBAnQiCWooAgAgAyAJaiILKAJkIAIoAgBsQQJ0aiAJIApqIAsoAjQRBwAgCEHYAGohCCAHQQFqIgcgACgCJEgNAAsgACgCwAIhCAsgA0EANgJcQQAhBwsgACADQQxqIAcgBCAFKAIAIgFBAnRqIAggB2siBCADKAJgIgcgBCAHSRsiBCAGIAFrIgEgASAESxsiASAAKALgAygCBBEFACAFIAUoAgAgAWo2AgAgAyADKAJgIAFrNgJgIAMgAygCXCABaiIBNgJcIAAoAsACIAFMBEAgAiACKAIAQQFqNgIACwvYAQACQCAAKALIAyIBKAIYIgIEQCABKAIMIQMMAQsgASAAIAEoAgggASgCFCABKAIQQQAgACgCBCgCHBEKACIDNgIMIAEoAhghAgsgACADIAJBAnRqIAQgBSgCACIDQQJ0aiABKAIQIAJrIgIgBiADayIDIAIgA0kbIgIgACgCdCABKAIUayIDIAIgA0kbIgIgACgC5AMoAgQRBwAgBSAFKAIAIAJqNgIAIAEgASgCGCACaiIANgIYIAAgASgCECIATwRAIAFBADYCGCABIAEoAhQgAGo2AhQLC9MBAQJ/IAAoAsgDIgRBGGohCAJAIAQoAhgiBgRAIAQoAgwhBwwBCyAEIAAgBCgCCCAEKAIUIAQoAhBBASAAKAIEKAIcEQoAIgc2AgwgBCgCGCEGCyAAIAEgAiADIAcgCCAEKAIQIAAoAtwDKAIEEQwAIAYgBCgCGCIDSQR/IAAgBCgCDCAGQQJ0akEAIAMgBmsiASAAKALkAygCBBEHACAFIAUoAgAgAWo2AgAgBCgCGAUgAwsgBCgCECIATwRAIARBADYCGCAEIAQoAhQgAGo2AhQLC48BAQR/IwBBEGsiByQAIAAoAsgDIggoAhAhCSAFKAIAIQogB0EANgIMIAAgASACIAMgCCgCDCAHQQxqIAYgCmsiASAJIAEgCUkbIAAoAtwDKAIEEQwAIAAgCCgCDCAEIAUoAgBBAnRqIAcoAgwgACgC5AMoAgQRBwAgBSAFKAIAIAcoAgxqNgIAIAdBEGokAAvcAQEBfyAAKALIAyECAkACQAJAAkACQCABDgQAAwIBAwsgACgCVARAIAJB0AE2AgQgAigCDA0EIAIgACACKAIIQQAgAigCEEEBIAAoAgQoAhwRCgA2AgwMBAsgAiAAKALcAygCBDYCBAwDCyACKAIIRQRAIAAoAgAiAUEDNgIUIAAgASgCABEBAAsgAkHRATYCBAwCCyACKAIIRQRAIAAoAgAiAUEDNgIUIAAgASgCABEBAAsgAkHSATYCBAwBCyAAKAIAIgFBAzYCFCAAIAEoAgARAQALIAJCADcCFAs8ACAAIAEgAigCACAEIAUoAgBBAnRqIAAoAtwDKAIMEQcAIAUgBSgCAEEBajYCACACIAIoAgBBAWo2AgALwgMBDH8gAkECdCICIAEoAghqKAIAIQUgASgCBCACaigCACEGIAEoAgAgAmooAgAhByADKAIAIQEgACgC0AIhAiAAKALcAyIDKAIcIQggAygCGCELIAMoAhQhDCADKAIQIQ0gACgCcCIDQQJPBH8gA0EBdiEDA0AgDCAGLQAAQQJ0IgRqKAIAIQ4gCyAFLQAAQQJ0IglqKAIAIQogBCAIaigCACEPIAEgAiAJIA1qKAIAIgkgBy0AACIEamotAAA6AAAgASACIAQgCiAPakEQdSIKamotAAA6AAEgASACIAQgDmpqLQAAOgACIAEgAiAJIActAAEiBGpqLQAAOgADIAEgAiAEIApqai0AADoABCABIAIgBCAOamotAAA6AAUgAUEGaiEBIAdBAmohByAFQQFqIQUgBkEBaiEGIANBAWsiAw0ACyAAKAJwBSADC0EBcQRAIAwgBi0AAEECdCIAaigCACEDIAsgBS0AAEECdCIFaigCACEGIAAgCGooAgAhCCABIAIgBy0AACIAIAUgDWooAgBqai0AADoAACABIAIgACAGIAhqQRB1amotAAA6AAEgASACIAAgA2pqLQAAOgACCwuLAgEDfyMAQRBrIggkAAJAAkAgACgC3AMiBygCJARAIAdBIGpBACAEIAUoAgBBAnRqQQBBASAHKAIoEJIDIAdBADYCJCAFIAUoAgBBAWo2AgAgByAHKAIsQQFrNgIsDAELIAcoAiwhCSAIIAQgBSgCACIDQQJ0aiIEKAIANgIIIAgCfyAJIAYgA2siAyADIAlLGyIDQQIgA0ECSRsiA0ECTwRAIAQoAgQMAQsgB0EBNgIkIAcoAiALNgIMIAAgASACKAIAIAhBCGogBygCDBEHACAHKAIkIQAgBSAFKAIAIANqNgIAIAcgBygCLCADazYCLCAADQELIAIgAigCAEEBajYCAAsgCEEQaiQAC4YFAQ5/IAJBAnQiBSABKAIIaigCACEKIAEoAgQgBWooAgAhCyABKAIAIAJBA3RqIgEoAgAhByABKAIEIQggAygCBCECIAMoAgAhAyAAKALQAiEEIAAoAtwDIgEoAhwhDiABKAIYIQ8gASgCFCEQIAEoAhAhESAAKAJwIgFBAk8EfyABQQF2IQkDQCAQIAstAABBAnQiAWooAgAhDCAPIAotAABBAnQiBmooAgAhBSABIA5qKAIAIQEgAyAEIAYgEWooAgAiDSAHLQAAIgZqai0AADoAACADIAQgBiABIAVqQRB1IgVqai0AADoAASADIAQgBiAMamotAAA6AAIgAyAEIA0gBy0AASIBamotAAA6AAMgAyAEIAEgBWpqLQAAOgAEIAMgBCABIAxqai0AADoABSACIAQgDSAILQAAIgFqai0AADoAACACIAQgASAFamotAAA6AAEgAiAEIAEgDGpqLQAAOgACIAIgBCANIAgtAAEiAWpqLQAAOgADIAIgBCABIAVqai0AADoABCACIAQgASAMamotAAA6AAUgAkEGaiECIAhBAmohCCADQQZqIQMgB0ECaiEHIApBAWohCiALQQFqIQsgCUEBayIJDQALIAAoAnAFIAELQQFxBEAgECALLQAAQQJ0IgBqKAIAIQkgDyAKLQAAQQJ0IgFqKAIAIQUgACAOaigCACEAIAMgBCABIBFq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IAJBAWohAiAIQQFrIQQgCEECTg0ACwsL8QIBC38gBEEASgRAIAAoAnAiCEF+cSEOIAhBAXEhDwNAIAQhDAJAIAhFDQAgAkECdCIAIAEoAghqKAIAIQYgASgCBCAAaigCACEJIAEoAgAgAGooAgAhByADKAIAIQRBACEAQQAhDSAIQQFHBEADQCAAIAdqLQAAIQogACAGai0AACELIAQgACAJai0AACIFOgABIAQgBSALakGAAXM6AAIgBCAFIApqQYABczoAACAHIABBAXIiBWotAAAhCiAFIAZqLQAAIQsgBCAFIAlqLQAAIgU6AAQgBCAFIAtqQYABczoABSAEIAUgCmpBgAFzOgADIABBAmohACAEQQZqIQQgDUECaiINIA5HDQALCyAPRQ0AIAAgB2otAAAhByAAIAZqLQAAIQYgBCAAIAlqLQAAIgA6AAEgBCAAIAZqQYABczoAAiAEIAAgB2pBgAFzOgAACyADQQRqIQMgAkEBaiECIAxBAWshBCAMQQJODQALCwupAgEJfyAEQQBKBEAgACgCcCIFQX5xIQwgBUEBcSENA0AgBCEJAkAgBUUNACACQQJ0IgAgASgCCGooAgAhBiABKAIEIABqKAIAIQcgASgCACAAaigCACEIIAMoAgAhBEEAIQBBACEKIAVBAUcEQANAIAQgACAIai0AADoAACAEIAAgB2otAAA6AAEgBCAAIAZqLQAAOgACIAQgCCAAQQFyIgtqLQAAOgADIAQgByALai0AADoABCAEIAYgC2otAAA6AAUgAEECaiEAIARBBmohBCAKQQJqIgogDEcNAAsLIA1FDQAgBCAAIAhqLQAAOgAAIAQgACAHai0AADoAASAEIAAgBmotAAA6AAILIANBBGohAyACQQFqIQIgCUEBayEEIAlBAk4NAAsLC6ICAQ1/IARBAEoEQCAAKALQAiEFIAAoAnAhByAAKALgAyIAKAIUIQogACgCECELIAAoAgwhDCAAKAIIIQ0DQCAEIQggBwRAIAJBAnQiACABKAIIaigCACEOIAEoAgQgAGooAgAhDyABKAIAIABqKAIAIRAgAygCACEEQQAhAANAIAAgD2otAAAhBiAEIAUgACAQai0AACIJIA0gACAOai0AAEECdCIRaigCAGpqLQAAOgAAIAQgBSAJIAsgEWooAgAgCiAGQQJ0IgZqKAIA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IAAoAgAiASAFNgIYIAFB8AA2AhQMAgsgACgCACIBQdsANgIUIAEgAi0ABzYCGCAAKAIAIAU2AhwMAQsgACgCACIBIAU2AhggAUHPADYCFAsgAEEBIAAoAgAoAgQRAgALDAILAkAgAUEMSQ0AIAItAAJBwQBHDQAgAi0AA0HkAEcNACACLQAEQe8ARw0AIAItAAVB4gBHDQAgAi0ABkHlAEcNACACLQAIIQMgAi0AByEHIAItAAohCSACLQAJIQogAi0ADCELIAItAAshDSACLQANIQUgACgCACIBQc4ANgIUIAEgBTYCJCABIAsgDUEIdHI2AiAgASAJIApBCHRyNgIcIAEgAyAHQQh0cjYCGCAAQQEgASgCBBECACAAIAU6AKwCIABBATYCqAIMAgsgACgCACIBIAU2AhggAUHQADYCFCAAQQEgACgCACgCBBECAAwBCyAAKAIAIgEgAzYCGCABQcYANgIUIAAgACgCACgCABEBAAsgBiAENgIEIAYgCDYCAEEBIQQgDEEATA0AIAAgDCAAKAIYKAIQEQIACyACQRBqJAAgBAs2ACAAQQA2AtgBIABBADYCuAMgAEEANgKQASAAKALQAyIAQQA2AqQBIABBADYCGCAAQgA3AgwLhjsBD38jAEGgAmsiCSQAIAAoArgDIQEDQAJAAkACQCABDQAgACgC0AMoAgxFBEAgACgCGCICKAIEIgFFBEAgACACKAIMEQAARQRAQQAhAQwECyACKAIEIQELIAIoAgAiAy0AACEFIAFBAWsiBAR/IANBAWoFIAAgAigCDBEAAEUEQEEAIQEMBAsgAigCBCEEIAIoAgALIgFBAWohAyAFQf8BRiABLQAAIgFB2AFGcUUEQCAAKAIAIgYgBTYCGCAGQTc2AhQgACgCACABNgIcIAAgACgCACgCABEBAAsgACABNgK4AyACIARBAWs2AgQgAiADNgIADAELIAAQ4wNFBEBBACEBDAILIAAoArgDIQELAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCABQQFrDv4BDxERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERESAQIFCQUFBQUDBAUIBQUFDw8PDw8PDw8ABwYKEAsREQ0NDQ0NDQ0NDQ0NDQ0NDQ0REREREREREQwREREREQ4RCyAAKAIAIgJB6AA2AhQgAEEBIAIoAgQRAgAgACgC0AMiASgCDARAIAAoAgAiAkHAADYCFCAAIAIoAgARAQAgACgC0AMhAQsgAEIANwDoASAAQgA3APABIABCgYKEiJCgwIABNwCAAiAAQoGChIiQoMCAATcA+AEgAEKFipSo0KDBggU3AJACIABChYqUqNCgwYIFNwCIAiAAQgA3A7ACIABBADYCKCAAQgA3A5gCIABBADoArAIgAEKBgAQ3AqQCIABBADoAogIgAEGBAjsBoAIgAUEBNgIMDBQLQQAhASAAQQBBAEEAENgCDRMMEgtBACEBIABBAEEBQQAQ2AINEgwRC0EAIQEgAEEAQQBBARDYAg0RDBALQQAhASAAQQBBAUEBENgCDRAMDwsgACgCACICIAE2AhggAkE/NgIUIAAgACgCACgCABEBAAwPCyAAKAIYIgYoAgQhASAGKAIAIQMgACgC0AMoAhBFBEAgACgCACICQTw2AhQgAkEYakG4uAJB0AAQPhogACAAKAIAKAIAEQEACyABRQRAIAAgBigCDBEAAEUEQEEAIQEMDwsgBigCACEDIAYoAgQhAQsgAy0AACEFIAFBAWsiAgR/IANBAWoFIAAgBigCDBEAAEUEQEEAIQEMDwsgBigCBCECIAYoAgALIgQtAAAhASACQQFrIgMEfyAEQQFqBSAAIAYoAgwRAABFBEBBACEBDA8LIAYoAgQhAyAGKAIACyEEIAAoAgAiAiAELQAAIgs2AhggAkHpADYCFEEBIQIgAEEBIAAoAgAoAgQRAgACQAJAAkAgC0EBdEEGaiAFQQh0IAFyRyALQQRLcg0AIAsEQCAAIAs2AtQCIARBAWohCiADQQFrIQUMAgsgACgC4AFFDQAgACALNgLUAiAEQQFqIQogA0EBayEFDAILIAAoAgAiAUEMNgIUIAAgASgCABEBACAAIAs2AtQCIARBAWohCiADQQFrIQUgC0UN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AgQhAyABKAIACyIFQQFqIQIgA0EBayEDIAUtAAAgBEEIdHJB/wFHDQAgA0UEQCAAIAEoAgwRAABFBEBBACEBDAsLIAEoAgQhAyABKAIAIQILIAJBAWohBCADQQFrIQMgAi0AAEEDRwRAIAQhAgwBCyADRQRAIAAgASgCDBEAAEUEQEEAIQEMCwsgASgCBCEDIAEoAgAhBAsgBEEBaiECIANBAWshAyAAKALYASIHKAJYIAQtAABHDQAgA0UEQCAAIAEoAgwRAABFBEBBACEBDAsLIAAoAtgBIQcgASgCBCEDIAEoAgAhAgsgAkEBaiEEIANBAWshAyAHKAIAIAItAABHBEAgBCECDAELIANFBEAgACABKAIMEQAARQRAQQAhAQwLCyAAKALYASEHIAEoAgQhAyABKAIAIQQLIARBAWohAiADQQFrIQMgBygCsAEgBC0AAEcNACADRQRAIAAgASgCDBEAAEUEQEEAIQEMCwsgASgCBCEDIAEoAgAhAgsgAkEBaiEEIANBAWshAyACLQAAQYABRwRAIAQhAgwBCyADRQRAIAAgASgCDBEAAEUEQEEAIQEMCwsgASgCBCEDIAEoAgAhBAsgBC0AACEFIANBAWsiAwR/IARBAWoFIAAgASgCDBEAAEUEQEEAIQEMCwsgASgCBCEDIAEoAgALIgRBAWohAiADQQFrIQMgBC0AACAFQQh0cg0AIANFBEAgACABKAIMEQAARQRAQQAhAQwLCyABKAIEIQMgASgCACECCyACLQAAIQQgA0EBayIDBH8gAkEBagUgACABKAIMEQAARQRAQQAhAQwLCyABKAIEIQMgASgCAAsiBUEBaiECIANBAWshAyAFLQAAIARBCHRyDQAgA0UEQCAAIAEoAgwRAABFBEBBACEBDAsLIAEoAgQhAyABKAIAIQILIAJBAWohBCADQQFrIQMgAi0AAARAIAQhAgwBCyADRQRAIAAgASgCDBEAAEUEQEEAIQEMCwsgASgCBCEDIAEoAgAhBAsgBC0AACEFIANBAWsiAwR/IARBAWoFIAAgASgCDBEAAEUEQEEAIQEMCwsgASgCBCEDIAEoAgALIgRBAWohAiADQQFrIQMgBC0AACAFQQh0ckEBRw0AIANFBEAgACABKAIMEQAARQRAQQAhAQwLCyABKAIEIQMgASgCACECCyACLQAAIQQg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AyAAQQ42AqwDQQ4MBQsgAEE/NgK0AyAAQYDJAjYCsAMgAEEPNgKsA0EPDAQLIAAoAgAiAUERNgIUIAEgACgCnAM2AhggACgCACAAKAKgAzYCHCAAKAIAIAAoAqQDNgIgIAAoAgAgACgCqAM2AiQgACAAKAIAKAIAEQEAIAAoAiQhAiAAKAKsAwwDCyAEKAIQRQRAIAAoAgAiAUEkNgIUIAAgASgCABEBAAsgACgC1AJFDQQgABC3BUEBDwtBAiEBIAAoApABIgIgACgCmAFODQQgACACNgKYAQwECyAAQT82ArQDIABBgMkCNgKwAyAAQQg2AqwDQQgLIgE2AsgCIAAgATYCxAIgAkEASgRAIAAoAtgBIQFBACEDA0AgASAAKAKsAyICNgIoIAEgAjYCJCABIAEoAgggACgCHGwgAiAAKAK8AmwQajYCHCABIAEoAgwgACgCIGwgACgCrAMgACgCwAJsEGo2AiAgASABKAIIIAAoAhxsIAAoArwCEGo2AiwgASgCDCAAKAIgbCAAKALAAhBqIQIgAUEANgJQIAFBATYCNCABIAI2AjAgAUHYAGohASADQQFqIgMgACgCJEgNAAsgACgCrAMhAQsgACAAKAIgIAEgACgCwAJsEGo2AswCQQEhBSAAKALMAyAAKALUAiIBIAAoAiROBH8gACgC4AFBAEcFQQELNgIQCyABRQRAIARBAjYCGAwBCwsgBEEANgIYQQEPCyABC0MBAX8gACgCzAMiAUEBNgIYIAFCADcCECABQfsANgIAIAAgACgCACgCEBEBACAAIAAoAtADKAIAEQEAIABBADYCoAELHAAgACAAKALUAygCCBEBACAAKALMA0H7ADYCAAsMACAAKAIYQQE2AiQLiwEBAn8gACgCGCIBKAIgQQFBgCAgASgCHBBgIgJFBEAgASgCJARAIAAoAgAiAkErNgIUIAAgAigCABEBAAsgACgCACICQfsANgIUIABBfyACKAIEEQIAIAEoAiBB/wE6AAAgASgCIEHZAToAAUECIQILIAFBADYCJCABIAI2AgQgASABKAIgNgIAQQELVAECfyABQQBKBEAgASAAKAIYIgIoAgQiA0oEQANAIAAgAigCDBEAABogASADayIBIAIoAgQiA0oNAAsLIAIgAyABazYCBCACIAIoAgAgAWo2AgALC3sBAX8gACgC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IAIgAkELajYCBCADQa2RAiACEKUBQQBMDQAgAigCDCEDIAItAAtB3wFxQc0ARgRAIAIgA0HoB2wiAzYCDAsgASADQegHbDYCLAsgAkEQaiQAIABBADYCuAIgAEEANgIYIABBADYCCCAAQgA3AqQBIABCADcCrAEgAEIANwK0ASAAQgA3ArwBIABCADcCxAEgAEIANwLMASAAIABBAEGsASAAKAIEKAIAEQQAIgE2AtADIAFCADcCYCABQfwANgIcIAFB/QA2AgggAUH+ADYCBCABQf8ANgIAIAFBADYCaCABQfwANgIkIAFB/AA2AiggAUIANwJsIAFB/AA2AiwgAUH8ADYCMCABQgA3AnQgAUH8ADYCNCABQfwANgI4IAFCADcCfCABQfwANgI8IAFBADYChAEgAUFAa0H8ADYCACABQgA3AogBIAFB/AA2AkQgAUH8ADYCSCABQfwANgJMIAFB/AA2AlAgAUIANwKQASABQfwANgJUIAFCADcCmAEgAUEANgKgASABQfwANgJcIAFBgAE2AiAgAUGAATYCWCAAQQA2ArgDIABBADYCkAEgAEEANgLYASAAKALQAyIBQQA2AqQBIAFBADYCGCABQgA3AgwgACAAQQBBHCAAKAIEKAIAEQQAIgE2AswDIAFBATYCGCABQgA3AhAgAUH4ADYCDCABQfkANgIIIAFB+gA2AgQgAUH7ADYCACAAQcgBNgIUCyIBAX1BfyAAKgIAIAEqAgCTIgJDAAAAAF4gAkMAAAAAXRsLEAAgASACIAMgACgCABEEAAs+AQJ/IwBBEGsiBCQAIARBCGoiAyABIAIgACgCABEGACADKAIAECkgAygCACEAIAMoAgAQKCAEQRBqJAAgAAtRAQJ/IwBBEGsiAiQAIAAoAgAhAyACIAAoAgQiAEEBdSABaiIBIABBAXEEfyABKAIAIANqKAIABSADCxEAADYCDCACKAIMIQAgAkEQaiQAIAALOQEBfyAAKAIEIgRBAXUgAWohASAAKAIAIQAgASACIAMgBEEBcQR/IAEoAgAgAGooAgAFIAALEQYACzcBAX8gACgCBCIDQQF1IAFqIQEgACgCACEAIAEgAiADQQFxBH8gASgCACAAaigCAAUgAAsRAgALBwAgABEQAAsLACABIAIgABE0AAsLACABIAIgABECAAsrAgF/AXwjAEEQayICJAAgAiABIAARGgA5AwggAisDCCEDIAJBEGokACADCwsAIAEgAiAAERQACycBAX8jAEEQayIBJAAgASAAERAANgIMIAEoAgwhACABQRBqJAAgAAsJACABIAARAQALDwAgASAAKAIAaiACNgIACw0AIAEgACgCAGooAgALEQAgACgCAEGEAWpBARD1BAALGAEBf0EQEFsiAEIANwMAIABCADcDCCAACygBAX8jAEEQayIDJAAgAyABIAIgABEGACADEMEFIQAgA0EQaiQAIAALNQEBfyMAQRBrIgIkACACIAEQwAUgAiACIAARAAA2AgwgAigCDCEAIAIQOBogAkEQaiQAIAALKwEBfyMAQRBrIgMkACADIAEgAiAAEQMANgIMIAMoAgwhACADQRBqJAAgAAs3AQF/IwBBEGsiAyQAIAMgAhDABSADIAEgAyAAEQMANgIMIAMoAgwhACADEDgaIANBEGokACAACykBAX8jAEEQayICJAAgAiABIAARAAA2AgwgAigCDCEAIAJBEGokACAACy0BAX8jAEEQayIEJAAgBCABIAIgAyAAEQQANgIMIAQoAgwhACAEQRBqJAAgAAsfACAAIAEQyAUiACACKQIINwIIIAAgAikCADcCAEEBC3cBAn8gARC4ASACSwRAIAEgAhDIBSEDIwBBEGsiAiQAIwBBEGsiASQAIAEgAkEIaiIENgIMIAMQwQUhAyABKAIMIAM2AgAgASABKAIMQQhqNgIMIAFBEGokACAAQfixAiAEECc2AgAgAkEQaiQADwsgAEEBEHcaC4ADAQR/IAEgABC4ASIDSwRAIwBBIGsiBiQAAkAgASADayIEIAAQMigCACAAKAIEa0EEdU0EQCMAQRBrIgUkACAFIAAgBBDDBSIDKAIEIQEgAygCCCEEA0AgASAERgRAIAMQciAFQRBqJAAFIAAQMiABIAIQlgMgAyABQRBqIgE2AgQMAQsLDAELIAAQMiEBIAZBCGogACAAELgBIARqEMcFIAAQuAEgARDGBSEDIwBBEGsiASQAIAEgAygCCDYCACADKAIIIQUgASADQQhqNgIIIAEgBSAEQQR0ajYCBCABKAIAIQQDQCABKAIEIARHBEAgAygCECABKAIAIAIQlgMgASABKAIAQRBqIgQ2AgAMAQsLIAEQsgEgAUEQaiQAIAAgAxDFBSAD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AwNAIAMiASgCACIDIABHDQALAkAgAUG0lQRHBEAgASgCBCAGEF8gB0YNAQsgACgCACIDBEAgAygCBCAGEF8gB0YNAQtBrJUEIAcQOkEANgIACwJAIAAoAgAiA0UNACADKAIEIAYQXyIDIAdGDQBBrJUEIAMQOiABNgIACyABIAAoAgA2AgAgAEEANgIAQayVBBA8IgEgASgCAEEBazYCACAJIAAgCkEIakGslQQQMkEBEK0CEKwCGiAKQRBqJAAgCRC+BSALKAIAGiAIQSBqJAALIARBIGokACAFQeACaiEBQQAhAANAIAEQPSAASwRAIAEgABBNKAIEEKkCIABBAWohAAwBCwsgARDTARAxIAUQ0wUQMUEAIQALIAJBEGokACAACwkAQaD4AygCAAsLAEGg+AMgADYCAAumAQEBfyMAQRBrIgMkACADIAE2AgwgA0GslQQgA0EMahBLNgIIIAMQRzYCAAJAIANBCGogAxBPBEAgAEIANwIAIABCADcCCAwBCyADQQxqEFAiAUHEAmoQuAEgAk0EQEEIEAZBufYBEP4GIgBB3PcDNgIAIABB/PcDQQwQBQALIAAgASgCxAIgAkEEdGoiASkCADcCACAAIAEpAgg3AggLIANBEGokAAujBAEHfyMAQRBrIgIkACACIAA2AgwgAkGslQQgAkEMahBLNgIIIAIQRzYCAEF/IQAgAkEIaiACEE9FBEAgAkEMahBQIgEhBwJ/IAEoAvADIQYgASgCwAEiAygCACEEIAMoAgQhBUGk6wAQNyIABEACQCAAQQE2AuBnIABCmrPm+IOAgIDAADcCKCAAQouAgICgATcCICAAQpmAgICwATcCGCAAIAU2AgggACAENgIEIAAgBjYCFCAAQfTnAGogBCAFbBA3IgQ2AgAgBEUNACAAQfjnAGpBADYCACAADAILC0EAQQNBoa8CQQAQNkEBEAEACyIAIAM2AgwgAEEBNgIAIAAgA0EIahDpAyIDNgIQIANEAAAAAAAAAAAQrwEgByAANgLsASAARQRAQQBBA0GqrQJBABA2IAEoAugBIgAEQCAAKAIAIgAEQCAAQQAQrgYLIAAQMSABKALoASgCHBAxIAEoAugBKAIkEDEgASgC6AEoAjQQMSABKALoASgCLBAxIAEoAugBEDEgAUEANgLoAQsgASgC7AEhAAsgAARAIABDAACgQDgCLAsgASgC7AEiAARAIABDAAAAPzgCKAsgASgC7AEiAARAIABBEDYCJAsgASgC7AEiAARAIABBBjYCGAsgASgC7AEiAARAIABBBjYCHAsgASgC7AEiAARAIABBBjYCIAsgASABKALAARCvBTYC6AFBACEACyACQRBqJAAgAAtJAQF/IwBBEGsiASQAIAEgADYCDCABQayVBCABQQxqEEs2AgggARBHNgIAIAFBCGogARBPRQRAIAFBDGoQUBoLIAFBEGokAEF/C5hCAjx/Bn0jAEHgAWsiBiQAIAYgADYC3AEgBkGslQQgBkHcAWoQSzYCoAEgBhBHNgLYAQJAAn8gBkGgAWogBkHYAWoQTwRAQaT4AygCAAwBCyABIAZB3AFqEFAiFygC9AFOBEBBqPgDKAIADAELIAZBADYC2AEgBkF/NgLUASAGQYCAgPx7NgKcAQJAAkACQAJAIBcoAvABIgBBfkYEQCAXKALoASAXKALMARDtCiAXKALoASIABEAgBiAAKAI0NgLYASAGIAAoAjg2AtQBCyAGKALUASIAQQAgAEEAShshEkMAAIC/IT4gBigC2AEhBEF/IQtBACEAA0AgACASRwRAAkAgBCAAQcQAbGoiCSgCMCABRw0AIAkoAjwNAEEAIAtBf0cgCSoCNCI/ID5dGw0AIAYgPzgCnAEgPyE+IAAhCwsgAEEBaiEADAELCyALQQBIDQEgFyAEKAIwIgk2AvABIAQgC0HEAGxqIQQDQCACQQNHBEAgBCACQQR0IgtqIRJBACEAA0AgAEEERwRAIABBAnQiECAGQaABaiALamogECASaioCADgCACAAQQFqIQAMAQsLIAJBAWohAgwBCwsgBkGgAWohC0EAIQIgFyAJQQJ0aigC+AEiBARAIARBATYCmAEDQEEAIQAgAkEDRwRAA0AgAEEERwRAIABBAnQiCSAEIAJBBHQiEmpqIAsgEmogCWoqAgA4AgggAEEBaiEADAELCyACQQFqIQIMAQsLIARBfzYCqAELIBcoAvABIQALIABBAEgNAiAXKALsASEHIBcgAEECdGooAvgBIREgFygCxAEhMkEAIQIjAEEwayIiJABBfyEKAkAgB0UgEUVyIDJFIAZBoAFqIhRFcnIgBkHkfkZyDQAgESgCmAFBAEwEQEF+IQoMAQsgBkEANgKcASARQegA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EHkgAygCAEUNASADKAIAIQQLIAAtAI8BBEAgBEEtOgAAIARBAWohBAsgASgCACECA0AgACgClAEgAk0EQAJAIARBADoAACAAIAY2AgAgAEEQakH5/gEgABClAUEBRw0AIAMQZQwECwUgBCAAQfYAaiIHIAdBCmogAhC9BCAAayAAai0ACjoAACAEQQFqIQQgAkEBaiECDAELCxB1AAsQdQALIABBmAJqIABBkAJqEHQEQCAFIAUoAgBBAnI2AgALIAAoApgCIQIgAEGQAWoQRSABEGUgAEGgAmokACACC5oCAQJ/IwBBoANrIggkACAIIAhBoANqIgM2AgwjAEGQAWsiByQAIAcgB0GEAWo2AhwgAEEIaiAHQSBqIgIgB0EcaiAEIAUgBhCzByAHQgA3AxAgByACNgIMIAhBEGoiAiAIKAIMEPAEIQQgACgCCCEFIwBBEGsiACQAIAAgBTYCDCAAQQhqIABBDGoQygEhBSACIAdBDGogBCAHQRBqEMMEIQQgBRDJASAAQRBqJAAgBEF/RgRAEHUACyAIIAIgBEECdGo2AgwgB0GQAWokACAIKAIMIQQjAEEQayIAJAAgACABNgIIA0AgAiAERwRAIABBCGogAigCABDbBCACQQRqIQIMAQsLIAAoAgghASAAQRBqJAAgAyQAIAELhQEAIwBBgAFrIgIkACACIAJB9ABqNgIMIABBCGogAkEQaiIAIAJBDGogBCAFIAYQswcgACEEIAIoAgwhAyMAQRBrIgAkACAAIAE2AggDQCADIARHBEAgAEEIaiAELAAAEM0DIARBAWohBAwBCwsgACgCCCEBIABBEGokACACQYABaiQAIAEL7gwBAX8jAEFAaiIHJAAgByABNgI4IARBADYCACAHIAMQTiAHEJEBIQggBxBFAn8CQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIAZBwQBrDjkAARcEFwUXBgcXFxcKFxcXFw4PEBcXFxMVFxcXFxcXFwABAgMDFxcBFwgXFwkLFwwXDRcLFxcREhQWCyAAIAVBGGogB0E4aiACIAQgCBC2BwwYCyAAIAVBEGogB0E4aiACIAQgCBC1BwwXCyAHIAAgASACIAMgBCAFIABBCGogACgCCCgCDBEAACIAEEAgABBAIAAQNUEC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QRdqIABBFmogAiAAQcwBaiAALADvASAALADuASAAQeABaiAAQSBqIABBHGogAEEYaiAAQfABahC+BA0AIABBmAJqEHsaDAELCwJAIABB4AFqEDVFDQAgAC0AF0UNACAAKAIcIgMgAEEgamtBnwFKDQAgACADQQRqNgIcIAMgACgCGDYCAAsgACACIAAoAswBIAQQxAcgACkDACEGIAUgACkDCDcDCCAFIAY3AwAgAEHgAWogAEEgaiAAKAIcIAQQigEgAEGYAmogAEGQAmoQdARAIAQgBCgCAEECcjYCAAsgACgCmAIhAiABEDgaIABB4AFqEDgaIABBoAJqJAAgAgu9AwAjAEGQAmsiACQAIAAgAjYCgAIgACABNgKIAiAAQdABaiADIABB4AFqIABB3wFqIABB3gFqEL8EIABBwAFqEEQiASABEFQQPyAAIAFBABBBIgI2ArwBIAAgAEEQajYCDCAAQQA2AgggAEEBOgAHIABBxQA6AAYDQAJAIABBiAJqIABBgAJqEIwBRQ0AIAAoArwBIAEQNSACakYEQCABEDUhAyABIAEQNUEBdBA/IAEgARBUED8gACADIAFBABBBIgJqNgK8AQsgAEGIAmoQaSAAQQdqIABBBmogAiAAQbwBaiAALADfASAALADeASAAQdABaiAAQRBqIABBDGogAEEIaiAAQeABahC+BA0AIABBiAJqEHsaDAELCwJAIABB0AFqEDVFDQAgAC0AB0UNACAAKAIMIgMgAEEQamtBnwFKDQAgACADQQRqNgIMIAMgACgCCDYCAAsgBSACIAAoArwBIAQQxQc5AwAgAEHQAWogAEEQaiAAKAIMIAQQigEgAEGIAmogAEGAAmoQdARAIAQgBCgCAEECcjYCAAsgACgCiAIhAiABEDgaIABB0AFqEDgaIABBkAJqJAAgAgu9AwAjAEGQAmsiACQAIAAgAjYCgAIgACABNgKIAiAAQdABaiADIABB4AFqIABB3wFqIABB3gFqEL8EIABBwAFqEEQiASABEFQQPyAAIAFBABBBIgI2ArwBIAAgAEEQajYCDCAAQQA2AgggAEEBOgAHIABBxQA6AAYDQAJAIABBiAJqIABBgAJqEIwBRQ0AIAAoArwBIAEQNSACakYEQCABEDUhAyABIAEQNUEBdBA/IAEgARBUED8gACADIAFBABBBIgJqNgK8AQsgAEGIAmoQaSAAQQdqIABBBmogAiAAQbwBaiAALADfASAALADeASAAQdABaiAAQRBqIABBDGogAEEIaiAAQeABahC+BA0AIABBiAJqEHsaDAELCwJAIABB0AFqEDVFDQAgAC0AB0UNACAAKAIMIgMgAEEQamtBnwFKDQAgACADQQRqNgIMIAMgACgCCDYCAAsgBSACIAAoArwBIAQQxgc4AgAgAEHQAWogAEEQaiAAKAIMIAQQigEgAEGIAmogAEGAAmoQdARAIAQgBCgCAEECcjYCAAsgACgCiAIhAiABEDgaIABB0AFqEDgaIABBkAJqJAAgAguVAwEBfyMAQZACayIAJAAgACACNgKAAiAAIAE2AogCIAMQ2gEhBiAAQdABaiADIABB/wFqEPgCIABBwAFqEEQiASABEFQQPyAAIAFBABBBIgI2ArwBIAAgAEEQajYCDCAAQQA2AggDQAJAIABBiAJqIABBgAJqEIwBRQ0AIAAoArwBIAEQNSACakYEQCABEDUhAyABIAEQNUEBdBA/IAEgARBUED8gACADIAFBABBBIgJqNgK8AQsgAEGIAmoQaSAGIAIgAEG8AWogAEEIaiAALAD/ASAAQdABaiAAQRBqIABBDGpBsLgDEMoCDQAgAEGIAmoQexoMAQsLAkAgAEHQAWoQNUUNACAAKAIMIgMgAEEQamtBnwFKDQAgACADQQRqNgIMIAMgACgCCDYCAAsgBSACIAAoArwBIAQgBhDHBzcDACAAQdABaiAAQRBqIAAoAgwgBBCKASAAQYgCaiAAQYACahB0BEAgBCAEKAIAQQJyNgIACyAAKAKIAiECIAEQOBogAEHQAWoQOBogAEGQAmokACACC5UDAQF/IwBBkAJrIgAkACAAIAI2AoACIAAgATYCiAIgAxDaASEGIABB0AFqIAMgAEH/AWoQ+AIgAEHAAWoQRCIBIAEQVBA/IAAgAUEAEEEiAjYCvAEgACAAQRBqNgIMIABBADYCCANAAkAgAEGIAmogAEGAAmoQjAFFDQAgACgCvAEgARA1IAJqRgRAIAEQNSEDIAEgARA1QQF0ED8gASABEFQQPyAAIAMgAUEAEEEiAmo2ArwBCyAAQYgCahBpIAYgAiAAQbwBaiAAQQhqIAAsAP8BIABB0AFqIABBEGogAEEMakGwuAMQygINACAAQYgCahB7GgwBCwsCQCAAQdABahA1RQ0AIAAoAgwiAyAAQRBqa0GfAUoNACAAIANBBGo2AgwgAyAAKAIINgIACyAFIAIgACgCvAEgBCAGEMoHOwEAIABB0AFqIABBEGogACgCDCAEEIoBIABBiAJqIABBgAJqEHQEQCAEIAQoAgBBAnI2AgALIAAoAogCIQIgARA4GiAAQdABahA4GiAAQZACaiQAIAILlQMBAX8jAEGQAmsiACQAIAAgAjYCgAIgACABNgKIAiADENoBIQYgAEHQAWogAyAAQf8BahD4AiAAQcABahBEIgEgARBUED8gACABQQAQQSICNgK8ASAAIABBEGo2AgwgAEEANgIIA0ACQCAAQYgCaiAAQYACahCMAUUNACAAKAK8ASABEDUgAmpGBEAgARA1IQMgASABEDVBAXQQPyABIAEQVBA/IAAgAyABQQAQQSICajYCvAELIABBiAJqEGkgBiACIABBvAFqIABBCGogACwA/wEgAEHQAWogAEEQaiAAQQxqQbC4AxDKAg0AIABBiAJqEHsaDAELCwJAIABB0AFqEDVFDQAgACgCDCIDIABBEGprQZ8BSg0AIAAgA0EEajYCDCADIAAoAgg2AgALIAUgAiAAKAK8ASAEIAYQywc3AwAgAEHQAWogAEEQaiAAKAIMIAQQigEgAEGIAmogAEGAAmoQdARAIAQgBCgCAEECcjYCAAsgACgCiAIhAiABEDgaIABB0AFqEDgaIABBkAJqJAAgAguVAwEBfyMAQZACayIAJAAgACACNgKAAiAAIAE2AogCIAMQ2gEhBiAAQdABaiADIABB/wFqEPgCIABBwAFqEEQiASABEFQQPyAAIAFBABBBIgI2ArwBIAAgAEEQajYCDCAAQQA2AggDQAJAIABBiAJqIABBgAJqEIwBRQ0AIAAoArwBIAEQNSACakYEQCABEDUhAyABIAEQNUEBdBA/IAEgARBUED8gACADIAFBABBBIgJqNgK8AQsgAEGIAmoQaSAGIAIgAEG8AWogAEEIaiAALAD/ASAAQdABaiAAQRBqIABBDGpBsLgDEMoCDQAgAEGIAmoQexoMAQsLAkAgAEHQAWoQNUUNACAAKAIMIgMgAEEQamtBnwFKDQAgACADQQRqNgIMIAMgACgCCDYCAAsgBSACIAAoArwBIAQgBhDMBzYCACAAQdAB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IgkQTCEgIAYgAhBMIRQgBiACQQFqIgUQTCEXIAogCRBMIRUgCiACEEwhISAKIAUQTCEWIAcgCRBMIRkgByACEEwhGyAHIAUQTCEYA0AgBCAkRgRAIAUhAgwCBQJAICEgBEECdCICaiIJKgIAEG4gNV0NAAJAAkAgCSoCACIvICAgBEEBa0ECdCIJaioCACIyXkUNACAvIAIgIGoqAgBeRQ0AIC8gICAEQQFqQQJ0Ig1qKgIAXkUNACAvIAkgFGoqAgBeRQ0AIC8gAiAUaioCAF5FDQAgLyANIBRqKgIAXkUNACAvIAkgF2oqAgBeRQ0AIC8gAiAXaioCAF5FDQAgLyANIBdqKgIAXkUNACAvIAkgFWoqAgBeRQ0AIC8gAiAVaioCAF5FDQAgLyANIBVqKgIAXkUNACAvIAkgIWoqAgBeRQ0AIC8gDSAhaioCAF5FDQAgLyAJIBZqKgIAXkUNACAvIAIgFmoqAgBeRQ0AIC8gDSAWaioCAF5FDQAgLyAJIBlqKgIAXkUNACAvIAIgGWoqAgBeRQ0AIC8gDSAZaioCAF5FDQAgLyAJIBtqKgIAXkUNACAvIAIgG2oqAgBeRQ0AIC8gDSAbaioCAF5FDQAgLyAJIBhqKgIAXkUNACAvIAIgGGoqAgBeRQ0AIC8gDSAYaioCAF4NAQsgLyAyXUUNASAvIAIgIGoqAgBdRQ0BIC8gICAEQQFqQQJ0Ig1qKgIAXUUNASAvIAkgFGoqAgBdRQ0BIC8gAiAUaioCAF1FDQEgLyANIBRqKgIAXUUNASAvIAkgF2oqAgBdRQ0BIC8gAiAXaioCAF1FDQEgLyANIBdqKgIAXUUNASAvIAkgFWoqAgBdRQ0BIC8gAiAVaioCAF1FDQEgLyANIBVqKgIAXUUNASAvIAkgIWoqAgBdRQ0BIC8gDSAhaioCAF1FDQEgLyAJIBZqKgIAXUUNASAvIAIgFmoqAgBdRQ0BIC8gDSAWaioCAF1FDQEgLyAJIBlqKgIAXUUNASAvIAIgGWoqAgBdRQ0BIC8gDSAZaioCAF1FDQEgLyAJIBtqKgIAXUUNASAvIAIgG2oqAgBdRQ0BIC8gDSAbaioCAF1FDQEgLyAJIBhqKgIAXUUNASAvIAIgGGoqAgBdRQ0BIC8gDSAYaioCAF1FDQELIAsgLzgCICALIBI2AhggCyAQNgIUIAsgDyAQ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IAMgDUEgahBaIAJBOGogAyANQShqEFogCCACQQxqIgMgAkEIaiIFIC8gNpQQhQIgBiAIIAIqAhAgAioCFCACKAIMIAIoAggQWDgCACAGIAggAioCGCACKgIcIAIoAgwgAigCCBBYOAIEIAYgCCACKgIgIAIqAiQgAigCDCACKAIIEFg4AgggBiAIIAIqAiggAioCLCACKAIMIAIoAggQWDgCDCAGIAggAioCMCACKgI0IAIoAgwgAigCCBBYOAIQIAYgCCACKgI4IAIqAjwgAigCDCACKAIIEFg4AhQgCCADIAUgLyAzlBCFAiAGIAggAioCQCACKgJEIAIoAgwgAigCCBBYOAIYIAYgCCACKgJIIAIqAkwgAigCDCACKAIIEFg4AhwgBiAIIAIqAlAgAioCVCACKAIMIAIoAggQWDgCICAGIAggAioCWCACKgJcIAIoAgwgAigCCBBYOAIkIAYgCCACKgJgIAIqAmQgAigCDCACKAIIEFg4AiggBiAIIAIqAmggAioCbCACKAIMIAIoAggQWDgCLCAIIAMgBSAvIDWUEIUCIAYgCCACKgJwIAIqAnQgAigCDCACKAIIEFg4AjAgBiAIIAIqAnggAioCfCACKAIMIAIoAggQWDgCNCAGIAggAioCgAEgAioChAEgAigCDCACKAIIEFg4AjggBiAIIAIqAogBIAIqAowBIAIoAgwgAigCCBBYOAI8IAYgCCACKgKQASACKgKUASACKAIMIAIoAggQWDgCQCAGIAggAioCmAEgAioCnAEgAigCDCACKAIIEFg4AkQgCCADIAUgLyA0lBCFAiAGIAggAioCoAEgAioCpAEgAigCDCACKAIIEFg4AkggBiAIIAIqAqgBIAIqAqwBIAIoAgwgAigCCBBYOAJMIAYgCCACKgKwASACKgK0ASACKAIMIAIoAggQWDgCUCAGIAggAioCuAEgAioCvAEgAigCDCACKAIIEFg4AlQgBiAIIAIqAsABIAIqAsQBIAIoAgwgAigCCBBYOAJYIAYgCCACKgLIASACKgLMASACKAIMIAIoAggQWDgCXCAIIAMgBSAvIDKUEIUCIAYgCCACKgLQASACKgLUASACKAIMIAIoAggQWDgCYCAGIAggAioC2AEgAioC3AEgAigCDCACKAIIEFg4AmQgBiAIIAIqAuABIAIqAuQBIAIo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bmRpZGF0ZXMgZm9yIHRyYWNraW5nIGFyZSBvdmVyZmxvdy4KAGFyZ2xDYW1lcmFGcnVzdHVtUkgoKTogYXJQYXJhbURlY29tcE1hdCgpIGluZGljYXRlZCBwYXJhbWV0ZXIgZXJyb3IuCgBhclZpZGVvT3BlbjogRXJyb3IsIHZpZGVvIGRldmljZSBhbHJlYWR5IG9wZW4uCgBrcG1EZWxldGVSZWZEYXRhU2V0KCk6IE5VTEwgcmVmRGF0YVNldFB0ci9yZWZJbWFnZS4KAFN0YXJ0IHRyYWNraW5nX3RocmVhZCAjJWQuCgBPdXQgb2YgbWVtb3J5ISEKAERhdGEgbnVtIGVycm9yISEKAHcASUQgYWxyZWFkeSBleGlzdHMAJXMlcwAlcy4lcwB2ZWN0b3IAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL29yaWVudGF0aW9uX2Fzc2lnbm1lbnQuY3BwAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2ZyYW1ld29yay90aW1lcnMuY3BwAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9oYXJyaXMuY3BwAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9Eb0dfc2NhbGVfaW52YXJpYW50X2RldGVjdG9yLmNwcAAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9tYXRjaGVycy9ob3VnaF9zaW1pbGFyaXR5X3ZvdGluZy5jcHAAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZnJhbWV3b3JrL2ltYWdlLmNwcAAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvZ2F1c3NpYW5fc2NhbGVfc3BhY2VfcHlyYW1pZC5jcHAAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL3B5cmFtaWQuY3BwAGluZm8ARXJyb3I6IGljcEdldEpfVV9YYwB3YgByYgBBUl9QSVhFTF9GT1JNQVRfUkdCAFBhdHRlcm4gZXh0cmFjdGlvbiBmYWlsZWQuAEFzc2VydGlvbiBgcHlyYW1pZGAgZmFpbGVkIGluIABUcmFja2luZyB0aHJlYWQgPSAlZAoAU0laRSA9ICVkLCAlZAoARXJyb3IgMjogaWNwR2V0SW5pdFh3MlhjCgA/Pz8gMgoARXJyb3I6IHVuc3VwcG9ydGVkIHBpeGVsIGZvcm1hdC4KAGFyVmlkZW9PcGVuQXN5bmM6IEVycm9yLCB2aWRlbyBkZXZpY2UgYWxyZWFkeSBvcGVuLgoAVW5rbm93biBvciB1bnN1cHBvcnRlZCBsYWJlbGluZyB0aHJlc2hvbGQgbW9kZSByZXF1ZXN0ZWQuIFNldCB0byBtYW51YWwuCgBrcG1EZWxldGVSZWZEYXRhU2V0KCk6IDAgeHNpemUveXNpemUvZHBpLgoARXJyb3IgKCVkKTogdW5hYmxlIHRvIG9wZW4gY2FtZXJhIHBhcmFtZXRlcnMgZmlsZSAiJXMiIGZvciB3cml0aW5nLgoARXJyb3I6IE5VTEwgcGF0dEhhbmRsZS4KAEVuZCB0cmFja2luZ190aHJlYWQgIyVkLgoARXJyb3I6IHVuYWJsZSB0byBvcGVuIG11bHRpbWFya2VyIGNvbmZpZyBmaWxlICclcycuCgBPdXQgb2YgbWVtb3J5ISEKAHIAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvZnJlYWsuaAB3YXJuaW5nACAlMTBnAEJ1aWxkIFB5cmFtaWQAJTRkAHdiAHJiAEFSX1BJWEVMX0ZPUk1BVF9CR1IATUFOVUFMAEFSX1BJWEVMX0ZPUk1BVF9SR0IAR2VuZXJpYyBlcnJvciBkdXJpbmcgbWF0Y2hpbmcgcGhhc2UuACBsaW5lIAAlcyVzCgBGaWxlIG9wZW4gZXJyb3IuICVzCgBEaXN0b3J0aW9uIGZhY3RvcjogazE9JTEuMTBmLCBrMj0lMS4xMGYsIHAxPSUxLjEwZiwgcDI9JTEuMTBmCgBFcnJvcjogbWFsbG9jCgBFcnJvciAzOiBpY3BHZXRJbml0WHcyWGMKAEVycm9yIGljcEdldEpfVV9TCgA9PT09PT0gJXMgPT09PT09PT0KAD8/PyAzCgBFcnJvcjogY2FuJ3QgbG9hZCBwYXR0ZXJuIGZyb20gTlVMTCBidWZmZXIuCgBrcG1TZXRSZWZEYXRhU2V0KCk6IE5VTEwga3BtSGFuZGxlL2ZpbGVuYW1lLgoARXJyb3Igc2F2aW5nIGZlYXR1cmUgbWFwOiBlcnJvciB3cml0aW5nIGRhdGEuCgBPdXQgb2YgbWVtb3J5ISEKAGVycm9yAEZyZWFrIGZlYXR1cmVzIC0gJWQAcmIAQVJfUElYRUxfRk9STUFUX0JHUgBBVVRPX01FRElBTgBBUl9QSVhFTF9GT1JNQVRfUkdCQQBJbnN1ZmZpY2llbnQgY29udHJhc3QgZHVyaW5nIG1hdGNoaW5nLgAlNy41ZiAAIGxpbmUgAEVycm9yIG9wZW5pbmcgZmlsZSAnJXMnOiAAICAgICAgICAgICAgICAgICAgZng9JWYsIGZ5PSVmLCB4MD0lZiwgeTA9JWYsIHM9JWYKAEVycm9yIDQ6IGljcEdldEluaXRYdzJYYwoARXJyb3IgaWNwR2V0VV9mcm9tX1hfYnlfTWF0WDJVCgBFcnJvciBhbGxvY2F0aW5nIG1lbW9yeS4KAEVycm9yOiBvdXQgb2YgbWVtb3J5LgoARXJyb3I6IFVuYWJsZSB0byBvcGVuIGZpbGUgJyVzJyBmb3Igd3JpdGluZy4KAEVycm9yOiB1bmFibGUgdG8gb3BlbiBmaWxlICclcyVzJyBmb3IgcmVhZGluZy4KAE91dCBvZiBtZW1vcnkhIQoAU3RlcCBzaXplIG11c3QgYmUgZXF1YWwgdG8gd2lkdGggZm9yIG5vdwBFeHRyYWN0IEZlYXR1cmVzACVzAFdpZHRoIGNhbm5vdCBiZSB6ZXJvAFNvdXJjZSB3aWR0aCBtdXN0IGJlIGV2ZW4ASW1hZ2UgaXMgdG9vIHNtYWxsAHggb3V0IG9mIHJhbmdlAENsb2NrIGhhcyBub3QgYmVlbiBzdGFydGVkAFB5cmFtaWQgaXMgbm90IGFsbG9jYXRlZAAlZAByYgBBVVRPX09UU1UAQVJfUElYRUxfRk9STUFUX0JHUkEAQVJfUElYRUxfRk9STUFUX1JHQkEAd3AgbXVzdCBiZSBhdCBsZWFzdCAxAEJhcmNvZGUgbWF0Y2hpbmcgY291bGQgbm90IGZpbmQgY29ycmVjdCBiYXJjb2RlIGxvY2F0b3IgcGF0dGVybi4AWyVzXSAAOiAAJXMlcwoARGlzdG9ydGlvbiBmYWN0b3IgPSAlZiAlZiAlZiAlZiAlZiAlZgoARXJyb3IgNTogaWNwR2V0SW5pdFh3MlhjCgBFcnJvciBpY3BHZXRYY19mcm9tX1h3X2J5X01hdFh3MlhjCgBFcnJvciByZWFkaW5nIGltYWdlU2V0LgoARXJyb3Igd2hpbGUgYWRkaW5nIHJlZmVyZW5jZSBkYXRhIHNldDoga3BtR2VuUmVmRGF0YVNldCgpIGZhaWxlZC4KAEVycm9yIG9wZW5pbmcgJyVzJy4KAENhbid0IG9wZW4gSlBFRyBmaWxlICclcycKAE91dCBvZiBtZW1vcnkhIQoAUGF0dGVybiBEYXRhIHJlYWQgZXJyb3IhIQoAUmVhZCBlcnJvciEhCgBbJXNdIFslc10gWyVzXSA6IEZvdW5kICVkIGZlYXR1cmVzACVmAHdiAEFSX1BJWEVMX0ZPUk1BVF9BQkdSAFB5cmFtaWQgaXMgTlVMTABBVVRPX0FEQVBUSVZFAEFSX1BJWEVMX0ZPUk1BVF9CR1JBAEJhcmNvZGUgbWF0Y2hpbmcgZXJyb3IgZGV0ZWN0aW9uL2NvcnJlY3Rpb24gZm91bmQgdW5yZWNvdmVyYWJsZSBlcnJvci4ARXJyb3IgY3JlYXRpbmcgZnVsbCBmaWxlIHBhdGggZnJvbSAnJXMnIGFuZCAnJXMnAEFzc2VydGlvbiBgeCA8IG1NYXhYYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaGVpZ2h0ID49IDVgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBoZWlnaHQgPj0gMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGhlaWdodCA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBtSW1hZ2VzLnNpemUoKSA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB4ID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBtU3RvcFRpbWUgPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGRzdCAhPSAwYCBmYWlsZWQgaW4gACVzJXMKAERpc3RvcnRpb24gZmFjdG9yID0gJWYgJWYgJWYgJWYgJWYKAEVycm9yID0gJWYKAEVycm9yIDY6IGljcEdldEluaXRYdzJYYwoAICAgICAgICAgSW1hZ2VTaXplID0gJTdkW3BpeGVsXQoAPT09PT09PT09ICVkID09PT09PT09PT09CgBJbWFnZXNldCBjb250YWlucyAlZCBpbWFnZXMuCgBFcnJvcjogVW5hYmxlIHRvIG9wZW4gZmlsZSAnJXMnIGZvciByZWFkaW5nLgoARXJyb3IgKCVkKTogdW5hYmxlIHRvIG9wZW4gY2FtZXJhIHBhcmFtZXRlcnMgZmlsZSAiJXMiIGZvciByZWFkaW5nLgoARXJyb3IgcHJvY2Vzc2luZyBtdWx0aW1hcmtlciBjb25maWcgZmlsZSAnJXMnOiBGaXJzdCBsaW5lIG11c3QgYmUgbnVtYmVyIG9mIG1hcmtlciBjb25maWdzIHRvIHJlYWQuCgBFcnJvciByZWFkaW5nIHBhdHRlcm4gZmlsZSAnJXMnLgoASGVpZ2h0IGNhbm5vdCBiZSB6ZXJvACVmICVmICVmICVmAHggbXVzdCBiZSBwb3NpdGl2ZQBMYXBsYWNpYW4gcHlyYW1pZCBoYXMgbm90IGJlZW4gYWxsb2NhdGVkAENsb2NrIGhhcyBub3QgYmVlbiBzdG9wcGVkAEFSX1BJWEVMX0ZPUk1BVF9BQkdSAEFSX1BJWEVMX0ZPUk1BVF9NT05PAERlc3RpbmF0aW9uIGlzIE5VTEwAQVVUT19CUkFDS0VUSU5HAGhwIG11c3QgYmUgYXQgbGVhc3QgMQBFcnJvciAoJWQpOiB1bmFibGUgdG8gZGV0ZXJtaW5lIGZpbGUgbGVuZ3RoLgBNYXRjaGluZyBjb25maWRlbmNlIGN1dG9mZiB2YWx1ZSBub3QgcmVhY2hlZC4AQXNzZXJ0aW9uIGB5ID49IG1NaW5ZYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW1hZ2UudHlwZSgpID09IElNQUdFX1VJTlQ4YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgc3RvcmUuc2l6ZSgpID09IHBvaW50cy5zaXplKClgIGZhaWxlZCBpbiAAIElORk8gIAAlcyVzCgBEaXN0b3J0aW9uIGZhY3RvciA9ICVmICVmICVmICVmCgBFcnJvciA3OiBpY3BHZXRJbml0WHcyWGMKAEV4dHJhY3RlZCBmZWF0dXJlcyA9ICU3ZFtwaXhlbF0KAEVycm9yIGljcDJHZXRUUwoARmFsbGluZyBiYWNrIHRvIHJlYWRpbmcgJyVzJXMnIGluIEFSVG9vbEtpdCB2NC54IGZvcm1hdC4KAEVycm9yIGluIG9wZW5pbmcgJyVzJyBpbiB6aXBmaWxlLgoARXJyb3IgcmVhZGluZyBKUEVHIGZpbGUuCgBFcnJvciB3aGlsZSBhZGRpbmcgcmVmZXJlbmNlIGRhdGEgc2V0OiBrcG1NZXJnZVJlZkRhdGFTZXQoKSBmYWlsZWQuCgBFcnJvciBzYXZpbmcgZmVhdHVyZSBzZXQ6IGVycm9yIHdyaXRpbmcgZGF0YS4KAE91dCBvZiBtZW1vcnkhIQoAAAAAAABADgAABBAAAEoSAABdFAAAaRgAAEJ1aWxkIEluZGV4AFslc10gWyVzXSBbJXNdIDogJXM6ICVmIG1zAEltYWdlIG11c3QgYmUgZ3JheXNjYWxlAHkgb3V0IG9mIHJhbmdlAEZlYXR1cmUgc3RvcmUgaGFzIG5vdCBiZWVuIGFsbG9jYXRlZAAlZAAlbGx1JWMAd2IAQVJfUElYRUxfRk9STUFUX01PTk8AQVJfUElYRUxfRk9STUFUX0FSR0IATWF4aW11bSBhbGxvd2FibGUgcG9zZSBlcnJvciBleGNlZWRlZC4AQXNzZXJ0aW9uIGBzdGVwID49IHdpZHRoYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaSsxK2NodW5rX3NpemUgPCB3aWR0aGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHB5cmFtaWQtPm51bU9jdGF2ZXMoKSA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBzcmMgIT0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHggPCBtR3JhZGllbnRzW29jdGF2ZSptTnVtU2NhbGVzUGVyT2N0YXZlK3NjYWxlXS53aWR0aCgpYCBmYWlsZWQgaW4gAEVycm9yIGluIG9wZW5pbmcgJyVzJyBmb3IgcmVhZGluZwoAIEZpbHRlcmVkIGZlYXR1cmVzID0gJTdkW3BpeGVsXQoATGFiZWxpbmcgdGhyZXNob2xkIG1vZGUgc2V0IHRvICVzLgoARXJyb3IgcmVhZGluZyBKUEVHIGZpbGUgaGVhZGVyLgoARXJyb3I6IHN1cHBsaWVkIGZpbGUgZG9lcyBub3QgYXBwZWFyIHRvIGJlIGFuIEFSVG9vbEtpdCBjYW1lcmEgcGFyYW1ldGVyIGZpbGUuCgBrcG1EZWxldGVSZWZEYXRhU2V0KCk6IE5VTEwgcmVmRGF0YVNldFB0cjEvcmVmRGF0YVNldFB0cjIuCgBDYW4ndCByZWFkIEpQRUcgZmlsZSAnJXMnCgBBUl9QSVhFTF9GT1JNQVRfMnZ1eQBQeXJhbWlkIGRvZXMgbm90IGNvbnRhaW4gYW55IGxldmVscwBTdGVwIG11c3QgYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRoZSB3aWR0aAB4IG11c3QgYmUgbGVzcyB0aGFuIHRoZSBpbWFnZSB3aWR0aABFeHRlbmRpbmcgYmV5b25kIHRoZSB3aWR0aCBvZiB0aGUgaW1hZ2UAU291cmNlIGlzIE5VTEwAQVJfUElYRUxfRk9STUFUX0FSR0IARXJyb3IgKCVkKTogdW5hYmxlIHRvIHJlYWQgZnJvbSBmaWxlLgBNdWx0aS1tYXJrZXIgcG9zZSBlcnJvciB2YWx1ZSBleGNlZWRlZC4ADSU0ZC8lNGQuAEFzc2VydGlvbiBgcHlyYW1pZGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHkgPCBtTWF4WWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGltYWdlLmNoYW5uZWxzKCkgPT0gMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYG51bV9wb2ludHMgPT0gcG9pbnRzLnNpemUoKWAgZmFpbGVkIGluIAAlNy41ZiAAIElORk8gIABrcG1TZXRSZWZEYXRhU2V0KCk6IE5VTEwga3BtSGFuZGxlL3JlZkRhdGFTZXQuCgBrcG1EZWxldGVSZWZEYXRhU2V0KCk6IE5VTEwgcmVmRGF0YVNldFB0ci4KAEVycm9yOiB1bmFibGUgdG8gb3BlbiBmaWxlICclcycgZm9yIHdyaXRpbmcuCgBFcnJvciBwcm9jZXNzaW5nIG11bHRpbWFya2VyIGNvbmZpZyBmaWxlICclcyc6IHBhdHRlcm4gJyVzJyBzcGVjaWZpZWQgaW4gbXVsdGltYXJrZXIgY29uZmlndXJhdGlvbiB3aGlsZSBpbiBiYXJjb2RlLW9ubHkgbW9kZS4KAEVycm9yOiBVbnN1cHBvcnRlZCBwaXhlbCBmb3JtYXQgKCVkKSByZXF1ZXN0ZWQuCgBFcnJvciBpbiByZWFkaW5nICclcycuCgAKIyMjIFN1cmZhY2UgTm8uJWQgIyMjCgBB1MIAC9kgAQAAAAEAAAABAAAAAAAAAP//////////////////////////AAAAAAEAAAABAAAAAQAAAAAAAAD/////QVJfUElYRUxfRk9STUFUXzJ2dXkAQVJfUElYRUxfRk9STUFUX3l1dnMAJXMASW1hZ2UgbXVzdCBoYXZlIDEgY2hhbm5lbAAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9tYXRjaGVycy92aXN1YWxfZGF0YWJhc2UuaABTaG91bGQgYmUgc2FtZSBzaXplAFJlamVjdGVkIGZyZXF1ZW50bHkgbWlzcmVjb2duaXNlZCBtYXRyaXggbWFya2VyLgBBc3NlcnRpb24gYGJ1Y2tldFswXS5maXJzdCA+PSBidWNrZXRbbl0uZmlyc3RgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBhbmdsZSA+IC1QSWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGNoYW5uZWxzID4gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHNyY193aWR0aCA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB5ID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkeW5hbWljX2Nhc3Q8Y29uc3QgQmlub21pYWxQeXJhbWlkMzJmKj4ocHlyYW1pZClgIGZhaWxlZCBpbiAAa3BtU2F2ZVJlZkRhdGFTZXQoKTogTlVMTCBmaWxlbmFtZS9yZWZEYXRhU2V0LgoAa3BtU2V0UmVmRGF0YVNldCgpOiByZWZEYXRhU2V0LgoARXJyb3I6IHN1cHBsaWVkIGJ1ZmZlciBkb2VzIG5vdCBhcHBlYXIgdG8gYmUgQVJUb29sS2l0IGNhbWVyYSBwYXJhbWV0ZXJzLgoARXJyb3IgcHJvY2Vzc2luZyBtdWx0aW1hcmtlciBjb25maWcgZmlsZSAnJXMnOiBVbmFibGUgdG8gZGV0ZXJtaW5lIGRpcmVjdG9yeSBuYW1lLgoARXJyb3IgaW4gd3JpdGluZyAnJXMnIGluIHRoZSB6aXBmaWxlLgoARXJyb3Igc2F2aW5nIGltYWdlIHNldDogZXJyb3Igd3JpdGluZyBkYXRhLgoAQVJfUElYRUxfRk9STUFUX3l1dnMATnVtYmVyIG9mIGNoYW5uZWxzIGNhbm5vdCBiZSB6ZXJvAHkgbXVzdCBiZSBwb3NpdGl2ZQBXaWR0aCBtdXN0IGJlIHBvc2l0aXZlAGFuZ2xlIG91dCBvZiByYW5nZQBPbmx5IGJpbm9taWFsIHB5cmFtaWQgaXMgc3VwcG9ydGVkAG50aF9lbGVtZW50IGZhaWxlZABBUl9QSVhFTF9GT1JNQVRfUkdCXzU2NQBBc3NlcnRpb24gYG1QeXJhbWlkLnNpemUoKSA9PSBtTnVtT2N0YXZlcyptTnVtU2NhbGVzUGVyT2N0YXZlYCBmYWlsZWQgaW4gACBsaW5lIABGaWVsZC1vZi12aWV3IHZlcnRpY2FsID0gJS4xZiwgaG9yaXpvbnRhbCA9ICUuMWYgZGVncmVlcywgYXNwZWN0IHJhdGlvID0gJS4zZgoATWF4IGZlYXR1cmUgPSAlZAoAICBSZWFkIEltYWdlU2V0LgoARXJyb3Igc2F2aW5nIEtQTSBkYXRhOiB1bmFibGUgdG8gb3BlbiBmaWxlICclcyVzJXMnIGZvciB3cml0aW5nLgoARXJyb3IgKCVkKTogdW5hYmxlIHRvIG9wZW4gZXh0ZXJuYWwgcGFyYW1ldGVycyBmaWxlICIlcyIgZm9yIHdyaXRpbmcuCgBFcnJvciBpbiBjbG9zaW5nICVzIGluIHRoZSB6aXBmaWxlLgoAQXV0byB0aHJlc2hvbGQgKGJyYWNrZXQpIG1hcmtlciBjb3VudHMgLVslM2Q6ICUzZF0gWyUzZDogJTNkXSBbJTNkOiAlM2RdKy4KAEVycm9yIHByb2Nlc3NpbmcgbXVsdGltYXJrZXIgY29uZmlnIGZpbGUgJyVzJzogVW5hYmxlIHRvIGxvYWQgcGF0dGVybiAnJXMnLgoAT3V0IG9mIG1lbW9yeSEhCgBQeXJhbWlkIGhhcyBub3QgYmVlbiBhbGxvY2F0ZWQgeWV0ACVsZgBBUl9QSVhFTF9GT1JNQVRfUkdCXzU2NQBBUl9QSVhFTF9GT1JNQVRfUkdCQV81NTUxAC4AQXNzZXJ0aW9uIGBwWzBdID4gcG0xWy0xXWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGFuZ2xlIDw9IFBJYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZC50eXBlKCkgPT0gSU1BR0VfRjMyYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgc3JjX2hlaWdodCA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBvY3RhdmUgPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHkgPCBtR3JhZGllbnRzW29jdGF2ZSptTnVtU2NhbGVzUGVyT2N0YXZlK3NjYWxlXS5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYG1EYXRhLmdldCgpYCBmYWlsZWQgaW4gADogACUzZDogKCUzZCwlM2QpIDogJWYgbWluPSVmIG1heD0lZiwgc2Q9JWYKAHBvaW50cy0lZAoARXJyb3IgKCVkKTogdW5hYmxlIHRvIG9wZW4gZXh0ZXJuYWwgcGFyYW1ldGVycyBmaWxlICIlcyIgZm9yIHJlYWRpbmcuCgBBdXRvIHRocmVzaG9sZCAoYnJhY2tldCkgYWRqdXN0ZWQgdGhyZXNob2xkIHRvICVkLgoARXJyb3Igb3BlbmluZyBmaWxlICclcy5pc2V0Jy4KAEVycm9yIGluIGNsb3NpbmcgJyVzJy4KAHkgbXVzdCBiZSBsZXNzIHRoYW4gdGhlIGltYWdlIGhlaWdodAAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvZ2F1c3NpYW5fc2NhbGVfc3BhY2VfcHlyYW1pZC5oAEhlaWdodCBtdXN0IGJlIHBvc2l0aXZlAE9ubHkgRjMyIGltYWdlcyBzdXBwb3J0ZWQAU2hvdWxkIGJlIG1heGltYQBEYXRhIHBvaW50ZXIgaXMgTlVMTABQeXJhbWlkIGlzIE5VTEwAQVJfUElYRUxfRk9STUFUX1JHQkFfNDQ0NABBUl9QSVhFTF9GT1JNQVRfUkdCQV81NTUxAEFzc2VydGlvbiBgc2NhbGUgPj0gbU1pblNjYWxlYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW1hZ2Uud2lkdGgoKSA9PSBtUHlyYW1pZFswXS53aWR0aCgpYCBmYWlsZWQgaW4gAFslIC4zZiAlIC4zZiAlIC4zZl0gWyUgNi4xZl0KAEVycm9yIHByb2Nlc3NpbmcgbXVsdGltYXJrZXIgY29uZmlnIGZpbGUgJyVzJywgbWFya2VyIGRlZmluaXRpb24gJTNkOiBGaXJzdCBsaW5lIG11c3QgYmUgcGF0dGVybiB3aWR0aC4KAEVycm9yICglZCk6IHVuYWJsZSB0byBvcGVuIG9wdGljYWwgcGFyYW1ldGVycyBmaWxlICIlcyIgZm9yIHdyaXRpbmcuCgBrcG1TZXRSZWZEYXRhU2V0RmlsZSgpOiBOVUxMIGtwbUhhbmRsZS9maWxlbmFtZS4KACAgICBlbmQuCgBBdXRvIHRocmVzaG9sZCAoJXMpIGFkanVzdGVkIHRocmVzaG9sZCB0byAlZC4KAC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoAQVJfUElYRUxfRk9STUFUXzQyMHYAbWVkaWFuACVsZiAlbGYgJWxmICVsZgBPY3RhdmUgbXVzdCBiZSBwb3NpdGl2ZQBzY2FsZSBvdXQgb2YgcmFuZ2UASW1hZ2Ugb2Ygd3Jvbmcgc2l6ZSBmb3IgcHlyYW1pZABVbmFibGUgdG8gYWxsb2NhdGUgaW1hZ2UgZGF0YQBBUl9QSVhFTF9GT1JNQVRfUkdCQV80NDQ0AEFzc2VydGlvbiBgZGV0ZWN0b3JgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBwWzBdID4gcG0xWzBdYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW0xLnR5cGUoKSA9PSBJTUFHRV9GMzJgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBnLmNoYW5uZWxzKCkgPT0gMmAgZmFpbGVkIGluIABBc3NlcnRpb24gYHNyY19zdGVwID4gMGAgZmFpbGVkIGluIAAlM2QsICUzZDogbWF4X3NpbSA9ICVmCgAgIFJlYWQgRmVhdHVyZVNldC4KAENhbm5vdCBmaW5kIHRoZSBwYWdlIGZvciBza2lwcGluZy4KAEVycm9yICglZCk6IHVuYWJsZSB0byBvcGVuIG9wdGljYWwgcGFyYW1ldGVycyBmaWxlICIlcyIgZm9yIHJlYWRpbmcuCgBFcnJvciBzYXZpbmcgS1BNIGRhdGE6IGVycm9yIHdyaXRpbmcgZGF0YS4KAEFSX1BJWEVMX0ZPUk1BVF80MjB2AE90c3UAQVJfUElYRUxfRk9STUFUXzQyMGYAJWYgJWYAU3RlcCBtdXN0IGJlIHBvc2l0aXZlAEludmFsaWQgaW1hZ2UgdHlwZQBEZXRlY3RvciBpcyBOVUxMAE51bWJlciBvZiBjaGFubmVscyBzaG91bGQgYmUgMgBBc3NlcnRpb24gYG9jdGF2ZSA8IG1OdW1PY3RhdmVzYCBm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NAAAAEsAAAApAAAASAAAAFUAAABQAAAAZgAAADwAAAB8AAAAaQAAABkAAAAoAAAAMwAAAGUAAABUAAAAGAAAAHsAAABTAAAAMgAAADEAAAB6AAAAeAAAAHkAAABPY3RhdmUgbXVzdCBiZSBsZXNzIHRoYW4gbnVtYmVyIG9mIG9jdGF2ZXMAQVJfUElYRUxfRk9STUFUXzQyMGYAQVJfUElYRUxfRk9STUFUX05WMjEAQXNzZXJ0aW9uIGBwWzBdID4gcFstMV1gIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkc3QudHlwZSgpID09IElNQUdFX0YzMmAgZmFpbGVkIGluIABBc3NlcnRpb24gYGQuY2hhbm5lbHMoKSA9PSAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbWF4X2hlaWdodCA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkc3Rfd2lkdGggPiAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgc2l6ZSA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBweXJhbWlkLT5pbWFnZXMoKS5zaXplKCkgPiAwYCBmYWlsZWQgaW4gAFBhZ2VbJWRdICBwcmU6JTNkLCBhZnQ6JTNkLCBlcnJvciA9ICVmCgAlM2QsICUzZDogbWF4X3NpbSA9ICVmLCAobWF4LG1pbikgPSAlZiwgJWYsIHNkID0gJWYKACAgUmVhZCBNYXJrZXJTZXQuCgBFcnJvciBwcm9jZXNzaW5nIG11bHRpbWFya2VyIGNvbmZpZyBmaWxlICclcycsIG1hcmtlciBkZWZpbml0aW9uICUzZDogTGluZXMgMiAtIDQgbXVzdCBiZSBtYXJrZXIgdHJhbnNmb3JtLgoARXJyb3IgbG9hZGluZyBLUE0gZGF0YTogdW5hYmxlIHRvIG9wZW4gZmlsZSAnJXMlcyVzJyBmb3IgcmVhZGluZy4KAFB5cmFtaWQgaXMgZW1wdHkARGVzdGluYXRpb24gaW1hZ2Ugc2hvdWxkIGJlIGEgZmxvYXQAbXJrAHNpemUgbXVzdCBiZSBwb3NpdGl2ZQBNYXhpbXVtIGJpbiBzaG91bGQgYmUgcG9zaXRpdmUAT25seSBzaW5nbGUgY2hhbm5lbCBpbWFnZXMgc3VwcG9ydGVkAEFSX1BJWEVMX0ZPUk1BVF9OVjIxAEFzc2VydGlvbiBgcFswXSA+IHBbMV1gIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkc3Rfc3RlcCA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBzY2FsZSA+PSAwYCBmYWlsZWQgaW4gAEpQRUcgZmlsZSBoYXMgdW5zdXBwb3J0ZWQgJWQtY29tcG9uZW50IHBpeGVscwoARXJyb3IgbG9hZGluZyBLUE0gZGF0YTogZXJyb3IgcmVhZGluZyBkYXRhLgoAYXJVdGlsR2V0UGl4ZWxGb3JtYXROYW1lOiBFcnJvciwgdW5yZWNvZ25pc2VkIHBpeGVsIGZvcm1hdCAoJWQpLgoAU2NhbGUgbXVzdCBiZSBwb3NpdGl2ZQBVbmtub3duIGltYWdlIHR5cGUAQXNzZXJ0aW9uIGBwWzBdID4gcHAxWy0xXWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGhpc3QgIT0gTlVMTGAgZmFpbGVkIGluIABBc3NlcnRpb24gYChzcmNfd2lkdGglMikgPT0gMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGltMS5jaGFubmVscygpID09IDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBtUmVmSW1hZ2VXaWR0aCA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBweXJhbWlkLT5pbWFnZXMoKVswXS53aWR0aCgpID09IGRldGVjdG9yLT53aWR0aCgpYCBmYWlsZWQgaW4gAE91dCBvZiBtZW1vcnkuCgBrcG1DaGFuZ2VQYWdlTm9PZlJlZkRhdGFTZXQoKTogTlVMTCByZWZEYXRhU2V0LgoAYXJWaWRlb1V0aWxHZXRQaXhlbEZvcm1hdE5hbWU6IEVycm9yLCB1bnJlY29nbmlzZWQgcGl4ZWwgZm9ybWF0ICglZCkuCgBFcnJvciBvcGVuaW5nIGZpbGUgJyVzLm1yaycuCgAlJSUwMngAdmVjdG9yAFB5cmFtaWQgYW5kIGRldGVjdG9yIHNpemUgbWlzbWF0Y2gAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL29yaWVudGF0aW9uX2Fzc2lnbm1lbnQuaAAlZiAlZiAlZiAlZgB3aWR0aCBtdXN0IGJlIHBvc2l0aXZlAFVuc3VwcG9ydGVkIGltYWdlIHR5cGUAU291cmNlIHdpZHRoIG11c3QgYmUgb2RkAEFzc2VydGlvbiBgc2NhbGUgPCBtTnVtU2NhbGVzUGVyT2N0YXZlYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgcFswXSA+IHBwMVswXWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGltMi5jaGFubmVscygpID09IDFgIGZhaWxlZCBpbiAAL3Byb2Mvc2VsZi9leGUAU2NhbGUgbXVzdCBiZSBsZXNzIHRoYW4gbnVtYmVyIG9mIHNjYWxlIHBlciBvY3RhdmUASGlzdG9ncmFtIHBvaW50ZXIgaXMgTlVMTABBc3NlcnRpb24gYHBbMF0gPiBwcDFbMV1gIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAoY2h1bmtfc2l6ZSUyKT09MGAgZmFpbGVkIGluIABBc3NlcnRpb24gYG1SZWZJbWFnZUhlaWdodCA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBweXJhbWlkLT5pbWFnZXMoKVswXS5oZWlnaHQoKSA9PSBkZXRlY3Rvci0+aGVpZ2h0KClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkLndpZHRoKCkgPT0gaW0yLndpZHRoKClgIGZhaWxlZCBpbiAAVHJhbnNmb3JtYXRpb24gbWF0cml4IHJlYWQgZXJyb3IhIQoAdmVjdG9yAEltYWdlcyBtdXN0IGhhdmUgdGhlIHNhbWUgd2lkdGgAanBnAFVudGVzdGVkIGJlaGF2aW9yIGZvciBvZGQgY2h1bmsgc2l6ZQBoZWlnaHQgbXVzdCBiZSBwb3NpdGl2ZQBPY3RhdmUgb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgKGZiaW4rMC41ZikgPiAwICYmIChmYmluLTAuNWYpIDwgbnVtX2JpbnNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBhc3NpZ25tZW50LnNpemUoKSA9PSBudW1faW5kaWNlc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYCFpc2luZih1WzBdKWAgZmFpbGVkIGluIAAlcyVzCgBXaWR0aCBpcyB6ZXJvAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL21hdGNoZXJzL2hvdWdoX3NpbWlsYXJpdHlfdm90aW5nLmgAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvYmluYXJ5X2hpZXJhcmNoaWNhbF9jbHVzdGVyaW5nLmgARGVjaW1hbCBiaW4gcG9zaXRpb24gaW5kZXggb3V0IG9mIHJhbmdlAFNjYWxlIG91dCBvZiByYW5nZQBJTkYAQXNzZXJ0aW9uIGBkLmhlaWdodCgpID09IGltMi5oZWlnaHQoKWAgZmFpbGVkIGluIABJbWFnZXMgbXVzdCBoYXZlIHRoZSBzYW1lIGhlaWdodAAvLi4vc2hhcmUvJXMASGVpZ2h0IGlzIHplcm8AQXNzaWdubWVudCBzaXplIHdyb25nAEFzc2VydGlvbiBgKGludClzdGQ6OmZsb29yKHgpID09IChpbnQpeGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGluZGV4ID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBtYWduaXR1ZGUgPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYCFpc2luZih1WzFdKWAgZmFpbGVkIGluIABTdGVwIGlzIHplcm8AL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL2ludGVycG9sYXRlLmgATWFnbml0dWRlIGNhbm5vdCBiZSBuZWdhdGl2ZQBpbmRleCBvdXQgb2YgcmFuZ2UASE9NRQBBc3NlcnRpb24gYGFzc2lnbm1lbnRbaV0gIT0gLTFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbTEud2lkdGgoKSA9PSBpbTIud2lkdGgoKWAgZmFpbGVkIGluIAAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvaGFycmlzLWlubGluZS5oAC9wcm9jL3NlbGYvY21kbGluZQBmbG9vcigpIGFuZCBjYXN0IG5vdCB0aGUgc2FtZQBBc3NpZ25tZW50IGlzIGludmFsaWQAQXNzZXJ0aW9uIGBudW1fYmlucyA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYmluWCA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKGk+PjEpIDwgc3RkOjpjZWlsKChzcmNfaGVpZ2h0LTEpLzIuZilgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbTEuaGVpZ2h0KCkgPT0gaW0yLmhlaWdodCgpYCBmYWlsZWQgaW4gAEluZGV4IGlzIG91dCBvZiBib3VuZHMATnVtYmVyIGJpbnMgbXVzdCBiZSBwb3NpdGl2ZQBiaW5YIG91dCBvZiByYW5nZQBPdXQgb2YgcmFuZ2UARG9HIFB5cmFtaWQAcmIAQXNzZXJ0aW9uIGAoaW50KXN0ZDo6Zmxvb3IoeSkgPT0gKGludCl5YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYXNzaWdubWVudFtpXSA8IG51bV9pbmRpY2VzYCBmYWlsZWQgaW4gAE5vbi1tYXggc3VwcHJlc3Npb24AQXNzaWdubWVudCBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGB5cCA+PSAwICYmIHlwIDwgaGVpZ2h0YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYmluWCA8IG1OdW1YQmluc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYGltYWdlLnR5cGUoKSA9PSBJTUFHRV9VSU5UOGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHcxID49IDBgIGZhaWxlZCBpbiAAJXM6ICVzCgB5cCBvdXQgb2YgYm91bmRzAFN1YnBpeGVsAHcxIG11c3QgYmUgcG9zaXRpdmUAVW5hYmxlIHRvIGRldGVybWluZSBwcm9jZXNzIG5hbWUAT25seSBncmF5IHNjYWxlIGltYWdlcyBhcmUgc3VwcG9ydGVkAEFzc2VydGlvbiBgaW5kaWNlc1thc3NpZ25tZW50W2ldXSA8IG51bV9mZWF0dXJlc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpblkgPj0gMGAgZmFpbGVkIGluIABwcnVuZUZlYXR1cmVzACVzJXMAYmluWSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGB5cF9wbHVzXzEgPj0gMCAmJiB5cF9wbHVzXzEgPCBoZWlnaHRgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBvY3RhdmUgPCBtTnVtT2N0YXZlc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYHcyID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpdC0+c2Vjb25kLnNpemUoKSAhPSAwYCBmYWlsZWQgaW4gAEZpbmQgT3JpZW50YXRpb25zAHlwX3BsdXNfMSBvdXQgb2YgYm91bmRzAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9nYXVzc2lhbl9zY2FsZV9zcGFjZV9weXJhbWlkLmgAdzIgbXVzdCBiZSBwb3NpdGl2ZQBDbHVzdGVyIG11c3QgaGF2ZSBhdGxlYXNldCAxIGZlYXR1cmUAL3Zhci9jYWNoZQBBc3NlcnRpb24gYGJpblkgPCBtTnVtWUJpbnNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkc3RbaV0gPj0gLTI1ODA2NGAgZmFpbGVkIGluIAAvLmNhY2hlAE9jdGF2ZSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGBiMSA+PSAwICYmIGIxIDwgbnVtX2JpbnNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB4cCA+PSAwICYmIHhwIDwgd2lkdGhgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkc3RbaV0gPD0gMjU4MDY0YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYmluQW5nbGUgPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGltMC5oZWlnaHQoKSA9PSBpbTEuaGVpZ2h0KClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBtSyA9PSBtQ2VudGVycy5zaXplKClgIGZhaWxlZCBpbiAASGVpZ2h0IGlzIGluY29uc2lzdGVudAB4cCBvdXQgb2YgYm91bmRzACVzLyVzAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL21hdGNoZXJzL2ttZWRvaWRzLmgAYjEgYmluIGluZGV4IG91dCBvZiByYW5nZQBiaW5BbmdsZSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGBzY2FsZSA8IG1OdW1TY2FsZXNQZXJPY3RhdmVgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkc3RbaV0gPD0gNDEyOTAyNGAgZmFpbGVkIGluIABrIHNob3VsZCBtYXRjaCB0aGUgbnVtYmVyIG9mIGNsdXN0ZXIgY2VudGVycwBTY2FsZSBvdXQgb2YgcmFuZ2UAL3Zhci9saWIAQXNzZXJ0aW9uIGBiMiA+PSAwICYmIGIyIDwgbnVtX2JpbnNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBiaW5BbmdsZSA8IG1OdW1BbmdsZUJpbnNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB4cF9wbHVzXzEgPj0gMCAmJiB4cF9wbHVzXzEgPCB3aWR0aGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGRzdFtpXSA+PSAtNDEyOTAyNGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGltMC5oZWlnaHQoKSA9PSBpbTIuaGVpZ2h0KClgIGZhaWxlZCBpbiAAeHBfcGx1c18xIG91dCBvZiBib3VuZHMALy5jb25maWcAYjIgYmluIGluZGV4IG91dCBvZiByYW5nZQBBc3NlcnRpb24gYG51bV9mZWF0dXJlcyA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBiaW5TY2FsZSA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKGltMS5oZWlnaHQoKT4+MSkgPT0gaW0yLmhlaWdodCgpYCBmYWlsZWQgaW4gAHZlY3RvcgBOdW1iZXIgb2YgZmVhdHVyZXMgbXVzdCBiZSBwb3NpdGl2ZQBiaW5TY2FsZSBvdXQgb2YgcmFuZ2UAVE1QRElSAEFzc2VydGlvbiBgZ3h4IDw9IDQxMjkwMjRgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB3MCA+PSAwICYmIHcwIDw9IDEuMDAwMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYChpbTAuaGVpZ2h0KCk+PjEpID09IGltMS5oZWlnaHQoKWAgZmFpbGVkIGluIAB2ZWN0b3IAL3RtcABPdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGBiaW5TY2FsZSA8IG1OdW1TY2FsZUJpbnNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBudW1faW5kaWNlcyA8PSBudW1fZmVhdHVyZXNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBneHggPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYChpbTAuaGVpZ2h0KCk+PjEpID09IGltMi5oZWlnaHQoKWAgZmFpbGVkIGluIABNb3JlIGluZGljZXMgdGhhbiBmZWF0dXJlcwBFcnJvciBsb29raW5nIGZvciByZXNvdXJjZXMgZGlyZWN0b3J5IHBhdGgAQXNzZXJ0aW9uIGByb3cgPCBtSGVpZ2h0YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbUJ1Y2tldHMuc2l6ZSgpID09IG1OdW1CdWNrZXRzWGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGd5eSA8PSA0MTI5MDI0YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgdzEgPj0gMCAmJiB3MSA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbmRleCA8PSAoYmluWCArIGJpblkqbU51bVhCaW5zICsgYmluQW5nbGUqbU51bVhCaW5zKm1OdW1ZQmlucyArIGJpblNjYWxlKm1OdW1YQmlucyptTnVtWUJpbnMqbU51bUFuZ2xlQmlucylgIGZhaWxlZCBpbiAARXJyb3IgY3JlYXRpbmcgcmVzb3VyY2VzIGRpcmVjdG9yeSBwYXRoAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2ZyYW1ld29yay9pbWFnZS5oAEJ1Y2tldHMgYXJlIG5vdCBhbGxvY2F0ZWQAQXNzZXJ0aW9uIGBudW1faW5kaWNlcyA+PSBtS2AgZmFpbGVkIGluIABBc3NlcnRpb24gYHcyID49IDAgJiYgdzIgPD0gMS4wMDAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZ3l5ID49IDBgIGZhaWxlZCBpbiAATm90IGVub3VnaCBmZWF0dXJlcwByb3cgb3V0IG9mIGJvdW5kcwB2ZWN0b3IAQXNzZXJ0aW9uIGBtQnVja2V0c1swXS5zaXplKCkgPT0gbU51bUJ1Y2tldHNZYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZ3h5IDw9IDQxMjkwMjRgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB3MyA+PSAwICYmIHczIDw9IDEuMDAwMWAgZmFpbGVkIGluIABFcnJvcjogVW5hYmxlIHRvIGNoYW5nZSB3b3JraW5nIGRpcmVjdG9yeSB0byAnJXMnLgoAQXNzaWdubWVudCBzaXplIGlzIGluY29ycmVjdABBc3NlcnRpb24gYG1GZWF0dXJlUG9pbnRzLnNpemUoKSA8PSBtTWF4TnVtRmVhdHVyZVBvaW50c2AgZmFpbGVkIGluIABBc3NlcnRpb24gYGd4eSA+PSAtNDEyOTAyNGAgZmFpbGVkIGluIABBc3NlcnRpb24gYCh3MCt3MSt3Mit3MykgPD0gMS4wMDAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbiA+IDBgIGZhaWxlZCBpbiAAWyUgLjNmICUgLjNmICUgLjNmXSBbJSA2LjFmXQoAAAMAAAADAAAABAAAAAQAAAAEAAAAAQAAAAQAAAACAAAAAgAAAAIAAAACAAAAAgAAAAEAAAABAAAAAQBBkK0BC6cyBAAAAIgAAAAFAAAAkAAAAAYAAACYAAAACQAAALAAAAAYBAAAUwsAAAYOAADTDwAALmlzZXQAcmIATjZ2aXNpb24yNUdhdXNzaWFuU2NhbGVTcGFjZVB5cmFtaWRFAAAA5PkAAMlWAABUb28gbWFueSBmZWF0dXJlIHBvaW50cwB2ZWN0b3IAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvdXRpbHMvcGFydGlhbF9zb3J0LmgAQXNzZXJ0aW9uIGBwb3MgPT0gNjY2YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbnVtX2NlbnRlcnMgPiAwYCBmYWlsZWQgaW4gAFRoZXJlIG11c3QgYmUgYXQgbGVhc3QgMSBjZW50ZXIAbiBtdXN0IGJlIHBvc2l0aXZlAFBvc2l0aW9uIGlzIG5vdCB3aXRoaW4gcmFuZ2UAQXNzZXJ0aW9uIGBrcC5zY2FsZSA8IG1MYXBsYWNpYW5QeXJhbWlkLm51bVNjYWxlUGVyT2N0YXZlKClgIGZhaWxlZCBpbiAAWyVzXSBbJXNdIFslc10gOiBGb3VuZCAlZCBmZWF0dXJlcyBpbiBxdWVyeQBGZWF0dXJlIHBvaW50IHNjYWxlIGlzIG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGBrID4gMGAgZmFpbGVkIGluIABrIG11c3QgYmUgcG9zaXRpdmUARmluZCBNYXRjaGVzICgxKQBBc3NlcnRpb24gYGtwLnNjb3JlID09IGxhcDEuZ2V0PGZsb2F0Pih5KVt4XWAgZmFpbGVkIGluIABTY29yZSBpcyBub3QgY29uc2lzdGVudCB3aXRoIHRoZSBEb0cgaW1hZ2UASG91Z2ggVm90aW5nICgxKQBGaW5kIEhvdWdoIE1hdGNoZXMgKDEpAEFzc2VydGlvbiBgYnVja2V0WzBdLmZpcnN0ID49IGJ1Y2tldFtuXS5maXJzdGAgZmFpbGVkIGluIABudGhfZWxlbWVudCBmYWlsZWQARXN0aW1hdGUgSG9tb2dyYXBoeSAoMSkARmluZCBJbmxpZXJzICgxKQBBc3NlcnRpb24gYG9jdGF2ZSA8IG1OdW1PY3RhdmVzYCBmYWlsZWQgaW4gAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9nYXVzc2lhbl9zY2FsZV9zcGFjZV9weXJhbWlkLmgARmluZCBNYXRjaGVzICgyKQBPY3RhdmUgb3V0IG9mIHJhbmdlAEhvdWdoIFZvdGluZyAoMikARmluZCBIb3VnaCBNYXRjaGVzICgyKQBBc3NlcnRpb24gYHNjYWxlIDwgbU51bVNjYWxlc1Blck9jdGF2ZWAgZmFpbGVkIGluIABTY2FsZSBvdXQgb2YgcmFuZ2UARXN0aW1hdGUgSG9tb2dyYXBoeSAoMikARmluZCBJbmxpZXJzICgyKQBBc3NlcnRpb24gYGluZGV4IDwgbUltYWdlcy5zaXplKClgIGZhaWxlZCBpbiAAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL0RvR19zY2FsZV9pbnZhcmlhbnRfZGV0ZWN0b3IuaABBc3NlcnRpb24gYGJlc3RfaW5kZXggIT0gc3RkOjpudW1lcmljX2xpbWl0czxzaXplX3Q+OjptYXgoKWAgZmFpbGVkIGluIAAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9tYXRjaGVycy9mZWF0dXJlX21hdGNoZXItaW5saW5lLmgASW5kZXggaXMgb3V0IG9mIHJhbmdlAFNvbWV0aGluZyBzdHJhbmdlAEFzc2VydGlvbiBgc2NhbGUgPj0gMGAgZmFpbGVkIGluIABTY2FsZSBtdXN0IGJlIHBvc2l0aXZlAEFzc2VydGlvbiBgbU1hdGNoZXMuc2l6ZSgpIDw9IGZlYXR1cmVzMS0+c2l6ZSgpYCBmYWlsZWQgaW4gAE51bWJlciBvZiBtYXRjaGVzIHNob3VsZCBiZSBsb3dlcgBTY2FsZSBtdXN0IGJlIGxlc3MgdGhhbiBudW1iZXIgb2Ygc2NhbGUgcGVyIG9jdGF2ZQBBc3NlcnRpb24gYGxhcDAuaGVpZ2h0KCkgPT0gbGFwMS5oZWlnaHQoKSA9PSBsYXAyLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbVJvb3QuZ2V0KClgIGZhaWxlZCBpbiAAV2lkdGgvaGVpZ2h0IGFyZSBub3QgY29uc2lzdGVudABSb290IGNhbm5vdCBiZSBOVUxMAEFzc2VydGlvbiBgbWluaSAhPSAtMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYChsYXAwLmhlaWdodCgpID09IGxhcDEuaGVpZ2h0KCkpICYmICgobGFwMS5oZWlnaHQoKT4+MSkgPT0gbGFwMi5oZWlnaHQoKSlgIGZhaWxlZCBpbiAATWluaW11bSBpbmRleCBub3Qgc2V0AEFzc2VydGlvbiBgKChsYXAwLndpZHRoKCk+PjEpID09IGxhcDEud2lkdGgoKSkgJiYgKGxhcDEud2lkdGgoKSA9PSBsYXAyLndpZHRoKCkpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYG4gPD0gaW5fbWF0Y2hlcy5zaXplKClgIGZhaWxlZCBpbiAASW1hZ2Ugc2l6ZXMgYXJlIGluY29uc2lzdGVudABTaG91bGQgYmUgdGhlIHNhbWUAQXNzZXJ0aW9uIGBiaW5YID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAoeC0xKSA+PSAwICYmICh4KzEpIDwgbGFwMS53aWR0aCgpYCBmYWlsZWQgaW4gAHggb3V0IG9mIGJvdW5kcwAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9tYXRjaGVycy9ob3VnaF9zaW1pbGFyaXR5X3ZvdGluZy5oAGJpblggb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgKHktMSkgPj0gMCAmJiAoeSsxKSA8IGxhcDEuaGVpZ2h0KClgIGZhaWxlZCBpbiAAeSBvdXQgb2YgYm91bmRzAEFzc2VydGlvbiBgYmluWCA8IG1OdW1YQmluc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpblkgPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGxhcDAud2lkdGgoKSA9PSBsYXAxLndpZHRoKClgIGZhaWxlZCBpbiAASW1hZ2UgZGltZW5zaW9ucyBpbmNvbnNpc3RlbnQAYmluWSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGBiaW5ZIDwgbU51bVlCaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbGFwMC53aWR0aCgpID09IGxhcDIud2lkdGgoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpbkFuZ2xlID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBsYXAwLmhlaWdodCgpID09IGxhcDEuaGVpZ2h0KClgIGZhaWxlZCBpbiAAYmluQW5nbGUgb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgbGFwMC5oZWlnaHQoKSA9PSBsYXAyLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYmluQW5nbGUgPCBtTnVtQW5nbGVCaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKHgtMSkgPj0gMCAmJiAoeCsxKSA8IGltLndpZHRoKClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBiaW5TY2FsZSA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKHktMSkgPj0gMCAmJiAoeSsxKSA8IGltLmhlaWdodCgpYCBmYWlsZWQgaW4gAGJpblNjYWxlIG91dCBvZiByYW5nZQBBc3NlcnRpb24gYChsYXAwLndpZHRoKCk+PjEpID09IGxhcDIud2lkdGgoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpblNjYWxlIDwgbU51bVNjYWxlQmluc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYChsYXAwLmhlaWdodCgpPj4xKSA9PSBsYXAyLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeF9kaXZfMi0wLjVmID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkaXN0QmluQW5nbGUgPj0gMGAgZmFpbGVkIGluIAB4X2Rpdl8yIG91dCBvZiBib3VuZHMgb3V0IG9mIGJvdW5kcyBmb3IgaW50ZXJwb2xhdGlvbgBkaXN0QmluQW5nbGUgbXVzdCBub3QgYmUgbmVnYXRpdmUAQXNzZXJ0aW9uIGBoeXAuc2l6ZSgpID49IDkqbWF4X251bV9oeXBvdGhlc2VzYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeV9kaXZfMi0wLjVmID49IDBgIGZhaWxlZCBpbiAAeV9kaXZfMiBvdXQgb2YgYm91bmRzIG91dCBvZiBib3VuZHMgZm9yIGludGVycG9sYXRpb24AL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvaG9tb2dyYXBoeV9lc3RpbWF0aW9uL3JvYnVzdF9ob21vZ3JhcGh5LmgAaHlwIHZlY3RvciBzaG91bGQgYmUgb2Ygc2l6ZSA5Km1heF9udW1faHlwb3RoZXNlcwBBc3NlcnRpb24gYHhfZGl2XzIrMC41ZiA8IGxhcDIud2lkdGgoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHRtcF9pLnNpemUoKSA+PSBudW1fcG9pbnRzYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeV9kaXZfMiswLjVmIDwgbGFwMi5oZWlnaHQoKWAgZmFpbGVkIGluIAB0bXBfaSB2ZWN0b3Igc2hvdWxkIGJlIG9mIHNpemUgbnVtX3BvaW50cwBBc3NlcnRpb24gYChsYXAwLndpZHRoKCk+PjEpID09IGxhcDEud2lkdGgoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGh5cF9jb3N0cy5zaXplKCkgPj0gbWF4X251bV9oeXBvdGhlc2VzYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKGxhcDAuaGVpZ2h0KCk+PjEpID09IGxhcDEuaGVpZ2h0KClgIGZhaWxlZCBpbiAAdmVjdG9yAEFzc2VydGlvbiBgbiA+IDBgIGZhaWxlZCBpbiAAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvdXRpbHMvcGFydGlhbF9zb3J0LmgAQXNzZXJ0aW9uIGByb3cgPCBtSGVpZ2h0YCBmYWlsZWQgaW4gAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2ZyYW1ld29yay9pbWFnZS5oAG4gbXVzdCBiZSBwb3NpdGl2ZQByb3cgb3V0IG9mIGJvdW5kcwBBc3NlcnRpb24gYGsgPiAwYCBmYWlsZWQgaW4gAGsgbXVzdCBiZSBwb3NpdGl2ZQBBc3NlcnRpb24gYChpbnQpc3RkOjpmbG9vcih4KSA9PSAoaW50KXhgIGZhaWxlZCBpbiAAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL2ludGVycG9sYXRlLmgAQXNzZXJ0aW9uIGAwYCBmYWlsZWQgaW4gAEZhaWxlZCB0byBjb21wdXRlIG1hdHJpeCBpbnZlcnNlAGZsb29yKCkgYW5kIGNhc3Qgbm90IHRoZSBzYW1lAEFzc2VydGlvbiBgKGludClzdGQ6OmZsb29yKHkpID09IChpbnQpeWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHlwID49IDAgJiYgeXAgPCBoZWlnaHRgIGZhaWxlZCBpbiAAeXAgb3V0IG9mIGJvdW5kcwBBc3NlcnRpb24gYHlwX3BsdXNfMSA+PSAwICYmIHlwX3BsdXNfMSA8IGhlaWdodGAgZmFpbGVkIGluIAB5cF9wbHVzXzEgb3V0IG9mIGJvdW5kcwBBc3NlcnRpb24gYHhwID49IDAgJiYgeHAgPCB3aWR0aGAgZmFpbGVkIGluIAB4cCBvdXQgb2YgYm91bmRzAEFzc2VydGlvbiBgeHBfcGx1c18xID49IDAgJiYgeHBfcGx1c18xIDwgd2lkdGhgIGZhaWxlZCBpbiAAeHBfcGx1c18xIG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGB3MCA+PSAwICYmIHcwIDw9IDEuMDAwMWAgZmFpbGVkIGluIABPdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGB3MSA+PSAwICYmIHcxIDw9IDEuMDAwMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHcyID49IDAgJiYgdzIgPD0gMS4wMDAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgdzMgPj0gMCAmJiB3MyA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAodzArdzErdzIrdzMpIDw9IDEuMDAwMWAgZmFpbGVkIGluIAAAAAAAAPBWAAARAAAAEgAAAAAAAAA0bQAAEwAAABQAAABONnZpc2lvbjlFeGNlcHRpb25FAAz6AAD0bAAAJPsAAE42dmlzaW9uMThCaW5vbWlhbFB5cmFtaWQzMmZFAAAADPoAABRtAADwVgAAAAAAAAhtAAAPAAAAFQAAABYAAAC5Uow+jlrnPrlSjD4AAAAAAAAAAAhuAAAXAAAAGAAAABkAAAAaAAAAGwAAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9wb2ludGVySVBONnZpc2lvbjhLZXlmcmFtZUlMaTk2RUVFTlNfMTBzaGFyZWRfcHRySVMzX0UyN19fc2hhcmVkX3B0cl9kZWZhdWx0X2RlbGV0ZUlTM19TM19FRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAM+gAAgG0AAIT3AABOU3QzX18yMTBzaGFyZWRfcHRySU42dmlzaW9uOEtleWZyYW1lSUxpOTZFRUVFMjdfX3NoYXJlZF9wdHJfZGVmYXVsdF9kZWxldGVJUzNfUzNfRUUAYm9vbCB2aXNpb246OlZpc3VhbERhdGFiYXNlPHZpc2lvbjo6RlJFQUtFeHRyYWN0b3IsIHZpc2lvbjo6QmluYXJ5RmVhdHVyZVN0b3JlLCB2aXNpb246OkJpbmFyeUZlYXR1cmVNYXRjaGVyPDk2Pj46OnF1ZXJ5KGNvbnN0IEdhdXNzaWFuU2NhbGVTcGFjZVB5cmFtaWQgKikgW0ZFQVRVUkVfRVhUUkFDVE9SID0gdmlzaW9uOjpGUkVBS0V4dHJhY3RvciwgU1RPUkUgPSB2aXNpb246OkJpbmFyeUZlYXR1cmVTdG9yZSwgTUFUQ0hFUiA9IHZpc2lvbjo6QmluYXJ5RmVhdHVyZU1hdGNoZXI8OTY+XQBoeXBfY29zdHMgdmVjdG9yIHNob3VsZCBiZSBvZiBzaXplIG1heF9udW1faHlwb3RoZXNlcwBBxN8BC55Qsr65PhLcoL6Qvjk+EtygvpC+Ob4AAACAsr65vhLcoD6Qvjm+EtygPpC+OT7Schi/AAAAANJymL46BgS/0nKYPjoGBL/Schg/AAAAgNJymD46BgQ/0nKYvjoGBD8AAACAVrg9v2ZNJD9WuL2+Zk0kP1a4vT4AAAAAVrg9P2ZNJL9WuL0+Zk0kv1a4vb4M6Vg/AAAAgAzp2D6Z2Ts/DOnYvpnZOz8M6Vi/AAAAAAzp2L6Z2Tu/DOnYPpnZO78AAAAA/FNuP/FlTr8NVO4+8WVOvw1U7r4AAACA/FNuv/FlTj8NVO6+8WVOPw1U7j4AAIC/AAAAAAAAAL/Qs12/AAAAP9CzXb8AAIA/AAAAgAAAAD/Qs10/AAAAv9CzXT8AAAAASHEAABcAAAAcAAAAHQAAAB4AAAAfAAAATlN0M19fMjIwX19zaGFyZWRfcHRyX3BvaW50ZXJJUGgxNk51bGxBcnJheURlbGV0ZXJJaEVOU185YWxsb2NhdG9ySWhFRUVFAAAAAAz6AAD8cAAAhPcAADE2TnVsbEFycmF5RGVsZXRlckloRQAAAAAAAADwcQAAFwAAACAAAAAhAAAAIgAAACMAAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfcG9pbnRlcklQaE5TXzEwc2hhcmVkX3B0ckloRTI3X19zaGFyZWRfcHRyX2RlZmF1bHRfZGVsZXRlSWhoRUVOU185YWxsb2NhdG9ySWhFRUVFAAz6AACIcQAAhPcAAE5TdDNfXzIxMHNoYXJlZF9wdHJJaEUyN19fc2hhcmVkX3B0cl9kZWZhdWx0X2RlbGV0ZUloaEVFAHZpc2lvbjo6U2NvcGVkVGltZXI6On5TY29wZWRUaW1lcigpAGluZmluaXR5AE1pc3NpbmcgSHVmZm1hbiBjb2RlIHRhYmxlIGVudHJ5AEZlYnJ1YXJ5AEphbnVhcnkASnVseQBUaHVyc2RheQBUdWVzZGF5AFdlZG5lc2RheQBTYXR1cmRheQBTdW5kYXkATW9uZGF5AEZyaWRheQBNYXkAJW0vJWQvJXkATUFYX0FMTE9DX0NIVU5LIGlzIHdyb25nLCBwbGVhc2UgZml4AEFMSUdOX1RZUEUgaXMgd3JvbmcsIHBsZWFzZSBmaXgAc2V0TWFya2VySW5mb1ZlcnRleABOb3QgYSBKUEVHIGZpbGU6IHN0YXJ0cyB3aXRoIDB4JTAyeCAweCUwMngAQ29ycnVwdCBKUEVHIGRhdGE6ICV1IGV4dHJhbmVvdXMgYnl0ZXMgYmVmb3JlIG1hcmtlciAweCUwMngAVW5leHBlY3RlZCBtYXJrZXIgMHglMDJ4AFVuc3VwcG9ydGVkIG1hcmtlciB0eXBlIDB4JTAyeABVbnN1cHBvcnRlZCBKUEVHIHByb2Nlc3M6IFNPRiB0eXBlIDB4JTAyeABEZWZpbmUgSHVmZm1hbiBUYWJsZSAweCUwMngARGVmaW5lIEFyaXRobWV0aWMgVGFibGUgMHglMDJ4OiAweCUwMngALSsgICAwWDB4AC0wWCswWCAwWC0weCsweCAweABCb2d1cyBEQUMgdmFsdWUgMHgleABfX25leHRfcHJpbWUgb3ZlcmZsb3cASHVmZm1hbiBjb2RlIHNpemUgdGFibGUgb3ZlcmZsb3cATm92AFRodQAgICAgICAgICU0dSAlNHUgJTR1ICU0dSAlNHUgJTR1ICU0dSAlNHUASlBFRyBwYXJhbWV0ZXIgc3RydWN0IG1pc21hdGNoOiBsaWJyYXJ5IHRoaW5rcyBzaXplIGlzICV1LCBjYWxsZXIgZXhwZWN0cyAldQBEZWZpbmUgUmVzdGFydCBJbnRlcnZhbCAldQBXYXJuaW5nOiB0aHVtYm5haWwgaW1hZ2Ugc2l6ZSBkb2VzIG5vdCBtYXRjaCBkYXRhIGxlbmd0aCAldQBNaXNjZWxsYW5lb3VzIG1hcmtlciAweCUwMngsIGxlbmd0aCAldQBKRklGIGV4dGVuc2lvbiBtYXJrZXI6IHR5cGUgMHglMDJ4LCBsZW5ndGggJXUASkZJRiBleHRlbnNpb24gbWFya2VyOiBwYWxldHRlIHRodW1ibmFpbCBpbWFnZSwgbGVuZ3RoICV1AEpGSUYgZXh0ZW5zaW9uIG1hcmtlcjogSlBFRy1jb21wcmVzc2VkIHRodW1ibmFpbCBpbWFnZSwgbGVuZ3RoICV1AEpGSUYgZXh0ZW5zaW9uIG1hcmtlcjogUkdCIHRodW1ibmFpbCBpbWFnZSwgbGVuZ3RoICV1AFVua25vd24gQVBQMTQgbWFya2VyIChub3QgQWRvYmUpLCBsZW5ndGggJXUAVW5rbm93biBBUFAwIG1hcmtlciAobm90IEpGSUYpLCBsZW5ndGggJXUAT2J0YWluZWQgWE1TIGhhbmRsZSAldQBGcmVlZCBYTVMgaGFuZGxlICV1AE9idGFpbmVkIEVNUyBoYW5kbGUgJXUARnJlZWQgRU1TIGhhbmRsZSAldQB1bnN1cHBvcnRlZCBsb2NhbGUgZm9yIHN0YW5kYXJkIGlucHV0AEF1Z3VzdABnZXRUcmFuc01hdE11bHRpU3F1YXJlUm9idXN0AEludmFsaWQgY3JvcCByZXF1ZXN0AFVuc3VwcG9ydGVkIGNvbG9yIGNvbnZlcnNpb24gcmVxdWVzdAB1bnNpZ25lZCBzaG9ydABnZXRNdWx0aU1hcmtlckNvdW50AGdldFRyYW5zTWF0U3F1YXJlQ29udAB1bnNpZ25lZCBpbnQAQ29ycnVwdCBKUEVHIGRhdGE6IHByZW1hdHVyZSBlbmQgb2YgZGF0YSBzZWdtZW50AGhlaWdodABGcmFjdGlvbmFsIHNhbXBsaW5nIG5vdCBpbXBsZW1lbnRlZCB5ZXQAQ0NJUjYwMSBzYW1wbGluZyBub3QgaW1wbGVtZW50ZWQgeWV0AE5vdCBpbXBsZW1lbnRlZCB5ZXQAZnNldABnZXQAT2N0AGZsb2F0AFNhdAB1aW50NjRfdABDYW5ub3QgcXVhbnRpemUgbW9yZSB0aGFuICVkIGNvbG9yIGNvbXBvbmVudHMAU3RhcnQgT2YgU2NhbjogJWQgY29tcG9uZW50cwBCb2d1cyB2aXJ0dWFsIGFycmF5IGFjY2VzcwBCb2d1cyBzYW1wbGluZyBmYWN0b3JzAFF1YW50aXppbmcgdG8gJWQgPSAlZColZColZCBjb2xvcnMAUXVhbnRpemluZyB0byAlZCBjb2xvcnMAQ2Fubm90IHF1YW50aXplIHRvIGZld2VyIHRoYW4gJWQgY29sb3JzAENhbm5vdCBxdWFudGl6ZSB0byBtb3JlIHRoYW4gJWQgY29sb3JzAEludmFsaWQgSlBFRyBmaWxlIHN0cnVjdHVyZTogdHdvIFNPSSBtYXJrZXJzAEludmFsaWQgSlBFRyBmaWxlIHN0cnVjdHVyZTogdHdvIFNPRiBtYXJrZXJzAG5mdE1hcmtlcnMAU21vb3RoaW5nIG5vdCBzdXBwb3J0ZWQgd2l0aCBub25zdGFuZGFyZCBzYW1wbGluZyByYXRpb3MATWF4aW11bSBzdXBwb3J0ZWQgaW1hZ2UgZGltZW5zaW9uIGlzICV1IHBpeGVscwBBcHBsaWNhdGlvbiB0cmFuc2ZlcnJlZCB0b28gbWFueSBzY2FubGluZXMAQXBwbGljYXRpb24gdHJhbnNmZXJyZWQgdG9vIGZldyBzY2FubGluZXMARmFpbGVkIHRvIGNyZWF0ZSB0ZW1wb3JhcnkgZmlsZSAlcwBDbG9zZWQgdGVtcG9yYXJ5IGZpbGUgJXMAT3BlbmVkIHRlbXBvcmFyeSBmaWxlICVzAEFwcgB2ZWN0b3IASW5wdXQgZmlsZSByZWFkIGVycm9yAHNldE1hcmtlckluZm9EaXIASW52YWxpZCBKUEVHIGZpbGUgc3RydWN0dXJlOiBtaXNzaW5nIFNPUyBtYXJrZXIAbmZ0TWFya2VyAGdldE1hcmtlcgBkZXRlY3RNYXJrZXIAX2FkZE11bHRpTWFya2VyAGdldE11bHRpRWFjaE1hcmtlcgBfYWRkTWFya2VyAGdldE5GVE1hcmtlcgBkZXRlY3RORlRNYXJrZXIAX2FkZE5GVE1hcmtlcgBPY3RvYmVyAE5vdmVtYmVyAFNlcHRlbWJlcgBEZWNlbWJlcgB1bnNpZ25lZCBjaGFyAGlvc19iYXNlOjpjbGVhcgBNYXIAVW5yZWNvZ25pemVkIGNvbXBvbmVudCBJRHMgJWQgJWQgJWQsIGFzc3VtaW5nIFlDYkNyAHNldHVwAFZpcnR1YWwgYXJyYXkgY29udHJvbGxlciBtZXNzZWQgdXAAU2VwACVJOiVNOiVTICVwAHNldFBhdHRSYXRpbwBnZXRQYXR0UmF0aW8AdGVhcmRvd24AU3VuAEp1bgBzdGQ6OmV4Y2VwdGlvbgBCb2d1cyBIdWZmbWFuIHRhYmxlIGRlZmluaXRpb24AU2VsZWN0ZWQgJWQgY29sb3JzIGZvciBxdWFudGl6YXRpb24ASW1hZ2UgdG9vIHdpZGUgZm9yIHRoaXMgaW1wbGVtZW50YXRpb24ATW9uAG5hbgBEaWRuJ3QgZXhwZWN0IG1vcmUgdGhhbiBvbmUgc2NhbgBTYW1wbGluZyBmYWN0b3JzIHRvbyBsYXJnZSBmb3IgaW50ZXJsZWF2ZWQgc2NhbgBKYW4AZ2V0TWFya2VyTnVtAGdldE11bHRpTWFya2VyTnVtAEp1bABib29sAEJ1ZmZlciBwYXNzZWQgdG8gSlBFRyBsaWJyYXJ5IGlzIHRvbyBzbWFsbABBcHJpbABzZXRMb2dMZXZlbABnZXRMb2dMZXZlbABlbXNjcmlwdGVuOjp2YWwAcHVzaF9iYWNrAEZyaQBkcGkATkZUIG1hcmtlciBoZWlnaHQ6ICVpAE5GVCBudW0uIG9mIEltYWdlU2V0OiAlaQBORlQgbWFya2VyIGRwaTogJWkATkZUIG1hcmtlciB3aWR0aDogJWkAYmFkX2FycmF5X25ld19sZW5ndGgAQm9ndXMgbWFya2VyIGxlbmd0aAB3aWR0aABNYXJjaABBdWcAdW5zaWduZWQgbG9uZwBzdGQ6OndzdHJpbmcAYmFzaWNfc3RyaW5nAHN0ZDo6c3RyaW5nAHN0ZDo6dTE2c3RyaW5nAHN0ZDo6dTMyc3RyaW5nAENvcHlyaWdodCAoQykgMjAxOCwgVGhvbWFzIEcuIExhbmUsIEd1aWRvIFZvbGxiZWRpbmcAaW5mACUuMExmACVMZgByZXNpemUAdHJ1ZQBUdWUAZmFsc2UAU3VzcGVuc2lvbiBub3QgYWxsb3dlZCBoZXJlAGdldFRyYW5zTWF0U3F1YXJlAGdldFRyYW5zTWF0TXVsdGlTcXVhcmUAc2V0TWF0cml4Q29kZVR5cGUAZ2V0TWF0cml4Q29kZVR5cGUASnVuZQBzZXRQcm9qZWN0aW9uTmVhclBsYW5lAGdldFByb2plY3Rpb25OZWFyUGxhbmUAc2V0UHJvamVjdGlvbkZhclBsYW5lAGdldFByb2plY3Rpb25GYXJQbGFuZQBSZXF1ZXN0ZWQgZmVhdHVyZSB3YXMgb21pdHRlZCBhdCBjb21waWxlIHRpbWUAU2VlayBmYWlsZWQgb24gdGVtcG9yYXJ5IGZpbGUAUmVhZCBmYWlsZWQgb24gdGVtcG9yYXJ5IGZpbGUARW1wdHkgaW5wdXQgZmlsZQBQcmVtYXR1cmUgZW5kIG9mIGlucHV0IGZpbGUAUHJlbWF0dXJlIGVuZCBvZiBKUEVHIGZpbGUAc2V0Q2FtZXJhKCk6IEVycm9yIGNyZWF0aW5nIDNEIGhhbmRsZQBkb3VibGUARENUIGNvZWZmaWNpZW50IG91dCBvZiByYW5nZQBJbnZhbGlkIGNvbG9yIHF1YW50aXphdGlvbiBtb2RlIGNoYW5nZQBKUEVHIGRhdGFzdHJlYW0gY29udGFpbnMgbm8gaW1hZ2UAICAgIHdpdGggJWQgeCAlZCB0aHVtYm5haWwgaW1hZ2UAZ2V0UHJvY2Vzc2luZ0ltYWdlAFN0YXJ0IG9mIEltYWdlAEVuZCBPZiBJbWFnZQBCb2d1cyBidWZmZXIgY29udHJvbCBtb2RlAENvcnJ1cHQgSlBFRyBkYXRhOiBiYWQgSHVmZm1hbiBjb2RlAENvcnJ1cHQgSlBFRyBkYXRhOiBiYWQgYXJpdGhtZXRpYyBjb2RlAHNldFBhdHRlcm5EZXRlY3Rpb25Nb2RlAGdldFBhdHRlcm5EZXRlY3Rpb25Nb2RlAHNldERlYnVnTW9kZQBnZXREZWJ1Z01vZGUAc2V0TGFiZWxpbmdNb2RlAGdldExhYmVsaW5nTW9kZQBzZXRUaHJlc2hvbGRNb2RlAGdldFRocmVzaG9sZE1vZGUAc2V0SW1hZ2VQcm9jTW9kZQBnZXRJbWFnZVByb2NNb2RlAEJvZ3VzIGlucHV0IGNvbG9yc3BhY2UAQm9ndXMgSlBFRyBjb2xvcnNwYWNlAHNldFRocmVzaG9sZABnZXRUaHJlc2hvbGQAdm9pZABCYWNraW5nIHN0b3JlIG5vdCBzdXBwb3J0ZWQARENUIHNjYWxlZCBibG9jayBzaXplICVkeCVkIG5vdCBzdXBwb3J0ZWQAUXVhbnRpemF0aW9uIHRhYmxlIDB4JTAyeCB3YXMgbm90IGRlZmluZWQASHVmZm1hbiB0YWJsZSAweCUwMnggd2FzIG5vdCBkZWZpbmVkAEFyaXRobWV0aWMgdGFibGUgMHglMDJ4IHdhcyBub3QgZGVmaW5lZABXcml0ZSB0byBYTVMgZmFpbGVkAFJlYWQgZnJvbSBYTVMgZmFpbGVkAFdyaXRlIHRvIEVNUyBmYWlsZWQAUmVhZCBmcm9tIEVNUyBmYWlsZWQAV2VkACAgICAgICAgJTNkICUzZCAlM2QgJTNkICUzZCAlM2QgJTNkICUzZABXYXJuaW5nOiB1bmtub3duIEpGSUYgcmV2aXNpb24gbnVtYmVyICVkLiUwMmQAQ29ycnVwdCBKUEVHIGRhdGE6IGZvdW5kIG1hcmtlciAweCUwMnggaW5zdGVhZCBvZiBSU1QlZABTdGFydCBPZiBGcmFtZSAweCUwMng6IHdpZHRoPSV1LCBoZWlnaHQ9JXUsIGNvbXBvbmVudHM9JWQAICAgIENvbXBvbmVudCAlZDogJWRoeCVkdiBxPSVkAEludmFsaWQgcHJvZ3Jlc3NpdmUgcGFyYW1ldGVycyBTcz0lZCBTZT0lZCBBaD0lZCBBbD0lZAAgIFNzPSVkLCBTZT0lZCwgQWg9JWQsIEFsPSVkACAgICBDb21wb25lbnQgJWQ6IGRjPSVkIGFjPSVkAEludmFsaWQgcHJvZ3Jlc3NpdmUgcGFyYW1ldGVycyBhdCBzY2FuIHNjcmlwdCBlbnRyeSAlZABJbnZhbGlkIHNjYW4gc2NyaXB0IGF0IGVudHJ5ICVkAEJvZ3VzIERRVCBpbmRleCAlZABCb2d1cyBESFQgaW5kZXggJWQAQm9ndXMgREFDIGluZGV4ICVkAFRvbyBtYW55IGNvbG9yIGNvbXBvbmVudHM6ICVkLCBtYXggJWQASW5jb25zaXN0ZW50IHByb2dyZXNzaW9uIHNlcXVlbmNlIGZvciBjb21wb25lbnQgJWQgY29lZmZpY2llbnQgJWQAV3JvbmcgSlBFRyBsaWJyYXJ5IHZlcnNpb246IGxpYnJhcnkgaXMgJWQsIGNhbGxlciBleHBlY3RzICVkAEF0IG1hcmtlciAweCUwMngsIHJlY292ZXJ5IGFjdGlvbiAlZABVbnN1cHBvcnRlZCBKUEVHIGRhdGEgcHJlY2lzaW9uICVkAERlZmluZSBRdWFudGl6YXRpb24gVGFibGUgJWQgIHByZWNpc2lvbiAlZABBZG9iZSBBUFAxNCBtYXJrZXI6IHZlcnNpb24gJWQsIGZsYWdzIDB4JTA0eCAweCUwNHgsIHRyYW5zZm9ybSAlZABJbXByb3BlciBjYWxsIHRvIEpQRUcgbGlicmFyeSBpbiBzdGF0ZSAlZABDYW5ub3QgdHJhbnNjb2RlIGR1ZSB0byBtdWx0aXBsZSB1c2Ugb2YgcXVhbnRpemF0aW9uIHRhYmxlICVkAFVua25vd24gQWRvYmUgY29sb3IgdHJhbnNmb3JtIGNvZGUgJWQASW52YWxpZCBtZW1vcnkgcG9vbCBjb2RlICVkAEJvZ3VzIG1lc3NhZ2UgY29kZSAlZABKRklGIEFQUDAgbWFya2VyOiB2ZXJzaW9uICVkLiUwMmQsIGRlbnNpdHkgJWR4JWQgICVkAHN0ZDo6YmFkX2FsbG9jAERlYwAlbGQlYwBDb21wb25lbnQgaW5kZXggJWQ6IG1pc21hdGNoaW5nIHNhbXBsaW5nIHJhdGlvICVkOiVkLCAlZDolZCwgJWMARmViAHJ3YQBTY2FuIHNjcmlwdCBkb2VzIG5vdCB0cmFuc21pdCBhbGwgZGF0YQBnZXRORlREYXRhAF9sb2FkQ2FtZXJhAEFSX1VTRV9UUkFDS0lOR19ISVNUT1JZAEFSX05PVVNFX1RSQUNLSU5HX0hJU1RPUlkAJWEgJWIgJWQgJUg6JU06JVMgJVkAUE9TSVgAQVJfVEVNUExBVEVfTUFUQ0hJTkdfQ09MT1JfQU5EX01BVFJJWABBUl9URU1QTEFURV9NQVRDSElOR19NT05PX0FORF9NQVRSSVgAQVJfTEFCRUxJTkdfVEhSRVNIX01PREVfQVVUT19PVFNVAEFSX01BUktFUl9JTkZPX0NVVE9GRl9QSEFTRV9NQVRDSF9DT05UUkFTVABBUl9NQVhfTE9PUF9DT1VOVABJbnZhbGlkIGNvbXBvbmVudCBJRCAlZCBpbiBTT1MAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX0hFVVJJU1RJQ19UUk9VQkxFU09NRV9NQVRSSVhfQ09ERVMARVJST1JfTUFSS0VSX0lOREVYX09VVF9PRl9CT1VORFMAJUg6JU06JVMAQVJfTE9HX0xFVkVMX0VSUk9SAEFSX01BUktFUl9JTkZPX0NVVE9GRl9QSEFTRV9QT1NFX0VSUk9SAEFSX1RFTVBMQVRFX01BVENISU5HX0NPTE9SAEFSX1RFTVBMQVRFX01BVENISU5HX01PTk8AQVJfTE9HX0xFVkVMX0lORk8AQVJfTE9HX0xFVkVMX1JFTF9JTkZPAEFSX0xPR19MRVZFTF9XQVJOAEFSX01BVFJJWF9DT0RFX0RFVEVDVElPTgBBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfUEFUVEVSTl9FWFRSQUNUSU9OAEFSX0xBQkVMSU5HX0JMQUNLX1JFR0lPTgBBUl9MQUJFTElOR19XSElURV9SRUdJT04ATkFOAEFSX0xBQkVMSU5HX1RIUkVTSF9NT0RFX0FVVE9fTUVESUFOAFBNAEpQRUdNRU0AQU0ATENfQUxMAEFSX01BUktFUl9JTkZPX0NVVE9GRl9QSEFTRV9NQVRDSF9CQVJDT0RFX0VEQ19GQUlMAEFSX0xBQkVMSU5HX1RIUkVTSF9NT0RFX01BTlVBTABBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfUE9TRV9FUlJPUl9NVUxUSQBBUl9MT09QX0JSRUFLX1RIUkVTSABBUl9ERUZBVUxUX0xBQkVMSU5HX1RIUkVTSABBUl9MT0dfTEVWRUxfREVCVUcATEFORwBJbnZhbGlkIFNPUyBwYXJhbWV0ZXJzIGZvciBzZXF1ZW50aWFsIEpQRUcAQ2F1dGlvbjogcXVhbnRpemF0aW9uIHRhYmxlcyBhcmUgdG9vIGNvYXJzZSBmb3IgYmFzZWxpbmUgSlBFRwBJbnZhbGlkIEpQRUcgZmlsZSBzdHJ1Y3R1cmU6ICVzIGJlZm9yZSBTT0YASU5GAEFSX0xBQkVMSU5HX1RIUkVTSF9NT0RFX0FVVE9fQURBUFRJVkUAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX05PTkUAQVJfREVCVUdfRElTQUJMRQBBUl9ERUJVR19FTkFCTEUAQVJfSU1BR0VfUFJPQ19GUkFNRV9JTUFHRQBBUl9JTUFHRV9QUk9DX0ZJRUxEX0lNQUdFAEFSX0RFRkFVTFRfUEFUVEVSTl9ERVRFQ1RJT05fTU9ERQBBUl9ERUZBVUxUX01BUktFUl9FWFRSQUNUSU9OX01PREUAQVJfREVGQVVMVF9ERUJVR19NT0RFAEFSX0RFRkFVTFRfTEFCRUxJTkdfTU9ERQBBUl9ERUZBVUxUX0lNQUdFX1BST0NfTU9ERQBBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfTUFUQ0hfQ09ORklERU5DRQBFUlJPUl9BUkNPTlRST0xMRVJfTk9UX0ZPVU5EAEVSUk9SX01VTFRJTUFSS0VSX05PVF9GT1VORABBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfTUFUQ0hfQkFSQ09ERV9OT1RfRk9VTkQAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX01BVENIX0dFTkVSSUMAT3V0cHV0IGZpbGUgd3JpdGUgZXJyb3IgLS0tIG91dCBvZiBkaXNrIHNwYWNlPwBXcml0ZSBmYWlsZWQgb24gdGVtcG9yYXJ5IGZpbGUgLS0tIG91dCBvZiBkaXNrIHNwYWNlPwBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxzaG9ydD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgc2hvcnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgaW50PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxmbG9hdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDhfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50OF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50MTZfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50MTZfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDMyX3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDMyX3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGNoYXI+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGNoYXI+AHN0ZDo6YmFzaWNfc3RyaW5nPHVuc2lnbmVkIGNoYXI+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHNpZ25lZCBjaGFyPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxsb25nPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1bnNpZ25lZCBsb25nPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxkb3VibGU+ADAxMjM0NTY3ODkAOWMgIDE0LUphbi0yMDE4AEMuVVRGLTgAQVJfTUFUUklYX0NPREVfNng2AEFSX01BVFJJWF9DT0RFXzV4NQBBUl9NQVRSSVhfQ09ERV80eDRfQkNIXzEzXzVfNQBBUl9NQVRSSVhfQ09ERV8zeDNfUEFSSVRZNjUAQVJfTUFUUklYX0NPREVfNHg0AEFSX01BVFJJWF9DT0RFXzN4MwBmc2V0MwBBUl9NQVRSSVhfQ09ERV80eDRfQkNIXzEzXzlfMwBBUl9NQVRSSVhfQ09ERV8zeDNfSEFNTUlORzYzAEFSX1VTRV9UUkFDS0lOR19ISVNUT1JZX1YyAHNldHVwQVIyAG9uLgBvZmYuAChudWxsKQBFbXB0eSBKUEVHIGltYWdlIChETkwgbm90IHN1cHBvcnRlZCkASW5zdWZmaWNpZW50IG1lbW9yeSAoY2FzZSAlZCkAUHVyZSB2aXJ0dWFsIGZ1bmN0aW9uIGNhbGxlZCEARXJyb3IgcmVhZGluZyBkYXRhIGZyb20gJXMuZnNldAoAUmVhZGluZyAlcy5mc2V0CgBFcnJvcjoga3BtU2V0UmVmRGF0YVNldAoARXJyb3I6IGtwbUNoYW5nZVBhZ2VOb09mUmVmRGF0YVNldAoARXJyb3I6IGtwbU1lcmdlUmVmRGF0YVNldAoARGVidWcgbW9kZSBzZXQgdG8gJXMKAExhYmVsaW5nIG1vZGUgc2V0IHRvICVkCgBUaHJlc2hvbGQgbW9kZSBzZXQgdG8gJWQKAFRocmVzaG9sZCBzZXQgdG8gJWQKAEFsbG9jYXRlZCB2aWRlb0ZyYW1lU2l6ZSAlZAoAVHJhY2tpbmcgbG9zdC4gJWQKAEVycm9yOiBtYWxsb2MKAEVycm9yIHJlYWRpbmcgS1BNIGRhdGEgZnJvbSAlcy5mc2V0MwoAUmVhZGluZyAlcy5mc2V0MwoAIyMjIEZlYXR1cmUgY2FuZGlkYXRlcyBmb3IgdHJhY2tpbmcgYXJlIG92ZXJmbG93LgoAbG9hZE1hcmtlcigpOiBFcnJvciBsb2FkaW5nIHBhdHRlcm4gZmlsZSAlcy4KAEFSVG9vbEtpdEpTKCk6IFVuYWJsZSB0byBzZXQgdXAgQVIgbXVsdGltYXJrZXIuCgBBUlRvb2xLaXRKUygpOiBVbmFibGUgdG8gc2V0IHVwIE5GVCBtYXJrZXIuCgBBUlRvb2xLaXRKUygpOiBVbmFibGUgdG8gc2V0IHVwIEFSIG1hcmtlci4KAFBhdHRlcm4gcmF0aW8gc2l6ZSBzZXQgdG8gJWYuCgBMb2FkaW5nIG9mIE5GVCBkYXRhIGNvbXBsZXRlLgoAc2V0Q2FtZXJhKCk6IEVycm9yOiBhclBhcmFtTFRDcmVhdGUuCgAgIERvbmUuCgBzZXR1cCgpOiBFcnJvcjogYXJQYXR0Q3JlYXRlSGFuZGxlLgoAc2V0Q2FtZXJhKCk6IEVycm9yOiBhckNyZWF0ZUhhbmRsZS4KAEVycm9yOiBhcjJDcmVhdGVIYW5kbGUuCgBQYXR0ZXJuIGRldGVjdGlvbiBtb2RlIHNldCB0byAlZC4KAEltYWdlIHByb2MuIG1vZGUgc2V0IHRvICVkLgoAICBBc3NpZ25lZCBwYWdlIG5vLiAlZC4KAGxvYWRDYW1lcmEoKTogRXJyb3IgbG9hZGluZyBwYXJhbWV0ZXIgZmlsZSAlcyBmb3IgY2FtZXJhLgoAVHJhY2tlZCBwYWdlICVkIChtYXggJWQpLgoAKioqIENhbWVyYSBQYXJhbWV0ZXIgcmVzaXplZCBmcm9tICVkLCAlZC4gKioqCgBPdXQgb2YgbWVtb3J5ISEKAGNvbmZpZyBkYXRhIGxvYWQgZXJyb3IgISEKAGlkZGRkZGRkZGRkZGRkAGkAaWlpZABB8K8CC5QCaWlpaWlpaWRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRpAGlpaWlpaQBOU3QzX18yNnZlY3Rvckk5bmZ0TWFya2VyTlNfOWFsbG9jYXRvcklTMV9FRUVFAOT5AAAZmAAAUE5TdDNfXzI2dmVjdG9ySTluZnRNYXJrZXJOU185YWxsb2NhdG9ySVMxX0VFRUUAxPoAAFCYAAAAAAAASJgAAFBLTlN0M19fMjZ2ZWN0b3JJOW5mdE1hcmtlck5TXzlhbGxvY2F0b3JJUzFfRUVFRQAAAADE+gAAkJgAAAEAAABImAAAaWkAdgB2aQCAmAAAIPkAAICYAAD4mAAAOW5mdE1hcmtlcgAA5PkAAOyYAAB2aWlpAEGQsgILUCD5AACAmAAApPkAAPiYAAB2aWlpaQAAAKT5AADEmAAAaWlpAFSZAABImAAApPkAAE4xMGVtc2NyaXB0ZW4zdmFsRQAA5PkAAECZAABpaWlpAEHwsgILFTj5AABImAAApPkAAPiYAABpaWlpaQBBkLMCC6sFgPkAAID5AACA+QAAgPkAAID5AACA+QAAgPkAAID5AAD0mQAATlN0M19fMjEyYmFzaWNfc3RyaW5nSWNOU18xMWNoYXJfdHJhaXRzSWNFRU5TXzlhbGxvY2F0b3JJY0VFRUUA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AAAACAAAABAAAAAJAAAAAgAAAAoAAAARAAAAEgAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AQcTSAgvMBgEAAAAIAAAACQAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAABOU3QzX18yMTJiYXNpY19zdHJpbmdJaE5TXzExY2hhcl90cmFpdHNJaEVFTlNfOWFsbG9jYXRvckloRUVFRQAA5PkAAJCpAABOU3QzX18yMTJiYXNpY19zdHJpbmdJd05TXzExY2hhcl90cmFpdHNJd0VFTlNfOWFsbG9jYXRvckl3RUVFRQAA5PkAANipAABOU3QzX18yMTJiYXNpY19zdHJpbmdJRHNOU18xMWNoYXJfdHJhaXRzSURzRUVOU185YWxsb2NhdG9ySURzRUVFRQAAAOT5AAAgqgAATlN0M19fMjEyYmFzaWNfc3RyaW5nSURpTlNfMTFjaGFyX3RyYWl0c0lEaUVFTlNfOWFsbG9jYXRvcklEaUVFRUUAAADk+QAAbKoAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWNFRQAA5PkAALiqAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lhRUUAAOT5AADgqgAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJaEVFAADk+QAACKsAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SXNFRQAA5PkAADCrAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0l0RUUAAOT5AABYqwAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJaUVFAADk+QAAgKsAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWpFRQAA5PkAAKirAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lsRUUAAOT5AADQqwAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJbUVFAADk+QAA+KsAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWZFRQAA5PkAACCsAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lk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IHN1Y2ggZGV2aWNlAE5vdCBhIGRpcmVjdG9yeQBJcyBhIGRpcmVjdG9yeQBUZXh0IGZpbGUgYnVzeQBFeGVjIGZvcm1hdCBlcnJvcgBJbnZhbGlkIGFyZ3VtZW50AEFyZ3VtZW50IGxpc3QgdG9vIGxvbmcAU3ltYm9saWMgbGluayBsb29wAEZpbGVuYW1lIHRvbyBsb25nAFRvbyBtYW55IG9wZW4gZmlsZXMgaW4gc3lzdGVtAE5vIGZpbGUgZGVzY3JpcHRvcnMgYXZhaWxhYmxlAEJhZCBmaWxlIGRlc2NyaXB0b3IATm8gY2hpbGQgcHJvY2VzcwBCYWQgYWRkcmVzcwBGaWxlIHRvbyBsYXJnZQBUb28gbWFueSBsaW5rcwBObyBsb2NrcyBhdmFpbGFibGUAUmVzb3VyY2UgZGVhZGxvY2sgd291bGQgb2NjdXIAU3RhdGUgbm90IHJlY292ZXJhYmxlAFByZXZpb3VzIG93bmVyIGRpZWQAT3BlcmF0aW9uIGNhbmNlbGVkAEZ1bmN0aW9uIG5vdCBpbXBsZW1lbnRlZABObyBtZXNzYWdlIG9mIGRlc2lyZWQgdHlwZQBJZGVudGlmaWVyIHJlbW92ZWQARGV2aWNlIG5vdCBhIHN0cmVhbQBObyBkYXRhIGF2YWlsYWJsZQBEZXZpY2UgdGltZW91dABPdXQgb2Ygc3RyZWFtcyByZXNvdXJjZXMATGluayBoYXMgYmVlbiBzZXZlcmVkAFByb3RvY29sIGVycm9yAEJhZCBtZXNzYWdlAEZpbGUgZGVzY3JpcHRvciBpbiBiYWQgc3RhdGUATm90IGEgc29ja2V0AERlc3RpbmF0aW9uIGFkZHJlc3MgcmVxdWlyZWQATWVzc2FnZSB0b28gbGFyZ2UAUHJvdG9jb2wgd3JvbmcgdHlwZSBmb3Igc29ja2V0AFByb3RvY29sIG5vdCBhdmFpbGFibGUAUHJvdG9jb2wgbm90IHN1cHBvcnRlZABTb2NrZXQgdHlwZSBub3Qgc3VwcG9ydGVkAE5vdCBzdXBwb3J0ZWQAUHJvdG9jb2wgZmFtaWx5IG5vdCBzdXBwb3J0ZWQAQWRkcmVzcyBmYW1pbHkgbm90IHN1cHBvcnRlZCBieSBwcm90b2NvbABBZGRyZXNzIG5vdCBhdmFpbGFibGUATmV0d29yayBpcyBkb3duAE5ldHdvcmsgdW5yZWFjaGFibGUAQ29ubmVjdGlvbiByZXNldCBieSBuZXR3b3JrAENvbm5lY3Rpb24gYWJvcnRlZABObyBidWZmZXIgc3BhY2UgYXZhaWxhYmxlAFNvY2tldCBpcyBjb25uZWN0ZWQAU29ja2V0IG5vdCBjb25uZWN0ZWQAQ2Fubm90IHNlbmQgYWZ0ZXIgc29ja2V0IHNodXRkb3duAE9wZXJhdGlvbiBhbHJlYWR5IGluIHByb2dyZXNzAE9wZXJhdGlvbiBpbiBwcm9ncmVzcwBTdGFsZSBmaWxlIGhhbmRsZQBSZW1vdGUgSS9PIGVycm9yAFF1b3RhIGV4Y2VlZGVkAE5vIG1lZGl1bSBmb3VuZABXcm9uZyBtZWRpdW0gdHlwZQBNdWx0aWhvcCBhdHRlbXB0ZWQAQeKFAwuWAaUCWwDwAbUFjAUlAYMGHQOUBP8AxwMxAwsGvAGPAX8DygQrANoGrwBCA04D3AEOBBUAoQYNAZQCCwI4BmQCvAL/Al0D5wQLB88CywXvBdsF4QIeBkUChQCCAmwDbwTxAPMDGAXZANoDTAZUAnsBnQO9BAAAUQAVArsAswNtAP8BhQQvBfkEOABlAUYBnwC3BqgBcwJTAQBBqIcDCwwhBAAAAAAAAAAALwIAQciHAwsGNQRHBFYEAEHehwMLAqAEAEHyhwMLX0YFYAVuBWEGAADPAQAAAAAAAAAAyQbpBvkGAAAAABkACgAZGRkAAAAABQAAAAAAAAkAAAAACwAAAAAAAAAAGQARChkZGQMKBwABAAkLGAAACQYLAAALAAYZAAAAGRkZAEHhiAMLIQ4AAAAAAAAAABkACg0ZGRkADQAAAgAJDgAAAAkADgAADgBBm4kDCwEMAEGniQMLFRMAAAAAEwAAAAAJDAAAAAAADAAADABB1YkDCwEQAEHhiQMLFQ8AAAAEDwAAAAAJEAAAAAAAEAAAEABBj4oDCwESAEGbigMLHhEAAAAAEQAAAAAJEgAAAAAAEgAAEgAAGgAAABoaGgBB0ooDCw4aAAAAGhoaAAAAAAAACQBBg4sDCwEUAEGPiwMLFRcAAAAAFwAAAAAJFAAAAAAAFAAAFABBvYsDCwEWAEHJiwMLJxUAAAAAFQAAAAAJFgAAAAAAFgAAFgAAMDEyMzQ1Njc4OUFCQ0RFRgBBlIwDCwICAQBBvIwDCwj//////////wBBgI0DC4MS0XSeAFedvSqAcFIP//8+JwoAAABkAAAA6AMAABAnAACghgEAQEIPAICWmAAA4fUFGAAAADUAAABxAAAAa////877//+Sv///AAAAAAAAAAD/////////////////////////////////////////////////////////////////AAECAwQFBgcICf////////8KCwwNDg8QERITFBUWFxgZGhscHR4fICEiI////////woLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIj/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////wABAgQHAwYFAAAAAAAAAAIAAMADAADABAAAwAUAAMAGAADABwAAwAgAAMAJAADACgAAwAsAAMAMAADADQAAwA4AAMAPAADAEAAAwBEAAMASAADAEwAAwBQAAMAVAADAFgAAwBcAAMAYAADAGQAAwBoAAMAbAADAHAAAwB0AAMAeAADAHwAAwAAAALMBAADDAgAAwwMAAMMEAADDBQAAwwYAAMMHAADDCAAAwwkAAMMKAADDCwAAwwwAAMMNAADTDgAAww8AAMMAAAy7AQAMwwIADMMDAAzDBAAM2wAAAAAAAAAAAgAAAAMAAAAFAAAABwAAAAsAAAANAAAAEQAAABMAAAAXAAAAHQAAAB8AAAAlAAAAKQAAACsAAAAvAAAANQAAADsAAAA9AAAAQwAAAEcAAABJAAAATwAAAFMAAABZAAAAYQAAAGUAAABnAAAAawAAAG0AAABxAAAAfwAAAIMAAACJAAAAiwAAAJUAAACXAAAAnQAAAKMAAACnAAAArQAAALMAAAC1AAAAvwAAAMEAAADFAAAAxwAAANMAAAABAAAACwAAAA0AAAARAAAAEwAAABcAAAAdAAAAHwAAACUAAAApAAAAKwAAAC8AAAA1AAAAOwAAAD0AAABDAAAARwAAAEkAAABPAAAAUwAAAFkAAABhAAAAZQAAAGcAAABrAAAAbQAAAHEAAAB5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\")||(AA=$,$=A.locateFile?A.locateFile(AA,y):y+AA);var iA={65008:function(){var A=arguments,I=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkit.NFTMarkerInfo;g.id=A[I++],g.error=A[I++],g.found=1,g.pose[0]=A[I++],g.pose[1]=A[I++],g.pose[2]=A[I++],g.pose[3]=A[I++],g.pose[4]=A[I++],g.pose[5]=A[I++],g.pose[6]=A[I++],g.pose[7]=A[I++],g.pose[8]=A[I++],g.pose[9]=A[I++],g.pose[10]=A[I++],g.pose[11]=A[I++]},65705:function(){var A=arguments,I=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkit.NFTMarkerInfo;g.id=A[I++],g.error=-1,g.found=0,g.pose[0]=0,g.pose[1]=0,g.pose[2]=0,g.pose[3]=0,g.pose[4]=0,g.pose[5]=0,g.pose[6]=0,g.pose[7]=0,g.pose[8]=0,g.pose[9]=0,g.pose[10]=0,g.pose[11]=0},66325:function(A,I,g,B){artoolkit.multiEachMarkerInfo||(artoolkit.multiEachMarkerInfo={});var Q=artoolkit.multiEachMarkerInfo;Q.visible=A,Q.pattId=I,Q.pattType=g,Q.width=B},66599:function(A,I,g,B,Q,C,E,i,o,D,a,w){var t=arguments,s=12;artoolkit.markerInfo||(artoolkit.markerInfo={pos:[0,0],line:[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],vertex:[[0,0],[0,0],[0,0],[0,0]]});var G=artoolkit.markerInfo;G.area=A,G.id=I,G.idPatt=g,G.idMatrix=B,G.dir=Q,G.dirPatt=C,G.dirMatrix=E,G.cf=i,G.cfPatt=o,G.cfMatrix=D,G.pos[0]=a,G.pos[1]=w,G.line[0][0]=t[s++],G.line[0][1]=t[s++],G.line[0][2]=t[s++],G.line[1][0]=t[s++],G.line[1][1]=t[s++],G.line[1][2]=t[s++],G.line[2][0]=t[s++],G.line[2][1]=t[s++],G.line[2][2]=t[s++],G.line[3][0]=t[s++],G.line[3][1]=t[s++],G.line[3][2]=t[s++],G.vertex[0][0]=t[s++],G.vertex[0][1]=t[s++],G.vertex[1][0]=t[s++],G.vertex[1][1]=t[s++],G.vertex[2][0]=t[s++],G.vertex[2][1]=t[s++],G.vertex[3][0]=t[s++],G.vertex[3][1]=t[s++],G.errorCorrected=t[s++]},67934:function(A,I,g,B,Q,C){artoolkit.frameMalloc||(artoolkit.frameMalloc={});var E=artoolkit.frameMalloc;E.framepointer=I,E.framesize=g,E.camera=B,E.transform=Q,E.videoLumaPointer=C}};function oA(A){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+A+\")\",this.status=A}function DA(I){for(;I.length>0;)I.shift()(A)}function aA(A){this.excPtr=A,this.ptr=A-24,this.set_type=function(A){H[this.ptr+4>>2]=A},this.get_type=function(){return H[this.ptr+4>>2]},this.set_destructor=function(A){H[this.ptr+8>>2]=A},this.get_destructor=function(){return H[this.ptr+8>>2]},this.set_refcount=function(A){d[this.ptr>>2]=A},this.set_caught=function(A){A=A?1:0,J[this.ptr+12>>0]=A},this.get_caught=function(){return 0!=J[this.ptr+12>>0]},this.set_rethrown=function(A){A=A?1:0,J[this.ptr+13>>0]=A},this.get_rethrown=function(){return 0!=J[this.ptr+13>>0]},this.init=function(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var A=d[this.ptr>>2];d[this.ptr>>2]=A+1},this.release_ref=function(){var A=d[this.ptr>>2];return d[this.ptr>>2]=A-1,1===A},this.set_adjusted_ptr=function(A){H[this.ptr+16>>2]=A},this.get_adjusted_ptr=function(){return H[this.ptr+16>>2]},this.get_exception_ptr=function(){if(jI(this.get_type()))return H[this.excPtr>>2];var A=this.get_adjusted_ptr();return 0!==A?A:this.excPtr}}var wA={isAbs:function(A){return\"/\"===A.charAt(0)},splitPath:function(A){return/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/.exec(A).slice(1)},normalizeArray:function(A,I){for(var g=0,B=A.length-1;B>=0;B--){var Q=A[B];\".\"===Q?A.splice(B,1):\"..\"===Q?(A.splice(B,1),g++):g&&(A.splice(B,1),g--)}if(I)for(;g;g--)A.unshift(\"..\");return A},normalize:function(A){var I=wA.isAbs(A),g=\"/\"===A.substr(-1);return(A=wA.normalizeArray(A.split(\"/\").filter((function(A){return!!A})),!I).join(\"/\"))||I||(A=\".\"),A&&g&&(A+=\"/\"),(I?\"/\":\"\")+A},dirname:function(A){var I=wA.splitPath(A),g=I[0],B=I[1];return g||B?(B&&(B=B.substr(0,B.length-1)),g+B):\".\"},basename:function(A){if(\"/\"===A)return\"/\";var I=(A=(A=wA.normalize(A)).replace(/\\/$/,\"\")).lastIndexOf(\"/\");return-1===I?A:A.substr(I+1)},join:function(){var A=Array.prototype.slice.call(arguments);return wA.normalize(A.join(\"/\"))},join2:function(A,I){return wA.normalize(A+\"/\"+I)}},tA={resolve:function(){for(var A=\"\",I=!1,g=arguments.length-1;g>=-1&&!I;g--){var B=g>=0?arguments[g]:rA.cwd();if(\"string\"!=typeof B)throw new TypeError(\"Arguments to path.resolve must be strings\");if(!B)return\"\";A=B+\"/\"+A,I=wA.isAbs(B)}return(I?\"/\":\"\")+(A=wA.normalizeArray(A.split(\"/\").filter((function(A){return!!A})),!I).join(\"/\"))||\".\"},relative:function(A,I){function g(A){for(var I=0;I<A.length&&\"\"===A[I];I++);for(var g=A.length-1;g>=0&&\"\"===A[g];g--);return I>g?[]:A.slice(I,g-I+1)}A=tA.resolve(A).substr(1),I=tA.resolve(I).substr(1);for(var B=g(A.split(\"/\")),Q=g(I.split(\"/\")),C=Math.min(B.length,Q.length),E=C,i=0;i<C;i++)if(B[i]!==Q[i]){E=i;break}var o=[];for(i=E;i<B.length;i++)o.push(\"..\");return(o=o.concat(Q.slice(E))).join(\"/\")}};function sA(A,I,g){var B=g>0?g:p(A)+1,Q=new Array(B),C=m(A,Q,0,Q.length);return I&&(Q.length=C),Q}var GA={ttys:[],init:function(){},shutdown:function(){},register:function(A,I){GA.ttys[A]={input:[],output:[],ops:I},rA.registerDevice(A,GA.stream_ops)},stream_ops:{open:function(A){var I=GA.ttys[A.node.rdev];if(!I)throw new rA.ErrnoError(43);A.tty=I,A.seekable=!1},close:function(A){A.tty.ops.fsync(A.tty)},fsync:function(A){A.tty.ops.fsync(A.tty)},read:function(A,I,g,B,Q){if(!A.tty||!A.tty.ops.get_char)throw new rA.ErrnoError(60);for(var C=0,E=0;E<B;E++){var i;try{i=A.tty.ops.get_char(A.tty)}catch(A){throw new rA.ErrnoError(29)}if(void 0===i&&0===C)throw new rA.ErrnoError(6);if(null==i)break;C++,I[g+E]=i}return C&&(A.node.timestamp=Date.now()),C},write:function(A,I,g,B,Q){if(!A.tty||!A.tty.ops.put_char)throw new rA.ErrnoError(60);try{for(var C=0;C<B;C++)A.tty.ops.put_char(A.tty,I[g+C])}catch(A){throw new rA.ErrnoError(29)}return B&&(A.node.timestamp=Date.now()),C}},default_tty_ops:{get_char:function(A){if(!A.input.length){var I=null;if(F){var g=Buffer.alloc(256),B=0;try{B=i.readSync(process.stdin.fd,g,0,256,-1)}catch(A){if(!A.toString().includes(\"EOF\"))throw A;B=0}I=B>0?g.slice(0,B).toString(\"utf-8\"):null}else\"undefined\"!=typeof window&&\"function\"==typeof window.prompt?null!==(I=window.prompt(\"Input: \"))&&(I+=\"\\n\"):\"function\"==typeof readline&&null!==(I=readline())&&(I+=\"\\n\");if(!I)return null;A.input=sA(I,!0)}return A.input.shift()},put_char:function(A,I){null===I||10===I?(n(u(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(n(u(A.output,0)),A.output=[])}},default_tty1_ops:{put_char:function(A,I){null===I||10===I?(M(u(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(M(u(A.output,0)),A.output=[])}}};function hA(A){_()}var RA={ops_table:null,mount:function(A){return RA.createNode(null,\"/\",16895,0)},createNode:function(A,I,g,B){if(rA.isBlkdev(g)||rA.isFIFO(g))throw new rA.ErrnoError(63);RA.ops_table||(RA.ops_table={dir:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr,lookup:RA.node_ops.lookup,mknod:RA.node_ops.mknod,rename:RA.node_ops.rename,unlink:RA.node_ops.unlink,rmdir:RA.node_ops.rmdir,readdir:RA.node_ops.readdir,symlink:RA.node_ops.symlink},stream:{llseek:RA.stream_ops.llseek}},file:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr},stream:{llseek:RA.stream_ops.llseek,read:RA.stream_ops.read,write:RA.stream_ops.write,allocate:RA.stream_ops.allocate,mmap:RA.stream_ops.mmap,msync:RA.stream_ops.msync}},link:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr,readlink:RA.node_ops.readlink},stream:{}},chrdev:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr},stream:rA.chrdev_stream_ops}});var Q=rA.createNode(A,I,g,B);return rA.isDir(Q.mode)?(Q.node_ops=RA.ops_table.dir.node,Q.stream_ops=RA.ops_table.dir.stream,Q.contents={}):rA.isFile(Q.mode)?(Q.node_ops=RA.ops_table.file.node,Q.stream_ops=RA.ops_table.file.stream,Q.usedBytes=0,Q.contents=null):rA.isLink(Q.mode)?(Q.node_ops=RA.ops_table.link.node,Q.stream_ops=RA.ops_table.link.stream):rA.isChrdev(Q.mode)&&(Q.node_ops=RA.ops_table.chrdev.node,Q.stream_ops=RA.ops_table.chrdev.stream),Q.timestamp=Date.now(),A&&(A.contents[I]=Q,A.timestamp=Q.timestamp),Q},getFileDataAsTypedArray:function(A){return A.contents?A.contents.subarray?A.contents.subarray(0,A.usedBytes):new Uint8Array(A.contents):new Uint8Array(0)},expandFileStorage:function(A,I){var g=A.contents?A.contents.length:0;if(!(g>=I)){I=Math.max(I,g*(g<1048576?2:1.125)>>>0),0!=g&&(I=Math.max(I,256));var B=A.contents;A.contents=new Uint8Array(I),A.usedBytes>0&&A.contents.set(B.subarray(0,A.usedBytes),0)}},resizeFileStorage:function(A,I){if(A.usedBytes!=I)if(0==I)A.contents=null,A.usedBytes=0;else{var g=A.contents;A.contents=new Uint8Array(I),g&&A.contents.set(g.subarray(0,Math.min(I,A.usedBytes))),A.usedBytes=I}},node_ops:{getattr:function(A){var I={};return I.dev=rA.isChrdev(A.mode)?A.id:1,I.ino=A.id,I.mode=A.mode,I.nlink=1,I.uid=0,I.gid=0,I.rdev=A.rdev,rA.isDir(A.mode)?I.size=4096:rA.isFile(A.mode)?I.size=A.usedBytes:rA.isLink(A.mode)?I.size=A.link.length:I.size=0,I.atime=new Date(A.timestamp),I.mtime=new Date(A.timestamp),I.ctime=new Date(A.timestamp),I.blksize=4096,I.blocks=Math.ceil(I.size/I.blksize),I},setattr:function(A,I){void 0!==I.mode&&(A.mode=I.mode),void 0!==I.timestamp&&(A.timestamp=I.timestamp),void 0!==I.size&&RA.resizeFileStorage(A,I.size)},lookup:function(A,I){throw rA.genericErrors[44]},mknod:function(A,I,g,B){return RA.createNode(A,I,g,B)},rename:function(A,I,g){if(rA.isDir(A.mode)){var B;try{B=rA.lookupNode(I,g)}catch(A){}if(B)for(var Q in B.contents)throw new rA.ErrnoError(55)}delete A.parent.contents[A.name],A.parent.timestamp=Date.now(),A.name=g,I.contents[g]=A,I.timestamp=A.parent.timestamp,A.parent=I},unlink:function(A,I){delete A.contents[I],A.timestamp=Date.now()},rmdir:function(A,I){var g=rA.lookupNode(A,I);for(var B in g.contents)throw new rA.ErrnoError(55);delete A.contents[I],A.timestamp=Date.now()},readdir:function(A){var I=[\".\",\"..\"];for(var g in A.contents)A.contents.hasOwnProperty(g)&&I.push(g);return I},symlink:function(A,I,g){var B=RA.createNode(A,I,41471,0);return B.link=g,B},readlink:function(A){if(!rA.isLink(A.mode))throw new rA.ErrnoError(28);return A.link}},stream_ops:{read:function(A,I,g,B,Q){var C=A.node.contents;if(Q>=A.node.usedBytes)return 0;var E=Math.min(A.node.usedBytes-Q,B);if(E>8&&C.subarray)I.set(C.subarray(Q,Q+E),g);else for(var i=0;i<E;i++)I[g+i]=C[Q+i];return E},write:function(A,I,g,B,Q,C){if(I.buffer===J.buffer&&(C=!1),!B)return 0;var E=A.node;if(E.timestamp=Date.now(),I.subarray&&(!E.contents||E.contents.subarray)){if(C)return E.contents=I.subarray(g,g+B),E.usedBytes=B,B;if(0===E.usedBytes&&0===Q)return E.contents=I.slice(g,g+B),E.usedBytes=B,B;if(Q+B<=E.usedBytes)return E.contents.set(I.subarray(g,g+B),Q),B}if(RA.expandFileStorage(E,Q+B),E.contents.subarray&&I.subarray)E.contents.set(I.subarray(g,g+B),Q);else for(var i=0;i<B;i++)E.contents[Q+i]=I[g+i];return E.usedBytes=Math.max(E.usedBytes,Q+B),B},llseek:function(A,I,g){var B=I;if(1===g?B+=A.position:2===g&&rA.isFile(A.node.mode)&&(B+=A.node.usedBytes),B<0)throw new rA.ErrnoError(28);return B},allocate:function(A,I,g){RA.expandFileStorage(A.node,I+g),A.node.usedBytes=Math.max(A.node.usedBytes,I+g)},mmap:function(A,I,g,B,Q){if(!rA.isFile(A.node.mode))throw new rA.ErrnoError(43);var C,E,i=A.node.contents;if(2&Q||i.buffer!==U){if((g>0||g+I<i.length)&&(i=i.subarray?i.subarray(g,g+I):Array.prototype.slice.call(i,g,g+I)),E=!0,!(C=hA()))throw new rA.ErrnoError(48);J.set(i,C)}else E=!1,C=i.byteOffset;return{ptr:C,allocated:E}},msync:function(A,I,g,B,Q){if(!rA.isFile(A.node.mode))throw new rA.ErrnoError(43);return 2&Q||RA.stream_ops.write(A,I,0,B,g,!1),0}}},rA={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(A){var I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(A=tA.resolve(rA.cwd(),A)))return{path:\"\",node:null};var g={follow_mount:!0,recurse_count:0};if((I=Object.assign(g,I)).recurse_count>8)throw new rA.ErrnoError(32);for(var B=wA.normalizeArray(A.split(\"/\").filter((function(A){return!!A})),!1),Q=rA.root,C=\"/\",E=0;E<B.length;E++){var i=E===B.length-1;if(i&&I.parent)break;if(Q=rA.lookupNode(Q,B[E]),C=wA.join2(C,B[E]),rA.isMountpoint(Q)&&(!i||i&&I.follow_mount)&&(Q=Q.mounted.root),!i||I.follow)for(var o=0;rA.isLink(Q.mode);){var D=rA.readlink(C);C=tA.resolve(wA.dirname(C),D);var a=rA.lookupPath(C,{recurse_count:I.recurse_count+1});if(Q=a.node,o++>40)throw new rA.ErrnoError(32)}}return{path:C,node:Q}},getPath:function(A){for(var I;;){if(rA.isRoot(A)){var g=A.mount.mountpoint;return I?\"/\"!==g[g.length-1]?g+\"/\"+I:g+I:g}I=I?A.name+\"/\"+I:A.name,A=A.parent}},hashName:function(A,I){for(var g=0,B=0;B<I.length;B++)g=(g<<5)-g+I.charCodeAt(B)|0;return(A+g>>>0)%rA.nameTable.length},hashAddNode:function(A){var I=rA.hashName(A.parent.id,A.name);A.name_next=rA.nameTable[I],rA.nameTable[I]=A},hashRemoveNode:function(A){var I=rA.hashName(A.parent.id,A.name);if(rA.nameTable[I]===A)rA.nameTable[I]=A.name_next;else for(var g=rA.nameTable[I];g;){if(g.name_next===A){g.name_next=A.name_next;break}g=g.name_next}},lookupNode:function(A,I){var g=rA.mayLookup(A);if(g)throw new rA.ErrnoError(g,A);for(var B=rA.hashName(A.id,I),Q=rA.nameTable[B];Q;Q=Q.name_next){var C=Q.name;if(Q.parent.id===A.id&&C===I)return Q}return rA.lookup(A,I)},createNode:function(A,I,g,B){var Q=new rA.FSNode(A,I,g,B);return rA.hashAddNode(Q),Q},destroyNode:function(A){rA.hashRemoveNode(A)},isRoot:function(A){return A===A.parent},isMountpoint:function(A){return!!A.mounted},isFile:function(A){return 32768==(61440&A)},isDir:function(A){return 16384==(61440&A)},isLink:function(A){return 40960==(61440&A)},isChrdev:function(A){return 8192==(61440&A)},isBlkdev:function(A){return 24576==(61440&A)},isFIFO:function(A){return 4096==(61440&A)},isSocket:function(A){return 49152==(49152&A)},flagModes:{r:0,\"r+\":2,w:577,\"w+\":578,a:1089,\"a+\":1090},modeStringToFlags:function(A){var I=rA.flagModes[A];if(void 0===I)throw new Error(\"Unknown file open mode: \"+A);return I},flagsToPermissionString:function(A){var I=[\"r\",\"w\",\"rw\"][3&A];return 512&A&&(I+=\"w\"),I},nodePermissions:function(A,I){return rA.ignorePermissions||(!I.includes(\"r\")||292&A.mode)&&(!I.includes(\"w\")||146&A.mode)&&(!I.includes(\"x\")||73&A.mode)?0:2},mayLookup:function(A){return rA.nodePermissions(A,\"x\")||(A.node_ops.lookup?0:2)},mayCreate:function(A,I){try{return rA.lookupNode(A,I),20}catch(A){}return rA.nodePermissions(A,\"wx\")},mayDelete:function(A,I,g){var B;try{B=rA.lookupNode(A,I)}catch(A){return A.errno}var Q=rA.nodePermissions(A,\"wx\");if(Q)return Q;if(g){if(!rA.isDir(B.mode))return 54;if(rA.isRoot(B)||rA.getPath(B)===rA.cwd())return 10}else if(rA.isDir(B.mode))return 31;return 0},mayOpen:function(A,I){return A?rA.isLink(A.mode)?32:rA.isDir(A.mode)&&(\"r\"!==rA.flagsToPermissionString(I)||512&I)?31:rA.nodePermissions(A,rA.flagsToPermissionString(I)):44},MAX_OPEN_FDS:4096,nextfd:function(){for(var A=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:rA.MAX_OPEN_FDS,g=A;g<=I;g++)if(!rA.streams[g])return g;throw new rA.ErrnoError(33)},getStream:function(A){return rA.streams[A]},createStream:function(A,I,g){rA.FSStream||(rA.FSStream=function(){this.shared={}},rA.FSStream.prototype={},Object.defineProperties(rA.FSStream.prototype,{object:{get:function(){return this.node},set:function(A){this.node=A}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(A){this.shared.flags=A}},position:{get:function(){return this.shared.position},set:function(A){this.shared.position=A}}})),A=Object.assign(new rA.FSStream,A);var B=rA.nextfd(I,g);return A.fd=B,rA.streams[B]=A,A},closeStream:function(A){rA.streams[A]=null},chrdev_stream_ops:{open:function(A){var I=rA.getDevice(A.node.rdev);A.stream_ops=I.stream_ops,A.stream_ops.open&&A.stream_ops.open(A)},llseek:function(){throw new rA.ErrnoError(70)}},major:function(A){return A>>8},minor:function(A){return 255&A},makedev:function(A,I){return A<<8|I},registerDevice:function(A,I){rA.devices[A]={stream_ops:I}},getDevice:function(A){return rA.devices[A]},getMounts:function(A){for(var I=[],g=[A];g.length;){var B=g.pop();I.push(B),g.push.apply(g,B.mounts)}return I},syncfs:function(A,I){\"function\"==typeof A&&(I=A,A=!1),rA.syncFSRequests++,rA.syncFSRequests>1&&M(\"warning: \"+rA.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\");var g=rA.getMounts(rA.root.mount),B=0;function Q(A){return rA.syncFSRequests--,I(A)}function C(A){if(A)return C.errored?void 0:(C.errored=!0,Q(A));++B>=g.length&&Q(null)}g.forEach((function(I){if(!I.type.syncfs)return C(null);I.type.syncfs(I,A,C)}))},mount:function(A,I,g){var B,Q=\"/\"===g,C=!g;if(Q&&rA.root)throw new rA.ErrnoError(10);if(!Q&&!C){var E=rA.lookupPath(g,{follow_mount:!1});if(g=E.path,B=E.node,rA.isMountpoint(B))throw new rA.ErrnoError(10);if(!rA.isDir(B.mode))throw new rA.ErrnoError(54)}var i={type:A,opts:I,mountpoint:g,mounts:[]},o=A.mount(i);return o.mount=i,i.root=o,Q?rA.root=o:B&&(B.mounted=i,B.mount&&B.mount.mounts.push(i)),o},unmount:function(A){var I=rA.lookupPath(A,{follow_mount:!1});if(!rA.isMountpoint(I.node))throw new rA.ErrnoError(28);var g=I.node,B=g.mounted,Q=rA.getMounts(B);Object.keys(rA.nameTable).forEach((function(A){for(var I=rA.nameTable[A];I;){var g=I.name_next;Q.includes(I.mount)&&rA.destroyNode(I),I=g}})),g.mounted=null;var C=g.mount.mounts.indexOf(B);g.mount.mounts.splice(C,1)},lookup:function(A,I){return A.node_ops.lookup(A,I)},mknod:function(A,I,g){var B=rA.lookupPath(A,{parent:!0}).node,Q=wA.basename(A);if(!Q||\".\"===Q||\"..\"===Q)throw new rA.ErrnoError(28);var C=rA.mayCreate(B,Q);if(C)throw new rA.ErrnoError(C);if(!B.node_ops.mknod)throw new rA.ErrnoError(63);return B.node_ops.mknod(B,Q,I,g)},create:function(A,I){return I=void 0!==I?I:438,I&=4095,I|=32768,rA.mknod(A,I,0)},mkdir:function(A,I){return I=void 0!==I?I:511,I&=1023,I|=16384,rA.mknod(A,I,0)},mkdirTree:function(A,I){for(var g=A.split(\"/\"),B=\"\",Q=0;Q<g.length;++Q)if(g[Q]){B+=\"/\"+g[Q];try{rA.mkdir(B,I)}catch(A){if(20!=A.errno)throw A}}},mkdev:function(A,I,g){return void 0===g&&(g=I,I=438),I|=8192,rA.mknod(A,I,g)},symlink:function(A,I){if(!tA.resolve(A))throw new rA.ErrnoError(44);var g=rA.lookupPath(I,{parent:!0}).node;if(!g)throw new rA.ErrnoError(44);var B=wA.basename(I),Q=rA.mayCreate(g,B);if(Q)throw new rA.ErrnoError(Q);if(!g.node_ops.symlink)throw new rA.ErrnoError(63);return g.node_ops.symlink(g,B,A)},rename:function(A,I){var g,B,Q=wA.dirname(A),C=wA.dirname(I),E=wA.basename(A),i=wA.basename(I);if(g=rA.lookupPath(A,{parent:!0}).node,B=rA.lookupPath(I,{parent:!0}).node,!g||!B)throw new rA.ErrnoError(44);if(g.mount!==B.mount)throw new rA.ErrnoError(75);var o,D=rA.lookupNode(g,E),a=tA.relative(A,C);if(\".\"!==a.charAt(0))throw new rA.ErrnoError(28);if(\".\"!==(a=tA.relative(I,Q)).charAt(0))throw new rA.ErrnoError(55);try{o=rA.lookupNode(B,i)}catch(A){}if(D!==o){var w=rA.isDir(D.mode),t=rA.mayDelete(g,E,w);if(t)throw new rA.ErrnoError(t);if(t=o?rA.mayDelete(B,i,w):rA.mayCreate(B,i))throw new rA.ErrnoError(t);if(!g.node_ops.rename)throw new rA.ErrnoError(63);if(rA.isMountpoint(D)||o&&rA.isMountpoint(o))throw new rA.ErrnoError(10);if(B!==g&&(t=rA.nodePermissions(g,\"w\")))throw new rA.ErrnoError(t);rA.hashRemoveNode(D);try{g.node_ops.rename(D,B,i)}catch(A){throw A}finally{rA.hashAddNode(D)}}},rmdir:function(A){var I=rA.lookupPath(A,{parent:!0}).node,g=wA.basename(A),B=rA.lookupNode(I,g),Q=rA.mayDelete(I,g,!0);if(Q)throw new rA.ErrnoError(Q);if(!I.node_ops.rmdir)throw new rA.ErrnoError(63);if(rA.isMountpoint(B))throw new rA.ErrnoError(10);I.node_ops.rmdir(I,g),rA.destroyNode(B)},readdir:function(A){var I=rA.lookupPath(A,{follow:!0}).node;if(!I.node_ops.readdir)throw new rA.ErrnoError(54);return I.node_ops.readdir(I)},unlink:function(A){var I=rA.lookupPath(A,{parent:!0}).node;if(!I)throw new rA.ErrnoError(44);var g=wA.basename(A),B=rA.lookupNode(I,g),Q=rA.mayDelete(I,g,!1);if(Q)throw new rA.ErrnoError(Q);if(!I.node_ops.unlink)throw new rA.ErrnoError(63);if(rA.isMountpoint(B))throw new rA.ErrnoError(10);I.node_ops.unlink(I,g),rA.destroyNode(B)},readlink:function(A){var I=rA.lookupPath(A).node;if(!I)throw new rA.ErrnoError(44);if(!I.node_ops.readlink)throw new rA.ErrnoError(28);return tA.resolve(rA.getPath(I.parent),I.node_ops.readlink(I))},stat:function(A,I){var g=rA.lookupPath(A,{follow:!I}).node;if(!g)throw new rA.ErrnoError(44);if(!g.node_ops.getattr)throw new rA.ErrnoError(63);return g.node_ops.getattr(g)},lstat:function(A){return rA.stat(A,!0)},chmod:function(A,I,g){var B;if(!(B=\"string\"==typeof A?rA.lookupPath(A,{follow:!g}).node:A).node_ops.setattr)throw new rA.ErrnoError(63);B.node_ops.setattr(B,{mode:4095&I|-4096&B.mode,timestamp:Date.now()})},lchmod:function(A,I){rA.chmod(A,I,!0)},fchmod:function(A,I){var g=rA.getStream(A);if(!g)throw new rA.ErrnoError(8);rA.chmod(g.node,I)},chown:function(A,I,g,B){var Q;if(!(Q=\"string\"==typeof A?rA.lookupPath(A,{follow:!B}).node:A).node_ops.setattr)throw new rA.ErrnoError(63);Q.node_ops.setattr(Q,{timestamp:Date.now()})},lchown:function(A,I,g){rA.chown(A,I,g,!0)},fchown:function(A,I,g){var B=rA.getStream(A);if(!B)throw new rA.ErrnoError(8);rA.chown(B.node,I,g)},truncate:function(A,I){if(I<0)throw new rA.ErrnoError(28);var g;if(!(g=\"string\"==typeof A?rA.lookupPath(A,{follow:!0}).node:A).node_ops.setattr)throw new rA.ErrnoError(63);if(rA.isDir(g.mode))throw new rA.ErrnoError(31);if(!rA.isFile(g.mode))throw new rA.ErrnoError(28);var B=rA.nodePermissions(g,\"w\");if(B)throw new rA.ErrnoError(B);g.node_ops.setattr(g,{size:I,timestamp:Date.now()})},ftruncate:function(A,I){var g=rA.getStream(A);if(!g)throw new rA.ErrnoError(8);if(0==(2097155&g.flags))throw new rA.ErrnoError(28);rA.truncate(g.node,I)},utime:function(A,I,g){var B=rA.lookupPath(A,{follow:!0}).node;B.node_ops.setattr(B,{timestamp:Math.max(I,g)})},open:function(I,g,B){if(\"\"===I)throw new rA.ErrnoError(44);var Q;if(B=void 0===B?438:B,B=64&(g=\"string\"==typeof g?rA.modeStringToFlags(g):g)?4095&B|32768:0,\"object\"==D(I))Q=I;else{I=wA.normalize(I);try{Q=rA.lookupPath(I,{follow:!(131072&g)}).node}catch(A){}}var C=!1;if(64&g)if(Q){if(128&g)throw new rA.ErrnoError(20)}else Q=rA.mknod(I,B,0),C=!0;if(!Q)throw new rA.ErrnoError(44);if(rA.isChrdev(Q.mode)&&(g&=-513),65536&g&&!rA.isDir(Q.mode))throw new rA.ErrnoError(54);if(!C){var E=rA.mayOpen(Q,g);if(E)throw new rA.ErrnoError(E)}512&g&&!C&&rA.truncate(Q,0),g&=-131713;var i=rA.createStream({node:Q,path:rA.getPath(Q),flags:g,seekable:!0,position:0,stream_ops:Q.stream_ops,ungotten:[],error:!1});return i.stream_ops.open&&i.stream_ops.open(i),!A.logReadFiles||1&g||(rA.readFiles||(rA.readFiles={}),I in rA.readFiles||(rA.readFiles[I]=1)),i},close:function(A){if(rA.isClosed(A))throw new rA.ErrnoError(8);A.getdents&&(A.getdents=null);try{A.stream_ops.close&&A.stream_ops.close(A)}catch(A){throw A}finally{rA.closeStream(A.fd)}A.fd=null},isClosed:function(A){return null===A.fd},llseek:function(A,I,g){if(rA.isClosed(A))throw new rA.ErrnoError(8);if(!A.seekable||!A.stream_ops.llseek)throw new rA.ErrnoError(70);if(0!=g&&1!=g&&2!=g)throw new rA.ErrnoError(28);return A.position=A.stream_ops.llseek(A,I,g),A.ungotten=[],A.position},read:function(A,I,g,B,Q){if(B<0||Q<0)throw new rA.ErrnoError(28);if(rA.isClosed(A))throw new rA.ErrnoError(8);if(1==(2097155&A.flags))throw new rA.ErrnoError(8);if(rA.isDir(A.node.mode))throw new rA.ErrnoError(31);if(!A.stream_ops.read)throw new rA.ErrnoError(28);var C=void 0!==Q;if(C){if(!A.seekable)throw new rA.ErrnoError(70)}else Q=A.position;var E=A.stream_ops.read(A,I,g,B,Q);return C||(A.position+=E),E},write:function(A,I,g,B,Q,C){if(B<0||Q<0)throw new rA.ErrnoError(28);if(rA.isClosed(A))throw new rA.ErrnoError(8);if(0==(2097155&A.flags))throw new rA.ErrnoError(8);if(rA.isDir(A.node.mode))throw new rA.ErrnoError(31);if(!A.stream_ops.write)throw new rA.ErrnoError(28);A.seekable&&1024&A.flags&&rA.llseek(A,0,2);var E=void 0!==Q;if(E){if(!A.seekable)throw new rA.ErrnoError(70)}else Q=A.position;var i=A.stream_ops.write(A,I,g,B,Q,C);return E||(A.position+=i),i},allocate:function(A,I,g){if(rA.isClosed(A))throw new rA.ErrnoError(8);if(I<0||g<=0)throw new rA.ErrnoError(28);if(0==(2097155&A.flags))throw new rA.ErrnoError(8);if(!rA.isFile(A.node.mode)&&!rA.isDir(A.node.mode))throw new rA.ErrnoError(43);if(!A.stream_ops.allocate)throw new rA.ErrnoError(138);A.stream_ops.allocate(A,I,g)},mmap:function(A,I,g,B,Q){if(0!=(2&B)&&0==(2&Q)&&2!=(2097155&A.flags))throw new rA.ErrnoError(2);if(1==(2097155&A.flags))throw new rA.ErrnoError(2);if(!A.stream_ops.mmap)throw new rA.ErrnoError(43);return A.stream_ops.mmap(A,I,g,B,Q)},msync:function(A,I,g,B,Q){return A&&A.stream_ops.msync?A.stream_ops.msync(A,I,g,B,Q):0},munmap:function(A){return 0},ioctl:function(A,I,g){if(!A.stream_ops.ioctl)throw new rA.ErrnoError(59);return A.stream_ops.ioctl(A,I,g)},readFile:function(A){var I,g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(g.flags=g.flags||0,g.encoding=g.encoding||\"binary\",\"utf8\"!==g.encoding&&\"binary\"!==g.encoding)throw new Error('Invalid encoding type \"'+g.encoding+'\"');var B=rA.open(A,g.flags),Q=rA.stat(A),C=Q.size,E=new Uint8Array(C);return rA.read(B,E,0,C,0),\"utf8\"===g.encoding?I=u(E,0):\"binary\"===g.encoding&&(I=E),rA.close(B),I},writeFile:function(A,I){var g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};g.flags=g.flags||577;var B=rA.open(A,g.flags,g.mode);if(\"string\"==typeof I){var Q=new Uint8Array(p(I)+1),C=m(I,Q,0,Q.length);rA.write(B,Q,0,C,void 0,g.canOwn)}else{if(!ArrayBuffer.isView(I))throw new Error(\"Unsupported data type\");rA.write(B,I,0,I.byteLength,void 0,g.canOwn)}rA.close(B)},cwd:function(){return rA.currentPath},chdir:function(A){var I=rA.lookupPath(A,{follow:!0});if(null===I.node)throw new rA.ErrnoError(44);if(!rA.isDir(I.node.mode))throw new rA.ErrnoError(54);var g=rA.nodePermissions(I.node,\"x\");if(g)throw new rA.ErrnoError(g);rA.currentPath=I.path},createDefaultDirectories:function(){rA.mkdir(\"/tmp\"),rA.mkdir(\"/home\"),rA.mkdir(\"/home/web_user\")},createDefaultDevices:function(){rA.mkdir(\"/dev\"),rA.registerDevice(rA.makedev(1,3),{read:function(){return 0},write:function(A,I,g,B,Q){return B}}),rA.mkdev(\"/dev/null\",rA.makedev(1,3)),GA.register(rA.makedev(5,0),GA.default_tty_ops),GA.register(rA.makedev(6,0),GA.default_tty1_ops),rA.mkdev(\"/dev/tty\",rA.makedev(5,0)),rA.mkdev(\"/dev/tty1\",rA.makedev(6,0));var A=function(){if(\"object\"==(\"undefined\"==typeof crypto?\"undefined\":D(crypto))&&\"function\"==typeof crypto.getRandomValues){var A=new Uint8Array(1);return function(){return crypto.getRandomValues(A),A[0]}}if(F)try{var I=g(654);return function(){return I.randomBytes(1)[0]}}catch(A){}return function(){return _(\"randomDevice\")}}();rA.createDevice(\"/dev\",\"random\",A),rA.createDevice(\"/dev\",\"urandom\",A),rA.mkdir(\"/dev/shm\"),rA.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:function(){rA.mkdir(\"/proc\");var A=rA.mkdir(\"/proc/self\");rA.mkdir(\"/proc/self/fd\"),rA.mount({mount:function(){var I=rA.createNode(A,\"fd\",16895,73);return I.node_ops={lookup:function(A,I){var g=+I,B=rA.getStream(g);if(!B)throw new rA.ErrnoError(8);var Q={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:function(){return B.path}}};return Q.parent=Q,Q}},I}},{},\"/proc/self/fd\")},createStandardStreams:function(){A.stdin?rA.createDevice(\"/dev\",\"stdin\",A.stdin):rA.symlink(\"/dev/tty\",\"/dev/stdin\"),A.stdout?rA.createDevice(\"/dev\",\"stdout\",null,A.stdout):rA.symlink(\"/dev/tty\",\"/dev/stdout\"),A.stderr?rA.createDevice(\"/dev\",\"stderr\",null,A.stderr):rA.symlink(\"/dev/tty1\",\"/dev/stderr\"),rA.open(\"/dev/stdin\",0),rA.open(\"/dev/stdout\",1),rA.open(\"/dev/stderr\",1)},ensureErrnoError:function(){rA.ErrnoError||(rA.ErrnoError=function(A,I){this.node=I,this.setErrno=function(A){this.errno=A},this.setErrno(A),this.message=\"FS error\"},rA.ErrnoError.prototype=new Error,rA.ErrnoError.prototype.constructor=rA.ErrnoError,[44].forEach((function(A){rA.genericErrors[A]=new rA.ErrnoError(A),rA.genericErrors[A].stack=\"<generic error, no stack>\"})))},staticInit:function(){rA.ensureErrnoError(),rA.nameTable=new Array(4096),rA.mount(RA,{},\"/\"),rA.createDefaultDirectories(),rA.createDefaultDevices(),rA.createSpecialDirectories(),rA.filesystems={MEMFS:RA}},init:function(I,g,B){rA.init.initialized=!0,rA.ensureErrnoError(),A.stdin=I||A.stdin,A.stdout=g||A.stdout,A.stderr=B||A.stderr,rA.createStandardStreams()},quit:function(){rA.init.initialized=!1;for(var A=0;A<rA.streams.length;A++){var I=rA.streams[A];I&&rA.close(I)}},getMode:function(A,I){var g=0;return A&&(g|=365),I&&(g|=146),g},findObject:function(A,I){var g=rA.analyzePath(A,I);return g.exists?g.object:null},analyzePath:function(A,I){try{A=(B=rA.lookupPath(A,{follow:!I})).path}catch(A){}var g={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var B=rA.lookupPath(A,{parent:!0});g.parentExists=!0,g.parentPath=B.path,g.parentObject=B.node,g.name=wA.basename(A),B=rA.lookupPath(A,{follow:!I}),g.exists=!0,g.path=B.path,g.object=B.node,g.name=B.node.name,g.isRoot=\"/\"===B.path}catch(A){g.error=A.errno}return g},createPath:function(A,I,g,B){A=\"string\"==typeof A?A:rA.getPath(A);for(var Q=I.split(\"/\").reverse();Q.length;){var C=Q.pop();if(C){var E=wA.join2(A,C);try{rA.mkdir(E)}catch(A){}A=E}}return E},createFile:function(A,I,g,B,Q){var C=wA.join2(\"string\"==typeof A?A:rA.getPath(A),I),E=rA.getMode(B,Q);return rA.create(C,E)},createDataFile:function(A,I,g,B,Q,C){var E=I;A&&(A=\"string\"==typeof A?A:rA.getPath(A),E=I?wA.join2(A,I):A);var i=rA.getMode(B,Q),o=rA.create(E,i);if(g){if(\"string\"==typeof g){for(var D=new Array(g.length),a=0,w=g.length;a<w;++a)D[a]=g.charCodeAt(a);g=D}rA.chmod(o,146|i);var t=rA.open(o,577);rA.write(t,g,0,g.length,0,C),rA.close(t),rA.chmod(o,i)}return o},createDevice:function(A,I,g,B){var Q=wA.join2(\"string\"==typeof A?A:rA.getPath(A),I),C=rA.getMode(!!g,!!B);rA.createDevice.major||(rA.createDevice.major=64);var E=rA.makedev(rA.createDevice.major++,0);return rA.registerDevice(E,{open:function(A){A.seekable=!1},close:function(A){B&&B.buffer&&B.buffer.length&&B(10)},read:function(A,I,B,Q,C){for(var E=0,i=0;i<Q;i++){var o;try{o=g()}catch(A){throw new rA.ErrnoError(29)}if(void 0===o&&0===E)throw new rA.ErrnoError(6);if(null==o)break;E++,I[B+i]=o}return E&&(A.node.timestamp=Date.now()),E},write:function(A,I,g,Q,C){for(var E=0;E<Q;E++)try{B(I[g+E])}catch(A){throw new rA.ErrnoError(29)}return Q&&(A.node.timestamp=Date.now()),E}}),rA.mkdev(Q,C,E)},forceLoadFile:function(A){if(A.isDevice||A.isFolder||A.link||A.contents)return!0;if(\"undefined\"!=typeof XMLHttpRequest)throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");if(!Q)throw new Error(\"Cannot load without read() or XMLHttpRequest.\");try{A.contents=sA(Q(A.url),!0),A.usedBytes=A.contents.length}catch(A){throw new rA.ErrnoError(29)}},createLazyFile:function(A,I,g,B,Q){function C(){this.lengthKnown=!1,this.chunks=[]}if(C.prototype.get=function(A){if(!(A>this.length-1||A<0)){var I=A%this.chunkSize,g=A/this.chunkSize|0;return this.getter(g)[I]}},C.prototype.setDataGetter=function(A){this.getter=A},C.prototype.cacheLength=function(){var A=new XMLHttpRequest;if(A.open(\"HEAD\",g,!1),A.send(null),!(A.status>=200&&A.status<300||304===A.status))throw new Error(\"Couldn't load \"+g+\". Status: \"+A.status);var I,B=Number(A.getResponseHeader(\"Content-length\")),Q=(I=A.getResponseHeader(\"Accept-Ranges\"))&&\"bytes\"===I,C=(I=A.getResponseHeader(\"Content-Encoding\"))&&\"gzip\"===I,E=1048576;Q||(E=B);var i=this;i.setDataGetter((function(A){var I=A*E,Q=(A+1)*E-1;if(Q=Math.min(Q,B-1),void 0===i.chunks[A]&&(i.chunks[A]=function(A,I){if(A>I)throw new Error(\"invalid range (\"+A+\", \"+I+\") or no bytes requested!\");if(I>B-1)throw new Error(\"only \"+B+\" bytes available! programmer error!\");var Q=new XMLHttpRequest;if(Q.open(\"GET\",g,!1),B!==E&&Q.setRequestHeader(\"Range\",\"bytes=\"+A+\"-\"+I),Q.responseType=\"arraybuffer\",Q.overrideMimeType&&Q.overrideMimeType(\"text/plain; charset=x-user-defined\"),Q.send(null),!(Q.status>=200&&Q.status<300||304===Q.status))throw new Error(\"Couldn't load \"+g+\". Status: \"+Q.status);return void 0!==Q.response?new Uint8Array(Q.response||[]):sA(Q.responseText||\"\",!0)}(I,Q)),void 0===i.chunks[A])throw new Error(\"doXHR failed!\");return i.chunks[A]})),!C&&B||(E=B=1,B=this.getter(0).length,E=B,n(\"LazyFiles on gzip forces download of the whole file when length is accessed\")),this._length=B,this._chunkSize=E,this.lengthKnown=!0},\"undefined\"!=typeof XMLHttpRequest){if(!r)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var E=new C;Object.defineProperties(E,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var i={isDevice:!1,contents:E}}else i={isDevice:!1,url:g};var o=rA.createFile(A,I,i,B,Q);i.contents?o.contents=i.contents:i.url&&(o.contents=null,o.url=i.url),Object.defineProperties(o,{usedBytes:{get:function(){return this.contents.length}}});var D={};function a(A,I,g,B,Q){var C=A.node.contents;if(Q>=C.length)return 0;var E=Math.min(C.length-Q,B);if(C.slice)for(var i=0;i<E;i++)I[g+i]=C[Q+i];else for(i=0;i<E;i++)I[g+i]=C.get(Q+i);return E}return Object.keys(o.stream_ops).forEach((function(A){var I=o.stream_ops[A];D[A]=function(){return rA.forceLoadFile(o),I.apply(null,arguments)}})),D.read=function(A,I,g,B,Q){return rA.forceLoadFile(o),a(A,I,g,B,Q)},D.mmap=function(A,I,g,B,Q){rA.forceLoadFile(o);var C=hA();if(!C)throw new rA.ErrnoError(48);return a(A,J,C,I,g),{ptr:C,allocated:!0}},o.stream_ops=D,o},createPreloadedFile:function(A,I,g,B,Q,E,i,o,D,a){var w=I?tA.resolve(wA.join2(A,I)):A;function t(g){function C(g){a&&a(),o||rA.createDataFile(A,I,g,B,Q,D),E&&E(),z()}Browser.handledByPreloadPlugin(g,w,C,(function(){i&&i(),z()}))||C(g)}P(),\"string\"==typeof g?function(A,I,g,B){var Q=\"al \"+A;C(A,(function(I){k(I,'Loading data file \"'+A+'\" failed (no arrayBuffer).'),t(new Uint8Array(I)),Q&&z()}),(function(I){if(!g)throw'Loading data file \"'+A+'\" failed.';g()})),Q&&P()}(g,0,i):t(g)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=rA.indexedDB();try{var Q=B.open(rA.DB_NAME(),rA.DB_VERSION)}catch(A){return g(A)}Q.onupgradeneeded=function(){n(\"creating db\"),Q.result.createObjectStore(rA.DB_STORE_NAME)},Q.onsuccess=function(){var B=Q.result.transaction([rA.DB_STORE_NAME],\"readwrite\"),C=B.objectStore(rA.DB_STORE_NAME),E=0,i=0,o=A.length;function D(){0==i?I():g()}A.forEach((function(A){var I=C.put(rA.analyzePath(A).object.contents,A);I.onsuccess=function(){++E+i==o&&D()},I.onerror=function(){i++,E+i==o&&D()}})),B.onerror=g},Q.onerror=g},loadFilesFromDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=rA.indexedDB();try{var Q=B.open(rA.DB_NAME(),rA.DB_VERSION)}catch(A){return g(A)}Q.onupgradeneeded=g,Q.onsuccess=function(){var B=Q.result;try{var C=B.transaction([rA.DB_STORE_NAME],\"readonly\")}catch(A){return void g(A)}var E=C.objectStore(rA.DB_STORE_NAME),i=0,o=0,D=A.length;function a(){0==o?I():g()}A.forEach((function(A){var I=E.get(A);I.onsuccess=function(){rA.analyzePath(A).exists&&rA.unlink(A),rA.createDataFile(wA.dirname(A),wA.basename(A),I.result,!0,!0,!0),++i+o==D&&a()},I.onerror=function(){o++,i+o==D&&a()}})),C.onerror=g},Q.onerror=g}},FA={DEFAULT_POLLMASK:5,calculateAt:function(A,I,g){if(wA.isAbs(I))return I;var B;if(B=-100===A?rA.cwd():FA.getStreamFromFD(A).path,0==I.length){if(!g)throw new rA.ErrnoError(44);return B}return wA.join2(B,I)},doStat:function(A,I,g){try{var B=A(I)}catch(A){if(A&&A.node&&wA.normalize(I)!==wA.normalize(rA.getPath(A.node)))return-54;throw A}return d[g>>2]=B.dev,d[g+8>>2]=B.ino,d[g+12>>2]=B.mode,H[g+16>>2]=B.nlink,d[g+20>>2]=B.uid,d[g+24>>2]=B.gid,d[g+28>>2]=B.rdev,gA=[B.size>>>0,(IA=B.size,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+40>>2]=gA[0],d[g+44>>2]=gA[1],d[g+48>>2]=4096,d[g+52>>2]=B.blocks,gA=[Math.floor(B.atime.getTime()/1e3)>>>0,(IA=Math.floor(B.atime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+56>>2]=gA[0],d[g+60>>2]=gA[1],H[g+64>>2]=0,gA=[Math.floor(B.mtime.getTime()/1e3)>>>0,(IA=Math.floor(B.mtime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+72>>2]=gA[0],d[g+76>>2]=gA[1],H[g+80>>2]=0,gA=[Math.floor(B.ctime.getTime()/1e3)>>>0,(IA=Math.floor(B.ctime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+88>>2]=gA[0],d[g+92>>2]=gA[1],H[g+96>>2]=0,gA=[B.ino>>>0,(IA=B.ino,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+104>>2]=gA[0],d[g+108>>2]=gA[1],0},doMsync:function(A,I,g,B,Q){var C=K.slice(A,A+g);rA.msync(I,C,Q,g,B)},varargs:void 0,get:function(){return FA.varargs+=4,d[FA.varargs-4>>2]},getStr:function(A){return W(A)},getStreamFromFD:function(A){var I=rA.getStream(A);if(!I)throw new rA.ErrnoError(8);return I}},yA={};function eA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function nA(A){return this.fromWireType(d[A>>2])}var MA={},SA={},NA={};function cA(A){if(void 0===A)return\"_unknown\";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,\"$\")).charCodeAt(0);return I>=48&&I<=57?\"_\"+A:A}function kA(A,I){return A=cA(A),new Function(\"body\",\"return function \"+A+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(I)}function UA(A,I){var g=kA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+\"\\n\"+g.replace(/^Error(:[^\\n]*)?\\n/,\"\"))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message},g}var JA=void 0;function KA(A){throw new JA(A)}function YA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&KA(\"Mismatched type converter count\");for(var Q=0;Q<A.length;++Q)fA(A[Q],B[Q])}A.forEach((function(A){NA[A]=I}));var Q=new Array(I.length),C=[],E=0;I.forEach((function(A,I){SA.hasOwnProperty(A)?Q[I]=SA[A]:(C.push(A),MA.hasOwnProperty(A)||(MA[A]=[]),MA[A].push((function(){Q[I]=SA[A],++E===C.length&&B(Q)})))})),0===C.length&&B(Q)}function LA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+A)}}var dA=void 0;function HA(A){for(var I=\"\",g=A;K[g];)I+=dA[K[g++]];return I}var lA=void 0;function qA(A){throw new lA(A)}function fA(A,I){var g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!(\"argPackAdvance\"in I))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var B=I.name;if(A||qA('type \"'+B+'\" must have a positive integer typeid pointer'),SA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;qA(\"Cannot register type '\"+B+\"' twice\")}if(SA[A]=I,delete NA[A],MA.hasOwnProperty(A)){var Q=MA[A];delete MA[A],Q.forEach((function(A){return A()}))}}function uA(A){qA(A.$$.ptrType.registeredClass.name+\" instance already deleted\")}var WA=!1;function mA(A){}function pA(A){A.count.value-=1,0===A.count.value&&function(A){A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)}(A)}function bA(A,I,g){if(I===g)return A;if(void 0===g.baseClass)return null;var B=bA(A,I,g.baseClass);return null===B?null:g.downcast(B)}var ZA={};var xA=[];function VA(){for(;xA.length;){var A=xA.pop();A.$$.deleteScheduled=!1,A.delete()}}var XA=void 0;var TA={};function OA(A,I){return I.ptrType&&I.ptr||KA(\"makeClassHandle requires ptr and ptrType\"),!!I.smartPtrType!=!!I.smartPtr&&KA(\"Both smartPtrType and smartPtr must be specified\"),I.count={value:1},vA(Object.create(A,{$$:{value:I}}))}function vA(A){return\"undefined\"==typeof FinalizationRegistry?(vA=function(A){return A},A):(WA=new FinalizationRegistry((function(A){pA(A.$$)})),vA=function(A){var I=A.$$;if(I.smartPtr){var g={$$:I};WA.register(A,g,A)}return A},mA=function(A){return WA.unregister(A)},vA(A))}function jA(){}function PA(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||qA(\"Function '\"+g+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+A[I].overloadTable+\")!\"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function zA(I,g,B){A.hasOwnProperty(I)?((void 0===B||void 0!==A[I].overloadTable&&void 0!==A[I].overloadTable[B])&&qA(\"Cannot register public name '\"+I+\"' twice\"),PA(A,I,I),A.hasOwnProperty(B)&&qA(\"Cannot register multiple overloads of a function with the same number of arguments (\"+B+\")!\"),A[I].overloadTable[B]=g):(A[I]=g,void 0!==B&&(A[I].numArguments=B))}function _A(A,I,g,B,Q,C,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=Q,this.getActualType=C,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}function $A(A,I,g){for(;I!==g;)I.upcast||qA(\"Expected null or instance of \"+g.name+\", got an instance of \"+I.name),A=I.upcast(A),I=I.baseClass;return A}function AI(A,I){if(null===I)return this.isReference&&qA(\"null is not a valid \"+this.name),0;I.$$||qA('Cannot pass \"'+rI(I)+'\" as a '+this.name),I.$$.ptr||qA(\"Cannot pass deleted object as a pointer of type \"+this.name);var g=I.$$.ptrType.registeredClass;return $A(I.$$.ptr,g,this.registeredClass)}function II(A,I){var g;if(null===I)return this.isReference&&qA(\"null is not a valid \"+this.name),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I.$$||qA('Cannot pass \"'+rI(I)+'\" as a '+this.name),I.$$.ptr||qA(\"Cannot pass deleted object as a pointer of type \"+this.name),!this.isConst&&I.$$.ptrType.isConst&&qA(\"Cannot convert argument of type \"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\" to parameter type \"+this.name);var B=I.$$.ptrType.registeredClass;if(g=$A(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&qA(\"Passing raw pointer to smart pointer is illegal\"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:qA(\"Cannot convert argument of type \"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\" to parameter type \"+this.name);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var Q=I.clone();g=this.rawShare(g,RI.toHandle((function(){Q.delete()}))),null!==A&&A.push(this.rawDestructor,g)}break;default:qA(\"Unsupporting sharing policy\")}return g}function gI(A,I){if(null===I)return this.isReference&&qA(\"null is not a valid \"+this.name),0;I.$$||qA('Cannot pass \"'+rI(I)+'\" as a '+this.name),I.$$.ptr||qA(\"Cannot pass deleted object as a pointer of type \"+this.name),I.$$.ptrType.isConst&&qA(\"Cannot convert argument of type \"+I.$$.ptrType.name+\" to parameter type \"+this.name);var g=I.$$.ptrType.registeredClass;return $A(I.$$.ptr,g,this.registeredClass)}function BI(A,I,g,B,Q,C,E,i,o,D,a){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=Q,this.pointeeType=C,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=a,Q||void 0!==I.baseClass?this.toWireType=II:B?(this.toWireType=AI,this.destructorFunction=null):(this.toWireType=gI,this.destructorFunction=null)}function QI(I,g,B){A.hasOwnProperty(I)||KA(\"Replacing nonexistant public symbol\"),void 0!==A[I].overloadTable&&void 0!==B?A[I].overloadTable[B]=g:(A[I]=g,A[I].argCount=B)}function CI(A){return Z.get(A)}function EI(I,g,B){return I.includes(\"j\")?function(I,g,B){var Q=A[\"dynCall_\"+I];return B&&B.length?Q.apply(null,[g].concat(B)):Q.call(null,g)}(I,g,B):CI(g).apply(null,B)}function iI(A,I){var g,B,Q,C=(A=HA(A)).includes(\"j\")?(g=A,B=I,Q=[],function(){return Q.length=0,Object.assign(Q,arguments),EI(g,B,Q)}):CI(I);return\"function\"!=typeof C&&qA(\"unknown function pointer with signature \"+A+\": \"+I),C}var oI=void 0;function DI(A){var I=XI(A),g=HA(I);return xI(I),g}function aI(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||SA[I]||(NA[I]?NA[I].forEach(A):(g.push(I),B[I]=!0))})),new oI(A+\": \"+g.map(DI).join([\", \"]))}function wI(A,I){for(var g=[],B=0;B<A;B++)g.push(H[I+4*B>>2]);return g}function tI(A,I,g,B,Q){var C=I.length;C<2&&qA(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var a=\"void\"!==I[0].name,w=\"\",t=\"\";for(o=0;o<C-2;++o)w+=(0!==o?\", \":\"\")+\"arg\"+o,t+=(0!==o?\", \":\"\")+\"arg\"+o+\"Wired\";var s=\"return function \"+cA(A)+\"(\"+w+\") {\\nif (arguments.length !== \"+(C-2)+\") {\\nthrowBindingError('function \"+A+\" called with ' + arguments.length + ' arguments, expected \"+(C-2)+\" args!');\\n}\\n\";i&&(s+=\"var destructors = [];\\n\");var G=i?\"destructors\":\"null\",h=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"],R=[qA,B,Q,eA,I[0],I[1]];for(E&&(s+=\"var thisWired = classParam.toWireType(\"+G+\", this);\\n\"),o=0;o<C-2;++o)s+=\"var arg\"+o+\"Wired = argType\"+o+\".toWireType(\"+G+\", arg\"+o+\"); // \"+I[o+2].name+\"\\n\",h.push(\"argType\"+o),R.push(I[o+2]);if(E&&(t=\"thisWired\"+(t.length>0?\", \":\"\")+t),s+=(a?\"var rv = \":\"\")+\"invoker(fn\"+(t.length>0?\", \":\"\")+t+\");\\n\",i)s+=\"runDestructors(destructors);\\n\";else for(o=E?1:2;o<I.length;++o){var r=1===o?\"thisWired\":\"arg\"+(o-2)+\"Wired\";null!==I[o].destructorFunction&&(s+=r+\"_dtor(\"+r+\"); // \"+I[o].name+\"\\n\",h.push(r+\"_dtor\"),R.push(I[o].destructorFunction))}return a&&(s+=\"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\"),s+=\"}\\n\",h.push(s),function(A,I){if(!(A instanceof Function))throw new TypeError(\"new_ called with constructor type \"+D(A)+\" which is not a function\");var g=kA(A.name||\"unknownFunctionName\",(function(){}));g.prototype=A.prototype;var B=new g,Q=A.apply(B,I);return Q instanceof Object?Q:B}(Function,h).apply(null,R)}var sI=[],GI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function hI(A){A>4&&0==--GI[A].refcount&&(GI[A]=void 0,sI.push(A))}var RI={toValue:function(A){return A||qA(\"Cannot use deleted val. handle = \"+A),GI[A].value},toHandle:function(A){switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=sI.length?sI.pop():GI.length;return GI[I]={refcount:1,value:A},I}}};function rI(A){if(null===A)return\"null\";var I=D(A);return\"object\"===I||\"array\"===I||\"function\"===I?A.toString():\"\"+A}function FI(A,I){switch(I){case 2:return function(A){return this.fromWireType(l[A>>2])};case 3:return function(A){return this.fromWireType(q[A>>3])};default:throw new TypeError(\"Unknown float type: \"+A)}}function yI(A,I,g){switch(I){case 0:return g?function(A){return J[A]}:function(A){return K[A]};case 1:return g?function(A){return Y[A>>1]}:function(A){return L[A>>1]};case 2:return g?function(A){return d[A>>2]}:function(A){return H[A>>2]};default:throw new TypeError(\"Unknown integer type: \"+A)}}var eI=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;function nI(A,I){for(var g=A,B=g>>1,Q=B+I/2;!(B>=Q)&&L[B];)++B;if((g=B<<1)-A>32&&eI)return eI.decode(K.subarray(A,g));for(var C=\"\",E=0;!(E>=I/2);++E){var i=Y[A+2*E>>1];if(0==i)break;C+=String.fromCharCode(i)}return C}function MI(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,Q=(g-=2)<2*A.length?g/2:A.length,C=0;C<Q;++C){var E=A.charCodeAt(C);Y[I>>1]=E,I+=2}return Y[I>>1]=0,I-B}function SI(A){return 2*A.length}function NI(A,I){for(var g=0,B=\"\";!(g>=I/4);){var Q=d[A+4*g>>2];if(0==Q)break;if(++g,Q>=65536){var C=Q-65536;B+=String.fromCharCode(55296|C>>10,56320|1023&C)}else B+=String.fromCharCode(Q)}return B}function cI(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,Q=B+g-4,C=0;C<A.length;++C){var E=A.charCodeAt(C);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++C)),d[I>>2]=E,(I+=4)+4>Q)break}return d[I>>2]=0,I-B}function kI(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}function UI(A){var I=p(A)+1,g=ZI(I);return g&&m(A,J,g,I),g}var JI=[];function KI(A){try{return S.grow(A-U.byteLength+65535>>>16),b(S.buffer),1}catch(A){}}var YI={};function LI(){if(!LI.strings){var A={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==(\"undefined\"==typeof navigator?\"undefined\":D(navigator))&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:G||\"./this.program\"};for(var I in YI)void 0===YI[I]?delete A[I]:A[I]=YI[I];var g=[];for(var I in A)g.push(I+\"=\"+A[I]);LI.strings=g}return LI.strings}function dI(A){return A%4==0&&(A%100!=0||A%400==0)}var HI=[31,29,31,30,31,30,31,31,30,31,30,31],lI=[31,28,31,30,31,30,31,31,30,31,30,31];function qI(A,I,g,B){var Q=d[B+40>>2],C={tm_sec:d[B>>2],tm_min:d[B+4>>2],tm_hour:d[B+8>>2],tm_mday:d[B+12>>2],tm_mon:d[B+16>>2],tm_year:d[B+20>>2],tm_wday:d[B+24>>2],tm_yday:d[B+28>>2],tm_isdst:d[B+32>>2],tm_gmtoff:d[B+36>>2],tm_zone:Q?W(Q):\"\"},E=W(g),i={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var o in i)E=E.replace(new RegExp(o,\"g\"),i[o]);var D=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],a=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function w(A,I,g){for(var B=\"number\"==typeof A?A.toString():A||\"\";B.length<I;)B=g[0]+B;return B}function t(A,I){return w(A,I,\"0\")}function s(A,I){function g(A){return A<0?-1:A>0?1:0}var B;return 0===(B=g(A.getFullYear()-I.getFullYear()))&&0===(B=g(A.getMonth()-I.getMonth()))&&(B=g(A.getDate()-I.getDate())),B}function G(A){switch(A.getDay()){case 0:return new Date(A.getFullYear()-1,11,29);case 1:return A;case 2:return new Date(A.getFullYear(),0,3);case 3:return new Date(A.getFullYear(),0,2);case 4:return new Date(A.getFullYear(),0,1);case 5:return new Date(A.getFullYear()-1,11,31);case 6:return new Date(A.getFullYear()-1,11,30)}}function h(A){var I=function(A,I){for(var g=new Date(A.getTime());I>0;){var B=dI(g.getFullYear()),Q=g.getMonth(),C=(B?HI:lI)[Q];if(!(I>C-g.getDate()))return g.setDate(g.getDate()+I),g;I-=C-g.getDate()+1,g.setDate(1),Q<11?g.setMonth(Q+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1))}return g}(new Date(A.tm_year+1900,0,1),A.tm_yday),g=new Date(I.getFullYear(),0,4),B=new Date(I.getFullYear()+1,0,4),Q=G(g),C=G(B);return s(Q,I)<=0?s(C,I)<=0?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}var R={\"%a\":function(A){return D[A.tm_wday].substring(0,3)},\"%A\":function(A){return D[A.tm_wday]},\"%b\":function(A){return a[A.tm_mon].substring(0,3)},\"%B\":function(A){return a[A.tm_mon]},\"%C\":function(A){return t((A.tm_year+1900)/100|0,2)},\"%d\":function(A){return t(A.tm_mday,2)},\"%e\":function(A){return w(A.tm_mday,2,\" \")},\"%g\":function(A){return h(A).toString().substring(2)},\"%G\":function(A){return h(A)},\"%H\":function(A){return t(A.tm_hour,2)},\"%I\":function(A){var I=A.tm_hour;return 0==I?I=12:I>12&&(I-=12),t(I,2)},\"%j\":function(A){return t(A.tm_mday+function(A,I){for(var g=0,B=0;B<=I;g+=A[B++]);return g}(dI(A.tm_year+1900)?HI:lI,A.tm_mon-1),3)},\"%m\":function(A){return t(A.tm_mon+1,2)},\"%M\":function(A){return t(A.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(A){return A.tm_hour>=0&&A.tm_hour<12?\"AM\":\"PM\"},\"%S\":function(A){return t(A.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(A){return A.tm_wday||7},\"%U\":function(A){var I=A.tm_yday+7-A.tm_wday;return t(Math.floor(I/7),2)},\"%V\":function(A){var I=Math.floor((A.tm_yday+7-(A.tm_wday+6)%7)/7);if((A.tm_wday+371-A.tm_yday-2)%7<=2&&I++,I){if(53==I){var g=(A.tm_wday+371-A.tm_yday)%7;4==g||3==g&&dI(A.tm_year)||(I=1)}}else{I=52;var B=(A.tm_wday+7-A.tm_yday-1)%7;(4==B||5==B&&dI(A.tm_year%400-1))&&I++}return t(I,2)},\"%w\":function(A){return A.tm_wday},\"%W\":function(A){var I=A.tm_yday+7-(A.tm_wday+6)%7;return t(Math.floor(I/7),2)},\"%y\":function(A){return(A.tm_year+1900).toString().substring(2)},\"%Y\":function(A){return A.tm_year+1900},\"%z\":function(A){var I=A.tm_gmtoff,g=I>=0;return I=(I=Math.abs(I)/60)/60*100+I%60,(g?\"+\":\"-\")+String(\"0000\"+I).slice(-4)},\"%Z\":function(A){return A.tm_zone},\"%%\":function(){return\"%\"}};for(var o in E=E.replace(/%%/g,\"\\0\\0\"),R)E.includes(o)&&(E=E.replace(new RegExp(o,\"g\"),R[o](C)));var r=sA(E=E.replace(/\\0\\0/g,\"%\"),!1);return r.length>I?0:(function(A,I){J.set(A,I)}(r,A),r.length-1)}var fI=function(A,I,g,B){A||(A=this),this.parent=A,this.mount=A.mount,this.mounted=null,this.id=rA.nextInode++,this.name=I,this.mode=g,this.node_ops={},this.stream_ops={},this.rdev=B};Object.defineProperties(fI.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(A){A?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(A){A?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return rA.isDir(this.mode)}},isDevice:{get:function(){return rA.isChrdev(this.mode)}}}),rA.FSNode=fI,rA.staticInit(),JA=A.InternalError=UA(Error,\"InternalError\"),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);dA=A}(),lA=A.BindingError=UA(Error,\"BindingError\"),jA.prototype.isAliasOf=function(A){if(!(this instanceof jA))return!1;if(!(A instanceof jA))return!1;for(var I=this.$$.ptrType.registeredClass,g=this.$$.ptr,B=A.$$.ptrType.registeredClass,Q=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)Q=B.upcast(Q),B=B.baseClass;return I===B&&g===Q},jA.prototype.clone=function(){if(this.$$.ptr||uA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=vA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I},jA.prototype.delete=function(){this.$$.ptr||uA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&qA(\"Object already scheduled for deletion\"),mA(this),pA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)},jA.prototype.isDeleted=function(){return!this.$$.ptr},jA.prototype.deleteLater=function(){return this.$$.ptr||uA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&qA(\"Object already scheduled for deletion\"),xA.push(this),1===xA.length&&XA&&XA(VA),this.$$.deleteScheduled=!0,this},A.getInheritedInstanceCount=function(){return Object.keys(TA).length},A.getLiveInheritedInstances=function(){var A=[];for(var I in TA)TA.hasOwnProperty(I)&&A.push(TA[I]);return A},A.flushPendingDeletes=VA,A.setDelayFunction=function(A){XA=A,xA.length&&XA&&XA(VA)},BI.prototype.getPointee=function(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A},BI.prototype.destructor=function(A){this.rawDestructor&&this.rawDestructor(A)},BI.prototype.argPackAdvance=8,BI.prototype.readValueFromPointer=nA,BI.prototype.deleteObject=function(A){null!==A&&A.delete()},BI.prototype.fromWireType=function(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=function(A,I){return I=function(A,I){for(void 0===I&&qA(\"ptr should not be undefined\");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I}(A,I),TA[I]}(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function Q(){return this.isSmartPointer?OA(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):OA(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var C,E=this.registeredClass.getActualType(I),i=ZA[E];if(!i)return Q.call(this);C=this.isConst?i.constPointerType:i.pointerType;var o=bA(I,this.registeredClass,C.registeredClass);return null===o?Q.call(this):this.isSmartPointer?OA(C.registeredClass.instancePrototype,{ptrType:C,ptr:o,smartPtrType:this,smartPtr:A}):OA(C.registeredClass.instancePrototype,{ptrType:C,ptr:o})},oI=A.UnboundTypeError=UA(Error,\"UnboundTypeError\"),A.count_emval_handles=function(){for(var A=0,I=5;I<GI.length;++I)void 0!==GI[I]&&++A;return A},A.get_first_emval=function(){for(var A=5;A<GI.length;++A)if(void 0!==GI[A])return GI[A];return null};var uI=!1,WI=\"function\"==typeof atob?atob:function(A){var I,g,B,Q,C,E,i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",o=\"\",D=0;A=A.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{I=i.indexOf(A.charAt(D++))<<2|(Q=i.indexOf(A.charAt(D++)))>>4,g=(15&Q)<<4|(C=i.indexOf(A.charAt(D++)))>>2,B=(3&C)<<6|(E=i.indexOf(A.charAt(D++))),o+=String.fromCharCode(I),64!==C&&(o+=String.fromCharCode(g)),64!==E&&(o+=String.fromCharCode(B))}while(D<A.length);return o};function mI(A){if(QA(A))return function(A){if(\"boolean\"==typeof F&&F){var I=Buffer.from(A,\"base64\");return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=WI(A),B=new Uint8Array(g.length),Q=0;Q<g.length;++Q)B[Q]=g.charCodeAt(Q);return B}catch(A){throw new Error(\"Converting base64 string to bytes failed.\")}}(A.slice(BA.length))}var pI,bI={g:function(A){return ZI(A+24)+24},f:function(A,I,g){throw new aA(A).init(I,g),A},o:function(A,I,g){FA.varargs=g;try{var B=FA.getStreamFromFD(A);switch(I){case 0:return(Q=FA.get())<0?-28:rA.createStream(B,Q).fd;case 1:case 2:case 6:case 7:return 0;case 3:return B.flags;case 4:var Q=FA.get();return B.flags|=Q,0;case 5:return Q=FA.get(),Y[Q+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return 28,d[VI()>>2]=28,-1}}catch(A){if(void 0===rA||!(A instanceof rA.ErrnoError))throw A;return-A.errno}},G:function(A,I,g){FA.varargs=g;try{var B=FA.getStreamFromFD(A);switch(I){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return B.tty?0:-59;case 21519:if(!B.tty)return-59;var Q=FA.get();return d[Q>>2]=0,0;case 21520:return B.tty?-28:-59;case 21531:return Q=FA.get(),rA.ioctl(B,I,Q);default:return-28}}catch(A){if(void 0===rA||!(A instanceof rA.ErrnoError))throw A;return-A.errno}},H:function(A,I,g,B){FA.varargs=B;try{I=FA.getStr(I),I=FA.calculateAt(A,I);var Q=B?FA.get():0;return rA.open(I,g,Q).fd}catch(A){if(void 0===rA||!(A instanceof rA.ErrnoError))throw A;return-A.errno}},R:function(A){var I=yA[A];delete yA[A];var g=I.rawConstructor,B=I.rawDestructor,Q=I.fields;YA([A],Q.map((function(A){return A.getterReturnType})).concat(Q.map((function(A){return A.setterArgumentType}))),(function(A){var C={};return Q.forEach((function(I,g){var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+Q.length],a=I.setter,w=I.setterContext;C[B]={read:function(A){return E.fromWireType(i(o,A))},write:function(A,I){var g=[];a(w,A,D.toWireType(g,I)),eA(g)}}})),[{name:I.name,fromWireType:function(A){var I={};for(var g in C)I[g]=C[g].read(A);return B(A),I},toWireType:function(A,I){for(var Q in C)if(!(Q in I))throw new TypeError('Missing field:  \"'+Q+'\"');var E=g();for(Q in C)C[Q].write(E,I[Q]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:nA,destructorFunction:B}]}))},y:function(A,I,g,B,Q){},L:function(A,I,g,B,Q){var C=LA(g);fA(A,{name:I=HA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:Q},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=J;else if(2===g)B=Y;else{if(4!==g)throw new TypeError(\"Unknown boolean type size: \"+I);B=d}return this.fromWireType(B[A>>C])},destructorFunction:null})},U:function(A,I,g,B,Q,C,E,i,o,D,a,w,t){a=HA(a),C=iI(Q,C),i&&(i=iI(E,i)),D&&(D=iI(o,D)),t=iI(w,t);var s=cA(a);zA(s,(function(){aI(\"Cannot construct \"+a+\" due to unbound types\",[B])})),YA([A,I,g],B?[B]:[],(function(I){var g,Q;I=I[0],Q=B?(g=I.registeredClass).instancePrototype:jA.prototype;var E=kA(s,(function(){if(Object.getPrototypeOf(this)!==o)throw new lA(\"Use 'new' to construct \"+a);if(void 0===w.constructor_body)throw new lA(a+\" has no accessible constructor\");var A=w.constructor_body[arguments.length];if(void 0===A)throw new lA(\"Tried to invoke ctor of \"+a+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(w.constructor_body).toString()+\") parameters instead!\");return A.apply(this,arguments)})),o=Object.create(Q,{constructor:{value:E}});E.prototype=o;var w=new _A(a,E,o,t,g,C,i,D),G=new BI(a,w,!0,!1,!1),h=new BI(a+\"*\",w,!1,!1,!1),R=new BI(a+\" const*\",w,!1,!0,!1);return ZA[A]={pointerType:h,constPointerType:R},QI(s,E),[G,h,R]}))},Q:function(A,I,g,B,Q,C){k(I>0);var E=wI(I,g);Q=iI(B,Q),YA([],[A],(function(A){var g=\"constructor \"+(A=A[0]).name;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new lA(\"Cannot register multiple constructors with identical number of parameters (\"+(I-1)+\") for class '\"+A.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");return A.registeredClass.constructor_body[I-1]=function(){aI(\"Cannot construct \"+A.name+\" due to unbound types\",E)},YA([],E,(function(B){return B.splice(1,0,null),A.registeredClass.constructor_body[I-1]=tI(g,B,null,Q,C),[]})),[]}))},h:function(A,I,g,B,Q,C,E,i){var o=wI(g,B);I=HA(I),C=iI(Q,C),YA([],[A],(function(A){var B=(A=A[0]).name+\".\"+I;function Q(){aI(\"Cannot call \"+B+\" due to unbound types\",o)}I.startsWith(\"@@\")&&(I=Symbol[I.substring(2)]),i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,a=D[I];return void 0===a||void 0===a.overloadTable&&a.className!==A.name&&a.argCount===g-2?(Q.argCount=g-2,Q.className=A.name,D[I]=Q):(PA(D,I,B),D[I].overloadTable[g-2]=Q),YA([],o,(function(Q){var i=tI(B,Q,A,C,E);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},s:function(I,g,B){I=HA(I),YA([],[g],(function(g){return g=g[0],A[I]=g.fromWireType(B),[]}))},K:function(A,I){fA(A,{name:I=HA(I),fromWireType:function(A){var I=RI.toValue(A);return hI(A),I},toWireType:function(A,I){return RI.toHandle(I)},argPackAdvance:8,readValueFromPointer:nA,destructorFunction:null})},r:function(A,I,g){var B=LA(g);fA(A,{name:I=HA(I),fromWireType:function(A){return A},toWireType:function(A,I){return I},argPackAdvance:8,readValueFromPointer:FI(I,B),destructorFunction:null})},d:function(A,I,g,B,Q,C){var E=wI(I,g);A=HA(A),Q=iI(B,Q),zA(A,(function(){aI(\"Cannot call \"+A+\" due to unbound types\",E)}),I-1),YA([],E,(function(g){var B=[g[0],null].concat(g.slice(1));return QI(A,tI(A,B,null,Q,C),I-1),[]}))},e:function(A,I,g,B,Q){I=HA(I),-1===Q&&(Q=4294967295);var C=LA(g),E=function(A){return A};if(0===B){var i=32-8*g;E=function(A){return A<<i>>>i}}var o=I.includes(\"unsigned\");fA(A,{name:I,fromWireType:E,toWireType:o?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:yI(I,C,0!==B),destructorFunction:null})},c:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function Q(A){var I=H,g=I[A>>=2],Q=I[A+1];return new B(U,Q,g)}fA(A,{name:g=HA(g),fromWireType:Q,argPackAdvance:8,readValueFromPointer:Q},{ignoreDuplicateRegistrations:!0})},q:function(A,I){var g=\"std::string\"===(I=HA(I));fA(A,{name:I,fromWireType:function(A){var I,B=H[A>>2],Q=A+4;if(g)for(var C=Q,E=0;E<=B;++E){var i=Q+E;if(E==B||0==K[i]){var o=W(C,i-C);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),C=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(K[Q+E]);I=D.join(\"\")}return xI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var Q=\"string\"==typeof I;Q||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||qA(\"Cannot pass non-string to std::string\"),B=g&&Q?p(I):I.length;var C=ZI(4+B+1),E=C+4;if(H[C>>2]=B,g&&Q)m(I,K,E,B+1);else if(Q)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(xI(E),qA(\"String has UTF-16 code units that do not fit in 8 bits\")),K[E+i]=o}else for(i=0;i<B;++i)K[E+i]=I[i];return null!==A&&A.push(xI,C),C},argPackAdvance:8,readValueFromPointer:nA,destructorFunction:function(A){xI(A)}})},l:function(A,I,g){var B,Q,C,E,i;g=HA(g),2===I?(B=nI,Q=MI,E=SI,C=function(){return L},i=1):4===I&&(B=NI,Q=cI,E=kI,C=function(){return H},i=2),fA(A,{name:g,fromWireType:function(A){for(var g,Q=H[A>>2],E=C(),o=A+4,D=0;D<=Q;++D){var a=A+4+D*I;if(D==Q||0==E[a>>i]){var w=B(o,a-o);void 0===g?g=w:(g+=String.fromCharCode(0),g+=w),o=a+I}}return xI(A),g},toWireType:function(A,B){\"string\"!=typeof B&&qA(\"Cannot pass non-string to C++ string type \"+g);var C=E(B),o=ZI(4+C+I);return H[o>>2]=C>>i,Q(B,o+4,C+I),null!==A&&A.push(xI,o),o},argPackAdvance:8,readValueFromPointer:nA,destructorFunction:function(A){xI(A)}})},T:function(A,I,g,B,Q,C){yA[A]={name:HA(I),rawConstructor:iI(g,B),rawDestructor:iI(Q,C),fields:[]}},S:function(A,I,g,B,Q,C,E,i,o,D){yA[A].fields.push({fieldName:HA(I),getterReturnType:g,getter:iI(B,Q),getterContext:C,setterArgumentType:E,setter:iI(i,o),setterContext:D})},M:function(A,I){fA(A,{isVoid:!0,name:I=HA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},p:function(){return Date.now()},A:function(){throw 1/0},O:hI,P:function(A){A>4&&(GI[A].refcount+=1)},N:function(A,I){var g,B;void 0===(B=SA[g=A])&&qA(\"_emval_take_value has unknown type \"+DI(g));var Q=(A=B).readValueFromPointer(I);return RI.toHandle(Q)},I:function(A,I){var g,B=new Date(1e3*(H[(g=A)>>2]+4294967296*d[g+4>>2]));d[I>>2]=B.getSeconds(),d[I+4>>2]=B.getMinutes(),d[I+8>>2]=B.getHours(),d[I+12>>2]=B.getDate(),d[I+16>>2]=B.getMonth(),d[I+20>>2]=B.getFullYear()-1900,d[I+24>>2]=B.getDay();var Q=new Date(B.getFullYear(),0,1),C=(B.getTime()-Q.getTime())/864e5|0;d[I+28>>2]=C,d[I+36>>2]=-60*B.getTimezoneOffset();var E=new Date(B.getFullYear(),6,1).getTimezoneOffset(),i=Q.getTimezoneOffset(),o=0|(E!=i&&B.getTimezoneOffset()==Math.min(i,E));d[I+32>>2]=o},J:function A(I,g,B){A.called||(A.called=!0,function(A,I,g){var B=(new Date).getFullYear(),Q=new Date(B,0,1),C=new Date(B,6,1),E=Q.getTimezoneOffset(),i=C.getTimezoneOffset(),o=Math.max(E,i);function D(A){var I=A.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return I?I[1]:\"GMT\"}d[A>>2]=60*o,d[I>>2]=Number(E!=i);var a=D(Q),w=D(C),t=UI(a),s=UI(w);i<E?(H[g>>2]=t,H[g+4>>2]=s):(H[g>>2]=s,H[g+4>>2]=t)}(I,g,B))},a:function(){_(\"\")},i:function(A,I,g){var B=function(A,I){var g;for(JI.length=0,I>>=2;g=K[A++];)I+=105!=g&I,JI.push(105==g?d[I]:q[I++>>1]),++I;return JI}(I,g);return iA[A].apply(null,B)},B:function(A){var I=K.length,g=2147483648;if((A>>>=0)>g)return!1;for(var B,Q=1;Q<=4;Q*=2){var C=I*(1+.2/Q);if(C=Math.min(C,A+100663296),KI(Math.min(g,(B=Math.max(A,C))+(65536-B%65536)%65536)))return!0}return!1},C:function(A,I){var g=0;return LI().forEach((function(B,Q){var C=I+g;H[A+4*Q>>2]=C,function(A,I,g){for(var B=0;B<A.length;++B)J[I++>>0]=A.charCodeAt(B);J[I>>0]=0}(B,C),g+=B.length+1})),0},D:function(A,I){var g=LI();H[A>>2]=g.length;var B=0;return g.forEach((function(A){B+=A.length+1})),H[I>>2]=B,0},b:function(I,g){var B;B=I,T()||(A.onExit&&A.onExit(B),c=!0),h(B,new oA(B))},m:function(A){try{var I=FA.getStreamFromFD(A);return rA.close(I),0}catch(A){if(void 0===rA||!(A instanceof rA.ErrnoError))throw A;return A.errno}},F:function(A,I,g,B){try{var Q=function(A,I,g,B){for(var Q=0,C=0;C<g;C++){var E=H[I>>2],i=H[I+4>>2];I+=8;var o=rA.read(A,J,E,i,undefined);if(o<0)return-1;if(Q+=o,o<i)break}return Q}(FA.getStreamFromFD(A),I,g);return H[B>>2]=Q,0}catch(A){if(void 0===rA||!(A instanceof rA.ErrnoError))throw A;return A.errno}},x:function(A,I,g,B,Q){try{var C=(o=g)+2097152>>>0<4194305-!!(i=I)?(i>>>0)+4294967296*o:NaN;if(isNaN(C))return 61;var E=FA.getStreamFromFD(A);return rA.llseek(E,C,B),gA=[E.position>>>0,(IA=E.position,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[Q>>2]=gA[0],d[Q+4>>2]=gA[1],E.getdents&&0===C&&0===B&&(E.getdents=null),0}catch(A){if(void 0===rA||!(A instanceof rA.ErrnoError))throw A;return A.errno}var i,o},n:function(A,I,g,B){try{var Q=function(A,I,g,B){for(var Q=0,C=0;C<g;C++){var E=H[I>>2],i=H[I+4>>2];I+=8;var o=rA.write(A,J,E,i,undefined);if(o<0)return-1;Q+=o}return Q}(FA.getStreamFromFD(A),I,g);return H[B>>2]=Q,0}catch(A){if(void 0===rA||!(A instanceof rA.ErrnoError))throw A;return A.errno}},t:function(A,I){var g=OI();try{return CI(A)(I)}catch(A){if(vI(g),A!==A+0)throw A;TI(1,0)}},v:function(A,I,g){var B=OI();try{return CI(A)(I,g)}catch(A){if(vI(B),A!==A+0)throw A;TI(1,0)}},u:function(A,I,g,B){var Q=OI();try{return CI(A)(I,g,B)}catch(A){if(vI(Q),A!==A+0)throw A;TI(1,0)}},j:function(A,I){var g=OI();try{CI(A)(I)}catch(A){if(vI(g),A!==A+0)throw A;TI(1,0)}},w:function(A,I,g){var B=OI();try{CI(A)(I,g)}catch(A){if(vI(B),A!==A+0)throw A;TI(1,0)}},E:function(A,I,g,B){var Q=OI();try{CI(A)(I,g,B)}catch(A){if(vI(Q),A!==A+0)throw A;TI(1,0)}},k:function(A,I,g,B,Q){var C=OI();try{CI(A)(I,g,B,Q)}catch(A){if(vI(C),A!==A+0)throw A;TI(1,0)}},V:qI,z:function(A,I,g,B){return qI(A,I,g,B)}},ZI=(function(){var I={a:bI};function g(I,g){var B,Q=I.exports;A.asm=Q,b((S=A.asm.W).buffer),Z=A.asm.$,B=A.asm.X,V.unshift(B),z()}function Q(A){g(A.instance)}function E(A){return function(){if(!e&&(R||r)){if(\"function\"==typeof fetch&&!CA($))return fetch($,{credentials:\"same-origin\"}).then((function(A){if(!A.ok)throw\"failed to load wasm binary file at '\"+$+\"'\";return A.arrayBuffer()})).catch((function(){return EA($)}));if(C)return new Promise((function(A,I){C($,(function(I){A(new Uint8Array(I))}),I)}))}return Promise.resolve().then((function(){return EA($)}))}().then((function(A){return WebAssembly.instantiate(A,I)})).then((function(A){return A})).then(A,(function(A){M(\"failed to asynchronously prepare wasm: \"+A),_(A)}))}if(P(),A.instantiateWasm)try{return A.instantiateWasm(I,g)}catch(A){return M(\"Module.instantiateWasm callback failed with error: \"+A),!1}(e||\"function\"!=typeof WebAssembly.instantiateStreaming||QA($)||CA($)||F||\"function\"!=typeof fetch?E(Q):fetch($,{credentials:\"same-origin\"}).then((function(A){return WebAssembly.instantiateStreaming(A,I).then(Q,(function(A){return M(\"wasm streaming compile failed: \"+A),M(\"falling back to ArrayBuffer instantiation\"),E(Q)}))}))).catch(B)}(),A.___wasm_call_ctors=function(){return(A.___wasm_call_ctors=A.asm.X).apply(null,arguments)},A._malloc=function(){return(ZI=A._malloc=A.asm.Y).apply(null,arguments)}),xI=A._free=function(){return(xI=A._free=A.asm.Z).apply(null,arguments)},VI=A.___errno_location=function(){return(VI=A.___errno_location=A.asm._).apply(null,arguments)},XI=A.___getTypeName=function(){return(XI=A.___getTypeName=A.asm.aa).apply(null,arguments)},TI=(A.__embind_initialize_bindings=function(){return(A.__embind_initialize_bindings=A.asm.ba).apply(null,arguments)},A._setThrew=function(){return(TI=A._setThrew=A.asm.ca).apply(null,arguments)}),OI=A.stackSave=function(){return(OI=A.stackSave=A.asm.da).apply(null,arguments)},vI=A.stackRestore=function(){return(vI=A.stackRestore=A.asm.ea).apply(null,arguments)},jI=A.___cxa_is_pointer_type=function(){return(jI=A.___cxa_is_pointer_type=A.asm.fa).apply(null,arguments)};function PI(g){function B(){pI||(pI=!0,A.calledRun=!0,c||(A.noFSInit||rA.init.initialized||rA.init(),rA.ignorePermissions=!1,GA.init(),DA(V),I(A),A.onRuntimeInitialized&&A.onRuntimeInitialized(),function(){if(A.postRun)for(\"function\"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)I=A.postRun.shift(),X.unshift(I);var I;DA(X)}()))}g=g||s,O>0||(function(){if(A.preRun)for(\"function\"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)I=A.preRun.shift(),x.unshift(I);var I;DA(x)}(),O>0||(A.setStatus?(A.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){A.setStatus(\"\")}),1),B()}),1)):B()))}if(A.dynCall_jiji=function(){return(A.dynCall_jiji=A.asm.ga).apply(null,arguments)},A.dynCall_viijii=function(){return(A.dynCall_viijii=A.asm.ha).apply(null,arguments)},A.dynCall_iiiiij=function(){return(A.dynCall_iiiiij=A.asm.ia).apply(null,arguments)},A.dynCall_iiiiijj=function(){return(A.dynCall_iiiiijj=A.asm.ja).apply(null,arguments)},A.dynCall_iiiiiijj=function(){return(A.dynCall_iiiiiijj=A.asm.ka).apply(null,arguments)},A.FS=rA,j=function A(){pI||PI(),pI||(j=A)},A.preInit)for(\"function\"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return PI(),A.ready});const t=w,s=function(){return new Promise((function(A){t({onRuntimeInitialized:function(){A({instance:this})}})}))};function G(A,I){return function(){return A.apply(I,arguments)}}const{toString:h}=Object.prototype,{getPrototypeOf:R}=Object,r=(F=Object.create(null),A=>{const I=h.call(A);return F[I]||(F[I]=I.slice(8,-1).toLowerCase())});var F;const y=A=>(A=A.toLowerCase(),I=>r(I)===A),e=A=>I=>typeof I===A,{isArray:n}=Array,M=e(\"undefined\"),S=y(\"ArrayBuffer\"),N=e(\"string\"),c=e(\"function\"),k=e(\"number\"),U=A=>null!==A&&\"object\"==typeof A,J=A=>{if(\"object\"!==r(A))return!1;const I=R(A);return!(null!==I&&I!==Object.prototype&&null!==Object.getPrototypeOf(I)||Symbol.toStringTag in A||Symbol.iterator in A)},K=y(\"Date\"),Y=y(\"File\"),L=y(\"Blob\"),d=y(\"FileList\"),H=y(\"URLSearchParams\");function l(A,I,{allOwnKeys:g=!1}={}){if(null==A)return;let B,Q;if(\"object\"!=typeof A&&(A=[A]),n(A))for(B=0,Q=A.length;B<Q;B++)I.call(null,A[B],B,A);else{const Q=g?Object.getOwnPropertyNames(A):Object.keys(A),C=Q.length;let E;for(B=0;B<C;B++)E=Q[B],I.call(null,A[E],E,A)}}const q=(f=\"undefined\"!=typeof Uint8Array&&R(Uint8Array),A=>f&&A instanceof f);var f;const u=y(\"HTMLFormElement\"),W=(({hasOwnProperty:A})=>(I,g)=>A.call(I,g))(Object.prototype),m=y(\"RegExp\"),p=(A,I)=>{const g=Object.getOwnPropertyDescriptors(A),B={};l(g,((g,Q)=>{!1!==I(g,Q,A)&&(B[Q]=g)})),Object.defineProperties(A,B)},b={isArray:n,isArrayBuffer:S,isBuffer:function(A){return null!==A&&!M(A)&&null!==A.constructor&&!M(A.constructor)&&c(A.constructor.isBuffer)&&A.constructor.isBuffer(A)},isFormData:A=>{const I=\"[object FormData]\";return A&&(\"function\"==typeof FormData&&A instanceof FormData||h.call(A)===I||c(A.toString)&&A.toString()===I)},isArrayBufferView:function(A){let I;return I=\"undefined\"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(A):A&&A.buffer&&S(A.buffer),I},isString:N,isNumber:k,isBoolean:A=>!0===A||!1===A,isObject:U,isPlainObject:J,isUndefined:M,isDate:K,isFile:Y,isBlob:L,isRegExp:m,isFunction:c,isStream:A=>U(A)&&c(A.pipe),isURLSearchParams:H,isTypedArray:q,isFileList:d,forEach:l,merge:function A(){const I={},g=(g,B)=>{J(I[B])&&J(g)?I[B]=A(I[B],g):J(g)?I[B]=A({},g):n(g)?I[B]=g.slice():I[B]=g};for(let A=0,I=arguments.length;A<I;A++)arguments[A]&&l(arguments[A],g);return I},extend:(A,I,g,{allOwnKeys:B}={})=>(l(I,((I,B)=>{g&&c(I)?A[B]=G(I,g):A[B]=I}),{allOwnKeys:B}),A),trim:A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\"\"),stripBOM:A=>(65279===A.charCodeAt(0)&&(A=A.slice(1)),A),inherits:(A,I,g,B)=>{A.prototype=Object.create(I.prototype,B),A.prototype.constructor=A,Object.defineProperty(A,\"super\",{value:I.prototype}),g&&Object.assign(A.prototype,g)},toFlatObject:(A,I,g,B)=>{let Q,C,E;const i={};if(I=I||{},null==A)return I;do{for(Q=Object.getOwnPropertyNames(A),C=Q.length;C-- >0;)E=Q[C],B&&!B(E,A,I)||i[E]||(I[E]=A[E],i[E]=!0);A=!1!==g&&R(A)}while(A&&(!g||g(A,I))&&A!==Object.prototype);return I},kindOf:r,kindOfTest:y,endsWith:(A,I,g)=>{A=String(A),(void 0===g||g>A.length)&&(g=A.length),g-=I.length;const B=A.indexOf(I,g);return-1!==B&&B===g},toArray:A=>{if(!A)return null;if(n(A))return A;let I=A.length;if(!k(I))return null;const g=new Array(I);for(;I-- >0;)g[I]=A[I];return g},forEachEntry:(A,I)=>{const g=(A&&A[Symbol.iterator]).call(A);let B;for(;(B=g.next())&&!B.done;){const g=B.value;I.call(A,g[0],g[1])}},matchAll:(A,I)=>{let g;const B=[];for(;null!==(g=A.exec(I));)B.push(g);return B},isHTMLForm:u,hasOwnProperty:W,hasOwnProp:W,reduceDescriptors:p,freezeMethods:A=>{p(A,((I,g)=>{const B=A[g];c(B)&&(I.enumerable=!1,\"writable\"in I?I.writable=!1:I.set||(I.set=()=>{throw Error(\"Can not read-only method '\"+g+\"'\")}))}))},toObjectSet:(A,I)=>{const g={},B=A=>{A.forEach((A=>{g[A]=!0}))};return n(A)?B(A):B(String(A).split(I)),g},toCamelCase:A=>A.toLowerCase().replace(/[_-\\s]([a-z\\d])(\\w*)/g,(function(A,I,g){return I.toUpperCase()+g})),noop:()=>{},toFiniteNumber:(A,I)=>(A=+A,Number.isFinite(A)?A:I)};function Z(A,I,g,B,Q){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=A,this.name=\"AxiosError\",I&&(this.code=I),g&&(this.config=g),B&&(this.request=B),Q&&(this.response=Q)}b.inherits(Z,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const x=Z.prototype,V={};[\"ERR_BAD_OPTION_VALUE\",\"ERR_BAD_OPTION\",\"ECONNABORTED\",\"ETIMEDOUT\",\"ERR_NETWORK\",\"ERR_FR_TOO_MANY_REDIRECTS\",\"ERR_DEPRECATED\",\"ERR_BAD_RESPONSE\",\"ERR_BAD_REQUEST\",\"ERR_CANCELED\",\"ERR_NOT_SUPPORT\",\"ERR_INVALID_URL\"].forEach((A=>{V[A]={value:A}})),Object.defineProperties(Z,V),Object.defineProperty(x,\"isAxiosError\",{value:!0}),Z.from=(A,I,g,B,Q,C)=>{const E=Object.create(x);return b.toFlatObject(A,E,(function(A){return A!==Error.prototype}),(A=>\"isAxiosError\"!==A)),Z.call(E,A.message,I,g,B,Q),E.cause=A,E.name=A.name,C&&Object.assign(E,C),E};const X=Z,T=g(230);function O(A){return b.isPlainObject(A)||b.isArray(A)}function v(A){return b.endsWith(A,\"[]\")?A.slice(0,-2):A}function j(A,I,g){return A?A.concat(I).map((function(A,I){return A=v(A),!g&&I?\"[\"+A+\"]\":A})).join(g?\".\":\"\"):I}const P=b.toFlatObject(b,{},null,(function(A){return/^is[A-Z]/.test(A)})),z=function(A,I,g){if(!b.isObject(A))throw new TypeError(\"target must be an object\");I=I||new(T||FormData);const B=(g=b.toFlatObject(g,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(A,I){return!b.isUndefined(I[A])}))).metaTokens,Q=g.visitor||a,C=g.dots,E=g.indexes,i=(g.Blob||\"undefined\"!=typeof Blob&&Blob)&&(o=I)&&b.isFunction(o.append)&&\"FormData\"===o[Symbol.toStringTag]&&o[Symbol.iterator];var o;if(!b.isFunction(Q))throw new TypeError(\"visitor must be a function\");function D(A){if(null===A)return\"\";if(b.isDate(A))return A.toISOString();if(!i&&b.isBlob(A))throw new X(\"Blob is not supported. Use a Buffer instead.\");return b.isArrayBuffer(A)||b.isTypedArray(A)?i&&\"function\"==typeof Blob?new Blob([A]):Buffer.from(A):A}function a(A,g,Q){let i=A;if(A&&!Q&&\"object\"==typeof A)if(b.endsWith(g,\"{}\"))g=B?g:g.slice(0,-2),A=JSON.stringify(A);else if(b.isArray(A)&&function(A){return b.isArray(A)&&!A.some(O)}(A)||b.isFileList(A)||b.endsWith(g,\"[]\")&&(i=b.toArray(A)))return g=v(g),i.forEach((function(A,B){!b.isUndefined(A)&&null!==A&&I.append(!0===E?j([g],B,C):null===E?g:g+\"[]\",D(A))})),!1;return!!O(A)||(I.append(j(Q,g,C),D(A)),!1)}const w=[],t=Object.assign(P,{defaultVisitor:a,convertValue:D,isVisitable:O});if(!b.isObject(A))throw new TypeError(\"data must be an object\");return function A(g,B){if(!b.isUndefined(g)){if(-1!==w.indexOf(g))throw Error(\"Circular reference detected in \"+B.join(\".\"));w.push(g),b.forEach(g,(function(g,C){!0===(!(b.isUndefined(g)||null===g)&&Q.call(I,g,b.isString(C)?C.trim():C,B,t))&&A(g,B?B.concat(C):[C])})),w.pop()}}(A),I};function _(A){const I={\"!\":\"%21\",\"'\":\"%27\",\"(\":\"%28\",\")\":\"%29\",\"~\":\"%7E\",\"%20\":\"+\",\"%00\":\"\\0\"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,(function(A){return I[A]}))}function $(A,I){this._pairs=[],A&&z(A,this,I)}const AA=$.prototype;AA.append=function(A,I){this._pairs.push([A,I])},AA.toString=function(A){const I=A?function(I){return A.call(this,I,_)}:_;return this._pairs.map((function(A){return I(A[0])+\"=\"+I(A[1])}),\"\").join(\"&\")};const IA=$;function gA(A){return encodeURIComponent(A).replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%20/g,\"+\").replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\")}function BA(A,I,g){if(!I)return A;const B=g&&g.encode||gA,Q=g&&g.serialize;let C;if(C=Q?Q(I,g):b.isURLSearchParams(I)?I.toString():new IA(I,g).toString(B),C){const I=A.indexOf(\"#\");-1!==I&&(A=A.slice(0,I)),A+=(-1===A.indexOf(\"?\")?\"?\":\"&\")+C}return A}const QA=class{constructor(){this.handlers=[]}use(A,I,g){return this.handlers.push({fulfilled:A,rejected:I,synchronous:!!g&&g.synchronous,runWhen:g?g.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){b.forEach(this.handlers,(function(I){null!==I&&A(I)}))}},CA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},EA=\"undefined\"!=typeof URLSearchParams?URLSearchParams:IA,iA=FormData,oA=(()=>{let A;return(\"undefined\"==typeof navigator||\"ReactNative\"!==(A=navigator.product)&&\"NativeScript\"!==A&&\"NS\"!==A)&&\"undefined\"!=typeof window&&\"undefined\"!=typeof document})(),DA={isBrowser:!0,classes:{URLSearchParams:EA,FormData:iA,Blob},isStandardBrowserEnv:oA,protocols:[\"http\",\"https\",\"file\",\"blob\",\"url\",\"data\"]},aA=function(A){function I(A,g,B,Q){let C=A[Q++];const E=Number.isFinite(+C),i=Q>=A.length;return C=!C&&b.isArray(B)?B.length:C,i?(b.hasOwnProp(B,C)?B[C]=[B[C],g]:B[C]=g,!E):(B[C]&&b.isObject(B[C])||(B[C]=[]),I(A,g,B[C],Q)&&b.isArray(B[C])&&(B[C]=function(A){const I={},g=Object.keys(A);let B;const Q=g.length;let C;for(B=0;B<Q;B++)C=g[B],I[C]=A[C];return I}(B[C])),!E)}if(b.isFormData(A)&&b.isFunction(A.entries)){const g={};return b.forEachEntry(A,((A,B)=>{I(function(A){return b.matchAll(/\\w+|\\[(\\w*)]/g,A).map((A=>\"[]\"===A[0]?\"\":A[1]||A[0]))}(A),B,g,0)})),g}return null},wA=DA.isStandardBrowserEnv?{write:function(A,I,g,B,Q,C){const E=[];E.push(A+\"=\"+encodeURIComponent(I)),b.isNumber(g)&&E.push(\"expires=\"+new Date(g).toGMTString()),b.isString(B)&&E.push(\"path=\"+B),b.isString(Q)&&E.push(\"domain=\"+Q),!0===C&&E.push(\"secure\"),document.cookie=E.join(\"; \")},read:function(A){const I=document.cookie.match(new RegExp(\"(^|;\\\\s*)(\"+A+\")=([^;]*)\"));return I?decodeURIComponent(I[3]):null},remove:function(A){this.write(A,\"\",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}};function tA(A,I){return A&&!/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(I)?function(A,I){return I?A.replace(/\\/+$/,\"\")+\"/\"+I.replace(/^\\/+/,\"\"):A}(A,I):I}const sA=DA.isStandardBrowserEnv?function(){const A=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement(\"a\");let g;function B(g){let B=g;return A&&(I.setAttribute(\"href\",B),B=I.href),I.setAttribute(\"href\",B),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,\"\"):\"\",host:I.host,search:I.search?I.search.replace(/^\\?/,\"\"):\"\",hash:I.hash?I.hash.replace(/^#/,\"\"):\"\",hostname:I.hostname,port:I.port,pathname:\"/\"===I.pathname.charAt(0)?I.pathname:\"/\"+I.pathname}}return g=B(window.location.href),function(A){const I=b.isString(A)?B(A):A;return I.protocol===g.protocol&&I.host===g.host}}():function(){return!0};function GA(A,I,g){X.call(this,null==A?\"canceled\":A,X.ERR_CANCELED,I,g),this.name=\"CanceledError\"}b.inherits(GA,X,{__CANCEL__:!0});const hA=GA,RA=b.toObjectSet([\"age\",\"authorization\",\"content-length\",\"content-type\",\"etag\",\"expires\",\"from\",\"host\",\"if-modified-since\",\"if-unmodified-since\",\"last-modified\",\"location\",\"max-forwards\",\"proxy-authorization\",\"referer\",\"retry-after\",\"user-agent\"]),rA=Symbol(\"internals\"),FA=Symbol(\"defaults\");function yA(A){return A&&String(A).trim().toLowerCase()}function eA(A){return!1===A||null==A?A:b.isArray(A)?A.map(eA):String(A)}function nA(A,I,g,B){return b.isFunction(B)?B.call(this,I,g):b.isString(I)?b.isString(B)?-1!==I.indexOf(B):b.isRegExp(B)?B.test(I):void 0:void 0}function MA(A,I){I=I.toLowerCase();const g=Object.keys(A);let B,Q=g.length;for(;Q-- >0;)if(B=g[Q],I===B.toLowerCase())return B;return null}function SA(A,I){A&&this.set(A),this[FA]=I||null}Object.assign(SA.prototype,{set:function(A,I,g){const B=this;function Q(A,I,g){const Q=yA(I);if(!Q)throw new Error(\"header name must be a non-empty string\");const C=MA(B,Q);(!C||!0===g||!1!==B[C]&&!1!==g)&&(B[C||I]=eA(A))}return b.isPlainObject(A)?b.forEach(A,((A,g)=>{Q(A,g,I)})):Q(I,A,g),this},get:function(A,I){if(!(A=yA(A)))return;const g=MA(this,A);if(g){const A=this[g];if(!I)return A;if(!0===I)return function(A){const I=Object.create(null),g=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;let B;for(;B=g.exec(A);)I[B[1]]=B[2];return I}(A);if(b.isFunction(I))return I.call(this,A,g);if(b.isRegExp(I))return I.exec(A);throw new TypeError(\"parser must be boolean|regexp|function\")}},has:function(A,I){if(A=yA(A)){const g=MA(this,A);return!(!g||I&&!nA(0,this[g],g,I))}return!1},delete:function(A,I){const g=this;let B=!1;function Q(A){if(A=yA(A)){const Q=MA(g,A);!Q||I&&!nA(0,g[Q],Q,I)||(delete g[Q],B=!0)}}return b.isArray(A)?A.forEach(Q):Q(A),B},clear:function(){return Object.keys(this).forEach(this.delete.bind(this))},normalize:function(A){const I=this,g={};return b.forEach(this,((B,Q)=>{const C=MA(g,Q);if(C)return I[C]=eA(B),void delete I[Q];const E=A?function(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,((A,I,g)=>I.toUpperCase()+g))}(Q):String(Q).trim();E!==Q&&delete I[Q],I[E]=eA(B),g[E]=!0})),this},toJSON:function(A){const I=Object.create(null);return b.forEach(Object.assign({},this[FA]||null,this),((g,B)=>{null!=g&&!1!==g&&(I[B]=A&&b.isArray(g)?g.join(\", \"):g)})),I}}),Object.assign(SA,{from:function(A){return b.isString(A)?new this((A=>{const I={};let g,B,Q;return A&&A.split(\"\\n\").forEach((function(A){Q=A.indexOf(\":\"),g=A.substring(0,Q).trim().toLowerCase(),B=A.substring(Q+1).trim(),!g||I[g]&&RA[g]||(\"set-cookie\"===g?I[g]?I[g].push(B):I[g]=[B]:I[g]=I[g]?I[g]+\", \"+B:B)})),I})(A)):A instanceof this?A:new this(A)},accessor:function(A){const I=(this[rA]=this[rA]={accessors:{}}).accessors,g=this.prototype;function B(A){const B=yA(A);I[B]||(function(A,I){const g=b.toCamelCase(\" \"+I);[\"get\",\"set\",\"has\"].forEach((B=>{Object.defineProperty(A,B+g,{value:function(A,g,Q){return this[B].call(this,I,A,g,Q)},configurable:!0})}))}(g,A),I[B]=!0)}return b.isArray(A)?A.forEach(B):B(A),this}}),SA.accessor([\"Content-Type\",\"Content-Length\",\"Accept\",\"Accept-Encoding\",\"User-Agent\"]),b.freezeMethods(SA.prototype),b.freezeMethods(SA);const NA=SA;function cA(A,I){let g=0;const B=function(A,I){A=A||10;const g=new Array(A),B=new Array(A);let Q,C=0,E=0;return I=void 0!==I?I:1e3,function(i){const o=Date.now(),D=B[E];Q||(Q=o),g[C]=i,B[C]=o;let a=E,w=0;for(;a!==C;)w+=g[a++],a%=A;if(C=(C+1)%A,C===E&&(E=(E+1)%A),o-Q<I)return;const t=D&&o-D;return t?Math.round(1e3*w/t):void 0}}(50,250);return Q=>{const C=Q.loaded,E=Q.lengthComputable?Q.total:void 0,i=C-g,o=B(i);g=C;const D={loaded:C,total:E,progress:E?C/E:void 0,bytes:i,rate:o||void 0,estimated:o&&E&&C<=E?(E-C)/o:void 0};D[I?\"download\":\"upload\"]=!0,A(D)}}function kA(A){return new Promise((function(I,g){let B=A.data;const Q=NA.from(A.headers).normalize(),C=A.responseType;let E;function i(){A.cancelToken&&A.cancelToken.unsubscribe(E),A.signal&&A.signal.removeEventListener(\"abort\",E)}b.isFormData(B)&&DA.isStandardBrowserEnv&&Q.setContentType(!1);let o=new XMLHttpRequest;if(A.auth){const I=A.auth.username||\"\",g=A.auth.password?unescape(encodeURIComponent(A.auth.password)):\"\";Q.set(\"Authorization\",\"Basic \"+btoa(I+\":\"+g))}const D=tA(A.baseURL,A.url);function a(){if(!o)return;const B=NA.from(\"getAllResponseHeaders\"in o&&o.getAllResponseHeaders());!function(A,I,g){const B=g.config.validateStatus;g.status&&B&&!B(g.status)?I(new X(\"Request failed with status code \"+g.status,[X.ERR_BAD_REQUEST,X.ERR_BAD_RESPONSE][Math.floor(g.status/100)-4],g.config,g.request,g)):A(g)}((function(A){I(A),i()}),(function(A){g(A),i()}),{data:C&&\"text\"!==C&&\"json\"!==C?o.response:o.responseText,status:o.status,statusText:o.statusText,headers:B,config:A,request:o}),o=null}if(o.open(A.method.toUpperCase(),BA(D,A.params,A.paramsSerializer),!0),o.timeout=A.timeout,\"onloadend\"in o?o.onloadend=a:o.onreadystatechange=function(){o&&4===o.readyState&&(0!==o.status||o.responseURL&&0===o.responseURL.indexOf(\"file:\"))&&setTimeout(a)},o.onabort=function(){o&&(g(new X(\"Request aborted\",X.ECONNABORTED,A,o)),o=null)},o.onerror=function(){g(new X(\"Network Error\",X.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let I=A.timeout?\"timeout of \"+A.timeout+\"ms exceeded\":\"timeout exceeded\";const B=A.transitional||CA;A.timeoutErrorMessage&&(I=A.timeoutErrorMessage),g(new X(I,B.clarifyTimeoutError?X.ETIMEDOUT:X.ECONNABORTED,A,o)),o=null},DA.isStandardBrowserEnv){const I=(A.withCredentials||sA(D))&&A.xsrfCookieName&&wA.read(A.xsrfCookieName);I&&Q.set(A.xsrfHeaderName,I)}void 0===B&&Q.setContentType(null),\"setRequestHeader\"in o&&b.forEach(Q.toJSON(),(function(A,I){o.setRequestHeader(I,A)})),b.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),C&&\"json\"!==C&&(o.responseType=A.responseType),\"function\"==typeof A.onDownloadProgress&&o.addEventListener(\"progress\",cA(A.onDownloadProgress,!0)),\"function\"==typeof A.onUploadProgress&&o.upload&&o.upload.addEventListener(\"progress\",cA(A.onUploadProgress)),(A.cancelToken||A.signal)&&(E=I=>{o&&(g(!I||I.type?new hA(null,A,o):I),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(E),A.signal&&(A.signal.aborted?E():A.signal.addEventListener(\"abort\",E)));const w=function(A){const I=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return I&&I[1]||\"\"}(D);w&&-1===DA.protocols.indexOf(w)?g(new X(\"Unsupported protocol \"+w+\":\",X.ERR_BAD_REQUEST,A)):o.send(B||null)}))}const UA={http:kA,xhr:kA},JA=A=>{if(b.isString(A)){const I=UA[A];if(!A)throw Error(b.hasOwnProp(A)?`Adapter '${A}' is not available in the build`:`Can not resolve adapter '${A}'`);return I}if(!b.isFunction(A))throw new TypeError(\"adapter is not a function\");return A},KA={\"Content-Type\":\"application/x-www-form-urlencoded\"},YA={transitional:CA,adapter:function(){let A;return\"undefined\"!=typeof XMLHttpRequest?A=JA(\"xhr\"):\"undefined\"!=typeof process&&\"process\"===b.kindOf(process)&&(A=JA(\"http\")),A}(),transformRequest:[function(A,I){const g=I.getContentType()||\"\",B=g.indexOf(\"application/json\")>-1,Q=b.isObject(A);if(Q&&b.isHTMLForm(A)&&(A=new FormData(A)),b.isFormData(A))return B&&B?JSON.stringify(aA(A)):A;if(b.isArrayBuffer(A)||b.isBuffer(A)||b.isStream(A)||b.isFile(A)||b.isBlob(A))return A;if(b.isArrayBufferView(A))return A.buffer;if(b.isURLSearchParams(A))return I.setContentType(\"application/x-www-form-urlencoded;charset=utf-8\",!1),A.toString();let C;if(Q){if(g.indexOf(\"application/x-www-form-urlencoded\")>-1)return function(A,I){return z(A,new DA.classes.URLSearchParams,Object.assign({visitor:function(A,I,g,B){return DA.isNode&&b.isBuffer(A)?(this.append(I,A.toString(\"base64\")),!1):B.defaultVisitor.apply(this,arguments)}},I))}(A,this.formSerializer).toString();if((C=b.isFileList(A))||g.indexOf(\"multipart/form-data\")>-1){const I=this.env&&this.env.FormData;return z(C?{\"files[]\":A}:A,I&&new I,this.formSerializer)}}return Q||B?(I.setContentType(\"application/json\",!1),function(A,I,g){if(b.isString(A))try{return(0,JSON.parse)(A),b.trim(A)}catch(A){if(\"SyntaxError\"!==A.name)throw A}return(0,JSON.stringify)(A)}(A)):A}],transformResponse:[function(A){const I=this.transitional||YA.transitional,g=I&&I.forcedJSONParsing,B=\"json\"===this.responseType;if(A&&b.isString(A)&&(g&&!this.responseType||B)){const g=!(I&&I.silentJSONParsing)&&B;try{return JSON.parse(A)}catch(A){if(g){if(\"SyntaxError\"===A.name)throw X.from(A,X.ERR_BAD_RESPONSE,this,null,this.response);throw A}}}return A}],timeout:0,xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",maxContentLength:-1,maxBodyLength:-1,env:{FormData:DA.classes.FormData,Blob:DA.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:\"application/json, text/plain, */*\"}}};b.forEach([\"delete\",\"get\",\"head\"],(function(A){YA.headers[A]={}})),b.forEach([\"post\",\"put\",\"patch\"],(function(A){YA.headers[A]=b.merge(KA)}));const LA=YA;function dA(A,I){const g=this||LA,B=I||g,Q=NA.from(B.headers);let C=B.data;return b.forEach(A,(function(A){C=A.call(g,C,Q.normalize(),I?I.status:void 0)})),Q.normalize(),C}function HA(A){return!(!A||!A.__CANCEL__)}function lA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new hA}function qA(A){return lA(A),A.headers=NA.from(A.headers),A.data=dA.call(A,A.transformRequest),(A.adapter||LA.adapter)(A).then((function(I){return lA(A),I.data=dA.call(A,A.transformResponse,I),I.headers=NA.from(I.headers),I}),(function(I){return HA(I)||(lA(A),I&&I.response&&(I.response.data=dA.call(A,A.transformResponse,I.response),I.response.headers=NA.from(I.response.headers))),Promise.reject(I)}))}function fA(A,I){I=I||{};const g={};function B(A,I){return b.isPlainObject(A)&&b.isPlainObject(I)?b.merge(A,I):b.isPlainObject(I)?b.merge({},I):b.isArray(I)?I.slice():I}function Q(g){return b.isUndefined(I[g])?b.isUndefined(A[g])?void 0:B(void 0,A[g]):B(A[g],I[g])}function C(A){if(!b.isUndefined(I[A]))return B(void 0,I[A])}function E(g){return b.isUndefined(I[g])?b.isUndefined(A[g])?void 0:B(void 0,A[g]):B(void 0,I[g])}function i(g){return g in I?B(A[g],I[g]):g in A?B(void 0,A[g]):void 0}const o={url:C,method:C,data:C,baseURL:E,transformRequest:E,transformResponse:E,paramsSerializer:E,timeout:E,timeoutMessage:E,withCredentials:E,adapter:E,responseType:E,xsrfCookieName:E,xsrfHeaderName:E,onUploadProgress:E,onDownloadProgress:E,decompress:E,maxContentLength:E,maxBodyLength:E,beforeRedirect:E,transport:E,httpAgent:E,httpsAgent:E,cancelToken:E,socketPath:E,responseEncoding:E,validateStatus:i};return b.forEach(Object.keys(A).concat(Object.keys(I)),(function(A){const I=o[A]||Q,B=I(A);b.isUndefined(B)&&I!==i||(g[A]=B)})),g}const uA={};[\"object\",\"boolean\",\"number\",\"function\",\"string\",\"symbol\"].forEach(((A,I)=>{uA[A]=function(g){return typeof g===A||\"a\"+(I<1?\"n \":\" \")+A}}));const WA={};uA.transitional=function(A,I,g){function B(A,I){return\"[Axios v1.1.3] Transitional option '\"+A+\"'\"+I+(g?\". \"+g:\"\")}return(g,Q,C)=>{if(!1===A)throw new X(B(Q,\" has been removed\"+(I?\" in \"+I:\"\")),X.ERR_DEPRECATED);return I&&!WA[Q]&&(WA[Q]=!0,console.warn(B(Q,\" has been deprecated since v\"+I+\" and will be removed in the near future\"))),!A||A(g,Q,C)}};const mA={assertOptions:function(A,I,g){if(\"object\"!=typeof A)throw new X(\"options must be an object\",X.ERR_BAD_OPTION_VALUE);const B=Object.keys(A);let Q=B.length;for(;Q-- >0;){const C=B[Q],E=I[C];if(E){const I=A[C],g=void 0===I||E(I,C,A);if(!0!==g)throw new X(\"option \"+C+\" must be \"+g,X.ERR_BAD_OPTION_VALUE)}else if(!0!==g)throw new X(\"Unknown option \"+C,X.ERR_BAD_OPTION)}},validators:uA},pA=mA.validators;class bA{constructor(A){this.defaults=A,this.interceptors={request:new QA,response:new QA}}request(A,I){\"string\"==typeof A?(I=I||{}).url=A:I=A||{},I=fA(this.defaults,I);const{transitional:g,paramsSerializer:B}=I;void 0!==g&&mA.assertOptions(g,{silentJSONParsing:pA.transitional(pA.boolean),forcedJSONParsing:pA.transitional(pA.boolean),clarifyTimeoutError:pA.transitional(pA.boolean)},!1),void 0!==B&&mA.assertOptions(B,{encode:pA.function,serialize:pA.function},!0),I.method=(I.method||this.defaults.method||\"get\").toLowerCase();const Q=I.headers&&b.merge(I.headers.common,I.headers[I.method]);Q&&b.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\",\"common\"],(function(A){delete I.headers[A]})),I.headers=new NA(I.headers,Q);const C=[];let E=!0;this.interceptors.request.forEach((function(A){\"function\"==typeof A.runWhen&&!1===A.runWhen(I)||(E=E&&A.synchronous,C.unshift(A.fulfilled,A.rejected))}));const i=[];let o;this.interceptors.response.forEach((function(A){i.push(A.fulfilled,A.rejected)}));let D,a=0;if(!E){const A=[qA.bind(this),void 0];for(A.unshift.apply(A,C),A.push.apply(A,i),D=A.length,o=Promise.resolve(I);a<D;)o=o.then(A[a++],A[a++]);return o}D=C.length;let w=I;for(a=0;a<D;){const A=C[a++],I=C[a++];try{w=A(w)}catch(A){I.call(this,A);break}}try{o=qA.call(this,w)}catch(A){return Promise.reject(A)}for(a=0,D=i.length;a<D;)o=o.then(i[a++],i[a++]);return o}getUri(A){return BA(tA((A=fA(this.defaults,A)).baseURL,A.url),A.params,A.paramsSerializer)}}b.forEach([\"delete\",\"get\",\"head\",\"options\"],(function(A){bA.prototype[A]=function(I,g){return this.request(fA(g||{},{method:A,url:I,data:(g||{}).data}))}})),b.forEach([\"post\",\"put\",\"patch\"],(function(A){function I(I){return function(g,B,Q){return this.request(fA(Q||{},{method:A,headers:I?{\"Content-Type\":\"multipart/form-data\"}:{},url:g,data:B}))}}bA.prototype[A]=I(),bA.prototype[A+\"Form\"]=I(!0)}));const ZA=bA;class xA{constructor(A){if(\"function\"!=typeof A)throw new TypeError(\"executor must be a function.\");let I;this.promise=new Promise((function(A){I=A}));const g=this;this.promise.then((A=>{if(!g._listeners)return;let I=g._listeners.length;for(;I-- >0;)g._listeners[I](A);g._listeners=null})),this.promise.then=A=>{let I;const B=new Promise((A=>{g.subscribe(A),I=A})).then(A);return B.cancel=function(){g.unsubscribe(I)},B},A((function(A,B,Q){g.reason||(g.reason=new hA(A,B,Q),I(g.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){this.reason?A(this.reason):this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;const I=this._listeners.indexOf(A);-1!==I&&this._listeners.splice(I,1)}static source(){let A;return{token:new xA((function(I){A=I})),cancel:A}}}const VA=xA,XA=function A(I){const g=new ZA(I),B=G(ZA.prototype.request,g);return b.extend(B,ZA.prototype,g,{allOwnKeys:!0}),b.extend(B,g,null,{allOwnKeys:!0}),B.create=function(g){return A(fA(I,g))},B}(LA);XA.Axios=ZA,XA.CanceledError=hA,XA.CancelToken=VA,XA.isCancel=HA,XA.VERSION=\"1.1.3\",XA.toFormData=z,XA.AxiosError=X,XA.Cancel=XA.CanceledError,XA.all=function(A){return Promise.all(A)},XA.spread=function(A){return function(I){return A.apply(null,I)}},XA.isAxiosError=function(A){return b.isObject(A)&&!0===A.isAxiosError},XA.formToJSON=A=>aA(b.isHTMLForm(A)?new FormData(A):A);const TA=XA,{Axios:OA,AxiosError:vA,CanceledError:jA,isCancel:PA,CancelToken:zA,VERSION:_A,all:$A,Cancel:AI,isAxiosError:II,spread:gI,toFormData:BI}=TA,QI=TA;var CI=function(){function A(){Q(this,A)}var g;return E(A,null,[{key:\"fetchRemoteData\",value:(g=I(o().mark((function A(I){var g;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,QI.get(I,{responseType:\"arraybuffer\"});case 3:return g=A.sent,A.abrupt(\"return\",new Uint8Array(g.data));case 7:throw A.prev=7,A.t0=A.catch(0),A.t0;case 10:case\"end\":return A.stop()}}),A,null,[[0,7]])}))),function(A){return g.apply(this,arguments)})},{key:\"string2Uint8Data\",value:function(A){for(var I=new Uint8Array(A.length),g=0;g<I.length;g++)I[g]=255&A.charCodeAt(g);return I}},{key:\"uint8Data2String\",value:function(A){return String.fromCharCode.apply(String,A)}},{key:\"parseMultiFile\",value:function(I){var g=A.uint8Data2String(I).split(\"\\n\"),B=[],Q=0;return g.forEach((function(A){if((A=A.trim())&&!A.startsWith(\"#\"))switch(Q){case 0:return void(Q=1);case 1:A.match(/^\\d+$/)||B.push(A);case 2:case 3:case 4:return void Q++;case 5:return void(Q=1)}})),B}}]),A}(),EI=function(){function A(){Q(this,A),this.instance,this.markerCount=0,this.multiMarkerCount=0,this.cameraCount=0,this.version=\"0.1.3\",console.info(\"ARToolkit \",this.version)}var B,C,i,D,a;return E(A,[{key:\"init\",value:(a=I(o().mark((function A(){var I;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,s();case 2:return I=A.sent,this.instance=I.instance,this._decorate(),(\"undefined\"!=typeof window?window:g.g).artoolkit=this,A.abrupt(\"return\",this);case 8:case\"end\":return A.stop()}}),A,this)}))),function(){return a.apply(this,arguments)})},{key:\"_decorate\",value:function(){var A=this;for(var I in[\"setup\",\"teardown\",\"setupAR2\",\"setLogLevel\",\"getLogLevel\",\"setDebugMode\",\"getDebugMode\",\"getProcessingImage\",\"setMarkerInfoDir\",\"setMarkerInfoVertex\",\"getTransMatSquare\",\"getTransMatSquareCont\",\"getTransMatMultiSquare\",\"getTransMatMultiSquareRobust\",\"getMultiMarkerNum\",\"getMultiMarkerCount\",\"detectMarker\",\"getMarkerNum\",\"detectNFTMarker\",\"getNFTMarker\",\"getNFTData\",\"getMarker\",\"getMultiEachMarker\",\"setProjectionNearPlane\",\"getProjectionNearPlane\",\"setProjectionFarPlane\",\"getProjectionFarPlane\",\"setThresholdMode\",\"getThresholdMode\",\"setThreshold\",\"getThreshold\",\"setPatternDetectionMode\",\"getPatternDetectionMode\",\"setMatrixCodeType\",\"getMatrixCodeType\",\"setLabelingMode\",\"getLabelingMode\",\"setPattRatio\",\"getPattRatio\",\"setImageProcMode\",\"getImageProcMode\"].forEach((function(I){A[I]=A.instance[I]})),this.instance)I.match(/^AR/)&&(this[I]=this.instance[I])}},{key:\"loadCamera\",value:(D=I(o().mark((function A(I){var g,B;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(g=\"/camera_param_\"+this.cameraCount++,!(I instanceof Uint8Array)){A.next=5;break}B=I,A.next=14;break;case 5:return A.prev=5,A.next=8,CI.fetchRemoteData(I);case 8:B=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(B,g),A.abrupt(\"return\",this.instance._loadCamera(g));case 16:case\"end\":return A.stop()}}),A,this,[[5,11]])}))),function(A){return D.apply(this,arguments)})},{key:\"addMarker\",value:(i=I(o().mark((function A(I,g){var B,Q;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(B=\"/marker_\"+this.markerCount++,-1===g.indexOf(\"\\n\")){A.next=5;break}Q=CI.string2Uint8Data(g),A.next=14;break;case 5:return A.prev=5,A.next=8,CI.fetchRemoteData(g);case 8:Q=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(Q,B),A.abrupt(\"return\",this.instance._addMarker(I,B));case 16:case\"end\":return A.stop()}}),A,this,[[5,11]])}))),function(A,I){return i.apply(this,arguments)})},{key:\"addMultiMarker\",value:(C=I(o().mark((function A(g,B){var Q,C,E,i,D,a,w;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return Q=\"/multi_marker_\"+this.multiMarkerCount++,A.next=3,CI.fetchRemoteData(B);case 3:return C=A.sent,E=CI.parseMultiFile(C),i=function(){var A=I(o().mark((function A(I){var g,Q;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return g=new URL(I,B).toString(),A.next=3,CI.fetchRemoteData(g);case 3:Q=A.sent,this._storeDataFile(Q,I);case 5:case\"end\":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),D=E.map(i,this),A.next=9,Promise.all(D);case 9:return a=this.instance._addMultiMarker(g,Q),w=this.instance.getMultiMarkerNum(g,a),A.abrupt(\"return\",[a,w]);case 12:case\"end\":return A.stop()}}),A,this)}))),function(A,I){return C.apply(this,arguments)})},{key:\"addNFTMarker\",value:(B=I(o().mark((function A(g,B){var Q,C,E,i;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return Q=\"/markerNFT_\"+this.markerCount++,C=[\"fset\",\"iset\",\"fset3\"],E=function(){var A=I(o().mark((function A(I){var g,C,E;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return g=B+\".\"+I,C=Q+\".\"+I,A.next=4,CI.fetchRemoteData(g);case 4:E=A.sent,this._storeDataFile(E,C);case 6:case\"end\":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),i=C.map(E,this),A.next=6,Promise.all(i);case 6:return A.abrupt(\"return\",this.instance._addNFTMarker(g,Q));case 7:case\"end\":return A.stop()}}),A,this)}))),function(A,I){return B.apply(this,arguments)})},{key:\"_storeDataFile\",value:function(A,I){this.instance.FS.writeFile(I,A,{encoding:\"binary\"})}}],[{key:\"UNKNOWN_MARKER\",get:function(){return-1}},{key:\"PATTERN_MARKER\",get:function(){return 0}},{key:\"BARCODE_MARKER\",get:function(){return 1}},{key:\"NFT_MARKER\",get:function(){return 2}}]),A}();function iI(A,I,g){return I in A?Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}):A[I]=g,A}function oI(A,I){var g=Object.keys(A);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(A);I&&(B=B.filter((function(I){return Object.getOwnPropertyDescriptor(A,I).enumerable}))),g.push.apply(g,B)}return g}function DI(A){for(var I=1;I<arguments.length;I++){var g=null!=arguments[I]?arguments[I]:{};I%2?oI(Object(g),!0).forEach((function(I){iI(A,I,g[I])})):Object.getOwnPropertyDescriptors?Object.defineProperties(A,Object.getOwnPropertyDescriptors(g)):oI(Object(g)).forEach((function(I){Object.defineProperty(A,I,Object.getOwnPropertyDescriptor(g,I))}))}return A}var aI=function(){function A(I,g,B,C){Q(this,A),this.options=DI(DI({},{canvas:null,orientation:\"landscape\"}),C),this.id=-1,this.width=I,this.height=g,this.image,this.orientation=this.options.orientation,this.cameraParam=B,this.cameraId=-1,this.cameraLoaded=!1,this.artoolkit,this.listeners={},this.defaultMarkerWidth=1,this.patternMarkers={},this.barcodeMarkers={},this.nftMarkers={},this.transform_mat=new Float32Array(16),this.transformGL_RH=new Float64Array(16),this.videoWidth=I,this.videoHeight=g,this.videoSize=this.videoWidth*this.videoHeight,this.framepointer=null,this.framesize=null,this.dataHeap=null,this.videoLuma=null,this.camera_mat=null,this.marker_transform_mat=null,this.videoLumaPointer=null,this.options.canvas?this.canvas=this.options.canvas:\"undefined\"!=typeof document&&(this.canvas=document.createElement(\"canvas\")),this.canvas?(this.canvas.width=I,this.canvas.height=g,this.ctx=this.canvas.getContext(\"2d\")):console.warn(\"No canvas available\"),this.nftMarkerFound=!1,this.nftMarkerFoundTime=!1,this.nftMarkerCount=0,this._bwpointer=!1}var g,B,C,i,D,a;return E(A,[{key:\"dispose\",value:function(){for(var A in this.cameraId=-1,this.cameraParam=\"\",this.cameraLoaded=!1,this.id>-1&&this.artoolkit.teardown(this.id),this.image&&this.image.srcObject,this)this[A]=null}},{key:\"process\",value:function(A){var I=this.detectMarker(A);0!=I&&console.error(\"[ARController]\",\"detectMarker error:\",I);var g,B,Q=this.getMarkerNum();for(g in this.patternMarkers)(B=this.patternMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(g in this.barcodeMarkers)(B=this.barcodeMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(g in this.nftMarkers)(B=this.nftMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(var C=0;C<Q;C++){var E=this.getMarker(C),i=EI.UNKNOWN_MARKER,o=this.trackPatternMarkerId(-1);E.idPatt>-1&&(E.id===E.idPatt||-1===E.idMatrix)?(o=this.trackPatternMarkerId(E.idPatt),i=EI.PATTERN_MARKER,E.dir!==E.dirPatt&&this.setMarkerInfoDir(C,E.dirPatt)):E.idMatrix>-1&&(o=this.trackBarcodeMarkerId(E.idMatrix),i=EI.BARCODE_MARKER,E.dir!==E.dirMatrix&&this.setMarkerInfoDir(C,E.dirMatrix)),i!==EI.UNKNOWN_MARKER&&o.inPrevious?this.getTransMatSquareCont(C,o.markerWidth,o.matrix,o.matrix):this.getTransMatSquare(C,o.markerWidth,o.matrix),o.inCurrent=!0,this.transMatToGLMat(o.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:\"getMarker\",target:this,data:{index:C,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}var D=this.nftMarkerCount;this.detectNFTMarker();for(var a=0;a<D;a++){var w=this.getNFTMarker(a),t=EI.NFT_MARKER;if(w.found){this.nftMarkerFound=a,this.nftMarkerFoundTime=Date.now();var s=this.trackNFTMarkerId(a);s.matrix.set(w.pose),s.inCurrent=!0,this.transMatToGLMat(s.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:\"getNFTMarker\",target:this,data:{index:a,type:t,marker:w,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}else self.nftMarkerFound===a&&Date.now()-this.nftMarkerFoundTime>200&&(this.nftMarkerFound=!1,this.dispatchEvent({name:\"lostNFTMarker\",target:this,data:{index:a,type:t,marker:w,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}}))}for(var G=this.getMultiMarkerCount(),h=0;h<G;h++){var R=this.getMultiMarkerPatternCount(h),r=!1;this.artoolkit.getTransMatMultiSquareRobust(this.id,h),this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat);for(var F=0;F<R;F++)if((e=this.getMultiEachMarker(h,F)).visible>=0){r=!0,this.dispatchEvent({name:\"getMultiMarker\",target:this,data:{multiMarkerId:h,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}});break}if(r)for(var y=0;y<R;y++){var e=this.getMultiEachMarker(h,y);this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:\"getMultiMarkerSub\",target:this,data:{multiMarkerId:h,markerIndex:y,marker:e,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}}this._bwpointer&&this.debugDraw()}},{key:\"detectNFTMarker\",value:function(){this.artoolkit.detectNFTMarker(this.id)}},{key:\"trackPatternMarkerId\",value:function(A,I){var g=this.patternMarkers[A];return g||(this.patternMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:\"trackBarcodeMarkerId\",value:function(A,I){var g=this.barcodeMarkers[A];return g||(this.barcodeMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:\"trackNFTMarkerId\",value:function(A,I){var g=this.nftMarkers[A];return g||(this.nftMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:\"getMultiMarkerCount\",value:function(){return this.artoolkit.getMultiMarkerCount(this.id)}},{key:\"getMultiMarkerPatternCount\",value:function(A){return this.artoolkit.getMultiMarkerNum(this.id,A)}},{key:\"addEventListener\",value:function(A,I){this.listeners[A]||(this.listeners[A]=[]),this.listeners[A].push(I)}},{key:\"removeEventListener\",value:function(A,I){if(this.listeners[A]){var g=this.listeners[A].indexOf(I);g>-1&&this.listeners[A].splice(g,1)}}},{key:\"dispatchEvent\",value:function(A){var I=this.listeners[A.name];if(I)for(var g=0;g<I.length;g++)I[g].call(this,A)}},{key:\"debugSetup\",value:function(){\"undefined\"!=typeof document?(document.body.appendChild(this.canvas),this.setDebugMode(!0),this._bwpointer=this.getProcessingImage()):console.log(\"debugSetup() currently only supports Browser environments\")}},{key:\"debugDraw\",value:function(){for(var A=new Uint8ClampedArray(this.artoolkit.instance.HEAPU8.buffer,this._bwpointer,this.framesize),I=new ImageData(new Uint8ClampedArray(this.canvas.width*this.canvas.height*4),this.canvas.width,this.canvas.height),g=0,B=0;g<A.length;g++,B+=4){var Q=A[g];I.data[B+0]=Q,I.data[B+1]=Q,I.data[B+2]=Q,I.data[B+3]=255}this.ctx.putImageData(I,0,0);for(var C=this.getMarkerNum(),E=0;E<C;E++)this.drawDebugMarker(this.getMarker(E))}},{key:\"drawDebugMarker\",value:function(A){var I=A.vertex,g=A.pos,B=this.ctx;B.lineWidth=5,B.strokeStyle=\"red\",B.beginPath(),B.moveTo(I[0][0],I[0][1]),B.lineTo(I[1][0],I[1][1]),B.stroke(),B.beginPath(),B.moveTo(I[2][0],I[2][1]),B.lineTo(I[3][0],I[3][1]),B.stroke(),B.strokeStyle=\"green\",B.beginPath(),B.lineTo(I[1][0],I[1][1]),B.lineTo(I[2][0],I[2][1]),B.stroke(),B.beginPath(),B.moveTo(I[3][0],I[3][1]),B.lineTo(I[0][0],I[0][1]),B.stroke(),B.beginPath(),B.arc(g[0],g[1],8,0,2*Math.PI),B.fillStyle=\"red\",B.fill()}},{key:\"loadMarker\",value:(a=I(o().mark((function A(I){return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMarker(this.id,I);case 2:return A.abrupt(\"return\",A.sent);case 3:case\"end\":return A.stop()}}),A,this)}))),function(A){return a.apply(this,arguments)})},{key:\"loadMultiMarker\",value:(D=I(o().mark((function A(I){return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMultiMarker(this.id,I);case 2:return A.abrupt(\"return\",A.sent);case 3:case\"end\":return A.stop()}}),A,this)}))),function(A){return D.apply(this,arguments)})},{key:\"loadNFTMarker\",value:(i=I(o().mark((function A(I){var g;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addNFTMarker(this.id,I);case 2:return g=A.sent,this.nftMarkerCount=g+1,A.abrupt(\"return\",g);case 5:case\"end\":return A.stop()}}),A,this)}))),function(A){return i.apply(this,arguments)})},{key:\"getTransMatSquare\",value:function(A,I,g){return this.artoolkit.getTransMatSquare(this.id,A,I),g.set(this.marker_transform_mat),g}},{key:\"getTransMatSquareCont\",value:function(A,I,g,B){return this.marker_transform_mat.set(g),this.artoolkit.getTransMatSquareCont(this.id,A,I),B.set(this.marker_transform_mat),B}},{key:\"getTransMatMultiSquare\",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:\"getTransMatMultiSquareRobust\",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:\"transMatToGLMat\",value:function(A,I,g){return null==I&&(I=new Float64Array(16)),I[0]=A[0],I[4]=A[1],I[8]=A[2],I[12]=A[3],I[1]=A[4],I[5]=A[5],I[9]=A[6],I[13]=A[7],I[2]=A[8],I[6]=A[9],I[10]=A[10],I[14]=A[11],I[3]=0,I[7]=0,I[11]=0,I[15]=1,null!=g&&0!==g&&(I[12]*=g,I[13]*=g,I[14]*=g),I}},{key:\"arglCameraViewRHf\",value:function(A,I,g){var B;return(B=null==I?new Float64Array(16):I)[0]=A[0],B[4]=A[4],B[8]=A[8],B[12]=A[12],B[1]=-A[1],B[5]=-A[5],B[9]=-A[9],B[13]=-A[13],B[2]=-A[2],B[6]=-A[6],B[10]=-A[10],B[14]=-A[14],B[3]=0,B[7]=0,B[11]=0,B[15]=1,null!=g&&0!==g&&(B[12]*=g,B[13]*=g,B[14]*=g),B}},{key:\"detectMarker\",value:function(A){return this._copyImageToHeap(A)?this.artoolkit.detectMarker(this.id):-99}},{key:\"getMarkerNum\",value:function(){return this.artoolkit.getMarkerNum(this.id)}},{key:\"getMarker\",value:function(A){if(0===this.artoolkit.getMarker(this.id,A))return this.artoolkit.markerInfo}},{key:\"getNFTMarker\",value:function(A){if(0===this.artoolkit.getNFTMarker(this.id,A))return this.artoolkit.NFTMarkerInfo}},{key:\"getNFTData\",value:function(A,I){return this.artoolkit.getNFTData(A,I)}},{key:\"setMarkerInfoVertex\",value:function(A,I){for(var g=0;g<I.length;g++)this.marker_transform_mat[2*g+0]=I[g][0],this.marker_transform_mat[2*g+1]=I[g][1];return this.artoolkit.setMarkerInfoVertex(this.id,A)}},{key:\"cloneMarkerInfo\",value:function(A){return JSON.parse(JSON.stringify(A))}},{key:\"getMultiEachMarker\",value:function(A,I){if(0===this.artoolkit.getMultiEachMarker(this.id,A,I))return this.artoolkit.multiEachMarkerInfo}},{key:\"getTransformationMatrix\",value:function(){return this.transform_mat}},{key:\"getCameraMatrix\",value:function(){return this.camera_mat}},{key:\"getMarkerTransformationMatrix\",value:function(){return this.marker_transform_mat}},{key:\"setDebugMode\",value:function(A){return this.artoolkit.setDebugMode(this.id,A)}},{key:\"getDebugMode\",value:function(){return this.artoolkit.getDebugMode(this.id)}},{key:\"getProcessingImage\",value:function(){return this.artoolkit.getProcessingImage(this.id)}},{key:\"setLogLevel\",value:function(A){return this.artoolkit.setLogLevel(A)}},{key:\"getLogLevel\",value:function(){return this.artoolkit.getLogLevel()}},{key:\"setMarkerInfoDir\",value:function(A,I){return this.artoolkit.setMarkerInfoDir(this.id,A,I)}},{key:\"setProjectionNearPlane\",value:function(A){return this.artoolkit.setProjectionNearPlane(this.id,A)}},{key:\"getProjectionNearPlane\",value:function(){return this.artoolkit.getProjectionNearPlane(this.id)}},{key:\"setProjectionFarPlane\",value:function(A){return this.artoolkit.setProjectionFarPlane(this.id,A)}},{key:\"getProjectionFarPlane\",value:function(){return this.artoolkit.getProjectionFarPlane(this.id)}},{key:\"setThresholdMode\",value:function(A){return this.artoolkit.setThresholdMode(this.id,A)}},{key:\"getThresholdMode\",value:function(){return this.artoolkit.getThresholdMode(this.id)}},{key:\"setThreshold\",value:function(A){return this.artoolkit.setThreshold(this.id,A)}},{key:\"getThreshold\",value:function(){return this.artoolkit.getThreshold(this.id)}},{key:\"setPatternDetectionMode\",value:function(A){return this.artoolkit.setPatternDetectionMode(this.id,A)}},{key:\"getPatternDetectionMode\",value:function(){return this.artoolkit.getPatternDetectionMode(this.id)}},{key:\"setMatrixCodeType\",value:function(A){return this.artoolkit.setMatrixCodeType(this.id,A)}},{key:\"getMatrixCodeType\",value:function(){return this.artoolkit.getMatrixCodeType(this.id)}},{key:\"setLabelingMode\",value:function(A){return this.artoolkit.setLabelingMode(this.id,A)}},{key:\"getLabelingMode\",value:function(){return this.artoolkit.getLabelingMode(this.id)}},{key:\"setPattRatio\",value:function(A){return this.artoolkit.setPattRatio(this.id,A)}},{key:\"getPattRatio\",value:function(){return this.artoolkit.getPattRatio(this.id)}},{key:\"setImageProcMode\",value:function(A){return this.artoolkit.setImageProcMode(this.id,A)}},{key:\"getImageProcMode\",value:function(){return this.artoolkit.getImageProcMode(this.id)}},{key:\"_initialize\",value:(C=I(o().mark((function A(){var I,g=this;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,(new EI).init();case 2:return this.artoolkit=A.sent,console.log(\"[ARController]\",\"ARToolkit initialized\"),A.next=6,this.artoolkit.loadCamera(this.cameraParam);case 6:return this.cameraId=A.sent,console.log(\"[ARController]\",\"Camera params loaded with ID\",this.cameraId),this.id=this.artoolkit.setup(this.width,this.height,this.cameraId),console.log(\"[ARController]\",\"Got ID from setup\",this.id),this._initNFT(),I=artoolkit.frameMalloc,this.framepointer=I.framepointer,this.framesize=I.framesize,this.videoLumaPointer=I.videoLumaPointer,this.dataHeap=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.framepointer,this.framesize),this.videoLuma=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.videoLumaPointer,this.framesize/4),this.camera_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.camera,16),this.marker_transform_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.transform,12),this.setProjectionNearPlane(.1),this.setProjectionFarPlane(1e3),setTimeout((function(){g.dispatchEvent({name:\"load\",target:g})}),1),A.abrupt(\"return\",this);case 23:case\"end\":return A.stop()}}),A,this)}))),function(){return C.apply(this,arguments)})},{key:\"_initNFT\",value:function(){this.artoolkit.setupAR2(this.id)}},{key:\"_copyImageToHeap\",value:function(A){var I;if(A||(A=this.image),A.data)I=A.data;else{if(this.ctx.save(),\"portrait\"===this.orientation){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);var g=this.canvas.height/this.canvas.width,B=this.canvas.width*g,Q=this.canvas.height*g,C=(this.canvas.width-Q)/2;this.ctx.drawImage(A,C,0,Q,B)}else this.ctx.drawImage(A,0,0,this.canvas.width,this.canvas.height);this.ctx.restore(),I=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height).data}if(this.videoLuma)for(var E=0,i=0;i<this.videoSize;i++){var o=I[E+0],D=I[E+1],a=I[E+2];this.videoLuma[i]=o+o+o+a+D+D+D+D>>3,E+=4}return!!this.dataHeap&&(this.dataHeap.set(I),!0)}}],[{key:\"initWithDimensions\",value:(B=I(o().mark((function I(g,B,Q,C){var E;return o().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return E=new A(g,B,Q,C),I.next=3,E._initialize();case 3:return I.abrupt(\"return\",I.sent);case 4:case\"end\":return I.stop()}}),I)}))),function(A,I,g,Q){return B.apply(this,arguments)})},{key:\"initWithImage\",value:(g=I(o().mark((function I(g,B,Q){var C,E,i;return o().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return C=g.videoWidth||g.width,E=g.videoHeight||g.height,I.next=4,A.initWithDimensions(C,E,B,Q);case 4:return(i=I.sent).image=g,I.abrupt(\"return\",i);case 7:case\"end\":return I.stop()}}),I)}))),function(A,I,B){return g.apply(this,arguments)})}]),A}();const wI={ARToolkit:EI,ARController:aI}})(),B.default})()));\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\n(() => {\n\"use strict\";\n/*!***************************************************************!*\\\n  !*** ./three.js/src/threex/arjs-markercontrols-nft.worker.js ***!\n  \\***************************************************************/\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsartoolkit */ \"./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js\");\n/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsartoolkit__WEBPACK_IMPORTED_MODULE_0__);\n/* eslint-env worker */\n\nconst { ARController } = (jsartoolkit__WEBPACK_IMPORTED_MODULE_0___default());\n\nonmessage = function (e) {\n  var msg = e.data;\n  switch (msg.type) {\n    case \"init\": {\n      load(msg);\n      return;\n    }\n    case \"process\": {\n      next = msg.imagedata;\n      process();\n      return;\n    }\n  }\n};\n\nvar next = null;\n\nvar ar = null;\nvar markerResult = null;\n\nfunction load(msg) {\n  var camUrl, nftMarkerUrl;\n  var basePath = self.origin;\n  console.log(\"base path:\", basePath);\n  // test if the msg.param (the incoming url) is an http or https path\n  var regexC =\n    /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim;\n  var reC = regexC.test(msg.param);\n  if (reC == true) {\n    camUrl = msg.param;\n  } else if (reC == false) {\n    camUrl = basePath + \"/\" + msg.param;\n  }\n  var onLoad = function (arController) {\n    ar = arController;\n    var cameraMatrix = ar.getCameraMatrix();\n\n    // after the ARController is set up, we load the NFT Marker\n    var regexM =\n      /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim;\n    var reM = regexM.test(msg.marker);\n    if (reM == true) {\n      nftMarkerUrl = msg.marker;\n    } else if (reM == false) {\n      nftMarkerUrl = basePath + \"/\" + msg.marker;\n    }\n    ar.loadNFTMarker(nftMarkerUrl)\n      .then(function (markerId) {\n        ar.trackNFTMarkerId(markerId);\n        let marker = ar.getNFTData(ar.id, 0);\n        console.log(\"nftMarker data: \", marker);\n        postMessage({ type: \"markerInfos\", marker: JSON.stringify(marker) });\n        postMessage({ type: \"endLoading\" });\n      })\n      .catch(function (err) {\n        console.log(\"Error in loading marker on Worker\", err);\n      });\n\n    // ...and we listen for event when marker has been found from camera\n    ar.addEventListener(\"getNFTMarker\", function (ev) {\n      // let AR.js know that a NFT marker has been found, with its matrix for positioning\n      markerResult = {\n        type: \"found\",\n        matrix: JSON.stringify(ev.data.matrix),\n      };\n    });\n\n    postMessage({ type: \"loaded\", proj: JSON.stringify(cameraMatrix) });\n  };\n\n  var onError = function (error) {\n    console.error(\"Error while intizalizing arController\", error);\n  };\n\n  ARController.initWithDimensions(msg.pw, msg.ph, camUrl)\n    .then(onLoad)\n    .catch(onError);\n}\n\nfunction process() {\n  markerResult = null;\n\n  if (ar && ar.process) {\n    ar.process(next);\n  }\n\n  if (markerResult) {\n    postMessage(markerResult);\n  } else {\n    postMessage({\n      type: \"not found\",\n    });\n  }\n  next = null;\n}\n\n})();\n\n/******/ })()\n;\n", "Worker", undefined, undefined);
}


/***/ }),

/***/ "./node_modules/worker-loader/dist/runtime/inline.js":
/*!***********************************************************!*\
  !*** ./node_modules/worker-loader/dist/runtime/inline.js ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";


/* eslint-env browser */

/* eslint-disable no-undef, no-use-before-define, new-cap */
module.exports = function (content, workerConstructor, workerOptions, url) {
  var globalScope = self || window;

  try {
    try {
      var blob;

      try {
        // New API
        blob = new globalScope.Blob([content]);
      } catch (e) {
        // BlobBuilder = Deprecated, but widely implemented
        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;
        blob = new BlobBuilder();
        blob.append(content);
        blob = blob.getBlob();
      }

      var URL = globalScope.URL || globalScope.webkitURL;
      var objectURL = URL.createObjectURL(blob);
      var worker = new globalScope[workerConstructor](objectURL, workerOptions);
      URL.revokeObjectURL(objectURL);
      return worker;
    } catch (e) {
      return new globalScope[workerConstructor]("data:application/javascript,".concat(encodeURIComponent(content)), workerOptions);
    }
  } catch (e) {
    if (!url) {
      throw Error("Inline worker is not supported");
    }

    return new globalScope[workerConstructor](url, workerOptions);
  }
};

/***/ }),

/***/ "./three.js/src/markers-area/arjs-markersareacontrols.js":
/*!***************************************************************!*\
  !*** ./three.js/src/markers-area/arjs-markersareacontrols.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../threex/threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");
/* harmony import */ var _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../threex/arjs-markercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./arjs-markersareacontrols */ "./three.js/src/markers-area/arjs-markersareacontrols.js");





const MarkersAreaControls = function (arToolkitContext, object3d, parameters) {
  var _this = this;
  _threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__["default"].call(this, object3d);

  if (arguments.length > 3)
    console.assert("wrong api for", MarkersAreaControls);

  // have a parameters in argument
  this.parameters = {
    // list of controls for each subMarker
    subMarkersControls: parameters.subMarkersControls,
    // list of pose for each subMarker relative to the origin
    subMarkerPoses: parameters.subMarkerPoses,
    // change matrix mode - [modelViewMatrix, cameraTransformMatrix]
    changeMatrixMode:
      parameters.changeMatrixMode !== undefined
        ? parameters.changeMatrixMode
        : "modelViewMatrix",
  };

  this.object3d.visible = false;
  // honor obsolete stuff - add a warning to use
  this.subMarkersControls = this.parameters.subMarkersControls;
  this.subMarkerPoses = this.parameters.subMarkerPoses;

  // listen to arToolkitContext event 'sourceProcessed'
  // - after we fully processed one image, aka when we know all detected poses in it
  arToolkitContext.addEventListener("sourceProcessed", function () {
    _this._onSourceProcessed();
  });
};

MarkersAreaControls.prototype = Object.create(_threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__["default"].prototype);
MarkersAreaControls.prototype.constructor = MarkersAreaControls;

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

/**
 * What to do when a image source is fully processed
 */
MarkersAreaControls.prototype._onSourceProcessed = function () {
  var _this = this;
  var stats = {
    count: 0,
    position: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
    },
    quaternion: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0, 0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0, 0, 0, 0),
    },
    scale: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
    },
  };

  var firstQuaternion =
    _this.parameters.subMarkersControls[0].object3d.quaternion;

  this.parameters.subMarkersControls.forEach(function (
    markerControls,
    markerIndex
  ) {
    var markerObject3d = markerControls.object3d;
    // if this marker is not visible, ignore it
    if (markerObject3d.visible === false) return;

    // transformation matrix of this.object3d according to this sub-markers
    var matrix = markerObject3d.matrix.clone();
    var markerPose = _this.parameters.subMarkerPoses[markerIndex];
    matrix.multiply(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().getInverse(markerPose));

    // decompose the matrix into .position, .quaternion, .scale
    var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();
    var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    matrix.decompose(position, quaternion, scale);

    // http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
    stats.count++;

    MarkersAreaControls.averageVector3(
      stats.position.sum,
      position,
      stats.count,
      stats.position.average
    );
    MarkersAreaControls.averageQuaternion(
      stats.quaternion.sum,
      quaternion,
      firstQuaternion,
      stats.count,
      stats.quaternion.average
    );
    MarkersAreaControls.averageVector3(
      stats.scale.sum,
      scale,
      stats.count,
      stats.scale.average
    );
  });

  // honor _this.object3d.visible
  if (stats.count > 0) {
    _this.object3d.visible = true;
  } else {
    _this.object3d.visible = false;
  }

  // if at least one sub-marker has been detected, make the average of all detected markers
  if (stats.count > 0) {
    // compute modelViewMatrix
    var modelViewMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4();
    modelViewMatrix.compose(
      stats.position.average,
      stats.quaternion.average,
      stats.scale.average
    );

    // change _this.object3d.matrix based on parameters.changeMatrixMode
    if (this.parameters.changeMatrixMode === "modelViewMatrix") {
      _this.object3d.matrix.copy(modelViewMatrix);
    } else if (this.parameters.changeMatrixMode === "cameraTransformMatrix") {
      _this.object3d.matrix.getInverse(modelViewMatrix);
    } else {
      console.assert(false);
    }

    // decompose - the matrix into .position, .quaternion, .scale
    _this.object3d.matrix.decompose(
      _this.object3d.position,
      _this.object3d.quaternion,
      _this.object3d.scale
    );
  }
};

//////////////////////////////////////////////////////////////////////////////
//		Utility functions
//////////////////////////////////////////////////////////////////////////////

/**
 * from http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
 */
MarkersAreaControls.averageQuaternion = function (
  quaternionSum,
  newQuaternion,
  firstQuaternion,
  count,
  quaternionAverage
) {
  quaternionAverage = quaternionAverage || new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();
  // sanity check
  console.assert(firstQuaternion instanceof three__WEBPACK_IMPORTED_MODULE_0__.Quaternion === true);

  // from http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
  if (newQuaternion.dot(firstQuaternion) > 0) {
    newQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(
      -newQuaternion.x,
      -newQuaternion.y,
      -newQuaternion.z,
      -newQuaternion.w
    );
  }

  quaternionSum.x += newQuaternion.x;
  quaternionSum.y += newQuaternion.y;
  quaternionSum.z += newQuaternion.z;
  quaternionSum.w += newQuaternion.w;

  quaternionAverage.x = quaternionSum.x / count;
  quaternionAverage.y = quaternionSum.y / count;
  quaternionAverage.z = quaternionSum.z / count;
  quaternionAverage.w = quaternionSum.w / count;

  quaternionAverage.normalize();

  return quaternionAverage;
};

MarkersAreaControls.averageVector3 = function (
  vector3Sum,
  vector3,
  count,
  vector3Average
) {
  vector3Average = vector3Average || new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();

  vector3Sum.x += vector3.x;
  vector3Sum.y += vector3.y;
  vector3Sum.z += vector3.z;

  vector3Average.x = vector3Sum.x / count;
  vector3Average.y = vector3Sum.y / count;
  vector3Average.z = vector3Sum.z / count;

  return vector3Average;
};

//////////////////////////////////////////////////////////////////////////////
//		Utility function
//////////////////////////////////////////////////////////////////////////////

/**
 * compute the center of this multimarker file
 */
MarkersAreaControls.computeCenter = function (jsonData) {
  var multiMarkerFile = JSON.parse(jsonData);
  var stats = {
    count: 0,
    position: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
    },
    quaternion: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0, 0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0, 0, 0, 0),
    },
    scale: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
    },
  };
  var firstQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(); // FIXME ???

  multiMarkerFile.subMarkersControls.forEach(function (item) {
    var poseMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix);

    var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();
    var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    poseMatrix.decompose(position, quaternion, scale);

    // http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
    stats.count++;

    MarkersAreaControls.averageVector3(
      stats.position.sum,
      position,
      stats.count,
      stats.position.average
    );
    MarkersAreaControls.averageQuaternion(
      stats.quaternion.sum,
      quaternion,
      firstQuaternion,
      stats.count,
      stats.quaternion.average
    );
    MarkersAreaControls.averageVector3(
      stats.scale.sum,
      scale,
      stats.count,
      stats.scale.average
    );
  });

  var averageMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4();
  averageMatrix.compose(
    stats.position.average,
    stats.quaternion.average,
    stats.scale.average
  );

  return averageMatrix;
};

MarkersAreaControls.computeBoundingBox = function (jsonData) {
  var multiMarkerFile = JSON.parse(jsonData);
  var boundingBox = new three__WEBPACK_IMPORTED_MODULE_0__.Box3();

  multiMarkerFile.subMarkersControls.forEach(function (item) {
    var poseMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix);

    var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();
    var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    poseMatrix.decompose(position, quaternion, scale);

    boundingBox.expandByPoint(position);
  });

  return boundingBox;
};
//////////////////////////////////////////////////////////////////////////////
//		updateSmoothedControls
//////////////////////////////////////////////////////////////////////////////

MarkersAreaControls.prototype.updateSmoothedControls = function (
  smoothedControls,
  lerpsValues
) {
  // handle default values
  if (lerpsValues === undefined) {
    // FIXME this parameter format is uselessly cryptic
    // lerpValues = [
    // {lerpPosition: 0.5, lerpQuaternion: 0.2, lerpQuaternion: 0.7}
    // ]
    lerpsValues = [
      [0.3 + 0.1, 0.1, 0.3],
      [0.4 + 0.1, 0.1, 0.4],
      [0.4 + 0.1, 0.2, 0.5],
      [0.5 + 0.1, 0.2, 0.7],
      [0.5 + 0.1, 0.2, 0.7],
    ];
  }
  // count how many subMarkersControls are visible
  var nVisible = 0;
  this.parameters.subMarkersControls.forEach(function (
    markerControls,
    markerIndex
  ) {
    var markerObject3d = markerControls.object3d;
    if (markerObject3d.visible === true) nVisible++;
  });

  // find the good lerpValues
  if (lerpsValues[nVisible - 1] !== undefined) {
    var lerpValues = lerpsValues[nVisible - 1];
  } else {
    var lerpValues = lerpsValues[lerpsValues.length - 1];
  }

  // modify lerpValues in smoothedControls
  smoothedControls.parameters.lerpPosition = lerpValues[0];
  smoothedControls.parameters.lerpQuaternion = lerpValues[1];
  smoothedControls.parameters.lerpScale = lerpValues[2];
};

//////////////////////////////////////////////////////////////////////////////
//		Create ArMultiMarkerControls from JSON
//////////////////////////////////////////////////////////////////////////////

MarkersAreaControls.fromJSON = function (
  arToolkitContext,
  parent3D,
  markerRoot,
  jsonData,
  parameters
) {
  var multiMarkerFile = JSON.parse(jsonData);
  // declare variables
  var subMarkersControls = [];
  var subMarkerPoses = [];
  // handle default arguments
  parameters = parameters || {};

  // prepare the parameters
  multiMarkerFile.subMarkersControls.forEach(function (item) {
    // create a markerRoot
    var markerRoot = new three__WEBPACK_IMPORTED_MODULE_0__.Object3D();
    parent3D.add(markerRoot);

    // create markerControls for our markerRoot
    var subMarkerControls = new _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_2__["default"](
      arToolkitContext,
      markerRoot,
      item.parameters
    );

    // if( true ){
    // store it in the parameters
    subMarkersControls.push(subMarkerControls);
    subMarkerPoses.push(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix));
    // }else{
    // 		// build a smoothedControls
    // 		var smoothedRoot = new THREE.Group()
    // 		parent3D.add(smoothedRoot)
    // 		var smoothedControls = new THREEx.ArSmoothedControls(smoothedRoot, {
    // 			lerpPosition : 0.1,
    // 			lerpQuaternion : 0.1,
    // 			lerpScale : 0.1,
    // 			minVisibleDelay: 0,
    // 			minUnvisibleDelay: 0,
    // 		})
    // 		onRenderFcts.push(function(delta){
    // 			smoothedControls.update(markerRoot)	// TODO this is a global
    // 		})
    //
    //
    // 		// store it in the parameters
    // 		subMarkersControls.push(smoothedControls)
    // 		subMarkerPoses.push(new THREE.Matrix4().fromArray(item.poseMatrix))
    // }
  });

  parameters.subMarkersControls = subMarkersControls;
  parameters.subMarkerPoses = subMarkerPoses;
  // create a new ArMultiMarkerControls
  var multiMarkerControls = new _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_3__["default"](
    arToolkitContext,
    markerRoot,
    parameters
  );

  // return it
  return multiMarkerControls;
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkersAreaControls);


/***/ }),

/***/ "./three.js/src/markers-area/arjs-markersareautils.js":
/*!************************************************************!*\
  !*** ./three.js/src/markers-area/arjs-markersareautils.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../threex/arjs-context */ "./three.js/src/threex/arjs-context.js");

 // TODO context build-dependent

const MarkersAreaUtils = {};

//////////////////////////////////////////////////////////////////////////////
//		navigateToLearnerPage
//////////////////////////////////////////////////////////////////////////////

/**
 * Navigate to the multi-marker learner page
 *
 * @param {String} learnerBaseURL  - the base url for the learner
 * @param {String} trackingBackend - the tracking backend to use
 */
MarkersAreaUtils.navigateToLearnerPage = function (
  learnerBaseURL,
  trackingBackend
) {
  var learnerParameters = {
    backURL: location.href,
    trackingBackend: trackingBackend,
    markersControlsParameters:
      MarkersAreaUtils.createDefaultMarkersControlsParameters(trackingBackend),
  };
  location.href =
    learnerBaseURL +
    "?" +
    encodeURIComponent(JSON.stringify(learnerParameters));
};

//////////////////////////////////////////////////////////////////////////////
//		DefaultMultiMarkerFile
//////////////////////////////////////////////////////////////////////////////

/**
 * Create and store a default multi-marker file
 *
 * @param {String} trackingBackend - the tracking backend to use
 */
MarkersAreaUtils.storeDefaultMultiMarkerFile = function (trackingBackend) {
  var file = MarkersAreaUtils.createDefaultMultiMarkerFile(trackingBackend);
  // json.strinfy the value and store it in localStorage
  localStorage.setItem("ARjsMultiMarkerFile", JSON.stringify(file));
};

/**
 * Create a default multi-marker file
 * @param {String} trackingBackend - the tracking backend to use
 * @return {Object} - json object of the multi-marker file
 */
MarkersAreaUtils.createDefaultMultiMarkerFile = function (trackingBackend) {
  console.assert(trackingBackend);
  if (trackingBackend === undefined) debugger;

  // create absoluteBaseURL
  var link = document.createElement("a");
  link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL;
  var absoluteBaseURL = link.href;

  // create the base file
  var file = {
    meta: {
      createdBy: "AR.js " + _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].REVISION + " - Default Marker",
      createdAt: new Date().toJSON(),
    },
    trackingBackend: trackingBackend,
    subMarkersControls: [
      // empty for now... being filled
    ],
  };
  // add a subMarkersControls
  file.subMarkersControls[0] = {
    parameters: {},
    poseMatrix: new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeTranslation(0, 0, 0).toArray(),
  };
  if (trackingBackend === "artoolkit") {
    file.subMarkersControls[0].parameters.type = "pattern";
    file.subMarkersControls[0].parameters.patternUrl =
      absoluteBaseURL +
      "examples/marker-training/examples/pattern-files/pattern-hiro.patt";
  } else console.assert(false);

  // json.strinfy the value and store it in localStorage
  return file;
};

//////////////////////////////////////////////////////////////////////////////
//		createDefaultMarkersControlsParameters
//////////////////////////////////////////////////////////////////////////////

/**
 * Create a default controls parameters for the multi-marker learner
 *
 * @param {String} trackingBackend - the tracking backend to use
 * @return {Object} - json object containing the controls parameters
 */
MarkersAreaUtils.createDefaultMarkersControlsParameters = function (
  trackingBackend
) {
  // create absoluteBaseURL
  var link = document.createElement("a");
  link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL;
  var absoluteBaseURL = link.href;

  if (trackingBackend === "artoolkit") {
    // pattern hiro/kanji/a/b/c/f
    var markersControlsParameters = [
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-hiro.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-kanji.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterA.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterB.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterC.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterF.patt",
      },
    ];
  } else console.assert(false);
  return markersControlsParameters;
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////
/**
 * generate areaFile
 */
MarkersAreaUtils.storeMarkersAreaFileFromResolution = function (
  trackingBackend,
  resolutionW,
  resolutionH
) {
  // generate areaFile
  var areaFile = this.buildMarkersAreaFileFromResolution(
    trackingBackend,
    resolutionW,
    resolutionH
  );
  // store areaFile in localStorage
  localStorage.setItem("ARjsMultiMarkerFile", JSON.stringify(areaFile));
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

MarkersAreaUtils.buildMarkersAreaFileFromResolution = function (
  trackingBackend,
  resolutionW,
  resolutionH
) {
  // create the base file
  var file = {
    meta: {
      createdBy: "AR.js - Augmented Website",
      createdAt: new Date().toJSON(),
    },
    trackingBackend: trackingBackend,
    subMarkersControls: [
      // empty for now...
    ],
  };

  var whiteMargin = 0.1;
  if (resolutionW > resolutionH) {
    var markerImageSize = 0.4 * resolutionH;
  } else if (resolutionW < resolutionH) {
    var markerImageSize = 0.4 * resolutionW;
  } else if (resolutionW === resolutionH) {
    // specific for twitter player - https://dev.twitter.com/cards/types/player
    var markerImageSize = 0.33 * resolutionW;
  } else console.assert(false);

  // console.warn('using new markerImageSize computation')
  var actualMarkerSize = markerImageSize * (1 - 2 * whiteMargin);

  var deltaX = (resolutionW - markerImageSize) / 2 / actualMarkerSize;
  var deltaZ = (resolutionH - markerImageSize) / 2 / actualMarkerSize;

  var subMarkerControls = buildSubMarkerControls("center", 0, 0);
  file.subMarkersControls.push(subMarkerControls);

  var subMarkerControls = buildSubMarkerControls("topleft", -deltaX, -deltaZ);
  file.subMarkersControls.push(subMarkerControls);

  var subMarkerControls = buildSubMarkerControls("topright", +deltaX, -deltaZ);
  file.subMarkersControls.push(subMarkerControls);

  var subMarkerControls = buildSubMarkerControls(
    "bottomleft",
    -deltaX,
    +deltaZ
  );
  file.subMarkersControls.push(subMarkerControls);

  var subMarkerControls = buildSubMarkerControls(
    "bottomright",
    +deltaX,
    +deltaZ
  );
  file.subMarkersControls.push(subMarkerControls);

  return file;

  //////////////////////////////////////////////////////////////////////////////
  //		Code Separator
  //////////////////////////////////////////////////////////////////////////////

  function buildSubMarkerControls(layout, positionX, positionZ) {
    console.log("buildSubMarkerControls", layout, positionX, positionZ);
    // create subMarkersControls
    var subMarkersControls = {
      parameters: {},
      poseMatrix: new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4()
        .makeTranslation(positionX, 0, positionZ)
        .toArray(),
    };
    // fill the parameters
    if (trackingBackend === "artoolkit") {
      layout2MarkerParametersArtoolkit(subMarkersControls.parameters, layout);
    } else console.assert(false);
    // return subMarkersControls
    return subMarkersControls;
  }

  function layout2MarkerParametersArtoolkit(parameters, layout) {
    // create absoluteBaseURL
    var link = document.createElement("a");
    link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL;
    var absoluteBaseURL = link.href;

    var layout2PatternUrl = {
      center: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-hiro.patt"
      ),
      topleft: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterA.patt"
      ),
      topright: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterB.patt"
      ),
      bottomleft: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterC.patt"
      ),
      bottomright: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterF.patt"
      ),
    };
    console.assert(layout2PatternUrl[layout] !== undefined);
    parameters.type = "pattern";
    parameters.patternUrl = layout2PatternUrl[layout];
    return;
    function convertRelativeUrlToAbsolute(relativeUrl) {
      var tmpLink = document.createElement("a");
      tmpLink.href = relativeUrl;
      return tmpLink.href;
    }
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkersAreaUtils);


/***/ }),

/***/ "./three.js/src/new-api/arjs-anchor.js":
/*!*********************************************!*\
  !*** ./three.js/src/new-api/arjs-anchor.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var threexArmarkercontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! threexArmarkercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var _threex_threex_armarkerhelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../threex/threex-armarkerhelper */ "./three.js/src/threex/threex-armarkerhelper.js");
/* harmony import */ var _threex_threex_arsmoothedcontrols__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../threex/threex-arsmoothedcontrols */ "./three.js/src/threex/threex-arsmoothedcontrols.js");
/* harmony import */ var _markers_area_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../markers-area/arjs-markersareacontrols */ "./three.js/src/markers-area/arjs-markersareacontrols.js");
/* harmony import */ var _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../markers-area/arjs-markersareautils */ "./three.js/src/markers-area/arjs-markersareautils.js");

 // Alias for dynamic importing





// TODO this is a controls... should i give the object3d here ?
// not according to 'no three.js dependancy'

/**
 * Create an anchor in the real world
 *
 * @param {ARjs.Session} arSession - the session on which we create the anchor
 * @param {Object} markerParameters - parameter of this anchor
 */
const Anchor = function (arSession, markerParameters) {
  var _this = this;
  var arContext = arSession.arContext;
  var scene = arSession.parameters.scene;
  var camera = arSession.parameters.camera;

  this.arSession = arSession;
  this.parameters = markerParameters;

  // log to debug
  console.log(
    "ARjs.Anchor -",
    "changeMatrixMode:",
    this.parameters.changeMatrixMode,
    "/ markersAreaEnabled:",
    markerParameters.markersAreaEnabled
  );

  var markerRoot = new three__WEBPACK_IMPORTED_MODULE_0__.Group();
  scene.add(markerRoot);

  // set controlledObject depending on changeMatrixMode
  if (markerParameters.changeMatrixMode === "modelViewMatrix") {
    var controlledObject = markerRoot;
  } else if (markerParameters.changeMatrixMode === "cameraTransformMatrix") {
    var controlledObject = camera;
  } else console.assert(false);

  if (markerParameters.markersAreaEnabled === false) {
    var markerControls = new threexArmarkercontrols__WEBPACK_IMPORTED_MODULE_1__["default"](
      arContext,
      controlledObject,
      markerParameters
    );
    this.controls = markerControls;
  } else {
    // sanity check - MUST be a trackingBackend with markers
    console.assert(arContext.parameters.trackingBackend === "artoolkit");

    // honor markers-page-resolution for https://webxr.io/augmented-website
    if (
      location.hash.substring(1).startsWith("markers-page-resolution=") === true
    ) {
      // get resolutionW/resolutionH from url
      var markerPageResolution = location.hash.substring(1);
      var matches = markerPageResolution.match(
        /markers-page-resolution=(\d+)x(\d+)/
      );
      console.assert(matches.length === 3);
      var resolutionW = parseInt(matches[1]);
      var resolutionH = parseInt(matches[2]);
      var arContext = arSession.arContext;
      // generate and store the ARjsMultiMarkerFile
      _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_5__["default"].storeMarkersAreaFileFromResolution(
        arContext.parameters.trackingBackend,
        resolutionW,
        resolutionH
      );
    }

    // if there is no ARjsMultiMarkerFile, build a default one
    if (localStorage.getItem("ARjsMultiMarkerFile") === null) {
      _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_5__["default"].storeDefaultMultiMarkerFile(
        arContext.parameters.trackingBackend
      );
    }

    // get multiMarkerFile from localStorage
    console.assert(localStorage.getItem("ARjsMultiMarkerFile") !== null);
    var multiMarkerFile = localStorage.getItem("ARjsMultiMarkerFile");

    // set controlledObject depending on changeMatrixMode
    if (markerParameters.changeMatrixMode === "modelViewMatrix") {
      var parent3D = scene;
    } else if (markerParameters.changeMatrixMode === "cameraTransformMatrix") {
      var parent3D = camera;
    } else console.assert(false);

    // build a multiMarkerControls
    var multiMarkerControls = _markers_area_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_4__["default"].fromJSON(
      arContext,
      parent3D,
      controlledObject,
      multiMarkerFile
    );
    this.controls = multiMarkerControls;

    // honor markerParameters.changeMatrixMode
    multiMarkerControls.parameters.changeMatrixMode =
      markerParameters.changeMatrixMode;

    // TODO put subMarkerControls visibility into an external file. with 2 handling for three.js and babylon.js
    // create ArMarkerHelper - useful to debug - super three.js specific
    var markerHelpers = [];
    multiMarkerControls.subMarkersControls.forEach(function (
      subMarkerControls
    ) {
      // add an helper to visuable each sub-marker
      var markerHelper = new _threex_threex_armarkerhelper__WEBPACK_IMPORTED_MODULE_2__["default"](subMarkerControls);
      markerHelper.object3d.visible = false;
      // subMarkerControls.object3d.add( markerHelper.object3d )
      subMarkerControls.object3d.add(markerHelper.object3d);
      // add it to markerHelpers
      markerHelpers.push(markerHelper);
    });
    // define API specific to markersArea
    this.markersArea = {};
    this.markersArea.setSubMarkersVisibility = function (visible) {
      markerHelpers.forEach(function (markerHelper) {
        markerHelper.object3d.visible = visible;
      });
    };
  }

  this.object3d = new three__WEBPACK_IMPORTED_MODULE_0__.Group();

  //////////////////////////////////////////////////////////////////////////////
  //		THREEx.ArSmoothedControls
  //////////////////////////////////////////////////////////////////////////////

  var shouldBeSmoothed = true;

  if (shouldBeSmoothed === true) {
    // build a smoothedControls
    var smoothedRoot = new three__WEBPACK_IMPORTED_MODULE_0__.Group();
    scene.add(smoothedRoot);
    var smoothedControls = new _threex_threex_arsmoothedcontrols__WEBPACK_IMPORTED_MODULE_3__["default"](smoothedRoot);
    smoothedRoot.add(this.object3d);
  } else {
    markerRoot.add(this.object3d);
  }

  //////////////////////////////////////////////////////////////////////////////
  //		Code Separator
  //////////////////////////////////////////////////////////////////////////////
  this.update = function () {
    // update _this.object3d.visible
    _this.object3d.visible = _this.object3d.parent.visible;

    // console.log('controlledObject.visible', _this.object3d.parent.visible)
    if (smoothedControls !== undefined) {
      // update smoothedControls parameters depending on how many markers are visible in multiMarkerControls
      if (multiMarkerControls !== undefined) {
        multiMarkerControls.updateSmoothedControls(smoothedControls);
      }

      // update smoothedControls
      smoothedControls.update(markerRoot);
    }
  };
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Anchor);


/***/ }),

/***/ "./three.js/src/new-api/arjs-debugui.js":
/*!**********************************************!*\
  !*** ./three.js/src/new-api/arjs-debugui.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnchorDebugUI": () => (/* binding */ AnchorDebugUI),
/* harmony export */   "SessionDebugUI": () => (/* binding */ SessionDebugUI)
/* harmony export */ });
/* harmony import */ var _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../markers-area/arjs-markersareautils */ "./three.js/src/markers-area/arjs-markersareautils.js");
/* harmony import */ var _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../threex/arjs-context */ "./three.js/src/threex/arjs-context.js");

 // TODO context build-dependent

/**
 * Create an debug UI for an ARjs.Anchor
 *
 * @param {ARjs.Anchor} arAnchor - the anchor to user
 */
const SessionDebugUI = function (arSession) {
  var trackingBackend = arSession.arContext.parameters.trackingBackend;

  this.domElement = document.createElement("div");
  this.domElement.style.color = "rgba(0,0,0,0.9)";
  this.domElement.style.backgroundColor = "rgba(127,127,127,0.5)";
  this.domElement.style.display = "block";
  this.domElement.style.padding = "0.5em";
  this.domElement.style.position = "fixed";
  this.domElement.style.left = "5px";
  this.domElement.style.bottom = "10px";
  this.domElement.style.textAlign = "right";

  //////////////////////////////////////////////////////////////////////////////
  //		current-tracking-backend
  //////////////////////////////////////////////////////////////////////////////

  var domElement = document.createElement("span");
  domElement.style.display = "block";
  domElement.innerHTML = "<b>trackingBackend</b> : " + trackingBackend;
  this.domElement.appendChild(domElement);
};

/**
 * Url of augmented-website service - if === '' then dont include augmented-website link
 * @type {String}
 */
SessionDebugUI.AugmentedWebsiteURL = "https://webxr.io/augmented-website";

//////////////////////////////////////////////////////////////////////////////
//		AnchorDebugUI
//////////////////////////////////////////////////////////////////////////////

/**
 * Create an debug UI for an ARjs.Anchor
 *
 * @param {ARjs.Anchor} arAnchor - the anchor to user
 */
const AnchorDebugUI = function (arAnchor) {
  var arSession = arAnchor.arSession;
  var trackingBackend = arSession.arContext.parameters.trackingBackend;

  this.domElement = document.createElement("div");
  this.domElement.style.color = "rgba(0,0,0,0.9)";
  this.domElement.style.backgroundColor = "rgba(127,127,127,0.5)";
  this.domElement.style.display = "inline-block";
  this.domElement.style.padding = "0.5em";
  this.domElement.style.margin = "0.5em";
  this.domElement.style.textAlign = "left";

  //////////////////////////////////////////////////////////////////////////////
  //		current-tracking-backend
  //////////////////////////////////////////////////////////////////////////////

  var domElement = document.createElement("span");
  domElement.style.display = "block";
  domElement.style.padding = "0.5em";
  domElement.style.color = "rgba(0,0,0,0.9)";
  domElement.style.backgroundColor = "rgba(127,127,127,0.5)";
  domElement.style.position = "fixed";
  domElement.style.left = "5px";
  domElement.style.bottom = "40px";

  this.domElement.appendChild(domElement);
  domElement.innerHTML =
    "<b>markersAreaEnabled</b> :" + arAnchor.parameters.markersAreaEnabled;

  //////////////////////////////////////////////////////////////////////////////
  //		toggle-marker-helper
  //////////////////////////////////////////////////////////////////////////////

  if (arAnchor.parameters.markersAreaEnabled) {
    var domElement = document.createElement("button");
    domElement.style.display = "block";
    this.domElement.style.padding = "0.5em";
    this.domElement.style.position = "fixed";
    this.domElement.style.textAlign = "left";
    this.domElement.appendChild(domElement);

    domElement.id = "buttonToggleMarkerHelpers";
    domElement.innerHTML = "toggle-marker-helper";
    domElement.href = "javascript:void(0)";

    var subMarkerHelpersVisible = false;
    domElement.addEventListener("click", function () {
      subMarkerHelpersVisible = subMarkerHelpersVisible ? false : true;
      arAnchor.markersArea.setSubMarkersVisibility(subMarkerHelpersVisible);
    });
  }

  //////////////////////////////////////////////////////////////////////////////
  //		Learn-new-marker-area
  //////////////////////////////////////////////////////////////////////////////

  if (arAnchor.parameters.markersAreaEnabled) {
    var domElement = document.createElement("button");
    domElement.style.display = "block";
    this.domElement.appendChild(domElement);

    domElement.id = "buttonMarkersAreaLearner";
    domElement.innerHTML = "Learn-new-marker-area";
    domElement.href = "javascript:void(0)";

    domElement.addEventListener("click", function () {
      if (AnchorDebugUI.MarkersAreaLearnerURL !== null) {
        var learnerURL = AnchorDebugUI.MarkersAreaLearnerURL;
      } else {
        var learnerURL =
          _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL + "examples/multi-markers/examples/learner.html";
      }
      _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_0__["default"].navigateToLearnerPage(learnerURL, trackingBackend);
    });
  }

  //////////////////////////////////////////////////////////////////////////////
  //		Reset-marker-area
  //////////////////////////////////////////////////////////////////////////////

  if (arAnchor.parameters.markersAreaEnabled) {
    var domElement = document.createElement("button");
    domElement.style.display = "block";
    this.domElement.appendChild(domElement);

    domElement.id = "buttonMarkersAreaReset";
    domElement.innerHTML = "Reset-marker-area";
    domElement.href = "javascript:void(0)";

    domElement.addEventListener("click", function () {
      _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_0__["default"].storeDefaultMultiMarkerFile(trackingBackend);
      location.reload();
    });
  }
};

/**
 * url for the markers-area learner. if not set, take the default one
 * @type {String}
 */
AnchorDebugUI.MarkersAreaLearnerURL = null;




/***/ }),

/***/ "./three.js/src/new-api/arjs-hittesting.js":
/*!*************************************************!*\
  !*** ./three.js/src/new-api/arjs-hittesting.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _threex_threex_hittesting_plane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../threex/threex-hittesting-plane */ "./three.js/src/threex/threex-hittesting-plane.js");


/**
 * Create an anchor in the real world
 *
 * @param {ARjs.Session} arSession - the session on which we create the anchor
 * @param {Object} markerParameters - parameter of this anchor
 */
const HitTesting = function (arSession) {
  var _this = this;
  var arContext = arSession.arContext;
  var trackingBackend = arContext.parameters.trackingBackend;

  this.enabled = true;
  this._arSession = arSession;
  this._hitTestingPlane = null;
  _this._hitTestingPlane = new _threex_threex_hittesting_plane__WEBPACK_IMPORTED_MODULE_0__["default"](arSession.arSource.domElement);
};

//////////////////////////////////////////////////////////////////////////////
//		update function
//////////////////////////////////////////////////////////////////////////////
/**
 * update
 *
 * @param {THREE.Camera} camera   - the camera to use
 * @param {THREE.Object3D} object3d -
 */
HitTesting.prototype.update = function (camera, pickingRoot, changeMatrixMode) {
  // if it isnt enabled, do nothing
  if (this.enabled === false) return;

  if (this._hitTestingPlane !== null) {
    this._hitTestingPlane.update(camera, pickingRoot, changeMatrixMode);
  } else console.assert(false);
};

//////////////////////////////////////////////////////////////////////////////
//		actual hit testing
//////////////////////////////////////////////////////////////////////////////

/**
 * Test the real world for intersections directly from a DomEvent
 *
 * @param {Number} mouseX - position X of the hit [-1, +1]
 * @param {Number} mouseY - position Y of the hit [-1, +1]
 * @return {[HitTesting.Result]} - array of result
 */
HitTesting.prototype.testDomEvent = function (domEvent) {
  var trackingBackend = this._arSession.arContext.parameters.trackingBackend;
  var arSource = this._arSession.arSource;

  // if it isnt enabled, do nothing
  if (this.enabled === false) return [];
  var mouseX = domEvent.clientX / arSource.domElementWidth();
  var mouseY = domEvent.clientY / arSource.domElementHeight();

  return this.test(mouseX, mouseY);
};

/**
 * Test the real world for intersections.
 *
 * @param {Number} mouseX - position X of the hit [0, +1]
 * @param {Number} mouseY - position Y of the hit [0, +1]
 * @return {[HitTesting.Result]} - array of result
 */
HitTesting.prototype.test = function (mouseX, mouseY) {
  var arContext = this._arSession.arContext;
  var trackingBackend = arContext.parameters.trackingBackend;
  var hitTestResults = [];

  // if it isnt enabled, do nothing
  if (this.enabled === false) return [];

  var result = this._hitTestingPlane.test(mouseX, mouseY);

  // if no result is found, return now
  if (result === null) return hitTestResults;

  // build a HitTesting.Result
  var hitTestResult = new HitTesting.Result(
    result.position,
    result.quaternion,
    result.scale
  );
  hitTestResults.push(hitTestResult);

  return hitTestResults;
};

//////////////////////////////////////////////////////////////////////////////
//		HitTesting.Result
//////////////////////////////////////////////////////////////////////////////
/**
 * Contains the result of HitTesting.test()
 *
 * @param {THREE.Vector3} position - position to use
 * @param {THREE.Quaternion} quaternion - quaternion to use
 * @param {THREE.Vector3} scale - scale
 */
HitTesting.Result = function (position, quaternion, scale) {
  this.position = position;
  this.quaternion = quaternion;
  this.scale = scale;
};

/**
 * Apply to a controlled object3d
 *
 * @param {THREE.Object3D} object3d - the result to apply
 */
HitTesting.Result.prototype.apply = function (object3d) {
  object3d.position.copy(this.position);
  object3d.quaternion.copy(this.quaternion);
  object3d.scale.copy(this.scale);

  object3d.updateMatrix();
};

/**
 * Apply to a controlled object3d
 *
 * @param {THREE.Object3D} object3d - the result to apply
 */
HitTesting.Result.prototype.applyPosition = function (object3d) {
  object3d.position.copy(this.position);

  object3d.updateMatrix();

  return this;
};

/**
 * Apply to a controlled object3d
 *
 * @param {THREE.Object3D} object3d - the result to apply
 */
HitTesting.Result.prototype.applyQuaternion = function (object3d) {
  object3d.quaternion.copy(this.quaternion);

  object3d.updateMatrix();

  return this;
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HitTesting);


/***/ }),

/***/ "./three.js/src/new-api/arjs-session.js":
/*!**********************************************!*\
  !*** ./three.js/src/new-api/arjs-session.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_arjs_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../threex/arjs-source */ "./three.js/src/threex/arjs-source.js");
/* harmony import */ var _threex_arjs_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../threex/arjs-context */ "./three.js/src/threex/arjs-context.js");


 // TODO context build-dependent

/**
 *  * define a Session
 *
 * @param {Object} parameters - parameters for this session
 */
const Session = function (parameters) {
  var _this = this;
  // handle default parameters
  this.parameters = {
    renderer: null,
    camera: null,
    scene: null,
    sourceParameters: {},
    contextParameters: {},
  };

  //////////////////////////////////////////////////////////////////////////////
  //		setParameters
  //////////////////////////////////////////////////////////////////////////////
  setParameters(parameters);
  function setParameters(parameters) {
    if (parameters === undefined) return;
    for (var key in parameters) {
      var newValue = parameters[key];

      if (newValue === undefined) {
        console.warn("THREEx.Session: '" + key + "' parameter is undefined.");
        continue;
      }

      var currentValue = _this.parameters[key];

      if (currentValue === undefined) {
        console.warn(
          "THREEx.Session: '" + key + "' is not a property of this material."
        );
        continue;
      }

      _this.parameters[key] = newValue;
    }
  }
  // sanity check
  console.assert(this.parameters.renderer instanceof three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderer);
  console.assert(this.parameters.camera instanceof three__WEBPACK_IMPORTED_MODULE_0__.Camera);
  console.assert(this.parameters.scene instanceof three__WEBPACK_IMPORTED_MODULE_0__.Scene);

  // backward emulation
  Object.defineProperty(this, "renderer", {
    get: function () {
      console.warn("use .parameters.renderer renderer");
      return this.parameters.renderer;
    },
  });
  Object.defineProperty(this, "camera", {
    get: function () {
      console.warn("use .parameters.camera instead");
      return this.parameters.camera;
    },
  });
  Object.defineProperty(this, "scene", {
    get: function () {
      console.warn("use .parameters.scene instead");
      return this.parameters.scene;
    },
  });

  // log the version
  console.log(
    "AR.js",
    _threex_arjs_context__WEBPACK_IMPORTED_MODULE_2__["default"].REVISION,
    "- trackingBackend:",
    parameters.contextParameters.trackingBackend
  );

  //////////////////////////////////////////////////////////////////////////////
  //		init arSource
  //////////////////////////////////////////////////////////////////////////////
  var arSource = (_this.arSource = new _threex_arjs_source__WEBPACK_IMPORTED_MODULE_1__["default"](parameters.sourceParameters));

  arSource.init(function onReady() {
    arSource.onResize(
      arContext,
      _this.parameters.renderer,
      _this.parameters.camera
    );
  });

  // handle resize
  window.addEventListener("resize", function () {
    arSource.onResize(
      arContext,
      _this.parameters.renderer,
      _this.parameters.camera
    );
  });

  //////////////////////////////////////////////////////////////////////////////
  //		init arContext
  //////////////////////////////////////////////////////////////////////////////

  // create atToolkitContext
  var arContext = (_this.arContext = new _threex_arjs_context__WEBPACK_IMPORTED_MODULE_2__["default"](parameters.contextParameters));

  // initialize it
  window.addEventListener("arjs-video-loaded", function () {
    _this.arContext.init(() => {
      _this.arContext.arController.orientation = getSourceOrientation();
      _this.arContext.arController.options.orientation = getSourceOrientation();
    });
  });

  function getSourceOrientation() {
    if (!_this) {
      return null;
    }

    console.log(
      "actual source dimensions",
      arSource.domElement.clientWidth,
      arSource.domElement.clientHeight
    );

    if (arSource.domElement.clientWidth > arSource.domElement.clientHeight) {
      console.log("source orientation", "landscape");
      return "landscape";
    } else {
      console.log("source orientation", "portrait");
      return "portrait";
    }
  }

  arContext.addEventListener("initialized", function (event) {
    arSource.onResize(
      arContext,
      _this.parameters.renderer,
      _this.parameters.camera
    );
  });

  //////////////////////////////////////////////////////////////////////////////
  //		update function
  //////////////////////////////////////////////////////////////////////////////
  // update artoolkit on every frame
  this.update = function () {
    if (arSource.ready === false) return;

    arContext.update(arSource.domElement);
  };
};

Session.prototype.onResize = function () {
  this.arSource.onResize(
    this.arContext,
    this.parameters.renderer,
    this.parameters.camera
  );
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Session);


/***/ }),

/***/ "./three.js/src/new-api/arjs-utils.js":
/*!********************************************!*\
  !*** ./three.js/src/new-api/arjs-utils.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const Utils = {};

/**
 * Create a default rendering camera for this trackingBackend. They may be modified later. to fit physical camera parameters
 *
 * @param {string} trackingBackend - the tracking to user
 * @return {THREE.Camera} the created camera
 */
Utils.createDefaultCamera = function (trackingMethod) {
  var trackingBackend =
    this.parseTrackingMethod(trackingMethod).trackingBackend;
  // Create a camera
  if (trackingBackend === "artoolkit") {
    var camera = new three__WEBPACK_IMPORTED_MODULE_0__.Camera();
  } else console.assert(false, "unknown trackingBackend: " + trackingBackend);

  return camera;
};

/**
 * parse tracking method
 *
 * @param {String} trackingMethod - the tracking method to parse
 * @return {Object} - various field of the tracking method
 */
Utils.parseTrackingMethod = function (trackingMethod) {
  if (trackingMethod === "best") {
    trackingMethod = "area-artoolkit";
  }

  if (trackingMethod.startsWith("area-")) {
    return {
      trackingBackend: trackingMethod.replace("area-", ""),
      markersAreaEnabled: true,
    };
  } else {
    return {
      trackingBackend: trackingMethod,
      markersAreaEnabled: false,
    };
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Utils);


/***/ }),

/***/ "./three.js/src/threex/arjs-context.js":
/*!*********************************************!*\
  !*** ./three.js/src/threex/arjs-context.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _arjs_markercontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arjs-markercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jsartoolkit */ "./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jsartoolkit__WEBPACK_IMPORTED_MODULE_2__);


 // TODO comment explanation
const { ARController } = (jsartoolkit__WEBPACK_IMPORTED_MODULE_2___default());

const Context = function (parameters) {
  var _this = this;

  _this._updatedAt = null;

  // handle default parameters
  this.parameters = {
    // AR backend - ['artoolkit']
    trackingBackend: "artoolkit",
    // debug - true if one should display artoolkit debug canvas, false otherwise
    debug: false,
    // the mode of detection - ['color', 'color_and_matrix', 'mono', 'mono_and_matrix']
    detectionMode: "mono",
    // type of matrix code - valid iif detectionMode end with 'matrix' - [3x3, 3x3_HAMMING63, 3x3_PARITY65, 4x4, 4x4_BCH_13_9_3, 4x4_BCH_13_5_5]
    matrixCodeType: "3x3",

    // url of the camera parameters
    cameraParametersUrl: Context.baseURL + "../data/data/camera_para.dat",

    // tune the maximum rate of pose detection in the source image
    maxDetectionRate: 60,
    // resolution of at which we detect pose in the source image
    canvasWidth: 640,
    canvasHeight: 480,

    // the patternRatio inside the artoolkit marker - artoolkit only
    patternRatio: 0.5,

    // Labeling mode for markers - ['black_region', 'white_region']
    // black_region: Black bordered markers on a white background, white_region: White bordered markers on a black background
    labelingMode: "black_region",

    // enable image smoothing or not for canvas copy - default to true
    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled
    imageSmoothingEnabled: false,
  };
  // parameters sanity check
  console.assert(
    ["artoolkit"].indexOf(this.parameters.trackingBackend) !== -1,
    "invalid parameter trackingBackend",
    this.parameters.trackingBackend
  );
  console.assert(
    ["color", "color_and_matrix", "mono", "mono_and_matrix"].indexOf(
      this.parameters.detectionMode
    ) !== -1,
    "invalid parameter detectionMode",
    this.parameters.detectionMode
  );
  console.assert(
    ["black_region", "white_region"].indexOf(this.parameters.labelingMode) !==
      -1,
    "invalid parameter labelingMode",
    this.parameters.labelingMode
  );

  this.arController = null;

  _this.initialized = false;

  this._arMarkersControls = [];

  //////////////////////////////////////////////////////////////////////////////
  //		setParameters
  //////////////////////////////////////////////////////////////////////////////
  setParameters(parameters);
  function setParameters(parameters) {
    if (parameters === undefined) return;
    for (var key in parameters) {
      var newValue = parameters[key];

      if (newValue === undefined) {
        console.warn("Context: '" + key + "' parameter is undefined.");
        continue;
      }

      var currentValue = _this.parameters[key];

      if (currentValue === undefined) {
        console.warn(
          "Context: '" + key + "' is not a property of this material."
        );
        continue;
      }

      _this.parameters[key] = newValue;
    }
  }
};

Context.prototype.dispatchEvent = three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.dispatchEvent;
Context.prototype.addEventListener =
  three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.addEventListener;
Context.prototype.hasEventListener =
  three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.hasEventListener;
Context.prototype.removeEventListener =
  three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.removeEventListener;

// default to github page
Context.baseURL = "https://ar-js-org.github.io/AR.js/three.js/";
Context.REVISION = "3.4.0";
/**
 * Create a default camera for this trackingBackend
 * @param {string} trackingBackend - the tracking to user
 * @return {THREE.Camera} the created camera
 */
Context.createDefaultCamera = function (trackingBackend) {
  console.assert(false, "use ARjs.Utils.createDefaultCamera instead");
  // Create a camera
  if (trackingBackend === "artoolkit") {
    var camera = new three__WEBPACK_IMPORTED_MODULE_0__.Camera();
  } else console.assert(false);
  return camera;
};

//////////////////////////////////////////////////////////////////////////////
//		init functions
//////////////////////////////////////////////////////////////////////////////
Context.prototype.init = function (onCompleted) {
  var _this = this;
  if (this.parameters.trackingBackend === "artoolkit") {
    this._initArtoolkit(done);
  } else console.assert(false);
  return;

  function done() {
    // dispatch event
    _this.dispatchEvent({
      type: "initialized",
    });

    _this.initialized = true;

    onCompleted && onCompleted();
  }
};
////////////////////////////////////////////////////////////////////////////////
//          update function
////////////////////////////////////////////////////////////////////////////////
Context.prototype.update = function (srcElement) {
  // be sure arController is fully initialized
  if (
    this.parameters.trackingBackend === "artoolkit" &&
    this.arController === null
  )
    return false;

  // honor this.parameters.maxDetectionRate
  var present = performance.now();
  if (
    this._updatedAt !== null &&
    present - this._updatedAt < 1000 / this.parameters.maxDetectionRate
  ) {
    return false;
  }
  this._updatedAt = present;

  var prevVisibleMarkers = [];

  // mark all markers to invisible before processing this frame
  this._arMarkersControls.forEach(function (markerControls) {
    if (markerControls.object3d.visible) {
      prevVisibleMarkers.push(markerControls);
    }
    if (!markerControls.context.arController.showObject) {
      markerControls.object3d.visible = false;
    }
  });

  // process this frame
  if (this.parameters.trackingBackend === "artoolkit") {
    this._updateArtoolkit(srcElement);
  } else {
    console.assert(false);
  }

  // dispatch event
  this.dispatchEvent({
    type: "sourceProcessed",
  });

  // After frame is processed, check visibility of each marker to determine if it was found or lost
  this._arMarkersControls.forEach(function (markerControls) {
    var wasVisible = prevVisibleMarkers.includes(markerControls);
    var isVisible = markerControls.object3d.visible;

    if (isVisible === true && wasVisible === false) {
      window.dispatchEvent(
        new CustomEvent("markerFound", {
          detail: markerControls,
        })
      );
    } else if (isVisible === false && wasVisible === true) {
      window.dispatchEvent(
        new CustomEvent("markerLost", {
          detail: markerControls,
        })
      );
    }
  });

  // return true as we processed the frame
  return true;
};

////////////////////////////////////////////////////////////////////////////////
//          Add/Remove markerControls
////////////////////////////////////////////////////////////////////////////////
Context.prototype.addMarker = function (arMarkerControls) {
  console.assert(arMarkerControls instanceof _arjs_markercontrols__WEBPACK_IMPORTED_MODULE_1__["default"]);
  this._arMarkersControls.push(arMarkerControls);
};

Context.prototype.removeMarker = function (arMarkerControls) {
  console.assert(arMarkerControls instanceof _arjs_markercontrols__WEBPACK_IMPORTED_MODULE_1__["default"]);
  var index = this._arMarkersControls.indexOf(arMarkerControls);
  if (index < 0) {
    return;
  }
  this._arMarkersControls.splice(index, 1);
};

//////////////////////////////////////////////////////////////////////////////
//		artoolkit specific
//////////////////////////////////////////////////////////////////////////////
Context.prototype._initArtoolkit = function (onCompleted) {
  var _this = this;

  // set this._artoolkitProjectionAxisTransformMatrix to change artoolkit projection matrix axis to match usual webgl one
  this._artoolkitProjectionAxisTransformMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4();
  this._artoolkitProjectionAxisTransformMatrix.multiply(
    new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationY(Math.PI)
  );
  this._artoolkitProjectionAxisTransformMatrix.multiply(
    new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationZ(Math.PI)
  );

  // init controller
  ARController.initWithDimensions(
    _this.parameters.canvasWidth,
    _this.parameters.canvasHeight,
    _this.parameters.cameraParametersUrl
  ).then((arController) => {
    _this.arController = arController;

    // honor this.parameters.imageSmoothingEnabled
    arController.ctx.mozImageSmoothingEnabled =
      _this.parameters.imageSmoothingEnabled;
    arController.ctx.webkitImageSmoothingEnabled =
      _this.parameters.imageSmoothingEnabled;
    arController.ctx.msImageSmoothingEnabled =
      _this.parameters.imageSmoothingEnabled;
    arController.ctx.imageSmoothingEnabled =
      _this.parameters.imageSmoothingEnabled;

    // honor this.parameters.debug
    if (_this.parameters.debug === true) {
      arController.debugSetup();
      arController.canvas.style.position = "absolute";
      arController.canvas.style.top = "0px";
      arController.canvas.style.opacity = "0.6";
      arController.canvas.style.pointerEvents = "none";
      arController.canvas.style.zIndex = "-1";
    }

    // setPatternDetectionMode
    var detectionModes = {
      color: arController.artoolkit.AR_TEMPLATE_MATCHING_COLOR,
      color_and_matrix:
        arController.artoolkit.AR_TEMPLATE_MATCHING_COLOR_AND_MATRIX,
      mono: arController.artoolkit.AR_TEMPLATE_MATCHING_MONO,
      mono_and_matrix:
        arController.artoolkit.AR_TEMPLATE_MATCHING_MONO_AND_MATRIX,
    };
    var detectionMode = detectionModes[_this.parameters.detectionMode];
    console.assert(detectionMode !== undefined);
    arController.setPatternDetectionMode(detectionMode);

    // setMatrixCodeType
    var matrixCodeTypes = {
      "3x3": arController.artoolkit.AR_MATRIX_CODE_3x3,
      "3x3_HAMMING63": arController.artoolkit.AR_MATRIX_CODE_3x3_HAMMING63,
      "3x3_PARITY65": arController.artoolkit.AR_MATRIX_CODE_3x3_PARITY65,
      "4x4": arController.artoolkit.AR_MATRIX_CODE_4x4,
      "4x4_BCH_13_9_3": arController.artoolkit.AR_MATRIX_CODE_4x4_BCH_13_9_3,
      "4x4_BCH_13_5_5": arController.artoolkit.AR_MATRIX_CODE_4x4_BCH_13_5_5,
      "5x5": arController.artoolkit.AR_MATRIX_CODE_5x5,
      "6x6": arController.artoolkit.AR_MATRIX_CODE_6x6,
    };
    var matrixCodeType = matrixCodeTypes[_this.parameters.matrixCodeType];
    console.assert(matrixCodeType !== undefined);
    arController.setMatrixCodeType(matrixCodeType);

    // set the patternRatio for artoolkit
    arController.setPattRatio(_this.parameters.patternRatio);

    // set the labelingMode for artoolkit
    var labelingModeTypes = {
      black_region: arController.artoolkit.AR_LABELING_BLACK_REGION,
      white_region: arController.artoolkit.AR_LABELING_WHITE_REGION,
    };
    var labelingModeType = labelingModeTypes[_this.parameters.labelingMode];
    console.assert(labelingModeType !== undefined);
    arController.setLabelingMode(labelingModeType);

    // set thresholding in artoolkit
    // this seems to be the default
    // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_MANUAL)
    // adatative consume a LOT of cpu...
    // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_AUTO_ADAPTIVE)
    // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_AUTO_OTSU)

    // notify
    onCompleted();
  });
  return this;
};

/**
 * return the projection matrix
 */
Context.prototype.getProjectionMatrix = function () {
  // FIXME rename this function to say it is artoolkit specific - getArtoolkitProjectMatrix
  // keep a backward compatibility with a console.warn

  console.assert(this.parameters.trackingBackend === "artoolkit");
  console.assert(
    this.arController,
    "arController MUST be initialized to call this function"
  );

  // get projectionMatrixArr from artoolkit
  var projectionMatrixArr = this.arController.getCameraMatrix();
  var projectionMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(projectionMatrixArr);

  // projectionMatrix.multiply(this._artoolkitProjectionAxisTransformMatrix)
  // return the result
  return projectionMatrix;
};

Context.prototype._updateArtoolkit = function (srcElement) {
  this.arController.process(srcElement);
};

//////////////////////////////////////////////////////////////////////////////
//		dispose function
//////////////////////////////////////////////////////////////////////////////
Context.prototype.dispose = function () {
  this.initialized = false;

  // markers
  this._arMarkersControls.forEach(function (markerControls) {
    console.assert(markerControls instanceof _arjs_markercontrols__WEBPACK_IMPORTED_MODULE_1__["default"]);
    markerControls.dispose();
  });
  this._arMarkersControls = [];

  // cameraParam
  if (
    this.arController &&
    this.arController.cameraParam &&
    this.arController.cameraParam.dispose
  ) {
    this.arController.cameraParam.dispose();
  }

  // ARController
  if (this.arController && this.arController.dispose) {
    this.arController.dispose();
  }
  this.arController = null;

  // class properties
  this._artoolkitProjectionAxisTransformMatrix = null;

  // artoolkit
  // NOTE: since the instance of ARToolkit is created globally
  // we should probably do not call .teardown() ... ?
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Context);


/***/ }),

/***/ "./three.js/src/threex/arjs-markercontrols.js":
/*!****************************************************!*\
  !*** ./three.js/src/threex/arjs-markercontrols.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");
/* harmony import */ var _arjs_markercontrols_nft_worker_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./arjs-markercontrols-nft.worker.js */ "./three.js/src/threex/arjs-markercontrols-nft.worker.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jsartoolkit */ "./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jsartoolkit__WEBPACK_IMPORTED_MODULE_3__);



 // TODO comment explanation
const { ARToolkit } = (jsartoolkit__WEBPACK_IMPORTED_MODULE_3___default());

const MarkerControls = function (context, object3d, parameters) {
  var _this = this;

  _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__["default"].call(this, object3d);

  this.context = context;
  // handle default parameters
  this.parameters = {
    // size of the marker in meter
    size: 1,
    // type of marker - ['pattern', 'barcode', 'nft', 'unknown' ]
    type: "unknown",
    // url of the pattern - IIF type='pattern'
    patternUrl: null,
    // value of the barcode - IIF type='barcode'
    barcodeValue: null,
    // url of the descriptors of image - IIF type='nft'
    descriptorsUrl: null,
    // change matrix mode - [modelViewMatrix, cameraTransformMatrix]
    changeMatrixMode: "modelViewMatrix",
    // minimal confidence in the marke recognition - between [0, 1] - default to 1
    minConfidence: 0.6,
    // turn on/off camera smoothing
    smooth: false,
    // number of matrices to smooth tracking over, more = smoother but slower follow
    smoothCount: 5,
    // distance tolerance for smoothing, if smoothThreshold # of matrices are under tolerance, tracking will stay still
    smoothTolerance: 0.01,
    // threshold for smoothing, will keep still unless enough matrices are over tolerance
    smoothThreshold: 2,
  };

  // sanity check
  var possibleValues = ["pattern", "barcode", "nft", "unknown"];
  console.assert(
    possibleValues.indexOf(this.parameters.type) !== -1,
    "illegal value",
    this.parameters.type
  );
  var possibleValues = ["modelViewMatrix", "cameraTransformMatrix"];
  console.assert(
    possibleValues.indexOf(this.parameters.changeMatrixMode) !== -1,
    "illegal value",
    this.parameters.changeMatrixMode
  );

  // create the marker Root
  this.object3d = object3d;
  this.object3d.matrixAutoUpdate = false;
  this.object3d.visible = false;

  //////////////////////////////////////////////////////////////////////////////
  //		setParameters
  //////////////////////////////////////////////////////////////////////////////
  setParameters(parameters);
  function setParameters(parameters) {
    if (parameters === undefined) return;
    for (var key in parameters) {
      var newValue = parameters[key];

      if (newValue === undefined) {
        console.warn("ArMarkerControls: '" + key + "' parameter is undefined.");
        continue;
      }

      var currentValue = _this.parameters[key];

      if (currentValue === undefined) {
        console.warn(
          "ArMarkerControls: '" + key + "' is not a property of this material."
        );
        continue;
      }

      _this.parameters[key] = newValue;
    }
  }

  if (this.parameters.smooth) {
    this.smoothMatrices = []; // last DEBOUNCE_COUNT modelViewMatrix
  }

  //////////////////////////////////////////////////////////////////////////////
  //		Code Separator
  //////////////////////////////////////////////////////////////////////////////
  // add this marker to artoolkitsystem
  // TODO rename that .addMarkerControls
  context.addMarker(this);

  if (_this.context.parameters.trackingBackend === "artoolkit") {
    this._initArtoolkit();
  } else console.assert(false);
};

MarkerControls.prototype = Object.create(_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__["default"].prototype);
MarkerControls.prototype.constructor = MarkerControls;

//////////////////////////////////////////////////////////////////////////////
//		dispose instance
//////////////////////////////////////////////////////////////////////////////
MarkerControls.prototype.dispose = function () {
  if (this.context && this.context.arController) {
    this.context.arController.removeEventListener(
      "getMarker",
      this.onGetMarker
    );
  }

  this.context.removeMarker(this);

  this.object3d = null;
  this.smoothMatrices = [];
};

//////////////////////////////////////////////////////////////////////////////
//		update controls with new modelViewMatrix
//////////////////////////////////////////////////////////////////////////////

/**
 * When you actually got a new modelViewMatrix, you need to perfom a whole bunch
 * of things. it is done here.
 */
MarkerControls.prototype.updateWithModelViewMatrix = function (
  modelViewMatrix
) {
  var markerObject3D = this.object3d;

  // mark object as visible
  markerObject3D.visible = true;

  if (this.context.parameters.trackingBackend === "artoolkit") {
    // apply context._axisTransformMatrix - change artoolkit axis to match usual webgl one
    var tmpMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().copy(
      this.context._artoolkitProjectionAxisTransformMatrix
    );
    tmpMatrix.multiply(modelViewMatrix);

    modelViewMatrix.copy(tmpMatrix);
  } else {
    console.assert(false);
  }

  // change axis orientation on marker - artoolkit say Z is normal to the marker - ar.js say Y is normal to the marker
  var markerAxisTransformMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationX(
    Math.PI / 2
  );
  modelViewMatrix.multiply(markerAxisTransformMatrix);

  var renderReqd = false;

  // change markerObject3D.matrix based on parameters.changeMatrixMode
  if (this.parameters.changeMatrixMode === "modelViewMatrix") {
    if (this.parameters.smooth) {
      var sum,
        i,
        j,
        averages, // average values for matrix over last smoothCount
        exceedsAverageTolerance = 0;

      this.smoothMatrices.push(modelViewMatrix.elements.slice()); // add latest

      if (this.smoothMatrices.length < this.parameters.smoothCount + 1) {
        markerObject3D.matrix.copy(modelViewMatrix); // not enough for average
      } else {
        this.smoothMatrices.shift(); // remove oldest entry
        averages = [];

        for (i in modelViewMatrix.elements) {
          // loop over entries in matrix
          sum = 0;
          for (j in this.smoothMatrices) {
            // calculate average for this entry
            sum += this.smoothMatrices[j][i];
          }
          averages[i] = sum / this.parameters.smoothCount;
          // check how many elements vary from the average by at least AVERAGE_MATRIX_TOLERANCE
          if (
            Math.abs(averages[i] - modelViewMatrix.elements[i]) >=
            this.parameters.smoothTolerance
          ) {
            exceedsAverageTolerance++;
          }
        }

        // if moving (i.e. at least AVERAGE_MATRIX_THRESHOLD entries are over AVERAGE_MATRIX_TOLERANCE)
        if (exceedsAverageTolerance >= this.parameters.smoothThreshold) {
          // then update matrix values to average, otherwise, don't render to minimize jitter
          for (i in modelViewMatrix.elements) {
            modelViewMatrix.elements[i] = averages[i];
          }
          markerObject3D.matrix.copy(modelViewMatrix);
          renderReqd = true; // render required in animation loop
        }
      }
    } else {
      markerObject3D.matrix.copy(modelViewMatrix);
    }
  } else if (this.parameters.changeMatrixMode === "cameraTransformMatrix") {
    markerObject3D.matrix.copy(modelViewMatrix).invert();
  } else {
    console.assert(false);
  }

  // decompose - the matrix into .position, .quaternion, .scale

  markerObject3D.matrix.decompose(
    markerObject3D.position,
    markerObject3D.quaternion,
    markerObject3D.scale
  );

  // dispatchEvent
  this.dispatchEvent({ type: "markerFound" });

  return renderReqd;
};

//////////////////////////////////////////////////////////////////////////////
//		utility functions
//////////////////////////////////////////////////////////////////////////////

MarkerControls.prototype.name = function () {
  var name = "";
  name += this.parameters.type;

  if (this.parameters.type === "pattern") {
    var url = this.parameters.patternUrl;
    var basename = url.replace(/^.*\//g, "");
    name += " - " + basename;
  } else if (this.parameters.type === "barcode") {
    name += " - " + this.parameters.barcodeValue;
  } else if (this.parameters.type === "nft") {
    var url = this.parameters.descriptorsUrl;
    var basename = url.replace(/^.*\//g, "");
    name += " - " + basename;
  } else {
    console.assert(false, "no .name() implemented for this marker controls");
  }

  return name;
};

//////////////////////////////////////////////////////////////////////////////
//		init for Artoolkit
//////////////////////////////////////////////////////////////////////////////
MarkerControls.prototype._initArtoolkit = function () {
  var _this = this;

  var artoolkitMarkerId = null;

  var delayedInitTimerId = setInterval(() => {
    // check if arController is init
    var arController = _this.context.arController;
    if (arController === null) return;
    // stop looping if it is init
    clearInterval(delayedInitTimerId);
    delayedInitTimerId = null;
    // launch the _postInitArtoolkit
    postInit();
  }, 1000 / 50);

  return;

  function postInit() {
    // check if arController is init
    var arController = _this.context.arController;
    console.assert(arController !== null);

    // start tracking this pattern
    if (_this.parameters.type === "pattern") {
      arController
        .loadMarker(_this.parameters.patternUrl)
        .then(function (markerId) {
          artoolkitMarkerId = markerId;
          arController.trackPatternMarkerId(
            artoolkitMarkerId,
            _this.parameters.size
          );
        });
    } else if (_this.parameters.type === "barcode") {
      artoolkitMarkerId = _this.parameters.barcodeValue;
      arController.trackBarcodeMarkerId(
        artoolkitMarkerId,
        _this.parameters.size
      );
    } else if (_this.parameters.type === "nft") {
      // use workers as default
      handleNFT(_this.parameters.descriptorsUrl, arController);
    } else if (_this.parameters.type === "unknown") {
      artoolkitMarkerId = null;
    } else {
      console.log(false, "invalid marker type", _this.parameters.type);
    }

    // listen to the event
    arController.addEventListener("getMarker", function (event) {
      if (
        event.data.type === ARToolkit.PATTERN_MARKER &&
        _this.parameters.type === "pattern"
      ) {
        if (artoolkitMarkerId === null) return;
        if (event.data.marker.idPatt === artoolkitMarkerId)
          onMarkerFound(event);
      } else if (
        event.data.type === ARToolkit.BARCODE_MARKER &&
        _this.parameters.type === "barcode"
      ) {
        if (artoolkitMarkerId === null) return;
        if (event.data.marker.idMatrix === artoolkitMarkerId)
          onMarkerFound(event);
      } else if (
        event.data.type === ARToolkit.UNKNOWN_MARKER &&
        _this.parameters.type === "unknown"
      ) {
        onMarkerFound(event);
      }
    });
  }

  function setMatrix(matrix, value) {
    var array = [];
    for (var key in value) {
      array[key] = value[key];
    }
    if (typeof matrix.elements.set === "function") {
      matrix.elements.set(array);
    } else {
      matrix.elements = [].slice.call(array);
    }
  }

  function handleNFT(descriptorsUrl, arController) {
    var worker = new _arjs_markercontrols_nft_worker_js__WEBPACK_IMPORTED_MODULE_2__["default"]();

    window.addEventListener("arjs-video-loaded", function (ev) {
      var video = ev.detail.component;
      var vw = video.clientWidth;
      var vh = video.clientHeight;

      var pscale = 320 / Math.max(vw, (vh / 3) * 4);

      const w = vw * pscale;
      const h = vh * pscale;
      const pw = Math.max(w, (h / 3) * 4);
      const ph = Math.max(h, (w / 4) * 3);
      const ox = (pw - w) / 2;
      const oy = (ph - h) / 2;

      arController.canvas.style.clientWidth = pw + "px";
      arController.canvas.style.clientHeight = ph + "px";
      arController.canvas.width = pw;
      arController.canvas.height = ph;

      var context_process = arController.canvas.getContext("2d");

      function process() {
        context_process.fillStyle = "black";
        context_process.fillRect(0, 0, pw, ph);
        context_process.drawImage(video, 0, 0, vw, vh, ox, oy, w, h);

        var imageData = context_process.getImageData(0, 0, pw, ph);
        worker.postMessage({ type: "process", imagedata: imageData }, [
          imageData.data.buffer,
        ]);
      }

      // initialize the worker
      worker.postMessage({
        type: "init",
        pw: pw,
        ph: ph,
        marker: descriptorsUrl,
        param: arController.cameraParam,
      });

      worker.onmessage = function (ev) {
        if (ev && ev.data && ev.data.type === "endLoading") {
          var loader = document.querySelector(".arjs-loader");
          if (loader) {
            loader.remove();
          }
          var endLoadingEvent = new Event("arjs-nft-loaded");
          window.dispatchEvent(endLoadingEvent);
        }

        if (ev && ev.data && ev.data.type === "loaded") {
          var proj = JSON.parse(ev.data.proj);
          var ratioW = pw / w;
          var ratioH = ph / h;
          proj[0] *= ratioW;
          proj[4] *= ratioW;
          proj[8] *= ratioW;
          proj[12] *= ratioW;
          proj[1] *= ratioH;
          proj[5] *= ratioH;
          proj[9] *= ratioH;
          proj[13] *= ratioH;

          setMatrix(_this.object3d.matrix, proj);
        }

        if (ev && ev.data && ev.data.type === "markerInfos") {
          var nft = JSON.parse(ev.data.marker);
          var nftEvent = new CustomEvent('arjs-nft-init-data', { detail: { dpi: nft.dpi, width: nft.width, height: nft.height } });
          window.dispatchEvent(nftEvent);
        }

        if (ev && ev.data && ev.data.type === "found") {
          var matrix = JSON.parse(ev.data.matrix);

          onMarkerFound({
            data: {
              type: ARToolkit.NFT_MARKER,
              matrix: matrix,
              msg: ev.data.type,
            },
          });

          _this.context.arController.showObject = true;
        } else {
          _this.context.arController.showObject = false;
        }

        process();
      };
    });
  }

  function onMarkerFound(event) {
    if (
      event.data.type === ARToolkit.PATTERN_MARKER &&
      event.data.marker.cfPatt < _this.parameters.minConfidence
    )
      return;
    if (
      event.data.type === ARToolkit.BARCODE_MARKER &&
      event.data.marker.cfMatrix < _this.parameters.minConfidence
    )
      return;

    var modelViewMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(event.data.matrix);
    _this.updateWithModelViewMatrix(modelViewMatrix);
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkerControls);


/***/ }),

/***/ "./three.js/src/threex/arjs-profile.js":
/*!*********************************************!*\
  !*** ./three.js/src/threex/arjs-profile.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _new_api_arjs_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../new-api/arjs-utils */ "./three.js/src/new-api/arjs-utils.js");
/* harmony import */ var _arjs_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arjs-context */ "./three.js/src/threex/arjs-context.js");

 // TODO context build-dependent

/**
 * ArToolkitProfile helps you build parameters for artoolkit
 * - it is fully independent of the rest of the code
 * - all the other classes are still expecting normal parameters
 * - you can use this class to understand how to tune your specific usecase
 * - it is made to help people to build parameters without understanding all the underlying details.
 */
const Profile = function () {
  this.reset();

  this.performance("default");
};

Profile.prototype._guessPerformanceLabel = function () {
  var isMobile =
    navigator.userAgent.match(/Android/i) ||
    navigator.userAgent.match(/webOS/i) ||
    navigator.userAgent.match(/iPhone/i) ||
    navigator.userAgent.match(/iPad/i) ||
    navigator.userAgent.match(/iPod/i) ||
    navigator.userAgent.match(/BlackBerry/i) ||
    navigator.userAgent.match(/Windows Phone/i)
      ? true
      : false;
  if (isMobile === true) {
    return "phone-normal";
  }
  return "desktop-normal";
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

/**
 * reset all parameters
 */
Profile.prototype.reset = function () {
  this.sourceParameters = {
    // to read from the webcam
    sourceType: "webcam",
  };

  this.contextParameters = {
    cameraParametersUrl:
      _arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL + "../data/data/camera_para.dat", // TODO dependent of build?
    detectionMode: "mono",
  };
  this.defaultMarkerParameters = {
    type: "pattern",
    patternUrl: _arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL + "../data/data/patt.hiro", // TODO dependent of build?
    changeMatrixMode: "modelViewMatrix",
  };
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		Performance
//////////////////////////////////////////////////////////////////////////////

Profile.prototype.performance = function (label) {
  if (label === "default") {
    label = this._guessPerformanceLabel();
  }

  if (label === "desktop-fast") {
    this.contextParameters.canvasWidth = 640 * 3;
    this.contextParameters.canvasHeight = 480 * 3;

    this.contextParameters.maxDetectionRate = 30;
  } else if (label === "desktop-normal") {
    this.contextParameters.canvasWidth = 640;
    this.contextParameters.canvasHeight = 480;

    this.contextParameters.maxDetectionRate = 60;
  } else if (label === "phone-normal") {
    this.contextParameters.canvasWidth = 80 * 4;
    this.contextParameters.canvasHeight = 60 * 4;

    this.contextParameters.maxDetectionRate = 30;
  } else if (label === "phone-slow") {
    this.contextParameters.canvasWidth = 80 * 3;
    this.contextParameters.canvasHeight = 60 * 3;

    this.contextParameters.maxDetectionRate = 30;
  } else {
    console.assert(false, "unknonwn label " + label);
  }
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		Marker
//////////////////////////////////////////////////////////////////////////////

Profile.prototype.defaultMarker = function (trackingBackend) {
  trackingBackend = trackingBackend || this.contextParameters.trackingBackend;

  if (trackingBackend === "artoolkit") {
    this.contextParameters.detectionMode = "mono";
    this.defaultMarkerParameters.type = "pattern";
    this.defaultMarkerParameters.patternUrl =
      _arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL + "../data/data/patt.hiro"; // TODO dependent of build?
  } else console.assert(false);

  return this;
};
//////////////////////////////////////////////////////////////////////////////
//		Source
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.sourceWebcam = function () {
  this.sourceParameters.sourceType = "webcam";
  delete this.sourceParameters.sourceUrl;
  return this;
};

Profile.prototype.sourceVideo = function (url) {
  this.sourceParameters.sourceType = "video";
  this.sourceParameters.sourceUrl = url;
  return this;
};

Profile.prototype.sourceImage = function (url) {
  this.sourceParameters.sourceType = "image";
  this.sourceParameters.sourceUrl = url;
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.trackingBackend = function (trackingBackend) {
  console.warn(
    "stop profile.trackingBackend() obsolete function. use .trackingMethod instead"
  );
  this.contextParameters.trackingBackend = trackingBackend;
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.changeMatrixMode = function (changeMatrixMode) {
  this.defaultMarkerParameters.changeMatrixMode = changeMatrixMode;
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.trackingMethod = function (trackingMethod) {
  var data = _new_api_arjs_utils__WEBPACK_IMPORTED_MODULE_0__["default"].parseTrackingMethod(trackingMethod);
  this.defaultMarkerParameters.markersAreaEnabled = data.markersAreaEnabled;
  this.contextParameters.trackingBackend = data.trackingBackend;
  return this;
};

/**
 * check if the profile is valid. Throw an exception is not valid
 */
Profile.prototype.checkIfValid = function () {
  return this;
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Profile);


/***/ }),

/***/ "./three.js/src/threex/arjs-source.js":
/*!********************************************!*\
  !*** ./three.js/src/threex/arjs-source.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const Source = function (parameters) {
  var _this = this;

  this.ready = false;
  this.domElement = null;

  // handle default parameters
  this.parameters = {
    // type of source - ['webcam', 'image', 'video']
    sourceType: "webcam",
    // url of the source - valid if sourceType = image|video
    sourceUrl: null,

    // Device id of the camera to use (optional)
    deviceId: null,

    // resolution of at which we initialize in the source image
    sourceWidth: 640,
    sourceHeight: 480,
    // resolution displayed for the source
    displayWidth: 640,
    displayHeight: 480,
  };
  //////////////////////////////////////////////////////////////////////////////
  //		setParameters
  //////////////////////////////////////////////////////////////////////////////
  setParameters(parameters);
  function setParameters(parameters) {
    if (parameters === undefined) return;
    for (var key in parameters) {
      var newValue = parameters[key];

      if (newValue === undefined) {
        console.warn("ArToolkitSource: '" + key + "' parameter is undefined.");
        continue;
      }

      var currentValue = _this.parameters[key];

      if (currentValue === undefined) {
        console.warn(
          "ArToolkitSource: '" + key + "' is not a property of this material."
        );
        continue;
      }

      _this.parameters[key] = newValue;
    }
  }

  this.onInitialClick = function () {
    if (this.domElement && this.domElement.play) {
      this.domElement.play().then(() => {});
    }
  };
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////
Source.prototype.init = function (onReady, onError) {
  var _this = this;

  if (this.parameters.sourceType === "image") {
    var domElement = this._initSourceImage(onSourceReady, onError);
  } else if (this.parameters.sourceType === "video") {
    var domElement = this._initSourceVideo(onSourceReady, onError);
  } else if (this.parameters.sourceType === "webcam") {
    // var domElement = this._initSourceWebcamOld(onSourceReady)
    var domElement = this._initSourceWebcam(onSourceReady, onError);
  } else {
    console.assert(false);
  }

  // attach
  this.domElement = domElement;
  this.domElement.style.position = "absolute";
  this.domElement.style.top = "0px";
  this.domElement.style.left = "0px";
  this.domElement.style.zIndex = "-2";
  this.domElement.setAttribute("id", "arjs-video");

  return this;
  function onSourceReady() {
    if (!_this.domElement) {
      return;
    }

    document.body.appendChild(_this.domElement);
    window.dispatchEvent(
      new CustomEvent("arjs-video-loaded", {
        detail: {
          component: document.querySelector("#arjs-video"),
        },
      })
    );

    _this.ready = true;

    onReady && onReady();
  }
};

////////////////////////////////////////////////////////////////////////////////
//          init image source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._initSourceImage = function (onReady) {
  // TODO make it static
  var domElement = document.createElement("img");
  domElement.src = this.parameters.sourceUrl;

  domElement.width = this.parameters.sourceWidth;
  domElement.height = this.parameters.sourceHeight;
  domElement.style.width = this.parameters.displayWidth + "px";
  domElement.style.height = this.parameters.displayHeight + "px";

  domElement.onload = onReady;
  return domElement;
};

////////////////////////////////////////////////////////////////////////////////
//          init video source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._initSourceVideo = function (onReady) {
  // TODO make it static
  var domElement = document.createElement("video");
  domElement.src = this.parameters.sourceUrl;

  domElement.style.objectFit = "initial";

  domElement.autoplay = true;
  domElement.webkitPlaysinline = true;
  domElement.controls = false;
  domElement.loop = true;
  domElement.muted = true;

  // start the video on first click if not started automatically
  document.body.addEventListener("click", this.onInitialClick, { once: true });

  domElement.width = this.parameters.sourceWidth;
  domElement.height = this.parameters.sourceHeight;
  domElement.style.width = this.parameters.displayWidth + "px";
  domElement.style.height = this.parameters.displayHeight + "px";

  domElement.onloadeddata = onReady;
  return domElement;
};

////////////////////////////////////////////////////////////////////////////////
//          init webcam source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._initSourceWebcam = function (onReady, onError) {
  var _this = this;

  // init default value
  onError =
    onError ||
    function (error) {
      var event = new CustomEvent("camera-error", { error: error });
      window.dispatchEvent(event);

      setTimeout(() => {
        if (!document.getElementById("error-popup")) {
          var errorPopup = document.createElement("div");
          errorPopup.innerHTML =
            "Webcam Error\nName: " + error.name + "\nMessage: " + error.message;
          errorPopup.setAttribute("id", "error-popup");
          document.body.appendChild(errorPopup);
        }
      }, 1000);
    };

  var domElement = document.createElement("video");
  domElement.setAttribute("autoplay", "");
  domElement.setAttribute("muted", "");
  domElement.setAttribute("playsinline", "");
  domElement.style.width = this.parameters.displayWidth + "px";
  domElement.style.height = this.parameters.displayHeight + "px";

  // check API is available
  if (
    navigator.mediaDevices === undefined ||
    navigator.mediaDevices.enumerateDevices === undefined ||
    navigator.mediaDevices.getUserMedia === undefined
  ) {
    if (navigator.mediaDevices === undefined)
      var fctName = "navigator.mediaDevices";
    else if (navigator.mediaDevices.enumerateDevices === undefined)
      var fctName = "navigator.mediaDevices.enumerateDevices";
    else if (navigator.mediaDevices.getUserMedia === undefined)
      var fctName = "navigator.mediaDevices.getUserMedia";
    else console.assert(false);
    onError({
      name: "",
      message: "WebRTC issue-! " + fctName + " not present in your browser",
    });
    return null;
  }

  // get available devices
  navigator.mediaDevices
    .enumerateDevices()
    .then(function (devices) {
      var userMediaConstraints = {
        audio: false,
        video: {
          facingMode: "environment",
          width: {
            ideal: _this.parameters.sourceWidth,
            // min: 1024,
            // max: 1920
          },
          height: {
            ideal: _this.parameters.sourceHeight,
            // min: 776,
            // max: 1080
          },
        },
      };

      if (null !== _this.parameters.deviceId) {
        userMediaConstraints.video.deviceId = {
          exact: _this.parameters.deviceId,
        };
      }

      // get a device which satisfy the constraints
      navigator.mediaDevices
        .getUserMedia(userMediaConstraints)
        .then(function success(stream) {
          // set the .src of the domElement
          domElement.srcObject = stream;

          var event = new CustomEvent("camera-init", { stream: stream });
          window.dispatchEvent(event);

          // start the video on first click if not started automatically
          document.body.addEventListener("click", _this.onInitialClick, {
            once: true,
          });

          onReady();
        })
        .catch(function (error) {
          onError({
            name: error.name,
            message: error.message,
          });
        });
    })
    .catch(function (error) {
      onError({
        message: error.message,
      });
    });

  return domElement;
};

////////////////////////////////////////////////////////////////////////////////
//          dispose source
////////////////////////////////////////////////////////////////////////////////

Source.prototype.dispose = function () {
  this.ready = false;

  switch (this.parameters.sourceType) {
    case "image":
      this._disposeSourceImage();
      break;

    case "video":
      this._disposeSourceVideo();
      break;

    case "webcam":
      this._disposeSourceWebcam();
      break;
  }

  this.domElement = null;

  document.body.removeEventListener("click", this.onInitialClick, {
    once: true,
  });
};

////////////////////////////////////////////////////////////////////////////////
//          dispose image source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._disposeSourceImage = function () {
  var domElement = document.querySelector("#arjs-video");

  if (!domElement) {
    return;
  }

  domElement.remove();
};

////////////////////////////////////////////////////////////////////////////////
//          dispose video source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._disposeSourceVideo = function () {
  var domElement = document.querySelector("#arjs-video");

  if (!domElement) {
    return;
  }

  // https://html.spec.whatwg.org/multipage/media.html#best-practices-for-authors-using-media-elements
  domElement.pause();
  domElement.removeAttribute("src");
  domElement.load();

  domElement.remove();
};

////////////////////////////////////////////////////////////////////////////////
//          dispose webcam source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._disposeSourceWebcam = function () {
  var domElement = document.querySelector("#arjs-video");

  if (!domElement) {
    return;
  }

  // https://stackoverflow.com/a/12436772
  if (domElement.srcObject && domElement.srcObject.getTracks) {
    domElement.srcObject.getTracks().map((track) => track.stop());
  }

  domElement.remove();
};

//////////////////////////////////////////////////////////////////////////////
//		Handle Mobile Torch
//////////////////////////////////////////////////////////////////////////////
Source.prototype.hasMobileTorch = function () {
  var stream = arToolkitSource.domElement.srcObject;
  if (stream instanceof MediaStream === false) return false;

  if (this._currentTorchStatus === undefined) {
    this._currentTorchStatus = false;
  }

  var videoTrack = stream.getVideoTracks()[0];

  // if videoTrack.getCapabilities() doesnt exist, return false now
  if (videoTrack.getCapabilities === undefined) return false;

  var capabilities = videoTrack.getCapabilities();

  return capabilities.torch ? true : false;
};

/**
 * toggle the flash/torch of the mobile fun if applicable.
 * Great post about it https://www.oberhofer.co/mediastreamtrack-and-its-capabilities/
 */
Source.prototype.toggleMobileTorch = function () {
  // sanity check
  console.assert(this.hasMobileTorch() === true);

  var stream = arToolkitSource.domElement.srcObject;
  if (stream instanceof MediaStream === false) {
    if (!document.getElementById("error-popup")) {
      var errorPopup = document.createElement("div");
      errorPopup.innerHTML =
        "enabling mobile torch is available only on webcam";
      errorPopup.setAttribute("id", "error-popup");
      document.body.appendChild(errorPopup);
    }
    return;
  }

  if (this._currentTorchStatus === undefined) {
    this._currentTorchStatus = false;
  }

  var videoTrack = stream.getVideoTracks()[0];
  var capabilities = videoTrack.getCapabilities();

  if (!capabilities.torch) {
    if (!document.getElementById("error-popup")) {
      var errorPopup = document.createElement("div");
      errorPopup.innerHTML = "no mobile torch is available on your camera";
      errorPopup.setAttribute("id", "error-popup");
      document.body.appendChild(errorPopup);
    }
    return;
  }

  this._currentTorchStatus = this._currentTorchStatus === false ? true : false;
  videoTrack
    .applyConstraints({
      advanced: [
        {
          torch: this._currentTorchStatus,
        },
      ],
    })
    .catch(function (error) {
      console.log(error);
    });
};

Source.prototype.domElementWidth = function () {
  return parseInt(this.domElement.style.width);
};
Source.prototype.domElementHeight = function () {
  return parseInt(this.domElement.style.height);
};

////////////////////////////////////////////////////////////////////////////////
//          handle resize
////////////////////////////////////////////////////////////////////////////////

Source.prototype.onResizeElement = function () {
  var _this = this;
  var screenWidth = window.innerWidth;
  var screenHeight = window.innerHeight;

  // sanity check
  console.assert(arguments.length === 0);

  // compute sourceWidth, sourceHeight
  if (this.domElement.nodeName === "IMG") {
    var sourceWidth = this.domElement.naturalWidth;
    var sourceHeight = this.domElement.naturalHeight;
  } else if (this.domElement.nodeName === "VIDEO") {
    var sourceWidth = this.domElement.videoWidth;
    var sourceHeight = this.domElement.videoHeight;
  } else {
    console.assert(false);
  }

  // compute sourceAspect
  var sourceAspect = sourceWidth / sourceHeight;
  // compute screenAspect
  var screenAspect = screenWidth / screenHeight;

  // if screenAspect < sourceAspect, then change the width, else change the height
  if (screenAspect < sourceAspect) {
    // compute newWidth and set .width/.marginLeft
    var newWidth = sourceAspect * screenHeight;
    this.domElement.style.width = newWidth + "px";
    this.domElement.style.marginLeft = -(newWidth - screenWidth) / 2 + "px";

    // init style.height/.marginTop to normal value
    this.domElement.style.height = screenHeight + "px";
    this.domElement.style.marginTop = "0px";
  } else {
    // compute newHeight and set .height/.marginTop
    var newHeight = 1 / (sourceAspect / screenWidth);
    this.domElement.style.height = newHeight + "px";
    this.domElement.style.marginTop = -(newHeight - screenHeight) / 2 + "px";

    // init style.width/.marginLeft to normal value
    this.domElement.style.width = screenWidth + "px";
    this.domElement.style.marginLeft = "0px";
  }
};
/*
Source.prototype.copyElementSizeTo = function(otherElement){
	otherElement.style.width = this.domElement.style.width
	otherElement.style.height = this.domElement.style.height
	otherElement.style.marginLeft = this.domElement.style.marginLeft
	otherElement.style.marginTop = this.domElement.style.marginTop
}
*/

Source.prototype.copyElementSizeTo = function (otherElement) {
  if (window.innerWidth > window.innerHeight) {
    //landscape
    otherElement.style.width = this.domElement.style.width;
    otherElement.style.height = this.domElement.style.height;
    otherElement.style.marginLeft = this.domElement.style.marginLeft;
    otherElement.style.marginTop = this.domElement.style.marginTop;
  } else {
    //portrait
    otherElement.style.height = this.domElement.style.height;
    otherElement.style.width =
      (parseInt(otherElement.style.height) * 4) / 3 + "px";
    otherElement.style.marginLeft =
      (window.innerWidth - parseInt(otherElement.style.width)) / 2 + "px";
    otherElement.style.marginTop = 0;
  }
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

Source.prototype.copySizeTo = function () {
  console.warn(
    "obsolete function arToolkitSource.copySizeTo. Use arToolkitSource.copyElementSizeTo"
  );
  this.copyElementSizeTo.apply(this, arguments);
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

Source.prototype.onResize = function (arToolkitContext, renderer, camera) {
  if (arguments.length !== 3) {
    console.warn(
      "obsolete function arToolkitSource.onResize. Use arToolkitSource.onResizeElement"
    );
    return this.onResizeElement.apply(this, arguments);
  }

  var trackingBackend = arToolkitContext.parameters.trackingBackend;

  // RESIZE DOMELEMENT
  if (trackingBackend === "artoolkit") {
    this.onResizeElement();

    var isAframe = renderer.domElement.dataset.aframeCanvas ? true : false;
    if (isAframe === false) {
      this.copyElementSizeTo(renderer.domElement);
    } else {
    }

    if (arToolkitContext.arController !== null) {
      this.copyElementSizeTo(arToolkitContext.arController.canvas);
    }
  } else console.assert(false, "unhandled trackingBackend " + trackingBackend);

  // UPDATE CAMERA
  if (trackingBackend === "artoolkit") {
    if (arToolkitContext.arController !== null) {
      camera.projectionMatrix.copy(arToolkitContext.getProjectionMatrix());
    }
  } else console.assert(false, "unhandled trackingBackend " + trackingBackend);
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Source);


/***/ }),

/***/ "./three.js/src/threex/threex-arbasecontrols.js":
/*!******************************************************!*\
  !*** ./three.js/src/threex/threex-arbasecontrols.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const ArBaseControls = function (object3d) {
  this.id = ArBaseControls.id++;

  this.object3d = object3d;
  this.object3d.matrixAutoUpdate = false;
  this.object3d.visible = false;

  // Events to honor
  // this.dispatchEvent({ type: 'becameVisible' })
  // this.dispatchEvent({ type: 'markerVisible' })	// replace markerFound
  // this.dispatchEvent({ type: 'becameUnVisible' })
};

ArBaseControls.id = 0;

ArBaseControls.prototype = Object.create(three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype);

//////////////////////////////////////////////////////////////////////////////
//		Functions
//////////////////////////////////////////////////////////////////////////////
/**
 * error catching function for update()
 */
ArBaseControls.prototype.update = function () {
  console.assert(false, "you need to implement your own update");
};

/**
 * error catching function for name()
 */
ArBaseControls.prototype.name = function () {
  console.assert(false, "you need to implement your own .name()");
  return "Not yet implemented - name()";
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArBaseControls);


/***/ }),

/***/ "./three.js/src/threex/threex-armarkerhelper.js":
/*!******************************************************!*\
  !*** ./three.js/src/threex/threex-armarkerhelper.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const ArMarkerHelper = function (markerControls) {
  this.object3d = new three__WEBPACK_IMPORTED_MODULE_0__.Group();

  var mesh = new three__WEBPACK_IMPORTED_MODULE_0__.AxesHelper();
  this.object3d.add(mesh);

  var text = markerControls.id;
  // debugger
  // var text = markerControls.parameters.patternUrl.slice(-1).toUpperCase();

  var canvas = document.createElement("canvas");
  canvas.width = 64;
  canvas.height = 64;

  var context = canvas.getContext("2d");
  var texture = new three__WEBPACK_IMPORTED_MODULE_0__.CanvasTexture(canvas);

  // put the text in the sprite
  context.font = "48px monospace";
  context.fillStyle = "rgba(192,192,255, 0.5)";
  context.fillRect(0, 0, canvas.width, canvas.height);
  context.fillStyle = "darkblue";
  context.fillText(text, canvas.width / 4, (3 * canvas.height) / 4);
  texture.needsUpdate = true;

  // var geometry = new THREE.CubeGeometry(1, 1, 1)
  var geometry = new three__WEBPACK_IMPORTED_MODULE_0__.PlaneGeometry(1, 1);
  var material = new three__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial({
    map: texture,
    transparent: true,
  });
  var mesh = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(geometry, material);
  mesh.rotation.x = -Math.PI / 2;

  this.object3d.add(mesh);
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArMarkerHelper);


/***/ }),

/***/ "./three.js/src/threex/threex-arsmoothedcontrols.js":
/*!**********************************************************!*\
  !*** ./three.js/src/threex/threex-arsmoothedcontrols.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");


/**
 * - lerp position/quaternino/scale
 * - minDelayDetected
 * - minDelayUndetected
 * @param {[type]} object3d   [description]
 * @param {[type]} parameters [description]
 */
const ArSmoothedControls = function (object3d, parameters) {
  var _this = this;

  _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, object3d);

  // copy parameters
  this.object3d.visible = false;

  this._lastLerpStepAt = null;
  this._visibleStartedAt = null;
  this._unvisibleStartedAt = null;

  // handle default parameters
  parameters = parameters || {};
  this.parameters = {
    // lerp coeficient for the position - between [0,1] - default to 1
    lerpPosition: 0.8,
    // lerp coeficient for the quaternion - between [0,1] - default to 1
    lerpQuaternion: 0.2,
    // lerp coeficient for the scale - between [0,1] - default to 1
    lerpScale: 0.7,
    // delay for lerp fixed steps - in seconds - default to 1/120
    lerpStepDelay: 1 / 60,
    // minimum delay the sub-control must be visible before this controls become visible - default to 0 seconds
    minVisibleDelay: 0.0,
    // minimum delay the sub-control must be unvisible before this controls become unvisible - default to 0 seconds
    minUnvisibleDelay: 0.2,
  };

  //////////////////////////////////////////////////////////////////////////////
  //		setParameters
  //////////////////////////////////////////////////////////////////////////////
  setParameters(parameters);
  function setParameters(parameters) {
    if (parameters === undefined) return;
    for (var key in parameters) {
      var newValue = parameters[key];

      if (newValue === undefined) {
        console.warn(
          "ArSmoothedControls: '" + key + "' parameter is undefined."
        );
        continue;
      }

      var currentValue = _this.parameters[key];

      if (currentValue === undefined) {
        console.warn(
          "ArSmoothedControls: '" +
            key +
            "' is not a property of this material."
        );
        continue;
      }

      _this.parameters[key] = newValue;
    }
  }
};

ArSmoothedControls.prototype = Object.create(_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__["default"].prototype);
ArSmoothedControls.prototype.constructor = ArSmoothedControls;

//////////////////////////////////////////////////////////////////////////////
//		update function
//////////////////////////////////////////////////////////////////////////////

ArSmoothedControls.prototype.update = function (targetObject3d) {
  var object3d = this.object3d;
  var parameters = this.parameters;
  var wasVisible = object3d.visible;
  var present = performance.now() / 1000;

  //////////////////////////////////////////////////////////////////////////////
  //		handle object3d.visible with minVisibleDelay/minUnvisibleDelay
  //////////////////////////////////////////////////////////////////////////////
  if (targetObject3d.visible === false) this._visibleStartedAt = null;
  if (targetObject3d.visible === true) this._unvisibleStartedAt = null;

  if (targetObject3d.visible === true && this._visibleStartedAt === null)
    this._visibleStartedAt = present;
  if (targetObject3d.visible === false && this._unvisibleStartedAt === null)
    this._unvisibleStartedAt = present;

  if (wasVisible === false && targetObject3d.visible === true) {
    var visibleFor = present - this._visibleStartedAt;
    if (visibleFor >= this.parameters.minVisibleDelay) {
      object3d.visible = true;
      snapDirectlyToTarget();
    }
    // console.log('visibleFor', visibleFor)
  }

  if (wasVisible === true && targetObject3d.visible === false) {
    var unvisibleFor = present - this._unvisibleStartedAt;
    if (unvisibleFor >= this.parameters.minUnvisibleDelay) {
      object3d.visible = false;
    }
  }

  //////////////////////////////////////////////////////////////////////////////
  //		apply lerp on positon/quaternion/scale
  //////////////////////////////////////////////////////////////////////////////

  // apply lerp steps - require fix time steps to behave the same no matter the fps
  if (this._lastLerpStepAt === null) {
    applyOneSlerpStep();
    this._lastLerpStepAt = present;
  } else {
    var nStepsToDo = Math.floor(
      (present - this._lastLerpStepAt) / this.parameters.lerpStepDelay
    );
    for (var i = 0; i < nStepsToDo; i++) {
      applyOneSlerpStep();
      this._lastLerpStepAt += this.parameters.lerpStepDelay;
    }
  }

  // disable the lerp by directly copying targetObject3d position/quaternion/scale
  if (false) {}

  // update the matrix
  this.object3d.updateMatrix();

  //////////////////////////////////////////////////////////////////////////////
  //		honor becameVisible/becameUnVisible event
  //////////////////////////////////////////////////////////////////////////////
  // honor becameVisible event
  if (wasVisible === false && object3d.visible === true) {
    this.dispatchEvent({ type: "becameVisible" });
  }
  // honor becameUnVisible event
  if (wasVisible === true && object3d.visible === false) {
    this.dispatchEvent({ type: "becameUnVisible" });
  }
  return;

  function snapDirectlyToTarget() {
    object3d.position.copy(targetObject3d.position);
    object3d.quaternion.copy(targetObject3d.quaternion);
    object3d.scale.copy(targetObject3d.scale);
  }

  function applyOneSlerpStep() {
    object3d.position.lerp(targetObject3d.position, parameters.lerpPosition);
    object3d.quaternion.slerp(
      targetObject3d.quaternion,
      parameters.lerpQuaternion
    );
    object3d.scale.lerp(targetObject3d.scale, parameters.lerpScale);
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArSmoothedControls);


/***/ }),

/***/ "./three.js/src/threex/threex-hittesting-plane.js":
/*!********************************************************!*\
  !*** ./three.js/src/threex/threex-hittesting-plane.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


// TODO this is useless - prefere arjs-HitTesting.js

/**
 * - maybe support .onClickFcts in each object3d
 * - seems an easy light layer for clickable object
 * - up to
 */
const HitTestingPlane = function (sourceElement) {
  this._sourceElement = sourceElement;

  // create _pickingScene
  this._pickingScene = new three__WEBPACK_IMPORTED_MODULE_0__.Scene();

  // create _pickingPlane
  var geometry = new three__WEBPACK_IMPORTED_MODULE_0__.PlaneGeometry(20, 20, 19, 19).rotateX(-Math.PI / 2);
  // var geometry = new THREE.PlaneGeometry(20,20).rotateX(-Math.PI/2)
  var material = new three__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial({
    // opacity: 0.5,
    // transparent: true,
    wireframe: true,
  });
  // material.visible = false
  this._pickingPlane = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(geometry, material);
  this._pickingScene.add(this._pickingPlane);

  // Create pickingCamera
  var fullWidth = parseInt(sourceElement.style.width);
  var fullHeight = parseInt(sourceElement.style.height);
  // TODO hardcoded fov - couch
  this._pickingCamera = new three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera(
    42,
    fullWidth / fullHeight,
    0.1,
    30
  );
};

//////////////////////////////////////////////////////////////////////////////
//		update function
//////////////////////////////////////////////////////////////////////////////

HitTestingPlane.prototype.update = function (
  camera,
  pickingRoot,
  changeMatrixMode
) {
  this.onResize();

  if (changeMatrixMode === "modelViewMatrix") {
    // set pickingPlane position
    var pickingPlane = this._pickingPlane;
    pickingRoot.parent.updateMatrixWorld();
    pickingPlane.matrix.copy(pickingRoot.parent.matrixWorld);
    // set position/quaternion/scale from pickingPlane.matrix
    pickingPlane.matrix.decompose(
      pickingPlane.position,
      pickingPlane.quaternion,
      pickingPlane.scale
    );
  } else if (changeMatrixMode === "cameraTransformMatrix") {
    // set pickingPlane position
    var pickingCamera = this._pickingCamera;
    camera.updateMatrixWorld();
    pickingCamera.matrix.copy(camera.matrixWorld);
    // set position/quaternion/scale from pickingCamera.matrix
    pickingCamera.matrix.decompose(
      pickingCamera.position,
      pickingCamera.quaternion,
      pickingCamera.scale
    );
  } else console.assert(false);

  // var position = this._pickingPlane.position
  // console.log('pickingPlane position', position.x.toFixed(2), position.y.toFixed(2), position.z.toFixed(2))
  // var position = this._pickingCamera.position
  // console.log('his._pickingCamera position', position.x.toFixed(2), position.y.toFixed(2), position.z.toFixed(2))
};

//////////////////////////////////////////////////////////////////////////////
//		resize camera
//////////////////////////////////////////////////////////////////////////////

HitTestingPlane.prototype.onResize = function () {
  var sourceElement = this._sourceElement;
  var pickingCamera = this._pickingCamera;

  // FIXME why using css here ??? not even computed style
  // should get the size of the elment directly independantly
  var fullWidth = parseInt(sourceElement.style.width);
  var fullHeight = parseInt(sourceElement.style.height);
  pickingCamera.aspect = fullWidth / fullHeight;

  pickingCamera.updateProjectionMatrix();
};

//////////////////////////////////////////////////////////////////////////////
//		Perform test
//////////////////////////////////////////////////////////////////////////////
HitTestingPlane.prototype.test = function (mouseX, mouseY) {
  // convert mouseX, mouseY to [-1, +1]
  mouseX = (mouseX - 0.5) * 2;
  mouseY = -(mouseY - 0.5) * 2;

  this._pickingScene.updateMatrixWorld(true);

  // compute intersections between mouseVector3 and pickingPlane
  var raycaster = new three__WEBPACK_IMPORTED_MODULE_0__.Raycaster();
  var mouseVector3 = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(mouseX, mouseY, 1);
  raycaster.setFromCamera(mouseVector3, this._pickingCamera);
  var intersects = raycaster.intersectObjects([this._pickingPlane]);

  if (intersects.length === 0) return null;

  // set new demoRoot position
  var position = this._pickingPlane.worldToLocal(intersects[0].point.clone());
  // TODO here do a look at the camera ?
  var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();
  var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(1, 1, 1); //.multiplyScalar(1)

  return {
    position: position,
    quaternion: quaternion,
    scale: scale,
  };
};

//////////////////////////////////////////////////////////////////////////////
//		render the pickingPlane for debug
//////////////////////////////////////////////////////////////////////////////

HitTestingPlane.prototype.renderDebug = function (renderer) {
  // render sceneOrtho
  renderer.render(this._pickingScene, this._pickingCamera);
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HitTestingPlane);


/***/ }),

/***/ "three":
/*!**************************************************************************************!*\
  !*** external {"commonjs":"three","commonjs2":"three","amd":"three","root":"THREE"} ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_three__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!************************************!*\
  !*** ./three.js/src/index-arjs.js ***!
  \************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Anchor": () => (/* reexport safe */ _new_api_arjs_anchor__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   "AnchorDebugUI": () => (/* reexport safe */ _new_api_arjs_debugui__WEBPACK_IMPORTED_MODULE_2__.AnchorDebugUI),
/* harmony export */   "Context": () => (/* reexport safe */ _threex_arjs_context__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   "HitTesting": () => (/* reexport safe */ _new_api_arjs_hittesting__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   "Profile": () => (/* reexport safe */ _threex_arjs_profile__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   "Session": () => (/* reexport safe */ _new_api_arjs_session__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   "SessionDebugUI": () => (/* reexport safe */ _new_api_arjs_debugui__WEBPACK_IMPORTED_MODULE_2__.SessionDebugUI),
/* harmony export */   "Source": () => (/* reexport safe */ _threex_arjs_source__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   "Utils": () => (/* reexport safe */ _new_api_arjs_utils__WEBPACK_IMPORTED_MODULE_4__["default"])
/* harmony export */ });
/* harmony import */ var _new_api_arjs_anchor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./new-api/arjs-anchor */ "./three.js/src/new-api/arjs-anchor.js");
/* harmony import */ var _new_api_arjs_hittesting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./new-api/arjs-hittesting */ "./three.js/src/new-api/arjs-hittesting.js");
/* harmony import */ var _new_api_arjs_debugui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./new-api/arjs-debugui */ "./three.js/src/new-api/arjs-debugui.js");
/* harmony import */ var _new_api_arjs_session__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./new-api/arjs-session */ "./three.js/src/new-api/arjs-session.js");
/* harmony import */ var _new_api_arjs_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./new-api/arjs-utils */ "./three.js/src/new-api/arjs-utils.js");
/* harmony import */ var _threex_arjs_context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./threex/arjs-context */ "./three.js/src/threex/arjs-context.js");
/* harmony import */ var _threex_arjs_profile__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./threex/arjs-profile */ "./three.js/src/threex/arjs-profile.js");
/* harmony import */ var _threex_arjs_source__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./threex/arjs-source */ "./three.js/src/threex/arjs-source.js");











})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,