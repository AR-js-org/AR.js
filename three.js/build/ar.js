(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("three"));
	else if(typeof define === 'function' && define.amd)
		define(["three"], factory);
	else if(typeof exports === 'object')
		exports["ARjs"] = factory(require("three"));
	else
		root["ARjs"] = factory(root["THREE"]);
})(this, (__WEBPACK_EXTERNAL_MODULE_three__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js ***!
  \*****************************************************************/
/***/ (function(module) {

/*! For license information please see ARToolkit.js.LICENSE.txt */
!function(A,I){ true?module.exports=I():0}("undefined"!=typeof self?self:this,(()=>(()=>{var A={230:A=>{A.exports="object"==typeof self?self.FormData:window.FormData},654:()=>{},231:()=>{},703:()=>{},61:(A,I,g)=>{var B=g(698).default;function C(){"use strict";A.exports=C=function(){return I},A.exports.__esModule=!0,A.exports.default=A.exports;var I={},g=Object.prototype,Q=g.hasOwnProperty,E="function"==typeof Symbol?Symbol:{},i=E.iterator||"@@iterator",o=E.asyncIterator||"@@asyncIterator",D=E.toStringTag||"@@toStringTag";function a(A,I,g){return Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}),A[I]}try{a({},"")}catch(A){a=function(A,I,g){return A[I]=g}}function w(A,I,g,B){var C=I&&I.prototype instanceof t?I:t,Q=Object.create(C.prototype),E=new c(B||[]);return Q._invoke=function(A,I,g){var B="suspendedStart";return function(C,Q){if("executing"===B)throw new Error("Generator is already running");if("completed"===B){if("throw"===C)throw Q;return{value:void 0,done:!0}}for(g.method=C,g.arg=Q;;){var E=g.delegate;if(E){var i=e(E,g);if(i){if(i===G)continue;return i}}if("next"===g.method)g.sent=g._sent=g.arg;else if("throw"===g.method){if("suspendedStart"===B)throw B="completed",g.arg;g.dispatchException(g.arg)}else"return"===g.method&&g.abrupt("return",g.arg);B="executing";var o=s(A,I,g);if("normal"===o.type){if(B=g.done?"completed":"suspendedYield",o.arg===G)continue;return{value:o.arg,done:g.done}}"throw"===o.type&&(B="completed",g.method="throw",g.arg=o.arg)}}}(A,g,E),Q}function s(A,I,g){try{return{type:"normal",arg:A.call(I,g)}}catch(A){return{type:"throw",arg:A}}}I.wrap=w;var G={};function t(){}function h(){}function R(){}var F={};a(F,i,(function(){return this}));var y=Object.getPrototypeOf,r=y&&y(y(J([])));r&&r!==g&&Q.call(r,i)&&(F=r);var n=R.prototype=t.prototype=Object.create(F);function S(A){["next","throw","return"].forEach((function(I){a(A,I,(function(A){return this._invoke(I,A)}))}))}function M(A,I){function g(C,E,i,o){var D=s(A[C],A,E);if("throw"!==D.type){var a=D.arg,w=a.value;return w&&"object"==B(w)&&Q.call(w,"__await")?I.resolve(w.__await).then((function(A){g("next",A,i,o)}),(function(A){g("throw",A,i,o)})):I.resolve(w).then((function(A){a.value=A,i(a)}),(function(A){return g("throw",A,i,o)}))}o(D.arg)}var C;this._invoke=function(A,B){function Q(){return new I((function(I,C){g(A,B,I,C)}))}return C=C?C.then(Q,Q):Q()}}function e(A,I){var g=A.iterator[I.method];if(void 0===g){if(I.delegate=null,"throw"===I.method){if(A.iterator.return&&(I.method="return",I.arg=void 0,e(A,I),"throw"===I.method))return G;I.method="throw",I.arg=new TypeError("The iterator does not provide a 'throw' method")}return G}var B=s(g,A.iterator,I.arg);if("throw"===B.type)return I.method="throw",I.arg=B.arg,I.delegate=null,G;var C=B.arg;return C?C.done?(I[A.resultName]=C.value,I.next=A.nextLoc,"return"!==I.method&&(I.method="next",I.arg=void 0),I.delegate=null,G):C:(I.method="throw",I.arg=new TypeError("iterator result is not an object"),I.delegate=null,G)}function N(A){var I={tryLoc:A[0]};1 in A&&(I.catchLoc=A[1]),2 in A&&(I.finallyLoc=A[2],I.afterLoc=A[3]),this.tryEntries.push(I)}function k(A){var I=A.completion||{};I.type="normal",delete I.arg,A.completion=I}function c(A){this.tryEntries=[{tryLoc:"root"}],A.forEach(N,this),this.reset(!0)}function J(A){if(A){var I=A[i];if(I)return I.call(A);if("function"==typeof A.next)return A;if(!isNaN(A.length)){var g=-1,B=function I(){for(;++g<A.length;)if(Q.call(A,g))return I.value=A[g],I.done=!1,I;return I.value=void 0,I.done=!0,I};return B.next=B}}return{next:U}}function U(){return{value:void 0,done:!0}}return h.prototype=R,a(n,"constructor",R),a(R,"constructor",h),h.displayName=a(R,D,"GeneratorFunction"),I.isGeneratorFunction=function(A){var I="function"==typeof A&&A.constructor;return!!I&&(I===h||"GeneratorFunction"===(I.displayName||I.name))},I.mark=function(A){return Object.setPrototypeOf?Object.setPrototypeOf(A,R):(A.__proto__=R,a(A,D,"GeneratorFunction")),A.prototype=Object.create(n),A},I.awrap=function(A){return{__await:A}},S(M.prototype),a(M.prototype,o,(function(){return this})),I.AsyncIterator=M,I.async=function(A,g,B,C,Q){void 0===Q&&(Q=Promise);var E=new M(w(A,g,B,C),Q);return I.isGeneratorFunction(g)?E:E.next().then((function(A){return A.done?A.value:E.next()}))},S(n),a(n,D,"Generator"),a(n,i,(function(){return this})),a(n,"toString",(function(){return"[object Generator]"})),I.keys=function(A){var I=[];for(var g in A)I.push(g);return I.reverse(),function g(){for(;I.length;){var B=I.pop();if(B in A)return g.value=B,g.done=!1,g}return g.done=!0,g}},I.values=J,c.prototype={constructor:c,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(k),!A)for(var I in this)"t"===I.charAt(0)&&Q.call(this,I)&&!isNaN(+I.slice(1))&&(this[I]=void 0)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if("throw"===A.type)throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var I=this;function g(g,B){return E.type="throw",E.arg=A,I.next=g,B&&(I.method="next",I.arg=void 0),!!B}for(var B=this.tryEntries.length-1;B>=0;--B){var C=this.tryEntries[B],E=C.completion;if("root"===C.tryLoc)return g("end");if(C.tryLoc<=this.prev){var i=Q.call(C,"catchLoc"),o=Q.call(C,"finallyLoc");if(i&&o){if(this.prev<C.catchLoc)return g(C.catchLoc,!0);if(this.prev<C.finallyLoc)return g(C.finallyLoc)}else if(i){if(this.prev<C.catchLoc)return g(C.catchLoc,!0)}else{if(!o)throw new Error("try statement without catch or finally");if(this.prev<C.finallyLoc)return g(C.finallyLoc)}}}},abrupt:function(A,I){for(var g=this.tryEntries.length-1;g>=0;--g){var B=this.tryEntries[g];if(B.tryLoc<=this.prev&&Q.call(B,"finallyLoc")&&this.prev<B.finallyLoc){var C=B;break}}C&&("break"===A||"continue"===A)&&C.tryLoc<=I&&I<=C.finallyLoc&&(C=null);var E=C?C.completion:{};return E.type=A,E.arg=I,C?(this.method="next",this.next=C.finallyLoc,G):this.complete(E)},complete:function(A,I){if("throw"===A.type)throw A.arg;return"break"===A.type||"continue"===A.type?this.next=A.arg:"return"===A.type?(this.rval=this.arg=A.arg,this.method="return",this.next="end"):"normal"===A.type&&I&&(this.next=I),G},finish:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.finallyLoc===A)return this.complete(g.completion,g.afterLoc),k(g),G}},catch:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.tryLoc===A){var B=g.completion;if("throw"===B.type){var C=B.arg;k(g)}return C}}throw new Error("illegal catch attempt")},delegateYield:function(A,I,g){return this.delegate={iterator:J(A),resultName:I,nextLoc:g},"next"===this.method&&(this.arg=void 0),G}},I}A.exports=C,A.exports.__esModule=!0,A.exports.default=A.exports},698:A=>{function I(g){return A.exports=I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},A.exports.__esModule=!0,A.exports.default=A.exports,I(g)}A.exports=I,A.exports.__esModule=!0,A.exports.default=A.exports},687:(A,I,g)=>{var B=g(61)();A.exports=B;try{regeneratorRuntime=B}catch(A){"object"==typeof globalThis?globalThis.regeneratorRuntime=B:Function("r","regeneratorRuntime = r")(B)}}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B](Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var B={};return(()=>{"use strict";function A(A,I,g,B,C,Q,E){try{var i=A[Q](E),o=i.value}catch(A){return void g(A)}i.done?I(o):Promise.resolve(o).then(B,C)}function I(I){return function(){var g=this,B=arguments;return new Promise((function(C,Q){var E=I.apply(g,B);function i(I){A(E,C,Q,i,o,"next",I)}function o(I){A(E,C,Q,i,o,"throw",I)}i(void 0)}))}}function C(A,I){if(!(A instanceof I))throw new TypeError("Cannot call a class as a function")}function Q(A,I){for(var g=0;g<I.length;g++){var B=I[g];B.enumerable=B.enumerable||!1,B.configurable=!0,"value"in B&&(B.writable=!0),Object.defineProperty(A,B.key,B)}}function E(A,I,g){return I&&Q(A.prototype,I),g&&Q(A,g),Object.defineProperty(A,"prototype",{writable:!1}),A}g.d(B,{default:()=>wI});var i=g(687),o=g.n(i);function D(A){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},D(A)}var a,w=(a=(a="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(A){var I,B;(A=void 0!==(A=A||{})?A:{}).ready=new Promise((function(A,g){I=A,B=g}));var C,Q,E,i,o,w,s=Object.assign({},A),G=[],t="./this.program",h=function(A,I){throw I},R="object"==("undefined"==typeof window?"undefined":D(window)),F="function"==typeof importScripts,y="object"==("undefined"==typeof process?"undefined":D(process))&&"object"==D(process.versions)&&"string"==typeof process.versions.node,r="";y?(r=F?g(703).dirname(r)+"/":"//",w=function(){o||(i=g(231),o=g(703))},C=function(A,I){var g=DI(A);return g?I?g:g.toString():(w(),A=o.normalize(A),i.readFileSync(A,I?void 0:"utf8"))},E=function(A){var I=C(A,!0);return I.buffer||(I=new Uint8Array(I)),I},Q=function(A,I,g){var B=DI(A);B&&I(B),w(),A=o.normalize(A),i.readFile(A,(function(A,B){A?g(A):I(B.buffer)}))},process.argv.length>1&&(t=process.argv[1].replace(/\\/g,"/")),G=process.argv.slice(2),process.on("uncaughtException",(function(A){if(!(A instanceof oA))throw A})),process.on("unhandledRejection",(function(A){throw A})),h=function(A,I){if(T())throw process.exitCode=A,I;var g;(g=I)instanceof oA||M("exiting due to exception: "+g),process.exit(A)},A.inspect=function(){return"[Emscripten Module object]"}):(R||F)&&(F?r=self.location.href:"undefined"!=typeof document&&document.currentScript&&(r=document.currentScript.src),a&&(r=a),r=0!==r.indexOf("blob:")?r.substr(0,r.replace(/[?#].*/,"").lastIndexOf("/")+1):"",C=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=DI(A);if(g)return function(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(iI&&c(!1,"Character code "+B+" ("+String.fromCharCode(B)+")  at offset "+g+" not in 0x00-0xFF."),B&=255),I.push(String.fromCharCode(B))}return I.join("")}(g);throw I}},F&&(E=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}catch(I){var g=DI(A);if(g)return g;throw I}}),Q=function(A,I,g){var B=new XMLHttpRequest;B.open("GET",A,!0),B.responseType="arraybuffer",B.onload=function(){if(200==B.status||0==B.status&&B.response)I(B.response);else{var C=DI(A);C?I(C.buffer):g()}},B.onerror=g,B.send(null)});var n,S=A.print||console.log.bind(console),M=A.printErr||console.warn.bind(console);Object.assign(A,s),s=null,A.arguments&&(G=A.arguments),A.thisProgram&&(t=A.thisProgram),A.quit&&(h=A.quit),A.wasmBinary&&(n=A.wasmBinary);var e,N=A.noExitRuntime||!0;"object"!=("undefined"==typeof WebAssembly?"undefined":D(WebAssembly))&&_("no native wasm support detected");var k=!1;function c(A,I){A||_(I)}var J,U,K,L,Y,d,q,H,l,f="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function u(A,I,g){for(var B=I+g,C=I;A[C]&&!(C>=B);)++C;if(C-I>16&&A.buffer&&f)return f.decode(A.subarray(I,C));for(var Q="";I<C;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)Q+=String.fromCharCode(E);else{var D=E-65536;Q+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else Q+=String.fromCharCode((31&E)<<6|i)}else Q+=String.fromCharCode(E)}return Q}function W(A,I){return A?u(K,A,I):""}function m(A,I,g,B){if(!(B>0))return 0;for(var C=g,Q=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=Q)break;I[g++]=i}else if(i<=2047){if(g+1>=Q)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=Q)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=Q)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-C}function b(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}function p(I){J=I,A.HEAP8=U=new Int8Array(I),A.HEAP16=L=new Int16Array(I),A.HEAP32=d=new Int32Array(I),A.HEAPU8=K=new Uint8Array(I),A.HEAPU16=Y=new Uint16Array(I),A.HEAPU32=q=new Uint32Array(I),A.HEAPF32=H=new Float32Array(I),A.HEAPF64=l=new Float64Array(I)}A.INITIAL_MEMORY;var Z,x=[],V=[],X=[];function T(){return N}var O=0,v=null,j=null;function P(I){O++,A.monitorRunDependencies&&A.monitorRunDependencies(O)}function z(I){if(O--,A.monitorRunDependencies&&A.monitorRunDependencies(O),0==O&&(null!==v&&(clearInterval(v),v=null),j)){var g=j;j=null,g()}}function _(I){A.onAbort&&A.onAbort(I),M(I="Aborted("+I+")"),k=!0,I+=". Build with -sASSERTIONS for more info.";var g=new WebAssembly.RuntimeError(I);throw B(g),g}var $,AA,IA,gA,BA="data:application/octet-stream;base64,";function CA(A){return A.startsWith(BA)}function QA(A){return A.startsWith("file://")}function EA(A){try{if(A==$&&n)return new Uint8Array(n);var I=DI(A);if(I)return I;if(E)return E(A);throw"both async and sync fetching of the wasm failed"}catch(A){_(A)}}CA($="data:application/octet-stream;base64,")||(AA=$,$=A.locateFile?A.locateFile(AA,r):r+AA);var iA={64328:function(){var A=arguments,I=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkit.NFTMarkerInfo;g.id=A[I++],g.error=A[I++],g.found=1,g.pose[0]=A[I++],g.pose[1]=A[I++],g.pose[2]=A[I++],g.pose[3]=A[I++],g.pose[4]=A[I++],g.pose[5]=A[I++],g.pose[6]=A[I++],g.pose[7]=A[I++],g.pose[8]=A[I++],g.pose[9]=A[I++],g.pose[10]=A[I++],g.pose[11]=A[I++]},65025:function(){var A=arguments,I=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkit.NFTMarkerInfo;g.id=A[I++],g.error=-1,g.found=0,g.pose[0]=0,g.pose[1]=0,g.pose[2]=0,g.pose[3]=0,g.pose[4]=0,g.pose[5]=0,g.pose[6]=0,g.pose[7]=0,g.pose[8]=0,g.pose[9]=0,g.pose[10]=0,g.pose[11]=0},65645:function(A,I,g,B){artoolkit.multiEachMarkerInfo||(artoolkit.multiEachMarkerInfo={});var C=artoolkit.multiEachMarkerInfo;C.visible=A,C.pattId=I,C.pattType=g,C.width=B},65919:function(A,I,g,B,C,Q,E,i,o,D,a,w){var s=arguments,G=12;artoolkit.markerInfo||(artoolkit.markerInfo={pos:[0,0],line:[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],vertex:[[0,0],[0,0],[0,0],[0,0]]});var t=artoolkit.markerInfo;t.area=A,t.id=I,t.idPatt=g,t.idMatrix=B,t.dir=C,t.dirPatt=Q,t.dirMatrix=E,t.cf=i,t.cfPatt=o,t.cfMatrix=D,t.pos[0]=a,t.pos[1]=w,t.line[0][0]=s[G++],t.line[0][1]=s[G++],t.line[0][2]=s[G++],t.line[1][0]=s[G++],t.line[1][1]=s[G++],t.line[1][2]=s[G++],t.line[2][0]=s[G++],t.line[2][1]=s[G++],t.line[2][2]=s[G++],t.line[3][0]=s[G++],t.line[3][1]=s[G++],t.line[3][2]=s[G++],t.vertex[0][0]=s[G++],t.vertex[0][1]=s[G++],t.vertex[1][0]=s[G++],t.vertex[1][1]=s[G++],t.vertex[2][0]=s[G++],t.vertex[2][1]=s[G++],t.vertex[3][0]=s[G++],t.vertex[3][1]=s[G++],t.errorCorrected=s[G++]},67254:function(A,I,g,B,C,Q){artoolkit.frameMalloc||(artoolkit.frameMalloc={});var E=artoolkit.frameMalloc;E.framepointer=I,E.framesize=g,E.camera=B,E.transform=C,E.videoLumaPointer=Q}};function oA(A){this.name="ExitStatus",this.message="Program terminated with exit("+A+")",this.status=A}function DA(I){for(;I.length>0;)I.shift()(A)}function aA(A){this.excPtr=A,this.ptr=A-24,this.set_type=function(A){q[this.ptr+4>>2]=A},this.get_type=function(){return q[this.ptr+4>>2]},this.set_destructor=function(A){q[this.ptr+8>>2]=A},this.get_destructor=function(){return q[this.ptr+8>>2]},this.set_refcount=function(A){d[this.ptr>>2]=A},this.set_caught=function(A){A=A?1:0,U[this.ptr+12>>0]=A},this.get_caught=function(){return 0!=U[this.ptr+12>>0]},this.set_rethrown=function(A){A=A?1:0,U[this.ptr+13>>0]=A},this.get_rethrown=function(){return 0!=U[this.ptr+13>>0]},this.init=function(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var A=d[this.ptr>>2];d[this.ptr>>2]=A+1},this.release_ref=function(){var A=d[this.ptr>>2];return d[this.ptr>>2]=A-1,1===A},this.set_adjusted_ptr=function(A){q[this.ptr+16>>2]=A},this.get_adjusted_ptr=function(){return q[this.ptr+16>>2]},this.get_exception_ptr=function(){if(rI(this.get_type()))return q[this.excPtr>>2];var A=this.get_adjusted_ptr();return 0!==A?A:this.excPtr}}var wA={isAbs:function(A){return"/"===A.charAt(0)},splitPath:function(A){return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(A).slice(1)},normalizeArray:function(A,I){for(var g=0,B=A.length-1;B>=0;B--){var C=A[B];"."===C?A.splice(B,1):".."===C?(A.splice(B,1),g++):g&&(A.splice(B,1),g--)}if(I)for(;g;g--)A.unshift("..");return A},normalize:function(A){var I=wA.isAbs(A),g="/"===A.substr(-1);return(A=wA.normalizeArray(A.split("/").filter((function(A){return!!A})),!I).join("/"))||I||(A="."),A&&g&&(A+="/"),(I?"/":"")+A},dirname:function(A){var I=wA.splitPath(A),g=I[0],B=I[1];return g||B?(B&&(B=B.substr(0,B.length-1)),g+B):"."},basename:function(A){if("/"===A)return"/";var I=(A=(A=wA.normalize(A)).replace(/\/$/,"")).lastIndexOf("/");return-1===I?A:A.substr(I+1)},join:function(){var A=Array.prototype.slice.call(arguments);return wA.normalize(A.join("/"))},join2:function(A,I){return wA.normalize(A+"/"+I)}},sA={resolve:function(){for(var A="",I=!1,g=arguments.length-1;g>=-1&&!I;g--){var B=g>=0?arguments[g]:FA.cwd();if("string"!=typeof B)throw new TypeError("Arguments to path.resolve must be strings");if(!B)return"";A=B+"/"+A,I=wA.isAbs(B)}return(I?"/":"")+(A=wA.normalizeArray(A.split("/").filter((function(A){return!!A})),!I).join("/"))||"."},relative:function(A,I){function g(A){for(var I=0;I<A.length&&""===A[I];I++);for(var g=A.length-1;g>=0&&""===A[g];g--);return I>g?[]:A.slice(I,g-I+1)}A=sA.resolve(A).substr(1),I=sA.resolve(I).substr(1);for(var B=g(A.split("/")),C=g(I.split("/")),Q=Math.min(B.length,C.length),E=Q,i=0;i<Q;i++)if(B[i]!==C[i]){E=i;break}var o=[];for(i=E;i<B.length;i++)o.push("..");return(o=o.concat(C.slice(E))).join("/")}};function GA(A,I,g){var B=g>0?g:b(A)+1,C=new Array(B),Q=m(A,C,0,C.length);return I&&(C.length=Q),C}var tA={ttys:[],init:function(){},shutdown:function(){},register:function(A,I){tA.ttys[A]={input:[],output:[],ops:I},FA.registerDevice(A,tA.stream_ops)},stream_ops:{open:function(A){var I=tA.ttys[A.node.rdev];if(!I)throw new FA.ErrnoError(43);A.tty=I,A.seekable=!1},close:function(A){A.tty.ops.fsync(A.tty)},fsync:function(A){A.tty.ops.fsync(A.tty)},read:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.get_char)throw new FA.ErrnoError(60);for(var Q=0,E=0;E<B;E++){var i;try{i=A.tty.ops.get_char(A.tty)}catch(A){throw new FA.ErrnoError(29)}if(void 0===i&&0===Q)throw new FA.ErrnoError(6);if(null==i)break;Q++,I[g+E]=i}return Q&&(A.node.timestamp=Date.now()),Q},write:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.put_char)throw new FA.ErrnoError(60);try{for(var Q=0;Q<B;Q++)A.tty.ops.put_char(A.tty,I[g+Q])}catch(A){throw new FA.ErrnoError(29)}return B&&(A.node.timestamp=Date.now()),Q}},default_tty_ops:{get_char:function(A){if(!A.input.length){var I=null;if(y){var g=Buffer.alloc(256),B=0;try{B=i.readSync(process.stdin.fd,g,0,256,-1)}catch(A){if(!A.toString().includes("EOF"))throw A;B=0}I=B>0?g.slice(0,B).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(I=window.prompt("Input: "))&&(I+="\n"):"function"==typeof readline&&null!==(I=readline())&&(I+="\n");if(!I)return null;A.input=GA(I,!0)}return A.input.shift()},put_char:function(A,I){null===I||10===I?(S(u(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(S(u(A.output,0)),A.output=[])}},default_tty1_ops:{put_char:function(A,I){null===I||10===I?(M(u(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(M(u(A.output,0)),A.output=[])}}};function hA(A){_()}var RA={ops_table:null,mount:function(A){return RA.createNode(null,"/",16895,0)},createNode:function(A,I,g,B){if(FA.isBlkdev(g)||FA.isFIFO(g))throw new FA.ErrnoError(63);RA.ops_table||(RA.ops_table={dir:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr,lookup:RA.node_ops.lookup,mknod:RA.node_ops.mknod,rename:RA.node_ops.rename,unlink:RA.node_ops.unlink,rmdir:RA.node_ops.rmdir,readdir:RA.node_ops.readdir,symlink:RA.node_ops.symlink},stream:{llseek:RA.stream_ops.llseek}},file:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr},stream:{llseek:RA.stream_ops.llseek,read:RA.stream_ops.read,write:RA.stream_ops.write,allocate:RA.stream_ops.allocate,mmap:RA.stream_ops.mmap,msync:RA.stream_ops.msync}},link:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr,readlink:RA.node_ops.readlink},stream:{}},chrdev:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr},stream:FA.chrdev_stream_ops}});var C=FA.createNode(A,I,g,B);return FA.isDir(C.mode)?(C.node_ops=RA.ops_table.dir.node,C.stream_ops=RA.ops_table.dir.stream,C.contents={}):FA.isFile(C.mode)?(C.node_ops=RA.ops_table.file.node,C.stream_ops=RA.ops_table.file.stream,C.usedBytes=0,C.contents=null):FA.isLink(C.mode)?(C.node_ops=RA.ops_table.link.node,C.stream_ops=RA.ops_table.link.stream):FA.isChrdev(C.mode)&&(C.node_ops=RA.ops_table.chrdev.node,C.stream_ops=RA.ops_table.chrdev.stream),C.timestamp=Date.now(),A&&(A.contents[I]=C,A.timestamp=C.timestamp),C},getFileDataAsTypedArray:function(A){return A.contents?A.contents.subarray?A.contents.subarray(0,A.usedBytes):new Uint8Array(A.contents):new Uint8Array(0)},expandFileStorage:function(A,I){var g=A.contents?A.contents.length:0;if(!(g>=I)){I=Math.max(I,g*(g<1048576?2:1.125)>>>0),0!=g&&(I=Math.max(I,256));var B=A.contents;A.contents=new Uint8Array(I),A.usedBytes>0&&A.contents.set(B.subarray(0,A.usedBytes),0)}},resizeFileStorage:function(A,I){if(A.usedBytes!=I)if(0==I)A.contents=null,A.usedBytes=0;else{var g=A.contents;A.contents=new Uint8Array(I),g&&A.contents.set(g.subarray(0,Math.min(I,A.usedBytes))),A.usedBytes=I}},node_ops:{getattr:function(A){var I={};return I.dev=FA.isChrdev(A.mode)?A.id:1,I.ino=A.id,I.mode=A.mode,I.nlink=1,I.uid=0,I.gid=0,I.rdev=A.rdev,FA.isDir(A.mode)?I.size=4096:FA.isFile(A.mode)?I.size=A.usedBytes:FA.isLink(A.mode)?I.size=A.link.length:I.size=0,I.atime=new Date(A.timestamp),I.mtime=new Date(A.timestamp),I.ctime=new Date(A.timestamp),I.blksize=4096,I.blocks=Math.ceil(I.size/I.blksize),I},setattr:function(A,I){void 0!==I.mode&&(A.mode=I.mode),void 0!==I.timestamp&&(A.timestamp=I.timestamp),void 0!==I.size&&RA.resizeFileStorage(A,I.size)},lookup:function(A,I){throw FA.genericErrors[44]},mknod:function(A,I,g,B){return RA.createNode(A,I,g,B)},rename:function(A,I,g){if(FA.isDir(A.mode)){var B;try{B=FA.lookupNode(I,g)}catch(A){}if(B)for(var C in B.contents)throw new FA.ErrnoError(55)}delete A.parent.contents[A.name],A.parent.timestamp=Date.now(),A.name=g,I.contents[g]=A,I.timestamp=A.parent.timestamp,A.parent=I},unlink:function(A,I){delete A.contents[I],A.timestamp=Date.now()},rmdir:function(A,I){var g=FA.lookupNode(A,I);for(var B in g.contents)throw new FA.ErrnoError(55);delete A.contents[I],A.timestamp=Date.now()},readdir:function(A){var I=[".",".."];for(var g in A.contents)A.contents.hasOwnProperty(g)&&I.push(g);return I},symlink:function(A,I,g){var B=RA.createNode(A,I,41471,0);return B.link=g,B},readlink:function(A){if(!FA.isLink(A.mode))throw new FA.ErrnoError(28);return A.link}},stream_ops:{read:function(A,I,g,B,C){var Q=A.node.contents;if(C>=A.node.usedBytes)return 0;var E=Math.min(A.node.usedBytes-C,B);if(E>8&&Q.subarray)I.set(Q.subarray(C,C+E),g);else for(var i=0;i<E;i++)I[g+i]=Q[C+i];return E},write:function(A,I,g,B,C,Q){if(I.buffer===U.buffer&&(Q=!1),!B)return 0;var E=A.node;if(E.timestamp=Date.now(),I.subarray&&(!E.contents||E.contents.subarray)){if(Q)return E.contents=I.subarray(g,g+B),E.usedBytes=B,B;if(0===E.usedBytes&&0===C)return E.contents=I.slice(g,g+B),E.usedBytes=B,B;if(C+B<=E.usedBytes)return E.contents.set(I.subarray(g,g+B),C),B}if(RA.expandFileStorage(E,C+B),E.contents.subarray&&I.subarray)E.contents.set(I.subarray(g,g+B),C);else for(var i=0;i<B;i++)E.contents[C+i]=I[g+i];return E.usedBytes=Math.max(E.usedBytes,C+B),B},llseek:function(A,I,g){var B=I;if(1===g?B+=A.position:2===g&&FA.isFile(A.node.mode)&&(B+=A.node.usedBytes),B<0)throw new FA.ErrnoError(28);return B},allocate:function(A,I,g){RA.expandFileStorage(A.node,I+g),A.node.usedBytes=Math.max(A.node.usedBytes,I+g)},mmap:function(A,I,g,B,C){if(!FA.isFile(A.node.mode))throw new FA.ErrnoError(43);var Q,E,i=A.node.contents;if(2&C||i.buffer!==J){if((g>0||g+I<i.length)&&(i=i.subarray?i.subarray(g,g+I):Array.prototype.slice.call(i,g,g+I)),E=!0,!(Q=hA()))throw new FA.ErrnoError(48);U.set(i,Q)}else E=!1,Q=i.byteOffset;return{ptr:Q,allocated:E}},msync:function(A,I,g,B,C){if(!FA.isFile(A.node.mode))throw new FA.ErrnoError(43);return 2&C||RA.stream_ops.write(A,I,0,B,g,!1),0}}},FA={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(A){var I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(A=sA.resolve(FA.cwd(),A)))return{path:"",node:null};var g={follow_mount:!0,recurse_count:0};if((I=Object.assign(g,I)).recurse_count>8)throw new FA.ErrnoError(32);for(var B=wA.normalizeArray(A.split("/").filter((function(A){return!!A})),!1),C=FA.root,Q="/",E=0;E<B.length;E++){var i=E===B.length-1;if(i&&I.parent)break;if(C=FA.lookupNode(C,B[E]),Q=wA.join2(Q,B[E]),FA.isMountpoint(C)&&(!i||i&&I.follow_mount)&&(C=C.mounted.root),!i||I.follow)for(var o=0;FA.isLink(C.mode);){var D=FA.readlink(Q);Q=sA.resolve(wA.dirname(Q),D);var a=FA.lookupPath(Q,{recurse_count:I.recurse_count+1});if(C=a.node,o++>40)throw new FA.ErrnoError(32)}}return{path:Q,node:C}},getPath:function(A){for(var I;;){if(FA.isRoot(A)){var g=A.mount.mountpoint;return I?"/"!==g[g.length-1]?g+"/"+I:g+I:g}I=I?A.name+"/"+I:A.name,A=A.parent}},hashName:function(A,I){for(var g=0,B=0;B<I.length;B++)g=(g<<5)-g+I.charCodeAt(B)|0;return(A+g>>>0)%FA.nameTable.length},hashAddNode:function(A){var I=FA.hashName(A.parent.id,A.name);A.name_next=FA.nameTable[I],FA.nameTable[I]=A},hashRemoveNode:function(A){var I=FA.hashName(A.parent.id,A.name);if(FA.nameTable[I]===A)FA.nameTable[I]=A.name_next;else for(var g=FA.nameTable[I];g;){if(g.name_next===A){g.name_next=A.name_next;break}g=g.name_next}},lookupNode:function(A,I){var g=FA.mayLookup(A);if(g)throw new FA.ErrnoError(g,A);for(var B=FA.hashName(A.id,I),C=FA.nameTable[B];C;C=C.name_next){var Q=C.name;if(C.parent.id===A.id&&Q===I)return C}return FA.lookup(A,I)},createNode:function(A,I,g,B){var C=new FA.FSNode(A,I,g,B);return FA.hashAddNode(C),C},destroyNode:function(A){FA.hashRemoveNode(A)},isRoot:function(A){return A===A.parent},isMountpoint:function(A){return!!A.mounted},isFile:function(A){return 32768==(61440&A)},isDir:function(A){return 16384==(61440&A)},isLink:function(A){return 40960==(61440&A)},isChrdev:function(A){return 8192==(61440&A)},isBlkdev:function(A){return 24576==(61440&A)},isFIFO:function(A){return 4096==(61440&A)},isSocket:function(A){return 49152==(49152&A)},flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:function(A){var I=FA.flagModes[A];if(void 0===I)throw new Error("Unknown file open mode: "+A);return I},flagsToPermissionString:function(A){var I=["r","w","rw"][3&A];return 512&A&&(I+="w"),I},nodePermissions:function(A,I){return FA.ignorePermissions||(!I.includes("r")||292&A.mode)&&(!I.includes("w")||146&A.mode)&&(!I.includes("x")||73&A.mode)?0:2},mayLookup:function(A){return FA.nodePermissions(A,"x")||(A.node_ops.lookup?0:2)},mayCreate:function(A,I){try{return FA.lookupNode(A,I),20}catch(A){}return FA.nodePermissions(A,"wx")},mayDelete:function(A,I,g){var B;try{B=FA.lookupNode(A,I)}catch(A){return A.errno}var C=FA.nodePermissions(A,"wx");if(C)return C;if(g){if(!FA.isDir(B.mode))return 54;if(FA.isRoot(B)||FA.getPath(B)===FA.cwd())return 10}else if(FA.isDir(B.mode))return 31;return 0},mayOpen:function(A,I){return A?FA.isLink(A.mode)?32:FA.isDir(A.mode)&&("r"!==FA.flagsToPermissionString(I)||512&I)?31:FA.nodePermissions(A,FA.flagsToPermissionString(I)):44},MAX_OPEN_FDS:4096,nextfd:function(){for(var A=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:FA.MAX_OPEN_FDS,g=A;g<=I;g++)if(!FA.streams[g])return g;throw new FA.ErrnoError(33)},getStream:function(A){return FA.streams[A]},createStream:function(A,I,g){FA.FSStream||(FA.FSStream=function(){this.shared={}},FA.FSStream.prototype={},Object.defineProperties(FA.FSStream.prototype,{object:{get:function(){return this.node},set:function(A){this.node=A}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(A){this.shared.flags=A}},position:{get:function(){return this.shared.position},set:function(A){this.shared.position=A}}})),A=Object.assign(new FA.FSStream,A);var B=FA.nextfd(I,g);return A.fd=B,FA.streams[B]=A,A},closeStream:function(A){FA.streams[A]=null},chrdev_stream_ops:{open:function(A){var I=FA.getDevice(A.node.rdev);A.stream_ops=I.stream_ops,A.stream_ops.open&&A.stream_ops.open(A)},llseek:function(){throw new FA.ErrnoError(70)}},major:function(A){return A>>8},minor:function(A){return 255&A},makedev:function(A,I){return A<<8|I},registerDevice:function(A,I){FA.devices[A]={stream_ops:I}},getDevice:function(A){return FA.devices[A]},getMounts:function(A){for(var I=[],g=[A];g.length;){var B=g.pop();I.push(B),g.push.apply(g,B.mounts)}return I},syncfs:function(A,I){"function"==typeof A&&(I=A,A=!1),FA.syncFSRequests++,FA.syncFSRequests>1&&M("warning: "+FA.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var g=FA.getMounts(FA.root.mount),B=0;function C(A){return FA.syncFSRequests--,I(A)}function Q(A){if(A)return Q.errored?void 0:(Q.errored=!0,C(A));++B>=g.length&&C(null)}g.forEach((function(I){if(!I.type.syncfs)return Q(null);I.type.syncfs(I,A,Q)}))},mount:function(A,I,g){var B,C="/"===g,Q=!g;if(C&&FA.root)throw new FA.ErrnoError(10);if(!C&&!Q){var E=FA.lookupPath(g,{follow_mount:!1});if(g=E.path,B=E.node,FA.isMountpoint(B))throw new FA.ErrnoError(10);if(!FA.isDir(B.mode))throw new FA.ErrnoError(54)}var i={type:A,opts:I,mountpoint:g,mounts:[]},o=A.mount(i);return o.mount=i,i.root=o,C?FA.root=o:B&&(B.mounted=i,B.mount&&B.mount.mounts.push(i)),o},unmount:function(A){var I=FA.lookupPath(A,{follow_mount:!1});if(!FA.isMountpoint(I.node))throw new FA.ErrnoError(28);var g=I.node,B=g.mounted,C=FA.getMounts(B);Object.keys(FA.nameTable).forEach((function(A){for(var I=FA.nameTable[A];I;){var g=I.name_next;C.includes(I.mount)&&FA.destroyNode(I),I=g}})),g.mounted=null;var Q=g.mount.mounts.indexOf(B);g.mount.mounts.splice(Q,1)},lookup:function(A,I){return A.node_ops.lookup(A,I)},mknod:function(A,I,g){var B=FA.lookupPath(A,{parent:!0}).node,C=wA.basename(A);if(!C||"."===C||".."===C)throw new FA.ErrnoError(28);var Q=FA.mayCreate(B,C);if(Q)throw new FA.ErrnoError(Q);if(!B.node_ops.mknod)throw new FA.ErrnoError(63);return B.node_ops.mknod(B,C,I,g)},create:function(A,I){return I=void 0!==I?I:438,I&=4095,I|=32768,FA.mknod(A,I,0)},mkdir:function(A,I){return I=void 0!==I?I:511,I&=1023,I|=16384,FA.mknod(A,I,0)},mkdirTree:function(A,I){for(var g=A.split("/"),B="",C=0;C<g.length;++C)if(g[C]){B+="/"+g[C];try{FA.mkdir(B,I)}catch(A){if(20!=A.errno)throw A}}},mkdev:function(A,I,g){return void 0===g&&(g=I,I=438),I|=8192,FA.mknod(A,I,g)},symlink:function(A,I){if(!sA.resolve(A))throw new FA.ErrnoError(44);var g=FA.lookupPath(I,{parent:!0}).node;if(!g)throw new FA.ErrnoError(44);var B=wA.basename(I),C=FA.mayCreate(g,B);if(C)throw new FA.ErrnoError(C);if(!g.node_ops.symlink)throw new FA.ErrnoError(63);return g.node_ops.symlink(g,B,A)},rename:function(A,I){var g,B,C=wA.dirname(A),Q=wA.dirname(I),E=wA.basename(A),i=wA.basename(I);if(g=FA.lookupPath(A,{parent:!0}).node,B=FA.lookupPath(I,{parent:!0}).node,!g||!B)throw new FA.ErrnoError(44);if(g.mount!==B.mount)throw new FA.ErrnoError(75);var o,D=FA.lookupNode(g,E),a=sA.relative(A,Q);if("."!==a.charAt(0))throw new FA.ErrnoError(28);if("."!==(a=sA.relative(I,C)).charAt(0))throw new FA.ErrnoError(55);try{o=FA.lookupNode(B,i)}catch(A){}if(D!==o){var w=FA.isDir(D.mode),s=FA.mayDelete(g,E,w);if(s)throw new FA.ErrnoError(s);if(s=o?FA.mayDelete(B,i,w):FA.mayCreate(B,i))throw new FA.ErrnoError(s);if(!g.node_ops.rename)throw new FA.ErrnoError(63);if(FA.isMountpoint(D)||o&&FA.isMountpoint(o))throw new FA.ErrnoError(10);if(B!==g&&(s=FA.nodePermissions(g,"w")))throw new FA.ErrnoError(s);FA.hashRemoveNode(D);try{g.node_ops.rename(D,B,i)}catch(A){throw A}finally{FA.hashAddNode(D)}}},rmdir:function(A){var I=FA.lookupPath(A,{parent:!0}).node,g=wA.basename(A),B=FA.lookupNode(I,g),C=FA.mayDelete(I,g,!0);if(C)throw new FA.ErrnoError(C);if(!I.node_ops.rmdir)throw new FA.ErrnoError(63);if(FA.isMountpoint(B))throw new FA.ErrnoError(10);I.node_ops.rmdir(I,g),FA.destroyNode(B)},readdir:function(A){var I=FA.lookupPath(A,{follow:!0}).node;if(!I.node_ops.readdir)throw new FA.ErrnoError(54);return I.node_ops.readdir(I)},unlink:function(A){var I=FA.lookupPath(A,{parent:!0}).node;if(!I)throw new FA.ErrnoError(44);var g=wA.basename(A),B=FA.lookupNode(I,g),C=FA.mayDelete(I,g,!1);if(C)throw new FA.ErrnoError(C);if(!I.node_ops.unlink)throw new FA.ErrnoError(63);if(FA.isMountpoint(B))throw new FA.ErrnoError(10);I.node_ops.unlink(I,g),FA.destroyNode(B)},readlink:function(A){var I=FA.lookupPath(A).node;if(!I)throw new FA.ErrnoError(44);if(!I.node_ops.readlink)throw new FA.ErrnoError(28);return sA.resolve(FA.getPath(I.parent),I.node_ops.readlink(I))},stat:function(A,I){var g=FA.lookupPath(A,{follow:!I}).node;if(!g)throw new FA.ErrnoError(44);if(!g.node_ops.getattr)throw new FA.ErrnoError(63);return g.node_ops.getattr(g)},lstat:function(A){return FA.stat(A,!0)},chmod:function(A,I,g){var B;if(!(B="string"==typeof A?FA.lookupPath(A,{follow:!g}).node:A).node_ops.setattr)throw new FA.ErrnoError(63);B.node_ops.setattr(B,{mode:4095&I|-4096&B.mode,timestamp:Date.now()})},lchmod:function(A,I){FA.chmod(A,I,!0)},fchmod:function(A,I){var g=FA.getStream(A);if(!g)throw new FA.ErrnoError(8);FA.chmod(g.node,I)},chown:function(A,I,g,B){var C;if(!(C="string"==typeof A?FA.lookupPath(A,{follow:!B}).node:A).node_ops.setattr)throw new FA.ErrnoError(63);C.node_ops.setattr(C,{timestamp:Date.now()})},lchown:function(A,I,g){FA.chown(A,I,g,!0)},fchown:function(A,I,g){var B=FA.getStream(A);if(!B)throw new FA.ErrnoError(8);FA.chown(B.node,I,g)},truncate:function(A,I){if(I<0)throw new FA.ErrnoError(28);var g;if(!(g="string"==typeof A?FA.lookupPath(A,{follow:!0}).node:A).node_ops.setattr)throw new FA.ErrnoError(63);if(FA.isDir(g.mode))throw new FA.ErrnoError(31);if(!FA.isFile(g.mode))throw new FA.ErrnoError(28);var B=FA.nodePermissions(g,"w");if(B)throw new FA.ErrnoError(B);g.node_ops.setattr(g,{size:I,timestamp:Date.now()})},ftruncate:function(A,I){var g=FA.getStream(A);if(!g)throw new FA.ErrnoError(8);if(0==(2097155&g.flags))throw new FA.ErrnoError(28);FA.truncate(g.node,I)},utime:function(A,I,g){var B=FA.lookupPath(A,{follow:!0}).node;B.node_ops.setattr(B,{timestamp:Math.max(I,g)})},open:function(I,g,B){if(""===I)throw new FA.ErrnoError(44);var C;if(B=void 0===B?438:B,B=64&(g="string"==typeof g?FA.modeStringToFlags(g):g)?4095&B|32768:0,"object"==D(I))C=I;else{I=wA.normalize(I);try{C=FA.lookupPath(I,{follow:!(131072&g)}).node}catch(A){}}var Q=!1;if(64&g)if(C){if(128&g)throw new FA.ErrnoError(20)}else C=FA.mknod(I,B,0),Q=!0;if(!C)throw new FA.ErrnoError(44);if(FA.isChrdev(C.mode)&&(g&=-513),65536&g&&!FA.isDir(C.mode))throw new FA.ErrnoError(54);if(!Q){var E=FA.mayOpen(C,g);if(E)throw new FA.ErrnoError(E)}512&g&&!Q&&FA.truncate(C,0),g&=-131713;var i=FA.createStream({node:C,path:FA.getPath(C),flags:g,seekable:!0,position:0,stream_ops:C.stream_ops,ungotten:[],error:!1});return i.stream_ops.open&&i.stream_ops.open(i),!A.logReadFiles||1&g||(FA.readFiles||(FA.readFiles={}),I in FA.readFiles||(FA.readFiles[I]=1)),i},close:function(A){if(FA.isClosed(A))throw new FA.ErrnoError(8);A.getdents&&(A.getdents=null);try{A.stream_ops.close&&A.stream_ops.close(A)}catch(A){throw A}finally{FA.closeStream(A.fd)}A.fd=null},isClosed:function(A){return null===A.fd},llseek:function(A,I,g){if(FA.isClosed(A))throw new FA.ErrnoError(8);if(!A.seekable||!A.stream_ops.llseek)throw new FA.ErrnoError(70);if(0!=g&&1!=g&&2!=g)throw new FA.ErrnoError(28);return A.position=A.stream_ops.llseek(A,I,g),A.ungotten=[],A.position},read:function(A,I,g,B,C){if(B<0||C<0)throw new FA.ErrnoError(28);if(FA.isClosed(A))throw new FA.ErrnoError(8);if(1==(2097155&A.flags))throw new FA.ErrnoError(8);if(FA.isDir(A.node.mode))throw new FA.ErrnoError(31);if(!A.stream_ops.read)throw new FA.ErrnoError(28);var Q=void 0!==C;if(Q){if(!A.seekable)throw new FA.ErrnoError(70)}else C=A.position;var E=A.stream_ops.read(A,I,g,B,C);return Q||(A.position+=E),E},write:function(A,I,g,B,C,Q){if(B<0||C<0)throw new FA.ErrnoError(28);if(FA.isClosed(A))throw new FA.ErrnoError(8);if(0==(2097155&A.flags))throw new FA.ErrnoError(8);if(FA.isDir(A.node.mode))throw new FA.ErrnoError(31);if(!A.stream_ops.write)throw new FA.ErrnoError(28);A.seekable&&1024&A.flags&&FA.llseek(A,0,2);var E=void 0!==C;if(E){if(!A.seekable)throw new FA.ErrnoError(70)}else C=A.position;var i=A.stream_ops.write(A,I,g,B,C,Q);return E||(A.position+=i),i},allocate:function(A,I,g){if(FA.isClosed(A))throw new FA.ErrnoError(8);if(I<0||g<=0)throw new FA.ErrnoError(28);if(0==(2097155&A.flags))throw new FA.ErrnoError(8);if(!FA.isFile(A.node.mode)&&!FA.isDir(A.node.mode))throw new FA.ErrnoError(43);if(!A.stream_ops.allocate)throw new FA.ErrnoError(138);A.stream_ops.allocate(A,I,g)},mmap:function(A,I,g,B,C){if(0!=(2&B)&&0==(2&C)&&2!=(2097155&A.flags))throw new FA.ErrnoError(2);if(1==(2097155&A.flags))throw new FA.ErrnoError(2);if(!A.stream_ops.mmap)throw new FA.ErrnoError(43);return A.stream_ops.mmap(A,I,g,B,C)},msync:function(A,I,g,B,C){return A&&A.stream_ops.msync?A.stream_ops.msync(A,I,g,B,C):0},munmap:function(A){return 0},ioctl:function(A,I,g){if(!A.stream_ops.ioctl)throw new FA.ErrnoError(59);return A.stream_ops.ioctl(A,I,g)},readFile:function(A){var I,g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(g.flags=g.flags||0,g.encoding=g.encoding||"binary","utf8"!==g.encoding&&"binary"!==g.encoding)throw new Error('Invalid encoding type "'+g.encoding+'"');var B=FA.open(A,g.flags),C=FA.stat(A),Q=C.size,E=new Uint8Array(Q);return FA.read(B,E,0,Q,0),"utf8"===g.encoding?I=u(E,0):"binary"===g.encoding&&(I=E),FA.close(B),I},writeFile:function(A,I){var g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};g.flags=g.flags||577;var B=FA.open(A,g.flags,g.mode);if("string"==typeof I){var C=new Uint8Array(b(I)+1),Q=m(I,C,0,C.length);FA.write(B,C,0,Q,void 0,g.canOwn)}else{if(!ArrayBuffer.isView(I))throw new Error("Unsupported data type");FA.write(B,I,0,I.byteLength,void 0,g.canOwn)}FA.close(B)},cwd:function(){return FA.currentPath},chdir:function(A){var I=FA.lookupPath(A,{follow:!0});if(null===I.node)throw new FA.ErrnoError(44);if(!FA.isDir(I.node.mode))throw new FA.ErrnoError(54);var g=FA.nodePermissions(I.node,"x");if(g)throw new FA.ErrnoError(g);FA.currentPath=I.path},createDefaultDirectories:function(){FA.mkdir("/tmp"),FA.mkdir("/home"),FA.mkdir("/home/web_user")},createDefaultDevices:function(){FA.mkdir("/dev"),FA.registerDevice(FA.makedev(1,3),{read:function(){return 0},write:function(A,I,g,B,C){return B}}),FA.mkdev("/dev/null",FA.makedev(1,3)),tA.register(FA.makedev(5,0),tA.default_tty_ops),tA.register(FA.makedev(6,0),tA.default_tty1_ops),FA.mkdev("/dev/tty",FA.makedev(5,0)),FA.mkdev("/dev/tty1",FA.makedev(6,0));var A=function(){if("object"==("undefined"==typeof crypto?"undefined":D(crypto))&&"function"==typeof crypto.getRandomValues){var A=new Uint8Array(1);return function(){return crypto.getRandomValues(A),A[0]}}if(y)try{var I=g(654);return function(){return I.randomBytes(1)[0]}}catch(A){}return function(){return _("randomDevice")}}();FA.createDevice("/dev","random",A),FA.createDevice("/dev","urandom",A),FA.mkdir("/dev/shm"),FA.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){FA.mkdir("/proc");var A=FA.mkdir("/proc/self");FA.mkdir("/proc/self/fd"),FA.mount({mount:function(){var I=FA.createNode(A,"fd",16895,73);return I.node_ops={lookup:function(A,I){var g=+I,B=FA.getStream(g);if(!B)throw new FA.ErrnoError(8);var C={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return B.path}}};return C.parent=C,C}},I}},{},"/proc/self/fd")},createStandardStreams:function(){A.stdin?FA.createDevice("/dev","stdin",A.stdin):FA.symlink("/dev/tty","/dev/stdin"),A.stdout?FA.createDevice("/dev","stdout",null,A.stdout):FA.symlink("/dev/tty","/dev/stdout"),A.stderr?FA.createDevice("/dev","stderr",null,A.stderr):FA.symlink("/dev/tty1","/dev/stderr"),FA.open("/dev/stdin",0),FA.open("/dev/stdout",1),FA.open("/dev/stderr",1)},ensureErrnoError:function(){FA.ErrnoError||(FA.ErrnoError=function(A,I){this.node=I,this.setErrno=function(A){this.errno=A},this.setErrno(A),this.message="FS error"},FA.ErrnoError.prototype=new Error,FA.ErrnoError.prototype.constructor=FA.ErrnoError,[44].forEach((function(A){FA.genericErrors[A]=new FA.ErrnoError(A),FA.genericErrors[A].stack="<generic error, no stack>"})))},staticInit:function(){FA.ensureErrnoError(),FA.nameTable=new Array(4096),FA.mount(RA,{},"/"),FA.createDefaultDirectories(),FA.createDefaultDevices(),FA.createSpecialDirectories(),FA.filesystems={MEMFS:RA}},init:function(I,g,B){FA.init.initialized=!0,FA.ensureErrnoError(),A.stdin=I||A.stdin,A.stdout=g||A.stdout,A.stderr=B||A.stderr,FA.createStandardStreams()},quit:function(){FA.init.initialized=!1;for(var A=0;A<FA.streams.length;A++){var I=FA.streams[A];I&&FA.close(I)}},getMode:function(A,I){var g=0;return A&&(g|=365),I&&(g|=146),g},findObject:function(A,I){var g=FA.analyzePath(A,I);return g.exists?g.object:null},analyzePath:function(A,I){try{A=(B=FA.lookupPath(A,{follow:!I})).path}catch(A){}var g={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var B=FA.lookupPath(A,{parent:!0});g.parentExists=!0,g.parentPath=B.path,g.parentObject=B.node,g.name=wA.basename(A),B=FA.lookupPath(A,{follow:!I}),g.exists=!0,g.path=B.path,g.object=B.node,g.name=B.node.name,g.isRoot="/"===B.path}catch(A){g.error=A.errno}return g},createPath:function(A,I,g,B){A="string"==typeof A?A:FA.getPath(A);for(var C=I.split("/").reverse();C.length;){var Q=C.pop();if(Q){var E=wA.join2(A,Q);try{FA.mkdir(E)}catch(A){}A=E}}return E},createFile:function(A,I,g,B,C){var Q=wA.join2("string"==typeof A?A:FA.getPath(A),I),E=FA.getMode(B,C);return FA.create(Q,E)},createDataFile:function(A,I,g,B,C,Q){var E=I;A&&(A="string"==typeof A?A:FA.getPath(A),E=I?wA.join2(A,I):A);var i=FA.getMode(B,C),o=FA.create(E,i);if(g){if("string"==typeof g){for(var D=new Array(g.length),a=0,w=g.length;a<w;++a)D[a]=g.charCodeAt(a);g=D}FA.chmod(o,146|i);var s=FA.open(o,577);FA.write(s,g,0,g.length,0,Q),FA.close(s),FA.chmod(o,i)}return o},createDevice:function(A,I,g,B){var C=wA.join2("string"==typeof A?A:FA.getPath(A),I),Q=FA.getMode(!!g,!!B);FA.createDevice.major||(FA.createDevice.major=64);var E=FA.makedev(FA.createDevice.major++,0);return FA.registerDevice(E,{open:function(A){A.seekable=!1},close:function(A){B&&B.buffer&&B.buffer.length&&B(10)},read:function(A,I,B,C,Q){for(var E=0,i=0;i<C;i++){var o;try{o=g()}catch(A){throw new FA.ErrnoError(29)}if(void 0===o&&0===E)throw new FA.ErrnoError(6);if(null==o)break;E++,I[B+i]=o}return E&&(A.node.timestamp=Date.now()),E},write:function(A,I,g,C,Q){for(var E=0;E<C;E++)try{B(I[g+E])}catch(A){throw new FA.ErrnoError(29)}return C&&(A.node.timestamp=Date.now()),E}}),FA.mkdev(C,Q,E)},forceLoadFile:function(A){if(A.isDevice||A.isFolder||A.link||A.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!C)throw new Error("Cannot load without read() or XMLHttpRequest.");try{A.contents=GA(C(A.url),!0),A.usedBytes=A.contents.length}catch(A){throw new FA.ErrnoError(29)}},createLazyFile:function(A,I,g,B,C){function Q(){this.lengthKnown=!1,this.chunks=[]}if(Q.prototype.get=function(A){if(!(A>this.length-1||A<0)){var I=A%this.chunkSize,g=A/this.chunkSize|0;return this.getter(g)[I]}},Q.prototype.setDataGetter=function(A){this.getter=A},Q.prototype.cacheLength=function(){var A=new XMLHttpRequest;if(A.open("HEAD",g,!1),A.send(null),!(A.status>=200&&A.status<300||304===A.status))throw new Error("Couldn't load "+g+". Status: "+A.status);var I,B=Number(A.getResponseHeader("Content-length")),C=(I=A.getResponseHeader("Accept-Ranges"))&&"bytes"===I,Q=(I=A.getResponseHeader("Content-Encoding"))&&"gzip"===I,E=1048576;C||(E=B);var i=this;i.setDataGetter((function(A){var I=A*E,C=(A+1)*E-1;if(C=Math.min(C,B-1),void 0===i.chunks[A]&&(i.chunks[A]=function(A,I){if(A>I)throw new Error("invalid range ("+A+", "+I+") or no bytes requested!");if(I>B-1)throw new Error("only "+B+" bytes available! programmer error!");var C=new XMLHttpRequest;if(C.open("GET",g,!1),B!==E&&C.setRequestHeader("Range","bytes="+A+"-"+I),C.responseType="arraybuffer",C.overrideMimeType&&C.overrideMimeType("text/plain; charset=x-user-defined"),C.send(null),!(C.status>=200&&C.status<300||304===C.status))throw new Error("Couldn't load "+g+". Status: "+C.status);return void 0!==C.response?new Uint8Array(C.response||[]):GA(C.responseText||"",!0)}(I,C)),void 0===i.chunks[A])throw new Error("doXHR failed!");return i.chunks[A]})),!Q&&B||(E=B=1,B=this.getter(0).length,E=B,S("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=B,this._chunkSize=E,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!F)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var E=new Q;Object.defineProperties(E,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var i={isDevice:!1,contents:E}}else i={isDevice:!1,url:g};var o=FA.createFile(A,I,i,B,C);i.contents?o.contents=i.contents:i.url&&(o.contents=null,o.url=i.url),Object.defineProperties(o,{usedBytes:{get:function(){return this.contents.length}}});var D={};function a(A,I,g,B,C){var Q=A.node.contents;if(C>=Q.length)return 0;var E=Math.min(Q.length-C,B);if(Q.slice)for(var i=0;i<E;i++)I[g+i]=Q[C+i];else for(i=0;i<E;i++)I[g+i]=Q.get(C+i);return E}return Object.keys(o.stream_ops).forEach((function(A){var I=o.stream_ops[A];D[A]=function(){return FA.forceLoadFile(o),I.apply(null,arguments)}})),D.read=function(A,I,g,B,C){return FA.forceLoadFile(o),a(A,I,g,B,C)},D.mmap=function(A,I,g,B,C){FA.forceLoadFile(o);var Q=hA();if(!Q)throw new FA.ErrnoError(48);return a(A,U,Q,I,g),{ptr:Q,allocated:!0}},o.stream_ops=D,o},createPreloadedFile:function(A,I,g,B,C,E,i,o,D,a){var w=I?sA.resolve(wA.join2(A,I)):A;function s(g){function Q(g){a&&a(),o||FA.createDataFile(A,I,g,B,C,D),E&&E(),z()}Browser.handledByPreloadPlugin(g,w,Q,(function(){i&&i(),z()}))||Q(g)}P(),"string"==typeof g?function(A,I,g,B){var C="al "+A;Q(A,(function(I){c(I,'Loading data file "'+A+'" failed (no arrayBuffer).'),s(new Uint8Array(I)),C&&z()}),(function(I){if(!g)throw'Loading data file "'+A+'" failed.';g()})),C&&P()}(g,0,i):s(g)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=FA.indexedDB();try{var C=B.open(FA.DB_NAME(),FA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=function(){S("creating db"),C.result.createObjectStore(FA.DB_STORE_NAME)},C.onsuccess=function(){var B=C.result.transaction([FA.DB_STORE_NAME],"readwrite"),Q=B.objectStore(FA.DB_STORE_NAME),E=0,i=0,o=A.length;function D(){0==i?I():g()}A.forEach((function(A){var I=Q.put(FA.analyzePath(A).object.contents,A);I.onsuccess=function(){++E+i==o&&D()},I.onerror=function(){i++,E+i==o&&D()}})),B.onerror=g},C.onerror=g},loadFilesFromDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=FA.indexedDB();try{var C=B.open(FA.DB_NAME(),FA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=g,C.onsuccess=function(){var B=C.result;try{var Q=B.transaction([FA.DB_STORE_NAME],"readonly")}catch(A){return void g(A)}var E=Q.objectStore(FA.DB_STORE_NAME),i=0,o=0,D=A.length;function a(){0==o?I():g()}A.forEach((function(A){var I=E.get(A);I.onsuccess=function(){FA.analyzePath(A).exists&&FA.unlink(A),FA.createDataFile(wA.dirname(A),wA.basename(A),I.result,!0,!0,!0),++i+o==D&&a()},I.onerror=function(){o++,i+o==D&&a()}})),Q.onerror=g},C.onerror=g}},yA={DEFAULT_POLLMASK:5,calculateAt:function(A,I,g){if(wA.isAbs(I))return I;var B;if(B=-100===A?FA.cwd():yA.getStreamFromFD(A).path,0==I.length){if(!g)throw new FA.ErrnoError(44);return B}return wA.join2(B,I)},doStat:function(A,I,g){try{var B=A(I)}catch(A){if(A&&A.node&&wA.normalize(I)!==wA.normalize(FA.getPath(A.node)))return-54;throw A}return d[g>>2]=B.dev,d[g+8>>2]=B.ino,d[g+12>>2]=B.mode,q[g+16>>2]=B.nlink,d[g+20>>2]=B.uid,d[g+24>>2]=B.gid,d[g+28>>2]=B.rdev,gA=[B.size>>>0,(IA=B.size,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+40>>2]=gA[0],d[g+44>>2]=gA[1],d[g+48>>2]=4096,d[g+52>>2]=B.blocks,gA=[Math.floor(B.atime.getTime()/1e3)>>>0,(IA=Math.floor(B.atime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+56>>2]=gA[0],d[g+60>>2]=gA[1],q[g+64>>2]=0,gA=[Math.floor(B.mtime.getTime()/1e3)>>>0,(IA=Math.floor(B.mtime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+72>>2]=gA[0],d[g+76>>2]=gA[1],q[g+80>>2]=0,gA=[Math.floor(B.ctime.getTime()/1e3)>>>0,(IA=Math.floor(B.ctime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+88>>2]=gA[0],d[g+92>>2]=gA[1],q[g+96>>2]=0,gA=[B.ino>>>0,(IA=B.ino,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+104>>2]=gA[0],d[g+108>>2]=gA[1],0},doMsync:function(A,I,g,B,C){var Q=K.slice(A,A+g);FA.msync(I,Q,C,g,B)},varargs:void 0,get:function(){return yA.varargs+=4,d[yA.varargs-4>>2]},getStr:function(A){return W(A)},getStreamFromFD:function(A){var I=FA.getStream(A);if(!I)throw new FA.ErrnoError(8);return I}};function rA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+A)}}var nA=void 0;function SA(A){for(var I="",g=A;K[g];)I+=nA[K[g++]];return I}var MA={},eA={},NA={};function kA(A){if(void 0===A)return"_unknown";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return I>=48&&I<=57?"_"+A:A}function cA(A,I){return A=kA(A),new Function("body","return function "+A+'() {\n    "use strict";    return body.apply(this, arguments);\n};\n')(I)}function JA(A,I){var g=cA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+"\n"+g.replace(/^Error(:[^\n]*)?\n/,""))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},g}var UA=void 0;function KA(A){throw new UA(A)}var LA=void 0;function YA(A){throw new LA(A)}function dA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&YA("Mismatched type converter count");for(var C=0;C<A.length;++C)qA(A[C],B[C])}A.forEach((function(A){NA[A]=I}));var C=new Array(I.length),Q=[],E=0;I.forEach((function(A,I){eA.hasOwnProperty(A)?C[I]=eA[A]:(Q.push(A),MA.hasOwnProperty(A)||(MA[A]=[]),MA[A].push((function(){C[I]=eA[A],++E===Q.length&&B(C)})))})),0===Q.length&&B(C)}function qA(A,I){var g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!("argPackAdvance"in I))throw new TypeError("registerType registeredInstance requires argPackAdvance");var B=I.name;if(A||KA('type "'+B+'" must have a positive integer typeid pointer'),eA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;KA("Cannot register type '"+B+"' twice")}if(eA[A]=I,delete NA[A],MA.hasOwnProperty(A)){var C=MA[A];delete MA[A],C.forEach((function(A){return A()}))}}var HA=[],lA=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function fA(A){return this.fromWireType(d[A>>2])}function uA(A,I){switch(I){case 2:return function(A){return this.fromWireType(H[A>>2])};case 3:return function(A){return this.fromWireType(l[A>>3])};default:throw new TypeError("Unknown float type: "+A)}}function WA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function mA(A){return Z.get(A)}function bA(I,g,B){return I.includes("j")?function(I,g,B){var C=A["dynCall_"+I];return B&&B.length?C.apply(null,[g].concat(B)):C.call(null,g)}(I,g,B):mA(g).apply(null,B)}var pA=void 0;function ZA(A){var I=hI(A),g=SA(I);return GI(I),g}function xA(A,I,g){switch(I){case 0:return g?function(A){return U[A]}:function(A){return K[A]};case 1:return g?function(A){return L[A>>1]}:function(A){return Y[A>>1]};case 2:return g?function(A){return d[A>>2]}:function(A){return q[A>>2]};default:throw new TypeError("Unknown integer type: "+A)}}var VA="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function XA(A,I){for(var g=A,B=g>>1,C=B+I/2;!(B>=C)&&Y[B];)++B;if((g=B<<1)-A>32&&VA)return VA.decode(K.subarray(A,g));for(var Q="",E=0;!(E>=I/2);++E){var i=L[A+2*E>>1];if(0==i)break;Q+=String.fromCharCode(i)}return Q}function TA(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,C=(g-=2)<2*A.length?g/2:A.length,Q=0;Q<C;++Q){var E=A.charCodeAt(Q);L[I>>1]=E,I+=2}return L[I>>1]=0,I-B}function OA(A){return 2*A.length}function vA(A,I){for(var g=0,B="";!(g>=I/4);){var C=d[A+4*g>>2];if(0==C)break;if(++g,C>=65536){var Q=C-65536;B+=String.fromCharCode(55296|Q>>10,56320|1023&Q)}else B+=String.fromCharCode(C)}return B}function jA(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,C=B+g-4,Q=0;Q<A.length;++Q){var E=A.charCodeAt(Q);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++Q)),d[I>>2]=E,(I+=4)+4>C)break}return d[I>>2]=0,I-B}function PA(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}function zA(A){var I=b(A)+1,g=sI(I);return g&&m(A,U,g,I),g}var _A=[];function $A(A){try{return e.grow(A-J.byteLength+65535>>>16),p(e.buffer),1}catch(A){}}var AI={};function II(){if(!II.strings){var A={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==("undefined"==typeof navigator?"undefined":D(navigator))&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:t||"./this.program"};for(var I in AI)void 0===AI[I]?delete A[I]:A[I]=AI[I];var g=[];for(var I in A)g.push(I+"="+A[I]);II.strings=g}return II.strings}function gI(A){return A%4==0&&(A%100!=0||A%400==0)}var BI=[31,29,31,30,31,30,31,31,30,31,30,31],CI=[31,28,31,30,31,30,31,31,30,31,30,31];function QI(A,I,g,B){var C=d[B+40>>2],Q={tm_sec:d[B>>2],tm_min:d[B+4>>2],tm_hour:d[B+8>>2],tm_mday:d[B+12>>2],tm_mon:d[B+16>>2],tm_year:d[B+20>>2],tm_wday:d[B+24>>2],tm_yday:d[B+28>>2],tm_isdst:d[B+32>>2],tm_gmtoff:d[B+36>>2],tm_zone:C?W(C):""},E=W(g),i={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var o in i)E=E.replace(new RegExp(o,"g"),i[o]);var D=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],a=["January","February","March","April","May","June","July","August","September","October","November","December"];function w(A,I,g){for(var B="number"==typeof A?A.toString():A||"";B.length<I;)B=g[0]+B;return B}function s(A,I){return w(A,I,"0")}function G(A,I){function g(A){return A<0?-1:A>0?1:0}var B;return 0===(B=g(A.getFullYear()-I.getFullYear()))&&0===(B=g(A.getMonth()-I.getMonth()))&&(B=g(A.getDate()-I.getDate())),B}function t(A){switch(A.getDay()){case 0:return new Date(A.getFullYear()-1,11,29);case 1:return A;case 2:return new Date(A.getFullYear(),0,3);case 3:return new Date(A.getFullYear(),0,2);case 4:return new Date(A.getFullYear(),0,1);case 5:return new Date(A.getFullYear()-1,11,31);case 6:return new Date(A.getFullYear()-1,11,30)}}function h(A){var I=function(A,I){for(var g=new Date(A.getTime());I>0;){var B=gI(g.getFullYear()),C=g.getMonth(),Q=(B?BI:CI)[C];if(!(I>Q-g.getDate()))return g.setDate(g.getDate()+I),g;I-=Q-g.getDate()+1,g.setDate(1),C<11?g.setMonth(C+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1))}return g}(new Date(A.tm_year+1900,0,1),A.tm_yday),g=new Date(I.getFullYear(),0,4),B=new Date(I.getFullYear()+1,0,4),C=t(g),Q=t(B);return G(C,I)<=0?G(Q,I)<=0?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}var R={"%a":function(A){return D[A.tm_wday].substring(0,3)},"%A":function(A){return D[A.tm_wday]},"%b":function(A){return a[A.tm_mon].substring(0,3)},"%B":function(A){return a[A.tm_mon]},"%C":function(A){return s((A.tm_year+1900)/100|0,2)},"%d":function(A){return s(A.tm_mday,2)},"%e":function(A){return w(A.tm_mday,2," ")},"%g":function(A){return h(A).toString().substring(2)},"%G":function(A){return h(A)},"%H":function(A){return s(A.tm_hour,2)},"%I":function(A){var I=A.tm_hour;return 0==I?I=12:I>12&&(I-=12),s(I,2)},"%j":function(A){return s(A.tm_mday+function(A,I){for(var g=0,B=0;B<=I;g+=A[B++]);return g}(gI(A.tm_year+1900)?BI:CI,A.tm_mon-1),3)},"%m":function(A){return s(A.tm_mon+1,2)},"%M":function(A){return s(A.tm_min,2)},"%n":function(){return"\n"},"%p":function(A){return A.tm_hour>=0&&A.tm_hour<12?"AM":"PM"},"%S":function(A){return s(A.tm_sec,2)},"%t":function(){return"\t"},"%u":function(A){return A.tm_wday||7},"%U":function(A){var I=A.tm_yday+7-A.tm_wday;return s(Math.floor(I/7),2)},"%V":function(A){var I=Math.floor((A.tm_yday+7-(A.tm_wday+6)%7)/7);if((A.tm_wday+371-A.tm_yday-2)%7<=2&&I++,I){if(53==I){var g=(A.tm_wday+371-A.tm_yday)%7;4==g||3==g&&gI(A.tm_year)||(I=1)}}else{I=52;var B=(A.tm_wday+7-A.tm_yday-1)%7;(4==B||5==B&&gI(A.tm_year%400-1))&&I++}return s(I,2)},"%w":function(A){return A.tm_wday},"%W":function(A){var I=A.tm_yday+7-(A.tm_wday+6)%7;return s(Math.floor(I/7),2)},"%y":function(A){return(A.tm_year+1900).toString().substring(2)},"%Y":function(A){return A.tm_year+1900},"%z":function(A){var I=A.tm_gmtoff,g=I>=0;return I=(I=Math.abs(I)/60)/60*100+I%60,(g?"+":"-")+String("0000"+I).slice(-4)},"%Z":function(A){return A.tm_zone},"%%":function(){return"%"}};for(var o in E=E.replace(/%%/g,"\0\0"),R)E.includes(o)&&(E=E.replace(new RegExp(o,"g"),R[o](Q)));var F=GA(E=E.replace(/\0\0/g,"%"),!1);return F.length>I?0:(function(A,I){U.set(A,I)}(F,A),F.length-1)}var EI=function(A,I,g,B){A||(A=this),this.parent=A,this.mount=A.mount,this.mounted=null,this.id=FA.nextInode++,this.name=I,this.mode=g,this.node_ops={},this.stream_ops={},this.rdev=B};Object.defineProperties(EI.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(A){A?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(A){A?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return FA.isDir(this.mode)}},isDevice:{get:function(){return FA.isChrdev(this.mode)}}}),FA.FSNode=EI,FA.staticInit(),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);nA=A}(),UA=A.BindingError=JA(Error,"BindingError"),LA=A.InternalError=JA(Error,"InternalError"),A.count_emval_handles=function(){for(var A=0,I=5;I<lA.length;++I)void 0!==lA[I]&&++A;return A},A.get_first_emval=function(){for(var A=5;A<lA.length;++A)if(void 0!==lA[A])return lA[A];return null},pA=A.UnboundTypeError=JA(Error,"UnboundTypeError");var iI=!1,oI="function"==typeof atob?atob:function(A){var I,g,B,C,Q,E,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="",D=0;A=A.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{I=i.indexOf(A.charAt(D++))<<2|(C=i.indexOf(A.charAt(D++)))>>4,g=(15&C)<<4|(Q=i.indexOf(A.charAt(D++)))>>2,B=(3&Q)<<6|(E=i.indexOf(A.charAt(D++))),o+=String.fromCharCode(I),64!==Q&&(o+=String.fromCharCode(g)),64!==E&&(o+=String.fromCharCode(B))}while(D<A.length);return o};function DI(A){if(CA(A))return function(A){if("boolean"==typeof y&&y){var I=Buffer.from(A,"base64");return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=oI(A),B=new Uint8Array(g.length),C=0;C<g.length;++C)B[C]=g.charCodeAt(C);return B}catch(A){throw new Error("Converting base64 string to bytes failed.")}}(A.slice(BA.length))}var aI,wI={g:function(A){return sI(A+24)+24},f:function(A,I,g){throw new aA(A).init(I,g),A},n:function(A,I,g){yA.varargs=g;try{var B=yA.getStreamFromFD(A);switch(I){case 0:return(C=yA.get())<0?-28:FA.createStream(B,C).fd;case 1:case 2:case 6:case 7:return 0;case 3:return B.flags;case 4:var C=yA.get();return B.flags|=C,0;case 5:return C=yA.get(),L[C+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return 28,d[tI()>>2]=28,-1}}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return-A.errno}},F:function(A,I,g){yA.varargs=g;try{var B=yA.getStreamFromFD(A);switch(I){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return B.tty?0:-59;case 21519:if(!B.tty)return-59;var C=yA.get();return d[C>>2]=0,0;case 21520:return B.tty?-28:-59;case 21531:return C=yA.get(),FA.ioctl(B,I,C);default:return-28}}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return-A.errno}},G:function(A,I,g,B){yA.varargs=B;try{I=yA.getStr(I),I=yA.calculateAt(A,I);var C=B?yA.get():0;return FA.open(I,g,C).fd}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return-A.errno}},y:function(A,I,g,B,C){},K:function(A,I,g,B,C){var Q=rA(g);qA(A,{name:I=SA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:C},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=U;else if(2===g)B=L;else{if(4!==g)throw new TypeError("Unknown boolean type size: "+I);B=d}return this.fromWireType(B[A>>Q])},destructorFunction:null})},r:function(I,g,B){I=SA(I),dA([],[g],(function(g){return g=g[0],A[I]=g.fromWireType(B),[]}))},J:function(A,I){qA(A,{name:I=SA(I),fromWireType:function(A){var I=function(A){return A||KA("Cannot use deleted val. handle = "+A),lA[A].value}(A);return function(A){A>4&&0==--lA[A].refcount&&(lA[A]=void 0,HA.push(A))}(A),I},toWireType:function(A,I){return function(A){switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=HA.length?HA.pop():lA.length;return lA[I]={refcount:1,value:A},I}}(I)},argPackAdvance:8,readValueFromPointer:fA,destructorFunction:null})},q:function(A,I,g){var B=rA(g);qA(A,{name:I=SA(I),fromWireType:function(A){return A},toWireType:function(A,I){return I},argPackAdvance:8,readValueFromPointer:uA(I,B),destructorFunction:null})},d:function(I,g,B,C,Q,E){var i=function(A,I){for(var g=[],B=0;B<A;B++)g.push(q[I+4*B>>2]);return g}(g,B);I=SA(I),Q=function(A,I){var g,B,C,Q=(A=SA(A)).includes("j")?(g=A,B=I,C=[],function(){return C.length=0,Object.assign(C,arguments),bA(g,B,C)}):mA(I);return"function"!=typeof Q&&KA("unknown function pointer with signature "+A+": "+I),Q}(C,Q),function(I,g,B){A.hasOwnProperty(I)?((void 0===B||void 0!==A[I].overloadTable&&void 0!==A[I].overloadTable[B])&&KA("Cannot register public name '"+I+"' twice"),function(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||KA("Function '"+g+"' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+A[I].overloadTable+")!"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}(A,I,I),A.hasOwnProperty(B)&&KA("Cannot register multiple overloads of a function with the same number of arguments ("+B+")!"),A[I].overloadTable[B]=g):(A[I]=g,void 0!==B&&(A[I].numArguments=B))}(I,(function(){!function(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||eA[I]||(NA[I]?NA[I].forEach(A):(g.push(I),B[I]=!0))})),new pA(A+": "+g.map(ZA).join([", "]))}("Cannot call "+I+" due to unbound types",i)}),g-1),dA([],i,(function(B){var C=[B[0],null].concat(B.slice(1));return function(I,g,B){A.hasOwnProperty(I)||YA("Replacing nonexistant public symbol"),void 0!==A[I].overloadTable&&void 0!==B?A[I].overloadTable[B]=g:(A[I]=g,A[I].argCount=B)}(I,function(A,I,g,B,C){var Q=I.length;Q<2&&KA("argTypes array size mismatch! Must at least get return value and 'this' types!");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var a="void"!==I[0].name,w="",s="";for(o=0;o<Q-2;++o)w+=(0!==o?", ":"")+"arg"+o,s+=(0!==o?", ":"")+"arg"+o+"Wired";var G="return function "+kA(A)+"("+w+") {\nif (arguments.length !== "+(Q-2)+") {\nthrowBindingError('function "+A+" called with ' + arguments.length + ' arguments, expected "+(Q-2)+" args!');\n}\n";i&&(G+="var destructors = [];\n");var t=i?"destructors":"null",h=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],R=[KA,B,C,WA,I[0],I[1]];for(E&&(G+="var thisWired = classParam.toWireType("+t+", this);\n"),o=0;o<Q-2;++o)G+="var arg"+o+"Wired = argType"+o+".toWireType("+t+", arg"+o+"); // "+I[o+2].name+"\n",h.push("argType"+o),R.push(I[o+2]);if(E&&(s="thisWired"+(s.length>0?", ":"")+s),G+=(a?"var rv = ":"")+"invoker(fn"+(s.length>0?", ":"")+s+");\n",i)G+="runDestructors(destructors);\n";else for(o=E?1:2;o<I.length;++o){var F=1===o?"thisWired":"arg"+(o-2)+"Wired";null!==I[o].destructorFunction&&(G+=F+"_dtor("+F+"); // "+I[o].name+"\n",h.push(F+"_dtor"),R.push(I[o].destructorFunction))}return a&&(G+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),G+="}\n",h.push(G),function(A,I){if(!(A instanceof Function))throw new TypeError("new_ called with constructor type "+D(A)+" which is not a function");var g=cA(A.name||"unknownFunctionName",(function(){}));g.prototype=A.prototype;var B=new g,C=A.apply(B,I);return C instanceof Object?C:B}(Function,h).apply(null,R)}(I,C,null,Q,E),g-1),[]}))},e:function(A,I,g,B,C){I=SA(I),-1===C&&(C=4294967295);var Q=rA(g),E=function(A){return A};if(0===B){var i=32-8*g;E=function(A){return A<<i>>>i}}var o=I.includes("unsigned");qA(A,{name:I,fromWireType:E,toWireType:o?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:xA(I,Q,0!==B),destructorFunction:null})},c:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function C(A){var I=q,g=I[A>>=2],C=I[A+1];return new B(J,C,g)}qA(A,{name:g=SA(g),fromWireType:C,argPackAdvance:8,readValueFromPointer:C},{ignoreDuplicateRegistrations:!0})},p:function(A,I){var g="std::string"===(I=SA(I));qA(A,{name:I,fromWireType:function(A){var I,B=q[A>>2],C=A+4;if(g)for(var Q=C,E=0;E<=B;++E){var i=C+E;if(E==B||0==K[i]){var o=W(Q,i-Q);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),Q=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(K[C+E]);I=D.join("")}return GI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var C="string"==typeof I;C||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||KA("Cannot pass non-string to std::string"),B=g&&C?b(I):I.length;var Q=sI(4+B+1),E=Q+4;if(q[Q>>2]=B,g&&C)m(I,K,E,B+1);else if(C)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(GI(E),KA("String has UTF-16 code units that do not fit in 8 bits")),K[E+i]=o}else for(i=0;i<B;++i)K[E+i]=I[i];return null!==A&&A.push(GI,Q),Q},argPackAdvance:8,readValueFromPointer:fA,destructorFunction:function(A){GI(A)}})},k:function(A,I,g){var B,C,Q,E,i;g=SA(g),2===I?(B=XA,C=TA,E=OA,Q=function(){return Y},i=1):4===I&&(B=vA,C=jA,E=PA,Q=function(){return q},i=2),qA(A,{name:g,fromWireType:function(A){for(var g,C=q[A>>2],E=Q(),o=A+4,D=0;D<=C;++D){var a=A+4+D*I;if(D==C||0==E[a>>i]){var w=B(o,a-o);void 0===g?g=w:(g+=String.fromCharCode(0),g+=w),o=a+I}}return GI(A),g},toWireType:function(A,B){"string"!=typeof B&&KA("Cannot pass non-string to C++ string type "+g);var Q=E(B),o=sI(4+Q+I);return q[o>>2]=Q>>i,C(B,o+4,Q+I),null!==A&&A.push(GI,o),o},argPackAdvance:8,readValueFromPointer:fA,destructorFunction:function(A){GI(A)}})},L:function(A,I){qA(A,{isVoid:!0,name:I=SA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},o:function(){return Date.now()},A:function(){throw 1/0},H:function(A,I){var g,B=new Date(1e3*(q[(g=A)>>2]+4294967296*d[g+4>>2]));d[I>>2]=B.getSeconds(),d[I+4>>2]=B.getMinutes(),d[I+8>>2]=B.getHours(),d[I+12>>2]=B.getDate(),d[I+16>>2]=B.getMonth(),d[I+20>>2]=B.getFullYear()-1900,d[I+24>>2]=B.getDay();var C=new Date(B.getFullYear(),0,1),Q=(B.getTime()-C.getTime())/864e5|0;d[I+28>>2]=Q,d[I+36>>2]=-60*B.getTimezoneOffset();var E=new Date(B.getFullYear(),6,1).getTimezoneOffset(),i=C.getTimezoneOffset(),o=0|(E!=i&&B.getTimezoneOffset()==Math.min(i,E));d[I+32>>2]=o},I:function A(I,g,B){A.called||(A.called=!0,function(A,I,g){var B=(new Date).getFullYear(),C=new Date(B,0,1),Q=new Date(B,6,1),E=C.getTimezoneOffset(),i=Q.getTimezoneOffset(),o=Math.max(E,i);function D(A){var I=A.toTimeString().match(/\(([A-Za-z ]+)\)$/);return I?I[1]:"GMT"}d[A>>2]=60*o,d[I>>2]=Number(E!=i);var a=D(C),w=D(Q),s=zA(a),G=zA(w);i<E?(q[g>>2]=s,q[g+4>>2]=G):(q[g>>2]=G,q[g+4>>2]=s)}(I,g,B))},a:function(){_("")},h:function(A,I,g){var B=function(A,I){var g;for(_A.length=0,I>>=2;g=K[A++];)I+=105!=g&I,_A.push(105==g?d[I]:l[I++>>1]),++I;return _A}(I,g);return iA[A].apply(null,B)},B:function(A){var I=K.length,g=2147483648;if((A>>>=0)>g)return!1;for(var B,C=1;C<=4;C*=2){var Q=I*(1+.2/C);if(Q=Math.min(Q,A+100663296),$A(Math.min(g,(B=Math.max(A,Q))+(65536-B%65536)%65536)))return!0}return!1},C:function(A,I){var g=0;return II().forEach((function(B,C){var Q=I+g;q[A+4*C>>2]=Q,function(A,I,g){for(var B=0;B<A.length;++B)U[I++>>0]=A.charCodeAt(B);U[I>>0]=0}(B,Q),g+=B.length+1})),0},D:function(A,I){var g=II();q[A>>2]=g.length;var B=0;return g.forEach((function(A){B+=A.length+1})),q[I>>2]=B,0},b:function(I,g){var B;B=I,T()||(A.onExit&&A.onExit(B),k=!0),h(B,new oA(B))},l:function(A){try{var I=yA.getStreamFromFD(A);return FA.close(I),0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}},E:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=q[I>>2],i=q[I+4>>2];I+=8;var o=FA.read(A,U,E,i,undefined);if(o<0)return-1;if(C+=o,o<i)break}return C}(yA.getStreamFromFD(A),I,g);return q[B>>2]=C,0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}},x:function(A,I,g,B,C){try{var Q=(o=g)+2097152>>>0<4194305-!!(i=I)?(i>>>0)+4294967296*o:NaN;if(isNaN(Q))return 61;var E=yA.getStreamFromFD(A);return FA.llseek(E,Q,B),gA=[E.position>>>0,(IA=E.position,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[C>>2]=gA[0],d[C+4>>2]=gA[1],E.getdents&&0===Q&&0===B&&(E.getdents=null),0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}var i,o},m:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=q[I>>2],i=q[I+4>>2];I+=8;var o=FA.write(A,U,E,i,undefined);if(o<0)return-1;C+=o}return C}(yA.getStreamFromFD(A),I,g);return q[B>>2]=C,0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}},s:function(A,I){var g=FI();try{return mA(A)(I)}catch(A){if(yI(g),A!==A+0)throw A;RI(1,0)}},u:function(A,I,g){var B=FI();try{return mA(A)(I,g)}catch(A){if(yI(B),A!==A+0)throw A;RI(1,0)}},t:function(A,I,g,B){var C=FI();try{return mA(A)(I,g,B)}catch(A){if(yI(C),A!==A+0)throw A;RI(1,0)}},i:function(A,I){var g=FI();try{mA(A)(I)}catch(A){if(yI(g),A!==A+0)throw A;RI(1,0)}},v:function(A,I,g){var B=FI();try{mA(A)(I,g)}catch(A){if(yI(B),A!==A+0)throw A;RI(1,0)}},w:function(A,I,g,B){var C=FI();try{mA(A)(I,g,B)}catch(A){if(yI(C),A!==A+0)throw A;RI(1,0)}},j:function(A,I,g,B,C){var Q=FI();try{mA(A)(I,g,B,C)}catch(A){if(yI(Q),A!==A+0)throw A;RI(1,0)}},M:QI,z:function(A,I,g,B){return QI(A,I,g,B)}},sI=(function(){var I={a:wI};function g(I,g){var B,C=I.exports;A.asm=C,p((e=A.asm.N).buffer),Z=A.asm.S,B=A.asm.O,V.unshift(B),z()}function C(A){g(A.instance)}function E(A){return function(){if(!n&&(R||F)){if("function"==typeof fetch&&!QA($))return fetch($,{credentials:"same-origin"}).then((function(A){if(!A.ok)throw"failed to load wasm binary file at '"+$+"'";return A.arrayBuffer()})).catch((function(){return EA($)}));if(Q)return new Promise((function(A,I){Q($,(function(I){A(new Uint8Array(I))}),I)}))}return Promise.resolve().then((function(){return EA($)}))}().then((function(A){return WebAssembly.instantiate(A,I)})).then((function(A){return A})).then(A,(function(A){M("failed to asynchronously prepare wasm: "+A),_(A)}))}if(P(),A.instantiateWasm)try{return A.instantiateWasm(I,g)}catch(A){return M("Module.instantiateWasm callback failed with error: "+A),!1}(n||"function"!=typeof WebAssembly.instantiateStreaming||CA($)||QA($)||y||"function"!=typeof fetch?E(C):fetch($,{credentials:"same-origin"}).then((function(A){return WebAssembly.instantiateStreaming(A,I).then(C,(function(A){return M("wasm streaming compile failed: "+A),M("falling back to ArrayBuffer instantiation"),E(C)}))}))).catch(B)}(),A.___wasm_call_ctors=function(){return(A.___wasm_call_ctors=A.asm.O).apply(null,arguments)},A._malloc=function(){return(sI=A._malloc=A.asm.P).apply(null,arguments)}),GI=A._free=function(){return(GI=A._free=A.asm.Q).apply(null,arguments)},tI=A.___errno_location=function(){return(tI=A.___errno_location=A.asm.R).apply(null,arguments)},hI=A.___getTypeName=function(){return(hI=A.___getTypeName=A.asm.T).apply(null,arguments)},RI=(A.__embind_initialize_bindings=function(){return(A.__embind_initialize_bindings=A.asm.U).apply(null,arguments)},A._setThrew=function(){return(RI=A._setThrew=A.asm.V).apply(null,arguments)}),FI=A.stackSave=function(){return(FI=A.stackSave=A.asm.W).apply(null,arguments)},yI=A.stackRestore=function(){return(yI=A.stackRestore=A.asm.X).apply(null,arguments)},rI=A.___cxa_is_pointer_type=function(){return(rI=A.___cxa_is_pointer_type=A.asm.Y).apply(null,arguments)};function nI(g){function B(){aI||(aI=!0,A.calledRun=!0,k||(A.noFSInit||FA.init.initialized||FA.init(),FA.ignorePermissions=!1,tA.init(),DA(V),I(A),A.onRuntimeInitialized&&A.onRuntimeInitialized(),function(){if(A.postRun)for("function"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)I=A.postRun.shift(),X.unshift(I);var I;DA(X)}()))}g=g||G,O>0||(function(){if(A.preRun)for("function"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)I=A.preRun.shift(),x.unshift(I);var I;DA(x)}(),O>0||(A.setStatus?(A.setStatus("Running..."),setTimeout((function(){setTimeout((function(){A.setStatus("")}),1),B()}),1)):B()))}if(A.dynCall_jiji=function(){return(A.dynCall_jiji=A.asm.Z).apply(null,arguments)},A.dynCall_viijii=function(){return(A.dynCall_viijii=A.asm._).apply(null,arguments)},A.dynCall_iiiiij=function(){return(A.dynCall_iiiiij=A.asm.$).apply(null,arguments)},A.dynCall_iiiiijj=function(){return(A.dynCall_iiiiijj=A.asm.aa).apply(null,arguments)},A.dynCall_iiiiiijj=function(){return(A.dynCall_iiiiiijj=A.asm.ba).apply(null,arguments)},A.FS=FA,j=function A(){aI||nI(),aI||(j=A)},A.preInit)for("function"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return nI(),A.ready});const s=w,G=function(){return new Promise((function(A){s({onRuntimeInitialized:function(){A({instance:this})}})}))};function t(A,I){return function(){return A.apply(I,arguments)}}const{toString:h}=Object.prototype,{getPrototypeOf:R}=Object,F=(y=Object.create(null),A=>{const I=h.call(A);return y[I]||(y[I]=I.slice(8,-1).toLowerCase())});var y;const r=A=>(A=A.toLowerCase(),I=>F(I)===A),n=A=>I=>typeof I===A,{isArray:S}=Array,M=n("undefined"),e=r("ArrayBuffer"),N=n("string"),k=n("function"),c=n("number"),J=A=>null!==A&&"object"==typeof A,U=A=>{if("object"!==F(A))return!1;const I=R(A);return!(null!==I&&I!==Object.prototype&&null!==Object.getPrototypeOf(I)||Symbol.toStringTag in A||Symbol.iterator in A)},K=r("Date"),L=r("File"),Y=r("Blob"),d=r("FileList"),q=r("URLSearchParams");function H(A,I,{allOwnKeys:g=!1}={}){if(null==A)return;let B,C;if("object"!=typeof A&&(A=[A]),S(A))for(B=0,C=A.length;B<C;B++)I.call(null,A[B],B,A);else{const C=g?Object.getOwnPropertyNames(A):Object.keys(A),Q=C.length;let E;for(B=0;B<Q;B++)E=C[B],I.call(null,A[E],E,A)}}const l=(f="undefined"!=typeof Uint8Array&&R(Uint8Array),A=>f&&A instanceof f);var f;const u=r("HTMLFormElement"),W=(({hasOwnProperty:A})=>(I,g)=>A.call(I,g))(Object.prototype),m=r("RegExp"),b=(A,I)=>{const g=Object.getOwnPropertyDescriptors(A),B={};H(g,((g,C)=>{!1!==I(g,C,A)&&(B[C]=g)})),Object.defineProperties(A,B)},p={isArray:S,isArrayBuffer:e,isBuffer:function(A){return null!==A&&!M(A)&&null!==A.constructor&&!M(A.constructor)&&k(A.constructor.isBuffer)&&A.constructor.isBuffer(A)},isFormData:A=>{const I="[object FormData]";return A&&("function"==typeof FormData&&A instanceof FormData||h.call(A)===I||k(A.toString)&&A.toString()===I)},isArrayBufferView:function(A){let I;return I="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(A):A&&A.buffer&&e(A.buffer),I},isString:N,isNumber:c,isBoolean:A=>!0===A||!1===A,isObject:J,isPlainObject:U,isUndefined:M,isDate:K,isFile:L,isBlob:Y,isRegExp:m,isFunction:k,isStream:A=>J(A)&&k(A.pipe),isURLSearchParams:q,isTypedArray:l,isFileList:d,forEach:H,merge:function A(){const I={},g=(g,B)=>{U(I[B])&&U(g)?I[B]=A(I[B],g):U(g)?I[B]=A({},g):S(g)?I[B]=g.slice():I[B]=g};for(let A=0,I=arguments.length;A<I;A++)arguments[A]&&H(arguments[A],g);return I},extend:(A,I,g,{allOwnKeys:B}={})=>(H(I,((I,B)=>{g&&k(I)?A[B]=t(I,g):A[B]=I}),{allOwnKeys:B}),A),trim:A=>A.trim?A.trim():A.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),stripBOM:A=>(65279===A.charCodeAt(0)&&(A=A.slice(1)),A),inherits:(A,I,g,B)=>{A.prototype=Object.create(I.prototype,B),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:I.prototype}),g&&Object.assign(A.prototype,g)},toFlatObject:(A,I,g,B)=>{let C,Q,E;const i={};if(I=I||{},null==A)return I;do{for(C=Object.getOwnPropertyNames(A),Q=C.length;Q-- >0;)E=C[Q],B&&!B(E,A,I)||i[E]||(I[E]=A[E],i[E]=!0);A=!1!==g&&R(A)}while(A&&(!g||g(A,I))&&A!==Object.prototype);return I},kindOf:F,kindOfTest:r,endsWith:(A,I,g)=>{A=String(A),(void 0===g||g>A.length)&&(g=A.length),g-=I.length;const B=A.indexOf(I,g);return-1!==B&&B===g},toArray:A=>{if(!A)return null;if(S(A))return A;let I=A.length;if(!c(I))return null;const g=new Array(I);for(;I-- >0;)g[I]=A[I];return g},forEachEntry:(A,I)=>{const g=(A&&A[Symbol.iterator]).call(A);let B;for(;(B=g.next())&&!B.done;){const g=B.value;I.call(A,g[0],g[1])}},matchAll:(A,I)=>{let g;const B=[];for(;null!==(g=A.exec(I));)B.push(g);return B},isHTMLForm:u,hasOwnProperty:W,hasOwnProp:W,reduceDescriptors:b,freezeMethods:A=>{b(A,((I,g)=>{const B=A[g];k(B)&&(I.enumerable=!1,"writable"in I?I.writable=!1:I.set||(I.set=()=>{throw Error("Can not read-only method '"+g+"'")}))}))},toObjectSet:(A,I)=>{const g={},B=A=>{A.forEach((A=>{g[A]=!0}))};return S(A)?B(A):B(String(A).split(I)),g},toCamelCase:A=>A.toLowerCase().replace(/[_-\s]([a-z\d])(\w*)/g,(function(A,I,g){return I.toUpperCase()+g})),noop:()=>{},toFiniteNumber:(A,I)=>(A=+A,Number.isFinite(A)?A:I)};function Z(A,I,g,B,C){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=A,this.name="AxiosError",I&&(this.code=I),g&&(this.config=g),B&&(this.request=B),C&&(this.response=C)}p.inherits(Z,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const x=Z.prototype,V={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((A=>{V[A]={value:A}})),Object.defineProperties(Z,V),Object.defineProperty(x,"isAxiosError",{value:!0}),Z.from=(A,I,g,B,C,Q)=>{const E=Object.create(x);return p.toFlatObject(A,E,(function(A){return A!==Error.prototype}),(A=>"isAxiosError"!==A)),Z.call(E,A.message,I,g,B,C),E.cause=A,E.name=A.name,Q&&Object.assign(E,Q),E};const X=Z,T=g(230);function O(A){return p.isPlainObject(A)||p.isArray(A)}function v(A){return p.endsWith(A,"[]")?A.slice(0,-2):A}function j(A,I,g){return A?A.concat(I).map((function(A,I){return A=v(A),!g&&I?"["+A+"]":A})).join(g?".":""):I}const P=p.toFlatObject(p,{},null,(function(A){return/^is[A-Z]/.test(A)})),z=function(A,I,g){if(!p.isObject(A))throw new TypeError("target must be an object");I=I||new(T||FormData);const B=(g=p.toFlatObject(g,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(A,I){return!p.isUndefined(I[A])}))).metaTokens,C=g.visitor||a,Q=g.dots,E=g.indexes,i=(g.Blob||"undefined"!=typeof Blob&&Blob)&&(o=I)&&p.isFunction(o.append)&&"FormData"===o[Symbol.toStringTag]&&o[Symbol.iterator];var o;if(!p.isFunction(C))throw new TypeError("visitor must be a function");function D(A){if(null===A)return"";if(p.isDate(A))return A.toISOString();if(!i&&p.isBlob(A))throw new X("Blob is not supported. Use a Buffer instead.");return p.isArrayBuffer(A)||p.isTypedArray(A)?i&&"function"==typeof Blob?new Blob([A]):Buffer.from(A):A}function a(A,g,C){let i=A;if(A&&!C&&"object"==typeof A)if(p.endsWith(g,"{}"))g=B?g:g.slice(0,-2),A=JSON.stringify(A);else if(p.isArray(A)&&function(A){return p.isArray(A)&&!A.some(O)}(A)||p.isFileList(A)||p.endsWith(g,"[]")&&(i=p.toArray(A)))return g=v(g),i.forEach((function(A,B){!p.isUndefined(A)&&null!==A&&I.append(!0===E?j([g],B,Q):null===E?g:g+"[]",D(A))})),!1;return!!O(A)||(I.append(j(C,g,Q),D(A)),!1)}const w=[],s=Object.assign(P,{defaultVisitor:a,convertValue:D,isVisitable:O});if(!p.isObject(A))throw new TypeError("data must be an object");return function A(g,B){if(!p.isUndefined(g)){if(-1!==w.indexOf(g))throw Error("Circular reference detected in "+B.join("."));w.push(g),p.forEach(g,(function(g,Q){!0===(!(p.isUndefined(g)||null===g)&&C.call(I,g,p.isString(Q)?Q.trim():Q,B,s))&&A(g,B?B.concat(Q):[Q])})),w.pop()}}(A),I};function _(A){const I={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,(function(A){return I[A]}))}function $(A,I){this._pairs=[],A&&z(A,this,I)}const AA=$.prototype;AA.append=function(A,I){this._pairs.push([A,I])},AA.toString=function(A){const I=A?function(I){return A.call(this,I,_)}:_;return this._pairs.map((function(A){return I(A[0])+"="+I(A[1])}),"").join("&")};const IA=$;function gA(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function BA(A,I,g){if(!I)return A;const B=g&&g.encode||gA,C=g&&g.serialize;let Q;if(Q=C?C(I,g):p.isURLSearchParams(I)?I.toString():new IA(I,g).toString(B),Q){const I=A.indexOf("#");-1!==I&&(A=A.slice(0,I)),A+=(-1===A.indexOf("?")?"?":"&")+Q}return A}const CA=class{constructor(){this.handlers=[]}use(A,I,g){return this.handlers.push({fulfilled:A,rejected:I,synchronous:!!g&&g.synchronous,runWhen:g?g.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){p.forEach(this.handlers,(function(I){null!==I&&A(I)}))}},QA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},EA="undefined"!=typeof URLSearchParams?URLSearchParams:IA,iA=FormData,oA=(()=>{let A;return("undefined"==typeof navigator||"ReactNative"!==(A=navigator.product)&&"NativeScript"!==A&&"NS"!==A)&&"undefined"!=typeof window&&"undefined"!=typeof document})(),DA={isBrowser:!0,classes:{URLSearchParams:EA,FormData:iA,Blob},isStandardBrowserEnv:oA,protocols:["http","https","file","blob","url","data"]},aA=function(A){function I(A,g,B,C){let Q=A[C++];const E=Number.isFinite(+Q),i=C>=A.length;return Q=!Q&&p.isArray(B)?B.length:Q,i?(p.hasOwnProp(B,Q)?B[Q]=[B[Q],g]:B[Q]=g,!E):(B[Q]&&p.isObject(B[Q])||(B[Q]=[]),I(A,g,B[Q],C)&&p.isArray(B[Q])&&(B[Q]=function(A){const I={},g=Object.keys(A);let B;const C=g.length;let Q;for(B=0;B<C;B++)Q=g[B],I[Q]=A[Q];return I}(B[Q])),!E)}if(p.isFormData(A)&&p.isFunction(A.entries)){const g={};return p.forEachEntry(A,((A,B)=>{I(function(A){return p.matchAll(/\w+|\[(\w*)]/g,A).map((A=>"[]"===A[0]?"":A[1]||A[0]))}(A),B,g,0)})),g}return null},wA=DA.isStandardBrowserEnv?{write:function(A,I,g,B,C,Q){const E=[];E.push(A+"="+encodeURIComponent(I)),p.isNumber(g)&&E.push("expires="+new Date(g).toGMTString()),p.isString(B)&&E.push("path="+B),p.isString(C)&&E.push("domain="+C),!0===Q&&E.push("secure"),document.cookie=E.join("; ")},read:function(A){const I=document.cookie.match(new RegExp("(^|;\\s*)("+A+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove:function(A){this.write(A,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}};function sA(A,I){return A&&!/^([a-z][a-z\d+\-.]*:)?\/\//i.test(I)?function(A,I){return I?A.replace(/\/+$/,"")+"/"+I.replace(/^\/+/,""):A}(A,I):I}const GA=DA.isStandardBrowserEnv?function(){const A=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement("a");let g;function B(g){let B=g;return A&&(I.setAttribute("href",B),B=I.href),I.setAttribute("href",B),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,""):"",host:I.host,search:I.search?I.search.replace(/^\?/,""):"",hash:I.hash?I.hash.replace(/^#/,""):"",hostname:I.hostname,port:I.port,pathname:"/"===I.pathname.charAt(0)?I.pathname:"/"+I.pathname}}return g=B(window.location.href),function(A){const I=p.isString(A)?B(A):A;return I.protocol===g.protocol&&I.host===g.host}}():function(){return!0};function tA(A,I,g){X.call(this,null==A?"canceled":A,X.ERR_CANCELED,I,g),this.name="CanceledError"}p.inherits(tA,X,{__CANCEL__:!0});const hA=tA,RA=p.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),FA=Symbol("internals"),yA=Symbol("defaults");function rA(A){return A&&String(A).trim().toLowerCase()}function nA(A){return!1===A||null==A?A:p.isArray(A)?A.map(nA):String(A)}function SA(A,I,g,B){return p.isFunction(B)?B.call(this,I,g):p.isString(I)?p.isString(B)?-1!==I.indexOf(B):p.isRegExp(B)?B.test(I):void 0:void 0}function MA(A,I){I=I.toLowerCase();const g=Object.keys(A);let B,C=g.length;for(;C-- >0;)if(B=g[C],I===B.toLowerCase())return B;return null}function eA(A,I){A&&this.set(A),this[yA]=I||null}Object.assign(eA.prototype,{set:function(A,I,g){const B=this;function C(A,I,g){const C=rA(I);if(!C)throw new Error("header name must be a non-empty string");const Q=MA(B,C);(!Q||!0===g||!1!==B[Q]&&!1!==g)&&(B[Q||I]=nA(A))}return p.isPlainObject(A)?p.forEach(A,((A,g)=>{C(A,g,I)})):C(I,A,g),this},get:function(A,I){if(!(A=rA(A)))return;const g=MA(this,A);if(g){const A=this[g];if(!I)return A;if(!0===I)return function(A){const I=Object.create(null),g=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let B;for(;B=g.exec(A);)I[B[1]]=B[2];return I}(A);if(p.isFunction(I))return I.call(this,A,g);if(p.isRegExp(I))return I.exec(A);throw new TypeError("parser must be boolean|regexp|function")}},has:function(A,I){if(A=rA(A)){const g=MA(this,A);return!(!g||I&&!SA(0,this[g],g,I))}return!1},delete:function(A,I){const g=this;let B=!1;function C(A){if(A=rA(A)){const C=MA(g,A);!C||I&&!SA(0,g[C],C,I)||(delete g[C],B=!0)}}return p.isArray(A)?A.forEach(C):C(A),B},clear:function(){return Object.keys(this).forEach(this.delete.bind(this))},normalize:function(A){const I=this,g={};return p.forEach(this,((B,C)=>{const Q=MA(g,C);if(Q)return I[Q]=nA(B),void delete I[C];const E=A?function(A){return A.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,((A,I,g)=>I.toUpperCase()+g))}(C):String(C).trim();E!==C&&delete I[C],I[E]=nA(B),g[E]=!0})),this},toJSON:function(A){const I=Object.create(null);return p.forEach(Object.assign({},this[yA]||null,this),((g,B)=>{null!=g&&!1!==g&&(I[B]=A&&p.isArray(g)?g.join(", "):g)})),I}}),Object.assign(eA,{from:function(A){return p.isString(A)?new this((A=>{const I={};let g,B,C;return A&&A.split("\n").forEach((function(A){C=A.indexOf(":"),g=A.substring(0,C).trim().toLowerCase(),B=A.substring(C+1).trim(),!g||I[g]&&RA[g]||("set-cookie"===g?I[g]?I[g].push(B):I[g]=[B]:I[g]=I[g]?I[g]+", "+B:B)})),I})(A)):A instanceof this?A:new this(A)},accessor:function(A){const I=(this[FA]=this[FA]={accessors:{}}).accessors,g=this.prototype;function B(A){const B=rA(A);I[B]||(function(A,I){const g=p.toCamelCase(" "+I);["get","set","has"].forEach((B=>{Object.defineProperty(A,B+g,{value:function(A,g,C){return this[B].call(this,I,A,g,C)},configurable:!0})}))}(g,A),I[B]=!0)}return p.isArray(A)?A.forEach(B):B(A),this}}),eA.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent"]),p.freezeMethods(eA.prototype),p.freezeMethods(eA);const NA=eA;function kA(A,I){let g=0;const B=function(A,I){A=A||10;const g=new Array(A),B=new Array(A);let C,Q=0,E=0;return I=void 0!==I?I:1e3,function(i){const o=Date.now(),D=B[E];C||(C=o),g[Q]=i,B[Q]=o;let a=E,w=0;for(;a!==Q;)w+=g[a++],a%=A;if(Q=(Q+1)%A,Q===E&&(E=(E+1)%A),o-C<I)return;const s=D&&o-D;return s?Math.round(1e3*w/s):void 0}}(50,250);return C=>{const Q=C.loaded,E=C.lengthComputable?C.total:void 0,i=Q-g,o=B(i);g=Q;const D={loaded:Q,total:E,progress:E?Q/E:void 0,bytes:i,rate:o||void 0,estimated:o&&E&&Q<=E?(E-Q)/o:void 0};D[I?"download":"upload"]=!0,A(D)}}function cA(A){return new Promise((function(I,g){let B=A.data;const C=NA.from(A.headers).normalize(),Q=A.responseType;let E;function i(){A.cancelToken&&A.cancelToken.unsubscribe(E),A.signal&&A.signal.removeEventListener("abort",E)}p.isFormData(B)&&DA.isStandardBrowserEnv&&C.setContentType(!1);let o=new XMLHttpRequest;if(A.auth){const I=A.auth.username||"",g=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";C.set("Authorization","Basic "+btoa(I+":"+g))}const D=sA(A.baseURL,A.url);function a(){if(!o)return;const B=NA.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders());!function(A,I,g){const B=g.config.validateStatus;g.status&&B&&!B(g.status)?I(new X("Request failed with status code "+g.status,[X.ERR_BAD_REQUEST,X.ERR_BAD_RESPONSE][Math.floor(g.status/100)-4],g.config,g.request,g)):A(g)}((function(A){I(A),i()}),(function(A){g(A),i()}),{data:Q&&"text"!==Q&&"json"!==Q?o.response:o.responseText,status:o.status,statusText:o.statusText,headers:B,config:A,request:o}),o=null}if(o.open(A.method.toUpperCase(),BA(D,A.params,A.paramsSerializer),!0),o.timeout=A.timeout,"onloadend"in o?o.onloadend=a:o.onreadystatechange=function(){o&&4===o.readyState&&(0!==o.status||o.responseURL&&0===o.responseURL.indexOf("file:"))&&setTimeout(a)},o.onabort=function(){o&&(g(new X("Request aborted",X.ECONNABORTED,A,o)),o=null)},o.onerror=function(){g(new X("Network Error",X.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let I=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded";const B=A.transitional||QA;A.timeoutErrorMessage&&(I=A.timeoutErrorMessage),g(new X(I,B.clarifyTimeoutError?X.ETIMEDOUT:X.ECONNABORTED,A,o)),o=null},DA.isStandardBrowserEnv){const I=(A.withCredentials||GA(D))&&A.xsrfCookieName&&wA.read(A.xsrfCookieName);I&&C.set(A.xsrfHeaderName,I)}void 0===B&&C.setContentType(null),"setRequestHeader"in o&&p.forEach(C.toJSON(),(function(A,I){o.setRequestHeader(I,A)})),p.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),Q&&"json"!==Q&&(o.responseType=A.responseType),"function"==typeof A.onDownloadProgress&&o.addEventListener("progress",kA(A.onDownloadProgress,!0)),"function"==typeof A.onUploadProgress&&o.upload&&o.upload.addEventListener("progress",kA(A.onUploadProgress)),(A.cancelToken||A.signal)&&(E=I=>{o&&(g(!I||I.type?new hA(null,A,o):I),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(E),A.signal&&(A.signal.aborted?E():A.signal.addEventListener("abort",E)));const w=function(A){const I=/^([-+\w]{1,25})(:?\/\/|:)/.exec(A);return I&&I[1]||""}(D);w&&-1===DA.protocols.indexOf(w)?g(new X("Unsupported protocol "+w+":",X.ERR_BAD_REQUEST,A)):o.send(B||null)}))}const JA={http:cA,xhr:cA},UA=A=>{if(p.isString(A)){const I=JA[A];if(!A)throw Error(p.hasOwnProp(A)?`Adapter '${A}' is not available in the build`:`Can not resolve adapter '${A}'`);return I}if(!p.isFunction(A))throw new TypeError("adapter is not a function");return A},KA={"Content-Type":"application/x-www-form-urlencoded"},LA={transitional:QA,adapter:function(){let A;return"undefined"!=typeof XMLHttpRequest?A=UA("xhr"):"undefined"!=typeof process&&"process"===p.kindOf(process)&&(A=UA("http")),A}(),transformRequest:[function(A,I){const g=I.getContentType()||"",B=g.indexOf("application/json")>-1,C=p.isObject(A);if(C&&p.isHTMLForm(A)&&(A=new FormData(A)),p.isFormData(A))return B&&B?JSON.stringify(aA(A)):A;if(p.isArrayBuffer(A)||p.isBuffer(A)||p.isStream(A)||p.isFile(A)||p.isBlob(A))return A;if(p.isArrayBufferView(A))return A.buffer;if(p.isURLSearchParams(A))return I.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),A.toString();let Q;if(C){if(g.indexOf("application/x-www-form-urlencoded")>-1)return function(A,I){return z(A,new DA.classes.URLSearchParams,Object.assign({visitor:function(A,I,g,B){return DA.isNode&&p.isBuffer(A)?(this.append(I,A.toString("base64")),!1):B.defaultVisitor.apply(this,arguments)}},I))}(A,this.formSerializer).toString();if((Q=p.isFileList(A))||g.indexOf("multipart/form-data")>-1){const I=this.env&&this.env.FormData;return z(Q?{"files[]":A}:A,I&&new I,this.formSerializer)}}return C||B?(I.setContentType("application/json",!1),function(A,I,g){if(p.isString(A))try{return(0,JSON.parse)(A),p.trim(A)}catch(A){if("SyntaxError"!==A.name)throw A}return(0,JSON.stringify)(A)}(A)):A}],transformResponse:[function(A){const I=this.transitional||LA.transitional,g=I&&I.forcedJSONParsing,B="json"===this.responseType;if(A&&p.isString(A)&&(g&&!this.responseType||B)){const g=!(I&&I.silentJSONParsing)&&B;try{return JSON.parse(A)}catch(A){if(g){if("SyntaxError"===A.name)throw X.from(A,X.ERR_BAD_RESPONSE,this,null,this.response);throw A}}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:DA.classes.FormData,Blob:DA.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};p.forEach(["delete","get","head"],(function(A){LA.headers[A]={}})),p.forEach(["post","put","patch"],(function(A){LA.headers[A]=p.merge(KA)}));const YA=LA;function dA(A,I){const g=this||YA,B=I||g,C=NA.from(B.headers);let Q=B.data;return p.forEach(A,(function(A){Q=A.call(g,Q,C.normalize(),I?I.status:void 0)})),C.normalize(),Q}function qA(A){return!(!A||!A.__CANCEL__)}function HA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new hA}function lA(A){return HA(A),A.headers=NA.from(A.headers),A.data=dA.call(A,A.transformRequest),(A.adapter||YA.adapter)(A).then((function(I){return HA(A),I.data=dA.call(A,A.transformResponse,I),I.headers=NA.from(I.headers),I}),(function(I){return qA(I)||(HA(A),I&&I.response&&(I.response.data=dA.call(A,A.transformResponse,I.response),I.response.headers=NA.from(I.response.headers))),Promise.reject(I)}))}function fA(A,I){I=I||{};const g={};function B(A,I){return p.isPlainObject(A)&&p.isPlainObject(I)?p.merge(A,I):p.isPlainObject(I)?p.merge({},I):p.isArray(I)?I.slice():I}function C(g){return p.isUndefined(I[g])?p.isUndefined(A[g])?void 0:B(void 0,A[g]):B(A[g],I[g])}function Q(A){if(!p.isUndefined(I[A]))return B(void 0,I[A])}function E(g){return p.isUndefined(I[g])?p.isUndefined(A[g])?void 0:B(void 0,A[g]):B(void 0,I[g])}function i(g){return g in I?B(A[g],I[g]):g in A?B(void 0,A[g]):void 0}const o={url:Q,method:Q,data:Q,baseURL:E,transformRequest:E,transformResponse:E,paramsSerializer:E,timeout:E,timeoutMessage:E,withCredentials:E,adapter:E,responseType:E,xsrfCookieName:E,xsrfHeaderName:E,onUploadProgress:E,onDownloadProgress:E,decompress:E,maxContentLength:E,maxBodyLength:E,beforeRedirect:E,transport:E,httpAgent:E,httpsAgent:E,cancelToken:E,socketPath:E,responseEncoding:E,validateStatus:i};return p.forEach(Object.keys(A).concat(Object.keys(I)),(function(A){const I=o[A]||C,B=I(A);p.isUndefined(B)&&I!==i||(g[A]=B)})),g}const uA={};["object","boolean","number","function","string","symbol"].forEach(((A,I)=>{uA[A]=function(g){return typeof g===A||"a"+(I<1?"n ":" ")+A}}));const WA={};uA.transitional=function(A,I,g){function B(A,I){return"[Axios v1.1.3] Transitional option '"+A+"'"+I+(g?". "+g:"")}return(g,C,Q)=>{if(!1===A)throw new X(B(C," has been removed"+(I?" in "+I:"")),X.ERR_DEPRECATED);return I&&!WA[C]&&(WA[C]=!0,console.warn(B(C," has been deprecated since v"+I+" and will be removed in the near future"))),!A||A(g,C,Q)}};const mA={assertOptions:function(A,I,g){if("object"!=typeof A)throw new X("options must be an object",X.ERR_BAD_OPTION_VALUE);const B=Object.keys(A);let C=B.length;for(;C-- >0;){const Q=B[C],E=I[Q];if(E){const I=A[Q],g=void 0===I||E(I,Q,A);if(!0!==g)throw new X("option "+Q+" must be "+g,X.ERR_BAD_OPTION_VALUE)}else if(!0!==g)throw new X("Unknown option "+Q,X.ERR_BAD_OPTION)}},validators:uA},bA=mA.validators;class pA{constructor(A){this.defaults=A,this.interceptors={request:new CA,response:new CA}}request(A,I){"string"==typeof A?(I=I||{}).url=A:I=A||{},I=fA(this.defaults,I);const{transitional:g,paramsSerializer:B}=I;void 0!==g&&mA.assertOptions(g,{silentJSONParsing:bA.transitional(bA.boolean),forcedJSONParsing:bA.transitional(bA.boolean),clarifyTimeoutError:bA.transitional(bA.boolean)},!1),void 0!==B&&mA.assertOptions(B,{encode:bA.function,serialize:bA.function},!0),I.method=(I.method||this.defaults.method||"get").toLowerCase();const C=I.headers&&p.merge(I.headers.common,I.headers[I.method]);C&&p.forEach(["delete","get","head","post","put","patch","common"],(function(A){delete I.headers[A]})),I.headers=new NA(I.headers,C);const Q=[];let E=!0;this.interceptors.request.forEach((function(A){"function"==typeof A.runWhen&&!1===A.runWhen(I)||(E=E&&A.synchronous,Q.unshift(A.fulfilled,A.rejected))}));const i=[];let o;this.interceptors.response.forEach((function(A){i.push(A.fulfilled,A.rejected)}));let D,a=0;if(!E){const A=[lA.bind(this),void 0];for(A.unshift.apply(A,Q),A.push.apply(A,i),D=A.length,o=Promise.resolve(I);a<D;)o=o.then(A[a++],A[a++]);return o}D=Q.length;let w=I;for(a=0;a<D;){const A=Q[a++],I=Q[a++];try{w=A(w)}catch(A){I.call(this,A);break}}try{o=lA.call(this,w)}catch(A){return Promise.reject(A)}for(a=0,D=i.length;a<D;)o=o.then(i[a++],i[a++]);return o}getUri(A){return BA(sA((A=fA(this.defaults,A)).baseURL,A.url),A.params,A.paramsSerializer)}}p.forEach(["delete","get","head","options"],(function(A){pA.prototype[A]=function(I,g){return this.request(fA(g||{},{method:A,url:I,data:(g||{}).data}))}})),p.forEach(["post","put","patch"],(function(A){function I(I){return function(g,B,C){return this.request(fA(C||{},{method:A,headers:I?{"Content-Type":"multipart/form-data"}:{},url:g,data:B}))}}pA.prototype[A]=I(),pA.prototype[A+"Form"]=I(!0)}));const ZA=pA;class xA{constructor(A){if("function"!=typeof A)throw new TypeError("executor must be a function.");let I;this.promise=new Promise((function(A){I=A}));const g=this;this.promise.then((A=>{if(!g._listeners)return;let I=g._listeners.length;for(;I-- >0;)g._listeners[I](A);g._listeners=null})),this.promise.then=A=>{let I;const B=new Promise((A=>{g.subscribe(A),I=A})).then(A);return B.cancel=function(){g.unsubscribe(I)},B},A((function(A,B,C){g.reason||(g.reason=new hA(A,B,C),I(g.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){this.reason?A(this.reason):this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;const I=this._listeners.indexOf(A);-1!==I&&this._listeners.splice(I,1)}static source(){let A;return{token:new xA((function(I){A=I})),cancel:A}}}const VA=xA,XA=function A(I){const g=new ZA(I),B=t(ZA.prototype.request,g);return p.extend(B,ZA.prototype,g,{allOwnKeys:!0}),p.extend(B,g,null,{allOwnKeys:!0}),B.create=function(g){return A(fA(I,g))},B}(YA);XA.Axios=ZA,XA.CanceledError=hA,XA.CancelToken=VA,XA.isCancel=qA,XA.VERSION="1.1.3",XA.toFormData=z,XA.AxiosError=X,XA.Cancel=XA.CanceledError,XA.all=function(A){return Promise.all(A)},XA.spread=function(A){return function(I){return A.apply(null,I)}},XA.isAxiosError=function(A){return p.isObject(A)&&!0===A.isAxiosError},XA.formToJSON=A=>aA(p.isHTMLForm(A)?new FormData(A):A);const TA=XA,{Axios:OA,AxiosError:vA,CanceledError:jA,isCancel:PA,CancelToken:zA,VERSION:_A,all:$A,Cancel:AI,isAxiosError:II,spread:gI,toFormData:BI}=TA,CI=TA;var QI=function(){function A(){C(this,A)}var g;return E(A,null,[{key:"fetchRemoteData",value:(g=I(o().mark((function A(I){var g;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,CI.get(I,{responseType:"arraybuffer"});case 3:return g=A.sent,A.abrupt("return",new Uint8Array(g.data));case 7:throw A.prev=7,A.t0=A.catch(0),A.t0;case 10:case"end":return A.stop()}}),A,null,[[0,7]])}))),function(A){return g.apply(this,arguments)})},{key:"string2Uint8Data",value:function(A){for(var I=new Uint8Array(A.length),g=0;g<I.length;g++)I[g]=255&A.charCodeAt(g);return I}},{key:"uint8Data2String",value:function(A){return String.fromCharCode.apply(String,A)}},{key:"parseMultiFile",value:function(I){var g=A.uint8Data2String(I).split("\n"),B=[],C=0;return g.forEach((function(A){if((A=A.trim())&&!A.startsWith("#"))switch(C){case 0:return void(C=1);case 1:A.match(/^\d+$/)||B.push(A);case 2:case 3:case 4:return void C++;case 5:return void(C=1)}})),B}}]),A}(),EI=function(){function A(){C(this,A),this.instance,this.markerCount=0,this.multiMarkerCount=0,this.cameraCount=0,this.version="0.1.3",console.info("ARToolkit ",this.version)}var B,Q,i,D,a;return E(A,[{key:"init",value:(a=I(o().mark((function A(){var I;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,G();case 2:return I=A.sent,this.instance=I.instance,this._decorate(),("undefined"!=typeof window?window:g.g).artoolkit=this,A.abrupt("return",this);case 8:case"end":return A.stop()}}),A,this)}))),function(){return a.apply(this,arguments)})},{key:"_decorate",value:function(){var A=this;for(var I in["setup","teardown","setupAR2","setLogLevel","getLogLevel","setDebugMode","getDebugMode","getProcessingImage","setMarkerInfoDir","setMarkerInfoVertex","getTransMatSquare","getTransMatSquareCont","getTransMatMultiSquare","getTransMatMultiSquareRobust","getMultiMarkerNum","getMultiMarkerCount","detectMarker","getMarkerNum","detectNFTMarker","getNFTMarker","getMarker","getMultiEachMarker","setProjectionNearPlane","getProjectionNearPlane","setProjectionFarPlane","getProjectionFarPlane","setThresholdMode","getThresholdMode","setThreshold","getThreshold","setPatternDetectionMode","getPatternDetectionMode","setMatrixCodeType","getMatrixCodeType","setLabelingMode","getLabelingMode","setPattRatio","getPattRatio","setImageProcMode","getImageProcMode"].forEach((function(I){A[I]=A.instance[I]})),this.instance)I.match(/^AR/)&&(this[I]=this.instance[I])}},{key:"loadCamera",value:(D=I(o().mark((function A(I){var g,B;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(g="/camera_param_"+this.cameraCount++,!(I instanceof Uint8Array)){A.next=5;break}B=I,A.next=14;break;case 5:return A.prev=5,A.next=8,QI.fetchRemoteData(I);case 8:B=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(B,g),A.abrupt("return",this.instance._loadCamera(g));case 16:case"end":return A.stop()}}),A,this,[[5,11]])}))),function(A){return D.apply(this,arguments)})},{key:"addMarker",value:(i=I(o().mark((function A(I,g){var B,C;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(B="/marker_"+this.markerCount++,-1===g.indexOf("\n")){A.next=5;break}C=QI.string2Uint8Data(g),A.next=14;break;case 5:return A.prev=5,A.next=8,QI.fetchRemoteData(g);case 8:C=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(C,B),A.abrupt("return",this.instance._addMarker(I,B));case 16:case"end":return A.stop()}}),A,this,[[5,11]])}))),function(A,I){return i.apply(this,arguments)})},{key:"addMultiMarker",value:(Q=I(o().mark((function A(g,B){var C,Q,E,i,D,a,w;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return C="/multi_marker_"+this.multiMarkerCount++,A.next=3,QI.fetchRemoteData(B);case 3:return Q=A.sent,E=QI.parseMultiFile(Q),i=function(){var A=I(o().mark((function A(I){var g,C;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return g=new URL(I,B).toString(),A.next=3,QI.fetchRemoteData(g);case 3:C=A.sent,this._storeDataFile(C,I);case 5:case"end":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),D=E.map(i,this),A.next=9,Promise.all(D);case 9:return a=this.instance._addMultiMarker(g,C),w=this.instance.getMultiMarkerNum(g,a),A.abrupt("return",[a,w]);case 12:case"end":return A.stop()}}),A,this)}))),function(A,I){return Q.apply(this,arguments)})},{key:"addNFTMarker",value:(B=I(o().mark((function A(g,B){var C,Q,E,i;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return C="/markerNFT_"+this.markerCount++,Q=["fset","iset","fset3"],E=function(){var A=I(o().mark((function A(I){var g,Q,E;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return g=B+"."+I,Q=C+"."+I,A.next=4,QI.fetchRemoteData(g);case 4:E=A.sent,this._storeDataFile(E,Q);case 6:case"end":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),i=Q.map(E,this),A.next=6,Promise.all(i);case 6:return A.abrupt("return",this.instance._addNFTMarker(g,C));case 7:case"end":return A.stop()}}),A,this)}))),function(A,I){return B.apply(this,arguments)})},{key:"_storeDataFile",value:function(A,I){this.instance.FS.writeFile(I,A,{encoding:"binary"})}}],[{key:"UNKNOWN_MARKER",get:function(){return-1}},{key:"PATTERN_MARKER",get:function(){return 0}},{key:"BARCODE_MARKER",get:function(){return 1}},{key:"NFT_MARKER",get:function(){return 2}}]),A}();function iI(A,I,g){return I in A?Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}):A[I]=g,A}function oI(A,I){var g=Object.keys(A);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(A);I&&(B=B.filter((function(I){return Object.getOwnPropertyDescriptor(A,I).enumerable}))),g.push.apply(g,B)}return g}function DI(A){for(var I=1;I<arguments.length;I++){var g=null!=arguments[I]?arguments[I]:{};I%2?oI(Object(g),!0).forEach((function(I){iI(A,I,g[I])})):Object.getOwnPropertyDescriptors?Object.defineProperties(A,Object.getOwnPropertyDescriptors(g)):oI(Object(g)).forEach((function(I){Object.defineProperty(A,I,Object.getOwnPropertyDescriptor(g,I))}))}return A}var aI=function(){function A(I,g,B,Q){C(this,A),this.options=DI(DI({},{canvas:null,orientation:"landscape"}),Q),this.id=-1,this.width=I,this.height=g,this.image,this.orientation=this.options.orientation,this.cameraParam=B,this.cameraId=-1,this.cameraLoaded=!1,this.artoolkit,this.listeners={},this.defaultMarkerWidth=1,this.patternMarkers={},this.barcodeMarkers={},this.nftMarkers={},this.transform_mat=new Float32Array(16),this.transformGL_RH=new Float64Array(16),this.videoWidth=I,this.videoHeight=g,this.videoSize=this.videoWidth*this.videoHeight,this.framepointer=null,this.framesize=null,this.dataHeap=null,this.videoLuma=null,this.camera_mat=null,this.marker_transform_mat=null,this.videoLumaPointer=null,this.options.canvas?this.canvas=this.options.canvas:"undefined"!=typeof document&&(this.canvas=document.createElement("canvas")),this.canvas?(this.canvas.width=I,this.canvas.height=g,this.ctx=this.canvas.getContext("2d")):console.warn("No canvas available"),this.nftMarkerFound=!1,this.nftMarkerFoundTime=!1,this.nftMarkerCount=0,this._bwpointer=!1}var g,B,Q,i,D,a;return E(A,[{key:"dispose",value:function(){for(var A in this.cameraId=-1,this.cameraParam="",this.cameraLoaded=!1,this.id>-1&&this.artoolkit.teardown(this.id),this.image&&this.image.srcObject,this)this[A]=null}},{key:"process",value:function(A){var I=this.detectMarker(A);0!=I&&console.error("[ARController]","detectMarker error:",I);var g,B,C=this.getMarkerNum();for(g in this.patternMarkers)(B=this.patternMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(g in this.barcodeMarkers)(B=this.barcodeMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(g in this.nftMarkers)(B=this.nftMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(var Q=0;Q<C;Q++){var E=this.getMarker(Q),i=EI.UNKNOWN_MARKER,o=this.trackPatternMarkerId(-1);E.idPatt>-1&&(E.id===E.idPatt||-1===E.idMatrix)?(o=this.trackPatternMarkerId(E.idPatt),i=EI.PATTERN_MARKER,E.dir!==E.dirPatt&&this.setMarkerInfoDir(Q,E.dirPatt)):E.idMatrix>-1&&(o=this.trackBarcodeMarkerId(E.idMatrix),i=EI.BARCODE_MARKER,E.dir!==E.dirMatrix&&this.setMarkerInfoDir(Q,E.dirMatrix)),i!==EI.UNKNOWN_MARKER&&o.inPrevious?this.getTransMatSquareCont(Q,o.markerWidth,o.matrix,o.matrix):this.getTransMatSquare(Q,o.markerWidth,o.matrix),o.inCurrent=!0,this.transMatToGLMat(o.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getMarker",target:this,data:{index:Q,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}var D=this.nftMarkerCount;this.detectNFTMarker();for(var a=0;a<D;a++){var w=this.getNFTMarker(a),s=EI.NFT_MARKER;if(w.found){this.nftMarkerFound=a,this.nftMarkerFoundTime=Date.now();var G=this.trackNFTMarkerId(a);G.matrix.set(w.pose),G.inCurrent=!0,this.transMatToGLMat(G.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getNFTMarker",target:this,data:{index:a,type:s,marker:w,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}else self.nftMarkerFound===a&&Date.now()-this.nftMarkerFoundTime>200&&(this.nftMarkerFound=!1,this.dispatchEvent({name:"lostNFTMarker",target:this,data:{index:a,type:s,marker:w,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}}))}for(var t=this.getMultiMarkerCount(),h=0;h<t;h++){var R=this.getMultiMarkerPatternCount(h),F=!1;this.artoolkit.getTransMatMultiSquareRobust(this.id,h),this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat);for(var y=0;y<R;y++)if((n=this.getMultiEachMarker(h,y)).visible>=0){F=!0,this.dispatchEvent({name:"getMultiMarker",target:this,data:{multiMarkerId:h,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}});break}if(F)for(var r=0;r<R;r++){var n=this.getMultiEachMarker(h,r);this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getMultiMarkerSub",target:this,data:{multiMarkerId:h,markerIndex:r,marker:n,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}}this._bwpointer&&this.debugDraw()}},{key:"detectNFTMarker",value:function(){this.artoolkit.detectNFTMarker(this.id)}},{key:"trackPatternMarkerId",value:function(A,I){var g=this.patternMarkers[A];return g||(this.patternMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"trackBarcodeMarkerId",value:function(A,I){var g=this.barcodeMarkers[A];return g||(this.barcodeMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"trackNFTMarkerId",value:function(A,I){var g=this.nftMarkers[A];return g||(this.nftMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"getMultiMarkerCount",value:function(){return this.artoolkit.getMultiMarkerCount(this.id)}},{key:"getMultiMarkerPatternCount",value:function(A){return this.artoolkit.getMultiMarkerNum(this.id,A)}},{key:"addEventListener",value:function(A,I){this.listeners[A]||(this.listeners[A]=[]),this.listeners[A].push(I)}},{key:"removeEventListener",value:function(A,I){if(this.listeners[A]){var g=this.listeners[A].indexOf(I);g>-1&&this.listeners[A].splice(g,1)}}},{key:"dispatchEvent",value:function(A){var I=this.listeners[A.name];if(I)for(var g=0;g<I.length;g++)I[g].call(this,A)}},{key:"debugSetup",value:function(){"undefined"!=typeof document?(document.body.appendChild(this.canvas),this.setDebugMode(!0),this._bwpointer=this.getProcessingImage()):console.log("debugSetup() currently only supports Browser environments")}},{key:"debugDraw",value:function(){for(var A=new Uint8ClampedArray(this.artoolkit.instance.HEAPU8.buffer,this._bwpointer,this.framesize),I=new ImageData(new Uint8ClampedArray(this.canvas.width*this.canvas.height*4),this.canvas.width,this.canvas.height),g=0,B=0;g<A.length;g++,B+=4){var C=A[g];I.data[B+0]=C,I.data[B+1]=C,I.data[B+2]=C,I.data[B+3]=255}this.ctx.putImageData(I,0,0);for(var Q=this.getMarkerNum(),E=0;E<Q;E++)this.drawDebugMarker(this.getMarker(E))}},{key:"drawDebugMarker",value:function(A){var I=A.vertex,g=A.pos,B=this.ctx;B.lineWidth=5,B.strokeStyle="red",B.beginPath(),B.moveTo(I[0][0],I[0][1]),B.lineTo(I[1][0],I[1][1]),B.stroke(),B.beginPath(),B.moveTo(I[2][0],I[2][1]),B.lineTo(I[3][0],I[3][1]),B.stroke(),B.strokeStyle="green",B.beginPath(),B.lineTo(I[1][0],I[1][1]),B.lineTo(I[2][0],I[2][1]),B.stroke(),B.beginPath(),B.moveTo(I[3][0],I[3][1]),B.lineTo(I[0][0],I[0][1]),B.stroke(),B.beginPath(),B.arc(g[0],g[1],8,0,2*Math.PI),B.fillStyle="red",B.fill()}},{key:"loadMarker",value:(a=I(o().mark((function A(I){return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMarker(this.id,I);case 2:return A.abrupt("return",A.sent);case 3:case"end":return A.stop()}}),A,this)}))),function(A){return a.apply(this,arguments)})},{key:"loadMultiMarker",value:(D=I(o().mark((function A(I){return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMultiMarker(this.id,I);case 2:return A.abrupt("return",A.sent);case 3:case"end":return A.stop()}}),A,this)}))),function(A){return D.apply(this,arguments)})},{key:"loadNFTMarker",value:(i=I(o().mark((function A(I){var g;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addNFTMarker(this.id,I);case 2:return g=A.sent,this.nftMarkerCount=g+1,A.abrupt("return",g);case 5:case"end":return A.stop()}}),A,this)}))),function(A){return i.apply(this,arguments)})},{key:"getTransMatSquare",value:function(A,I,g){return this.artoolkit.getTransMatSquare(this.id,A,I),g.set(this.marker_transform_mat),g}},{key:"getTransMatSquareCont",value:function(A,I,g,B){return this.marker_transform_mat.set(g),this.artoolkit.getTransMatSquareCont(this.id,A,I),B.set(this.marker_transform_mat),B}},{key:"getTransMatMultiSquare",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:"getTransMatMultiSquareRobust",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:"transMatToGLMat",value:function(A,I,g){return null==I&&(I=new Float64Array(16)),I[0]=A[0],I[4]=A[1],I[8]=A[2],I[12]=A[3],I[1]=A[4],I[5]=A[5],I[9]=A[6],I[13]=A[7],I[2]=A[8],I[6]=A[9],I[10]=A[10],I[14]=A[11],I[3]=0,I[7]=0,I[11]=0,I[15]=1,null!=g&&0!==g&&(I[12]*=g,I[13]*=g,I[14]*=g),I}},{key:"arglCameraViewRHf",value:function(A,I,g){var B;return(B=null==I?new Float64Array(16):I)[0]=A[0],B[4]=A[4],B[8]=A[8],B[12]=A[12],B[1]=-A[1],B[5]=-A[5],B[9]=-A[9],B[13]=-A[13],B[2]=-A[2],B[6]=-A[6],B[10]=-A[10],B[14]=-A[14],B[3]=0,B[7]=0,B[11]=0,B[15]=1,null!=g&&0!==g&&(B[12]*=g,B[13]*=g,B[14]*=g),B}},{key:"detectMarker",value:function(A){return this._copyImageToHeap(A)?this.artoolkit.detectMarker(this.id):-99}},{key:"getMarkerNum",value:function(){return this.artoolkit.getMarkerNum(this.id)}},{key:"getMarker",value:function(A){if(0===this.artoolkit.getMarker(this.id,A))return this.artoolkit.markerInfo}},{key:"getNFTMarker",value:function(A){if(0===this.artoolkit.getNFTMarker(this.id,A))return this.artoolkit.NFTMarkerInfo}},{key:"setMarkerInfoVertex",value:function(A,I){for(var g=0;g<I.length;g++)this.marker_transform_mat[2*g+0]=I[g][0],this.marker_transform_mat[2*g+1]=I[g][1];return this.artoolkit.setMarkerInfoVertex(this.id,A)}},{key:"cloneMarkerInfo",value:function(A){return JSON.parse(JSON.stringify(A))}},{key:"getMultiEachMarker",value:function(A,I){if(0===this.artoolkit.getMultiEachMarker(this.id,A,I))return this.artoolkit.multiEachMarkerInfo}},{key:"getTransformationMatrix",value:function(){return this.transform_mat}},{key:"getCameraMatrix",value:function(){return this.camera_mat}},{key:"getMarkerTransformationMatrix",value:function(){return this.marker_transform_mat}},{key:"setDebugMode",value:function(A){return this.artoolkit.setDebugMode(this.id,A)}},{key:"getDebugMode",value:function(){return this.artoolkit.getDebugMode(this.id)}},{key:"getProcessingImage",value:function(){return this.artoolkit.getProcessingImage(this.id)}},{key:"setLogLevel",value:function(A){return this.artoolkit.setLogLevel(A)}},{key:"getLogLevel",value:function(){return this.artoolkit.getLogLevel()}},{key:"setMarkerInfoDir",value:function(A,I){return this.artoolkit.setMarkerInfoDir(this.id,A,I)}},{key:"setProjectionNearPlane",value:function(A){return this.artoolkit.setProjectionNearPlane(this.id,A)}},{key:"getProjectionNearPlane",value:function(){return this.artoolkit.getProjectionNearPlane(this.id)}},{key:"setProjectionFarPlane",value:function(A){return this.artoolkit.setProjectionFarPlane(this.id,A)}},{key:"getProjectionFarPlane",value:function(){return this.artoolkit.getProjectionFarPlane(this.id)}},{key:"setThresholdMode",value:function(A){return this.artoolkit.setThresholdMode(this.id,A)}},{key:"getThresholdMode",value:function(){return this.artoolkit.getThresholdMode(this.id)}},{key:"setThreshold",value:function(A){return this.artoolkit.setThreshold(this.id,A)}},{key:"getThreshold",value:function(){return this.artoolkit.getThreshold(this.id)}},{key:"setPatternDetectionMode",value:function(A){return this.artoolkit.setPatternDetectionMode(this.id,A)}},{key:"getPatternDetectionMode",value:function(){return this.artoolkit.getPatternDetectionMode(this.id)}},{key:"setMatrixCodeType",value:function(A){return this.artoolkit.setMatrixCodeType(this.id,A)}},{key:"getMatrixCodeType",value:function(){return this.artoolkit.getMatrixCodeType(this.id)}},{key:"setLabelingMode",value:function(A){return this.artoolkit.setLabelingMode(this.id,A)}},{key:"getLabelingMode",value:function(){return this.artoolkit.getLabelingMode(this.id)}},{key:"setPattRatio",value:function(A){return this.artoolkit.setPattRatio(this.id,A)}},{key:"getPattRatio",value:function(){return this.artoolkit.getPattRatio(this.id)}},{key:"setImageProcMode",value:function(A){return this.artoolkit.setImageProcMode(this.id,A)}},{key:"getImageProcMode",value:function(){return this.artoolkit.getImageProcMode(this.id)}},{key:"_initialize",value:(Q=I(o().mark((function A(){var I,g=this;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,(new EI).init();case 2:return this.artoolkit=A.sent,console.log("[ARController]","ARToolkit initialized"),A.next=6,this.artoolkit.loadCamera(this.cameraParam);case 6:return this.cameraId=A.sent,console.log("[ARController]","Camera params loaded with ID",this.cameraId),this.id=this.artoolkit.setup(this.width,this.height,this.cameraId),console.log("[ARController]","Got ID from setup",this.id),this._initNFT(),I=artoolkit.frameMalloc,this.framepointer=I.framepointer,this.framesize=I.framesize,this.videoLumaPointer=I.videoLumaPointer,this.dataHeap=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.framepointer,this.framesize),this.videoLuma=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.videoLumaPointer,this.framesize/4),this.camera_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.camera,16),this.marker_transform_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.transform,12),this.setProjectionNearPlane(.1),this.setProjectionFarPlane(1e3),setTimeout((function(){g.dispatchEvent({name:"load",target:g})}),1),A.abrupt("return",this);case 23:case"end":return A.stop()}}),A,this)}))),function(){return Q.apply(this,arguments)})},{key:"_initNFT",value:function(){this.artoolkit.setupAR2(this.id)}},{key:"_copyImageToHeap",value:function(A){var I;if(A||(A=this.image),A.data)I=A.data;else{if(this.ctx.save(),"portrait"===this.orientation){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);var g=this.canvas.height/this.canvas.width,B=this.canvas.width*g,C=this.canvas.height*g,Q=(this.canvas.width-C)/2;this.ctx.drawImage(A,Q,0,C,B)}else this.ctx.drawImage(A,0,0,this.canvas.width,this.canvas.height);this.ctx.restore(),I=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height).data}if(this.videoLuma)for(var E=0,i=0;i<this.videoSize;i++){var o=I[E+0],D=I[E+1],a=I[E+2];this.videoLuma[i]=o+o+o+a+D+D+D+D>>3,E+=4}return!!this.dataHeap&&(this.dataHeap.set(I),!0)}}],[{key:"initWithDimensions",value:(B=I(o().mark((function I(g,B,C,Q){var E;return o().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return E=new A(g,B,C,Q),I.next=3,E._initialize();case 3:return I.abrupt("return",I.sent);case 4:case"end":return I.stop()}}),I)}))),function(A,I,g,C){return B.apply(this,arguments)})},{key:"initWithImage",value:(g=I(o().mark((function I(g,B,C){var Q,E,i;return o().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return Q=g.videoWidth||g.width,E=g.videoHeight||g.height,I.next=4,A.initWithDimensions(Q,E,B,C);case 4:return(i=I.sent).image=g,I.abrupt("return",i);case 7:case"end":return I.stop()}}),I)}))),function(A,I,B){return g.apply(this,arguments)})}]),A}();const wI={ARToolkit:EI,ARController:aI}})(),B.default})()));

/***/ }),

/***/ "./three.js/src/threex/arjs-markercontrols-nft.worker.js":
/*!***************************************************************!*\
  !*** ./three.js/src/threex/arjs-markercontrols-nft.worker.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Worker_fn)
/* harmony export */ });
/* harmony import */ var _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !!../../../node_modules/worker-loader/dist/runtime/inline.js */ "./node_modules/worker-loader/dist/runtime/inline.js");
/* harmony import */ var _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0__);



function Worker_fn() {
  return _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0___default()("/******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js ***!\n  \\*****************************************************************/\n/***/ (function(module) {\n\n/*! For license information please see ARToolkit.js.LICENSE.txt */\n!function(A,I){ true?module.exports=I():0}(\"undefined\"!=typeof self?self:this,(()=>(()=>{var A={230:A=>{A.exports=\"object\"==typeof self?self.FormData:window.FormData},654:()=>{},231:()=>{},703:()=>{},61:(A,I,g)=>{var B=g(698).default;function C(){\"use strict\";A.exports=C=function(){return I},A.exports.__esModule=!0,A.exports.default=A.exports;var I={},g=Object.prototype,Q=g.hasOwnProperty,E=\"function\"==typeof Symbol?Symbol:{},i=E.iterator||\"@@iterator\",o=E.asyncIterator||\"@@asyncIterator\",D=E.toStringTag||\"@@toStringTag\";function a(A,I,g){return Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}),A[I]}try{a({},\"\")}catch(A){a=function(A,I,g){return A[I]=g}}function w(A,I,g,B){var C=I&&I.prototype instanceof t?I:t,Q=Object.create(C.prototype),E=new c(B||[]);return Q._invoke=function(A,I,g){var B=\"suspendedStart\";return function(C,Q){if(\"executing\"===B)throw new Error(\"Generator is already running\");if(\"completed\"===B){if(\"throw\"===C)throw Q;return{value:void 0,done:!0}}for(g.method=C,g.arg=Q;;){var E=g.delegate;if(E){var i=e(E,g);if(i){if(i===G)continue;return i}}if(\"next\"===g.method)g.sent=g._sent=g.arg;else if(\"throw\"===g.method){if(\"suspendedStart\"===B)throw B=\"completed\",g.arg;g.dispatchException(g.arg)}else\"return\"===g.method&&g.abrupt(\"return\",g.arg);B=\"executing\";var o=s(A,I,g);if(\"normal\"===o.type){if(B=g.done?\"completed\":\"suspendedYield\",o.arg===G)continue;return{value:o.arg,done:g.done}}\"throw\"===o.type&&(B=\"completed\",g.method=\"throw\",g.arg=o.arg)}}}(A,g,E),Q}function s(A,I,g){try{return{type:\"normal\",arg:A.call(I,g)}}catch(A){return{type:\"throw\",arg:A}}}I.wrap=w;var G={};function t(){}function h(){}function R(){}var F={};a(F,i,(function(){return this}));var y=Object.getPrototypeOf,r=y&&y(y(J([])));r&&r!==g&&Q.call(r,i)&&(F=r);var n=R.prototype=t.prototype=Object.create(F);function S(A){[\"next\",\"throw\",\"return\"].forEach((function(I){a(A,I,(function(A){return this._invoke(I,A)}))}))}function M(A,I){function g(C,E,i,o){var D=s(A[C],A,E);if(\"throw\"!==D.type){var a=D.arg,w=a.value;return w&&\"object\"==B(w)&&Q.call(w,\"__await\")?I.resolve(w.__await).then((function(A){g(\"next\",A,i,o)}),(function(A){g(\"throw\",A,i,o)})):I.resolve(w).then((function(A){a.value=A,i(a)}),(function(A){return g(\"throw\",A,i,o)}))}o(D.arg)}var C;this._invoke=function(A,B){function Q(){return new I((function(I,C){g(A,B,I,C)}))}return C=C?C.then(Q,Q):Q()}}function e(A,I){var g=A.iterator[I.method];if(void 0===g){if(I.delegate=null,\"throw\"===I.method){if(A.iterator.return&&(I.method=\"return\",I.arg=void 0,e(A,I),\"throw\"===I.method))return G;I.method=\"throw\",I.arg=new TypeError(\"The iterator does not provide a 'throw' method\")}return G}var B=s(g,A.iterator,I.arg);if(\"throw\"===B.type)return I.method=\"throw\",I.arg=B.arg,I.delegate=null,G;var C=B.arg;return C?C.done?(I[A.resultName]=C.value,I.next=A.nextLoc,\"return\"!==I.method&&(I.method=\"next\",I.arg=void 0),I.delegate=null,G):C:(I.method=\"throw\",I.arg=new TypeError(\"iterator result is not an object\"),I.delegate=null,G)}function N(A){var I={tryLoc:A[0]};1 in A&&(I.catchLoc=A[1]),2 in A&&(I.finallyLoc=A[2],I.afterLoc=A[3]),this.tryEntries.push(I)}function k(A){var I=A.completion||{};I.type=\"normal\",delete I.arg,A.completion=I}function c(A){this.tryEntries=[{tryLoc:\"root\"}],A.forEach(N,this),this.reset(!0)}function J(A){if(A){var I=A[i];if(I)return I.call(A);if(\"function\"==typeof A.next)return A;if(!isNaN(A.length)){var g=-1,B=function I(){for(;++g<A.length;)if(Q.call(A,g))return I.value=A[g],I.done=!1,I;return I.value=void 0,I.done=!0,I};return B.next=B}}return{next:U}}function U(){return{value:void 0,done:!0}}return h.prototype=R,a(n,\"constructor\",R),a(R,\"constructor\",h),h.displayName=a(R,D,\"GeneratorFunction\"),I.isGeneratorFunction=function(A){var I=\"function\"==typeof A&&A.constructor;return!!I&&(I===h||\"GeneratorFunction\"===(I.displayName||I.name))},I.mark=function(A){return Object.setPrototypeOf?Object.setPrototypeOf(A,R):(A.__proto__=R,a(A,D,\"GeneratorFunction\")),A.prototype=Object.create(n),A},I.awrap=function(A){return{__await:A}},S(M.prototype),a(M.prototype,o,(function(){return this})),I.AsyncIterator=M,I.async=function(A,g,B,C,Q){void 0===Q&&(Q=Promise);var E=new M(w(A,g,B,C),Q);return I.isGeneratorFunction(g)?E:E.next().then((function(A){return A.done?A.value:E.next()}))},S(n),a(n,D,\"Generator\"),a(n,i,(function(){return this})),a(n,\"toString\",(function(){return\"[object Generator]\"})),I.keys=function(A){var I=[];for(var g in A)I.push(g);return I.reverse(),function g(){for(;I.length;){var B=I.pop();if(B in A)return g.value=B,g.done=!1,g}return g.done=!0,g}},I.values=J,c.prototype={constructor:c,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=void 0,this.tryEntries.forEach(k),!A)for(var I in this)\"t\"===I.charAt(0)&&Q.call(this,I)&&!isNaN(+I.slice(1))&&(this[I]=void 0)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if(\"throw\"===A.type)throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var I=this;function g(g,B){return E.type=\"throw\",E.arg=A,I.next=g,B&&(I.method=\"next\",I.arg=void 0),!!B}for(var B=this.tryEntries.length-1;B>=0;--B){var C=this.tryEntries[B],E=C.completion;if(\"root\"===C.tryLoc)return g(\"end\");if(C.tryLoc<=this.prev){var i=Q.call(C,\"catchLoc\"),o=Q.call(C,\"finallyLoc\");if(i&&o){if(this.prev<C.catchLoc)return g(C.catchLoc,!0);if(this.prev<C.finallyLoc)return g(C.finallyLoc)}else if(i){if(this.prev<C.catchLoc)return g(C.catchLoc,!0)}else{if(!o)throw new Error(\"try statement without catch or finally\");if(this.prev<C.finallyLoc)return g(C.finallyLoc)}}}},abrupt:function(A,I){for(var g=this.tryEntries.length-1;g>=0;--g){var B=this.tryEntries[g];if(B.tryLoc<=this.prev&&Q.call(B,\"finallyLoc\")&&this.prev<B.finallyLoc){var C=B;break}}C&&(\"break\"===A||\"continue\"===A)&&C.tryLoc<=I&&I<=C.finallyLoc&&(C=null);var E=C?C.completion:{};return E.type=A,E.arg=I,C?(this.method=\"next\",this.next=C.finallyLoc,G):this.complete(E)},complete:function(A,I){if(\"throw\"===A.type)throw A.arg;return\"break\"===A.type||\"continue\"===A.type?this.next=A.arg:\"return\"===A.type?(this.rval=this.arg=A.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===A.type&&I&&(this.next=I),G},finish:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.finallyLoc===A)return this.complete(g.completion,g.afterLoc),k(g),G}},catch:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.tryLoc===A){var B=g.completion;if(\"throw\"===B.type){var C=B.arg;k(g)}return C}}throw new Error(\"illegal catch attempt\")},delegateYield:function(A,I,g){return this.delegate={iterator:J(A),resultName:I,nextLoc:g},\"next\"===this.method&&(this.arg=void 0),G}},I}A.exports=C,A.exports.__esModule=!0,A.exports.default=A.exports},698:A=>{function I(g){return A.exports=I=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&\"function\"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?\"symbol\":typeof A},A.exports.__esModule=!0,A.exports.default=A.exports,I(g)}A.exports=I,A.exports.__esModule=!0,A.exports.default=A.exports},687:(A,I,g)=>{var B=g(61)();A.exports=B;try{regeneratorRuntime=B}catch(A){\"object\"==typeof globalThis?globalThis.regeneratorRuntime=B:Function(\"r\",\"regeneratorRuntime = r\")(B)}}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B](Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(A){if(\"object\"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var B={};return(()=>{\"use strict\";function A(A,I,g,B,C,Q,E){try{var i=A[Q](E),o=i.value}catch(A){return void g(A)}i.done?I(o):Promise.resolve(o).then(B,C)}function I(I){return function(){var g=this,B=arguments;return new Promise((function(C,Q){var E=I.apply(g,B);function i(I){A(E,C,Q,i,o,\"next\",I)}function o(I){A(E,C,Q,i,o,\"throw\",I)}i(void 0)}))}}function C(A,I){if(!(A instanceof I))throw new TypeError(\"Cannot call a class as a function\")}function Q(A,I){for(var g=0;g<I.length;g++){var B=I[g];B.enumerable=B.enumerable||!1,B.configurable=!0,\"value\"in B&&(B.writable=!0),Object.defineProperty(A,B.key,B)}}function E(A,I,g){return I&&Q(A.prototype,I),g&&Q(A,g),Object.defineProperty(A,\"prototype\",{writable:!1}),A}g.d(B,{default:()=>wI});var i=g(687),o=g.n(i);function D(A){return D=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&\"function\"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?\"symbol\":typeof A},D(A)}var a,w=(a=(a=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\"/index.js\",function(A){var I,B;(A=void 0!==(A=A||{})?A:{}).ready=new Promise((function(A,g){I=A,B=g}));var C,Q,E,i,o,w,s=Object.assign({},A),G=[],t=\"./this.program\",h=function(A,I){throw I},R=\"object\"==(\"undefined\"==typeof window?\"undefined\":D(window)),F=\"function\"==typeof importScripts,y=\"object\"==(\"undefined\"==typeof process?\"undefined\":D(process))&&\"object\"==D(process.versions)&&\"string\"==typeof process.versions.node,r=\"\";y?(r=F?g(703).dirname(r)+\"/\":\"//\",w=function(){o||(i=g(231),o=g(703))},C=function(A,I){var g=DI(A);return g?I?g:g.toString():(w(),A=o.normalize(A),i.readFileSync(A,I?void 0:\"utf8\"))},E=function(A){var I=C(A,!0);return I.buffer||(I=new Uint8Array(I)),I},Q=function(A,I,g){var B=DI(A);B&&I(B),w(),A=o.normalize(A),i.readFile(A,(function(A,B){A?g(A):I(B.buffer)}))},process.argv.length>1&&(t=process.argv[1].replace(/\\\\/g,\"/\")),G=process.argv.slice(2),process.on(\"uncaughtException\",(function(A){if(!(A instanceof oA))throw A})),process.on(\"unhandledRejection\",(function(A){throw A})),h=function(A,I){if(T())throw process.exitCode=A,I;var g;(g=I)instanceof oA||M(\"exiting due to exception: \"+g),process.exit(A)},A.inspect=function(){return\"[Emscripten Module object]\"}):(R||F)&&(F?r=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(r=document.currentScript.src),a&&(r=a),r=0!==r.indexOf(\"blob:\")?r.substr(0,r.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",C=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.send(null),I.responseText}catch(I){var g=DI(A);if(g)return function(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(iI&&c(!1,\"Character code \"+B+\" (\"+String.fromCharCode(B)+\")  at offset \"+g+\" not in 0x00-0xFF.\"),B&=255),I.push(String.fromCharCode(B))}return I.join(\"\")}(g);throw I}},F&&(E=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.responseType=\"arraybuffer\",I.send(null),new Uint8Array(I.response)}catch(I){var g=DI(A);if(g)return g;throw I}}),Q=function(A,I,g){var B=new XMLHttpRequest;B.open(\"GET\",A,!0),B.responseType=\"arraybuffer\",B.onload=function(){if(200==B.status||0==B.status&&B.response)I(B.response);else{var C=DI(A);C?I(C.buffer):g()}},B.onerror=g,B.send(null)});var n,S=A.print||console.log.bind(console),M=A.printErr||console.warn.bind(console);Object.assign(A,s),s=null,A.arguments&&(G=A.arguments),A.thisProgram&&(t=A.thisProgram),A.quit&&(h=A.quit),A.wasmBinary&&(n=A.wasmBinary);var e,N=A.noExitRuntime||!0;\"object\"!=(\"undefined\"==typeof WebAssembly?\"undefined\":D(WebAssembly))&&_(\"no native wasm support detected\");var k=!1;function c(A,I){A||_(I)}var J,U,K,L,Y,d,q,H,l,f=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function u(A,I,g){for(var B=I+g,C=I;A[C]&&!(C>=B);)++C;if(C-I>16&&A.buffer&&f)return f.decode(A.subarray(I,C));for(var Q=\"\";I<C;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)Q+=String.fromCharCode(E);else{var D=E-65536;Q+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else Q+=String.fromCharCode((31&E)<<6|i)}else Q+=String.fromCharCode(E)}return Q}function W(A,I){return A?u(K,A,I):\"\"}function m(A,I,g,B){if(!(B>0))return 0;for(var C=g,Q=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=Q)break;I[g++]=i}else if(i<=2047){if(g+1>=Q)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=Q)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=Q)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-C}function b(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}function p(I){J=I,A.HEAP8=U=new Int8Array(I),A.HEAP16=L=new Int16Array(I),A.HEAP32=d=new Int32Array(I),A.HEAPU8=K=new Uint8Array(I),A.HEAPU16=Y=new Uint16Array(I),A.HEAPU32=q=new Uint32Array(I),A.HEAPF32=H=new Float32Array(I),A.HEAPF64=l=new Float64Array(I)}A.INITIAL_MEMORY;var Z,x=[],V=[],X=[];function T(){return N}var O=0,v=null,j=null;function P(I){O++,A.monitorRunDependencies&&A.monitorRunDependencies(O)}function z(I){if(O--,A.monitorRunDependencies&&A.monitorRunDependencies(O),0==O&&(null!==v&&(clearInterval(v),v=null),j)){var g=j;j=null,g()}}function _(I){A.onAbort&&A.onAbort(I),M(I=\"Aborted(\"+I+\")\"),k=!0,I+=\". Build with -sASSERTIONS for more info.\";var g=new WebAssembly.RuntimeError(I);throw B(g),g}var $,AA,IA,gA,BA=\"data:application/octet-stream;base64,\";function CA(A){return A.startsWith(BA)}function QA(A){return A.startsWith(\"file://\")}function EA(A){try{if(A==$&&n)return new Uint8Array(n);var I=DI(A);if(I)return I;if(E)return E(A);throw\"both async and sync fetching of the wasm failed\"}catch(A){_(A)}}CA($=\"data:application/octet-stream;base64,AGFzbQEAAAAB9wVeYAF/AX9gAX8AYAJ/fwBgAn9/AX9gA39/fwF/YAV/f39/fwBgBH9/f38AYAN/f38AYAZ/f39/f38Bf2AEf39/fwF/YAV/f39/fwF/YAd/f39/f39/AGAGf39/f39/AGAIf39/f39/f38Bf2AAAGAHf39/f39/fwF/YAF9AX1gAAF/YAV/fn5+fgBgA39+fwF+YAJ/fABgAn19AX1gBX9/f39+AX9gA39/fwF9YAp/f39/f39/f39/AX9gAX8BfGAEf35+fwBgA39/fQBgCH9/f39/f39/AGAHf39/f39+fgF/YAZ/f39/fn4Bf2ADf398AGABfwF9YAV/fX1/fwF/YAZ/f39/f38BfGABfAF9YAJ8fwF8YAZ/f319f38Bf2AFf399fX8AYAJ/fwF9YAx/f39/f39/f39/f38Bf2ACf38BfGAJf39/f39/f39/AX9gA39/fwF+YAR/f39/AX5gBX9/fn9/AGAGf3x/f39/AX9gAX8BfmAGf39/f35/AX9gD39/f39/f39/f39/f39/fwBgCn9/f39/f39/f38AYAt/f39/f39/f39/fwF/YAJ/fQBgBX9/f398AX9gAAF8YAN/fX0BfWAFf319f38BfWAEfX19fQF9YAJ/fgBgB39/f398f38Bf2AEfn5+fgF/YAR/f399AGACfn8Bf2ABfQF/YAN8fH8BfGACfHwBfGAHf39/f39/fQF9YAd/f39/f39/AX1gA39+fwBgA39/fQF9YAx/f39/f39/f39/fH8Bf2ACfn4BfGAFf39/fX0AYAZ8fHx8fHwBfGADfHx8AXxgA319fQF9YAN/f38BfGAEf39/fgF+YAZ/fX19fX8Bf2ACfn4BfWADfn5+AX9gA39/fgBgAn9/AX5gBH9/fH8BfGACf30BfWACfX8Bf2ACfH8Bf2AOf39/f39/f39/f3x/f38Bf2AFf399fX8Bf2ADf399AX9gBn9/f39/fQBgBn98fH9/fwBgBH9+f38Bf2AEf39+fgAC6wEnAWEBYQAOAWEBYgABAWEBYwAHAWEBZAAMAWEBZQAFAWEBZgAHAWEBZwAAAWEBaAAEAWEBaQACAWEBagAFAWEBawAHAWEBbAAAAWEBbQAJAWEBbgAEAWEBbwA2AWEBcAACAWEBcQAHAWEBcgAfAWEBcwADAWEBdAAJAWEBdQAE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KAIANgIAIAJBBGohAiABQQRqIQEgAEEBayIADQALDAELIABFDQADQCACIABBAWsiAEECdCIGaiABIAZqKAIANgIAIAANAAsLQQAFIAILGiMAQRBrIgAkACAEIAMQiQIgAEEANgIMIAUgA0ECdGogAEEMahCgASAAQRBqJAAMAQsgBCAAIAMgAGsgBBAsIgBBACAAIAMgARDmBgsLUgECfwJAIAEQeiECIAIgABBKIgNNBEAgABA4IQMgAgRAIAMgASACEMkCCyAAIAMgAhDtBgwBCyAAIAMgAiADayAAECwiAEEAIAAgAiABEOoGCwssAQF/IwBBEGsiASQAIABCADcCACABQQA2AgwgAEEIahCZAiABQRBqJAAgAAtgAQF/IwBBEGsiBSQAIAAgAyAEEOUBIQAgBUEMaiAFQQhqIAEgAiADEIIEIAUqAgghASAAIAUqAgwgACgCBEECa7MQ5AIgASAAKAIIQQJrsxDkAhA+IQEgBUEQaiQAIAELCQAgACAAEM8FC0YAIAAgASoCCCABKgIAIAIqAgCUIAEqAgQgAioCBJSSkjgCACAAIAEqAhQgASoCDCACKgIAlCABKgIQIAIqAgSUkpI4AgQLBgAgABAoC/ECAQR/QbyzBC0AAARAQbizBCgCAA8LIwBBIGsiAiQAAkACQANAIAJBCGogAEECdGoCf0EBIAB0Qf////8HcSIDQQFyRQRAIABBAnQoAgAMAQsgAEHGnQJBr64CIAMbEMEECyIDNgIAIANBf0YNASAAQQFqIgBBBkcNAAtBABDABEUEQEG4mwMhASACQQhqQbibAxDvAkUNAkHQmwMhASACQQhqQdCbAxDvAkUNAkEAIQBBkLIELQAARQRAA0AgAEECdEHgsQRqIABBr64CEMEENgIAIABBAWoiAEEGRw0AC0GQsgRBAToAAEH4sQRB4LEEKAIANgIAC0HgsQQhASACQQhqQeCxBBDvAkUNAkH4sQQhASACQQhqQfixBBDvAkUNAkEYEC4iAUUNAQsgASACKQMINwIAIAEgAikDGDcCECABIAIpAxA3AggMAQtBACEBCyACQSBqJAAgASEAQbyzBEEBOgAAQbizBCAANgIAIAALxQoCBX8PfiMAQeAAayIFJAAgBEL///////8/gyEMIAIgBIVCgICAgICAgICAf4MhCiACQv///////z+DIg1CIIghDiAEQjCIp0H//wFxIQcCQAJAIAJCMIinQf//AXEiCUH//wFrQYKAfk8EQCAHQf//AWtBgYB+Sw0BCyABUCACQv///////////wCDIgtCgICAgICAwP//AFQgC0KAgICAgIDA//8AURtFBEAgAkKAgICAgIAghCEKDAILIANQIARC////////////AIMiAkKAgICAgIDA//8AVCACQoCAgICAgMD//wBRG0UEQCAEQoCAgICAgCCEIQogAyEBDAILIAEgC0KAgICAgIDA//8AhYRQBEAgAiADhFAEQEKAgICAgIDg//8AIQpCACEBDAMLIApCgICAgICAwP//AIQhCkIAIQEMAgsgAyACQoCAgICAgMD//wCFhFAEQCABIAuEIQJCACEBIAJQBEBCgICAgICA4P//ACEKDAMLIApCgICAgICAwP//AIQhCgwCCyABIAuEUARAQgAhAQwCCyACIAOEUARAQgAhAQwCCyALQv///////z9YBEAgBUHQAGogASANIAEgDSANUCIGG3kgBkEGdK18pyIGQQ9rEH9BECAGayEGIAUpA1giDUIgiCEOIAUpA1AhAQsgAkL///////8/Vg0AIAVBQGsgAyAMIAMgDCAMUCIIG3kgCEEGdK18pyIIQQ9rEH8gBiAIa0EQaiEGIAUpA0ghDCAFKQNAIQMLIANCD4YiC0KAgP7/D4MiAiABQiCIIgR+IhAgC0IgiCITIAFC/////w+DIgF+fCIPQiCGIhEgASACfnwiCyARVK0gAiANQv////8PgyINfiIVIAQgE358IhEgDEIPhiISIANCMYiEQv////8PgyIDIAF+fCIUIA8gEFStQiCGIA9CIIiEfCIPIAIgDkKAgASEIgx+IhYgDSATfnwiDiASQiCIQoCAgIAIhCICIAF+fCIQIAMgBH58IhJCIIZ8Ihd8IQEgByAJaiAGakH//wBrIQYCQCACIAR+IhggDCATfnwiBCAYVK0gBCAEIAMgDX58IgRWrXwgAiAMfnwgBCAEIBEgFVStIBEgFFatfHwiBFatfCADIAx+IgMgAiANfnwiAiADVK1CIIYgAkIgiIR8IAQgAkIghnwiAiAEVK18IAIgAiAQIBJWrSAOIBZUrSAOIBBWrXx8QiCGIBJCIIiEfCICVq18IAIgAiAPIBRUrSAPIBdWrXx8IgJWrXwi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kCQQJxAqEAAACyACEJgFIAAgAigCCLdEje21oPfGsD6iIAIpAwC5oDkDCCACQRBqJAAQgAYhAyABQSBqIgIQxgUgAhA4IQQgAEEQaiIFEDghBiABAnwCQCAAKwMAIgdEAAAAAAAAAABmBEAgACsDCCIIRAAAAAAAAAAAZkUNASAIIAehDAILQaCsBEHyCRAnQc8PECdBgB0QJ0HQABApQfEgECdBkCQQJxAqEAAAC0GgrARBySsQJ0HPDxAnQYAdECdB0QAQKUHxIBAnQZAwECcQKhAAAAtEAAAAAABAj0CiOQMQIAEgBjYCDCABQbXkATYCCCABIAQ2AgQgAUHOPzYCACADQZA2IAEQwwUgAhAvGiAFEC8aIAFBMGokAAsPACAAKAIAIAAoAgQ2AgQLDQAgACgCABDVBBogAAsNACAAKAIAENwEGiAACxAAIAAoAgQgACgCAGtBFG0LDAAgACABEJ8BQQFzCywBAX8gABDnAiAAKAIABEAgABDJBiAAECsaIAAoAgAhASAAEL4BGiABECgLCwsAIAAgATYCACAACwkAIABBEGoQcQsQACAAKAIEIAAoAgBrQSRtCxEAIAAgASAAKAIAKAIcEQMAC3UBAX4gACABIAR+IAIgA358IANCIIgiAiABQiCIIgR+fCADQv////8PgyIDIAFC/////w+DIgF+IgVCIIggAyAEfnwiA0IgiHwgASACfiADQv////8Pg3wiAUIgiHw3AwggACAFQv////8PgyABQiCGhDcDAAsYACAALQAAQSBxRQRAIAEgAiAAEM4DGgsLaQEDfwJAIAAiAUEDcQRAA0AgAS0AAEUNAiABQQFqIgFBA3ENAAsLA0AgASICQQRqIQEgAigCACIDQX9zIANBgYKECGtxQYCBgoR4cUUNAAsDQCACIgFBAWohAiABLQAADQALCyABIABrC20BAn8gACgCTBogABDGAhogACAAKAIMEQAAGiAALQAAQQFxRQRAIAAoAjQiAQRAIAEgACgCODYCOAsgACgCOCICBEAgAiABNgI0CyAAQaiUBCgCAEYEQEGolAQgAjYCAAsgACgCYBAoIAAQKAsLBABBAAuhAQECfwJAIAAQLEUgAiABa0EFSHINACABIAIQsAMgAkEEayEEIAAQOCICIAAQLGohBQJAA0ACQCACLAAAIQAgASAETw0AIABBAEwgAEH/AE5yRQRAIAEoAgAgAiwAAEcNAwsgAUEEaiEBIAIgBSACa0EBSmohAgwBCwsgAEEATCAAQf8ATnINASACLAAAIAQoAgBBAWtLDQELIANBBDYCAAsLWQECfyMAQRBrIgIkACAAEKEBBEAgACgCACEDIAAQ8AEaIAMQKAsgACABKAIINgIIIAAgASkCADcCACABQQAQkgEgAkEAOgAPIAEgAkEPahCRASACQRBqJAALUAEBfgJAIANBwABxBEAgASADQUBqrYYhAkIAIQEMAQsgA0UNACACIAOtIgSGIAFBwAAgA2utiIQhAiABIASGIQELIAAgATcDACAAIAI3AwgLbQEBfyMAQYACayIFJAAgBEGAwARxIAIgA0xyRQRAIAUgAUH/AXEgAiADayIDQYACIANBgAJJIgEbEDAaIAFFBEADQCAAIAVBgAIQeSADQYACayIDQf8BSw0ACwsgACAFIAMQeQsgBUGAAmokAAsMACAAIAEQ1wRBAXMLDQAgACgCBCAAKAIAawsMACAAIAEQ3wRBAXMLYAAgAEKAgICAgICA+L9/NwMIIABCgICAgICAgPi/fzcDACAAQRBqIAEQjAEaIwBBEGsiASQAIAEQmAUgACABKAIIt0SN7bWg98awPqIgASkDALmgOQMAIAFBEGokACAACwkAIAAgATYCBAswAQJ9An9BASABKgIAIgIgACoCACIDXQ0AGkEAIAIgA14NABogASgCBCAAKAIESQsLCwAgAEHcswQQuAELxgYCCn8BfSMAQSBrIgQkACAEQQE2AhggBCABNgIcIAFBAE4EQCAEIAE2AgggBCAAQdwAaiIBIARBCGoiABBFNgIQIAQQPzYCCAJAIARBEGogABBGBEAgBEEIaiIFIAQoAhw2AgAgBSAEKAIYNgIEIwBBEGsiBiQAIAZBCGohCiMAQSBrIgAkACABEDUaIAUoAgAhByABEIoBIQMgAEEAOgAfAkACQCADRQ0AIAEgByADEFUiCBAxKAIAIgJFDQADQCACKAIAIgJFDQEgByACKAIERwRAIAIoAgQgAxBVIAhHDQILIAEQVCACQQhqIAUQ/gFFDQALDAELIwBBEGsiCSQAIAEQKyECIABBEGpBEBBXIAlBCGogAkEAEKECEKACIgIoAgAiC0EIaiAFKAIANgIAIAsgBSgCBDYCDCACEElBAToABCACKAIAIAc2AgQgAigCAEEANgIAIAlBEGokACABEDUoAgAhAiABEFQhBQJAIAMEQCACQQFqsyAFKgIAIAOzlF5FDQELIAAgAxD9AUEBcyADQQF0cjYCDCAAAn8gARA1KAIAQQFqsyABEFQqAgCVjSIMQwAAgE9dIAxDAAAAAGBxBEAgDKkMAQtBAAs2AgggASAAQQxqIABBCGoQaCgCABCjAiAHIAEQigEiAxBVIQgLAkAgASAIEDEoAgAiAkUEQCAAKAIQIAFBCGoiAigCADYCACABIAAoAhA2AgggASAIEDEgAjYCACAAKAIQKAIARQ0BIAAoAhAhAiABIAAoAhAoAgAoAgQgAxBVEDEgAjYCAAwBCyAAKAIQIAIoAgA2AgAgAiAAKAIQNgIACyAAQRBqIgMQsAEhAiABEDUiASABKAIAQQFqNgIAIABBAToAHyADKAIAIQEgA0EANgIAIAEEQCADEEkiAy0ABARAIAMoAgAaCyABBEAgAygCABogARAoCwsLIAogAEEQaiACEHQgAEEfahCiAiAAQSBqJAAgBCAGKAIIEHQgBi0ADDoABCAGQRBqJAAMAQsgBEEQahBkIgAgACgCBEEBajYCBAsgBEEgaiQADwtBoKwEQZqIARAnQY+EARAnQYAdECdBogIQKUHxIBAnQauKARAnECoQAAALkQQBA38CQAJAAkACQAJAAkACQAJAAkAgAUEATgRAIAAoAjQiBSABTA0BIAJBAEgNAiAAKAI4IgYgAkwNAyADQQBIDQQgACgCPCIHIANMDQUgBEEASA0GIAAoAkAgBEwNByACIAVsIAFqIgEgACgCVCADbGogACgCWCAEbGoiACAEIAdsIANqIAUgBmxsIAFqSg0IIAAPC0GgrARBiY0BECdBj4QBECdBgB0QJ0GlARApQfEgECdB0I4BECcQKgwIC0GgrARBv5ABECdBj4QBECdBgB0QJ0GmARApQfEgECdB0I4BECcQKgwHC0GgrARB8pIBECdBj4QBECdBgB0QJ0GnARApQfEgECdBppMBECcQKgwGC0GgrARB55YBECdBj4QBECdBgB0QJ0GoARApQfEgECdBppMBECcQKgwFC0GgrARB2ZgBECdBj4QBECdBgB0QJ0GpARApQfEgECdBnpsBECcQKgwEC0GgrARBiZ0BECdBj4QBECdBgB0QJ0GqARApQfEgECdBnpsBECcQKgwDC0GgrARBtZ8BECdBj4QBECdBgB0QJ0GrARApQfEgECdBvqABECcQKgwCC0GgrARBgqIBECdBj4QBECdBgB0QJ0GsARApQfEgECdBvqABECcQKgwBC0GgrARBtaUBECdBj4QBECdBgB0QJ0GwARApQfEgECdBq4oBECcQKgsQAAALCQAgABBJKAIACwkAIAAgATYCAAshAQF/IwBBEGsiAiQAIAAgASABEHoQ5wYgAkEQaiQAIAALCwAgAEHkswQQuAELEQAgACABIAEoAgAoAhQRAgALDwAgACAAKAIAKAIQEQAACxEAIAAgASAAKAIAKAIsEQMACwwAIAAgAS0AADoAAAsJACAAIAE6AAsLxwkCBH4EfyMAQfAAayIKJAAgBEL///////////8AgyEFAkACQCABUCIJIAJC////////////AIMiBkKAgICAgIDA//8AfUKAgICAgIDAgIB/VCAGUBtFBEAgA0IAUiAFQoCAgICAgMD//wB9IghCgICAgICAwICAf1YgCEKAgICAgIDAgIB/URsNAQsgCSAGQoCAgICAgMD//wBUIAZCgICAgICAwP//AFEbRQRAIAJCgICAgICAIIQhBCABIQMMAgsgA1AgBUKAgICAgIDA//8AVCAFQoCAgICAgMD//wBRG0UEQCAEQoCAgICAgCCEIQQMAgsgASAGQoCAgICAgMD//wCFhFAEQEKAgICAgIDg//8AIAIgASADhSACIASFQoCAgICAgICAgH+FhFAiCRshBEIAIAEgCRshAwwCCyADIAVCgICAgICAwP//AIWEUA0BIAEgBoRQBEAgAyAFhEIAUg0CIAEgA4MhAyACIASDIQQMAgsgAyAFhFBFDQAgASEDIAIhBAwBCyADIAEgASADVCAFIAZWIAUgBlEbIgwbIQUgBCACIAwbIghC////////P4MhBiACIAQgDBsiB0IwiKdB//8BcSELIAhCMIinQf//AXEiCUUEQCAKQeAAaiAFIAYgBSAGIAZQIgkbeSAJQQZ0rXynIglBD2sQfyAKKQNoIQYgCikDYCEFQRAgCWshCQsgASADIAwbIQMgB0L///////8/gyEEIAtFBEAgCkHQAGogAyAEIAMgBCAEUCILG3kgC0EGdK18pyILQQ9rEH9BECALayELIAopA1gh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AhggA5QgASoCHCAElJKSIgOVOAIAIAAgASoCFCABKgIMIAIqAgCUIAEqAhAgAioCBJSSkiADlTgCBAsSACAAIAI2AgQgACABNgIAIAALDAAgASACKAIANgIACw4AIAAgASACQQJ0EDQaCzcBAX8jAEEQayICJAAgAiAAKAIANgIIIAIgAigCCCABQQN0ajYCCCACKAIIIQAgAkEQaiQAIAALEgAgABArKAIAIAAoAgBrQSRtC4IBAQF/AkAgASAAKAIQSQRAIAAoAhQiAyACTQ0BIABBBGogASADbCACahBADwtBoKwEQYS0ARAnQbC0ARAnQYAdECdB2gEQKUHxIBAnQc21ARAnECoQAAALQaCsBEGJtgEQJ0GwtAEQJ0GAHRAnQdsBEClB8SAQJ0G8tgEQJxAqEAAACw0AIAAoAgAgASgCAEkLDwAgACAAKAIAKAIkEQAACxEAIAAgASABKAIAKAIgEQIACxEAIAAgASABKAIAKAIsEQIAC6ABAQR/IwBBEGsiByQAAkAgAEUNACAEKAIMIQYgAiABayIIQQBKBEAgACABIAgQuQIgCEcNAQsgBiADIAFrIgFrQQAgASAGSBsiAUEASgRAIAAgByABIAUQggciBRA4IAEQuQIhBiAFEC8aIAEgBkcNAQsgAyACayIBQQBKBEAgACACIAEQuQIgAUcNAQsgBBCBByAAIQkLIAdBEGokACAJCwwAIABBgoaAIDYAAAsuAQF/IwBBEGsiASQAIAFBCGogABA4IAAQLEECdGoQdCgCACEAIAFBEGokACAACysBAX8jAEEQayIBJAAgAUEIaiAAEDggABAsahB0KAIAIQAgAUEQaiQAIAALFgAgACABIAIgAyAAKAIAKAIgEQkAGgspACAAQQh0QYCA/AdxIABBGHRyIABBCHZBgP4DcSAAQRh2cnIgACABGwsOACAAKAIIQf////8HcQtQAQF+AkAgA0HAAHEEQCACIANBQGqtiCEBQgAhAgwBCyADRQ0AIAJBwAAgA2uthiABIAOtIgSIhCEBIAIgBIghAgsgACABNwMAIAAgAjcDCAvbAQIBfwJ+QQEhBAJAIABCAFIgAUL///////////8AgyIFQoCAgICAgMD//wBWIAVCgICAgICAwP//AFEbDQAgAkIAUiADQv///////////wCDIgZCgICAgICAwP//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NgIACyANQQFqIQ0MAQsLIAFBAWohAQwACwALIBEgEmwhAEEAIQlBACENA0AgDSATRg0DIAsgDWogDiANQQJ0aigCACAAbjoAACANQQFqIQ0MAAsAC0EAQQNBhhhBABAtC0F/IQkLIA4QKCAMQeABaiQAIAkPC0EAQQNB/g1BABAtQQEQAQALWgECfyMAQRBrIgIkACACIAE2AgwgASAAEM4GIgNNBEAgABDQASIAIANBAXZJBEAgAiAAQQF0NgIIIAJBCGogAkEMahBoKAIAIQMLIAJBEGokACADDwsQtAIACwwAIAEgAi0AADoAAAshACAAIAE2AgAgACABKAIEIgE2AgQgACABIAJqNgIIIAALSQECfyAAKAIEIgZBCHUhBSAGQQFxBEAgAigCACAFEJ0EIQULIAAoAgAiACABIAIgBWogA0ECIAZBAnEbIAQgACgCACgCGBEFAAsgACABIAIpAgA3AgAgASACKAIQNgIQIAEgAikCCDcCCAsHACAAQQJJCxEAIAAgASABKAIAKAIoEQIACwgAQf////8HCwUAQf8AC00AIABBADYCFCAAIAE2AhggAEEANgIMIABCgqCAgOAANwIEIAAgAUU2AhAgAEEgakEAQSgQMBogAEEcahCEByAAQQA2AkggAEF/NgJMCysAAkAgACABRg0AA0AgACABQQRrIgFPDQEgACABEEIgAEEEaiEADAALAAsL0AEBAn8gAkGAEHEEQCAAQSs6AAAgAEEBaiEACyACQYAIcQRAIABBIzoAACAAQQFqIQALIAJBhAJxIgNBhAJHBEAgAEGu1AA7AAAgAEECaiEACyACQYCAAXEhAgNAIAEtAAAiBARAIAAgBDoAACAAQQFqIQAgAUEBaiEBDAELCyAAAn8CQCADQYACRwRAIANBBEcNAUHGAEHmACACGwwCC0HFAEHlACACGwwBC0HBAEHhACACGyADQYQCRg0AGkHHAEHnACACGws6AAAgA0GEAkcLqgEBAX8CQCADQYAQcUUNACACRSADQcoAcSIEQQhGIARBwABGcnINACAAQSs6AAAgAEEBaiEACyADQYAEcQRAIABBIzoAACAAQQFqIQALA0AgAS0AACIEBEAgACAEOgAAIABBAWohACABQQFqIQEMAQsLIAACf0HvACADQcoAcSIBQcAARg0AGkHYAEH4ACADQYCA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RQ0AIAAgACgCAEEMaygCAGooAhgQxAJBf0cNACAAIAAoAgBBDGsoAgBqQQEQugILIAFBCGoQwwILIAFBEGokAAsUACAAQfiRAzYCACAAQQRqEDwgAAtdAQJ/AkAgACgCACICRQ0AAn8gAigCGCIDIAIoAhxGBEAgAiABELkBIAIoAgAoAjQRAwAMAQsgAiADQQFqNgIYIAMgAToAACABELkBC0F/ELMBRQ0AIABBADYCAAsLCQAgABD4AhAoCwgAIAAoAhBFCwkAIAAQ+gIQKAsKACAAQRh0QRh1CxQAIABB2JADNgIAIABBBGoQPCAACwwAIAAQwgIaIAAQKAsJACAAIAEQ6gQL0gMCAn4CfyMAQSBrIgQkAAJAIAFC////////////AIMiA0KAgICAgIDAgDx9IANCgICAgICAwP/DAH1UBEAgAUIEhiAAQjyIhCEDIABC//////////8PgyIAQoGAgICAgICACFoEQCADQoGAgICAgICAwAB8IQIMAgsgA0KAgICAgICAgEB9IQIgAEKAgICAgICAgAhSDQEgAiADQgGDfCECDAELIABQIANCgICAgICAwP//AFQgA0KAgICAgIDA//8AURtFBEAgAUIEhiAAQjyIhEL/////////A4NCgICAgICAgPz/AIQhAgwBC0KAgICAgICA+P8AIQIgA0L///////+//8MAVg0AQgAhAiADQjCIpyIFQZH3AEkNACAEQRBqIAAgAUL///////8/g0KAgICAgIDAAIQiAiAFQYH3AGsQfyAEIAAgAkGB+AAgBWsQ8QEgBCkDCEIEhiAEKQMAIgBCPIiEIQIgBCkDECAEKQMYhEIAUq0gAEL//////////w+DhCIAQoGAgICAgICACFoEQCACQgF8IQIMAQsgAEKAgICAgICAgAhSDQAgAkIBgyACfCECCyAEQSBqJAAgAiABQoCAgICAgICAgH+DhL8LRQEBfyMAQRBrIgUkACAFIAEgAiADIARCgICAgICAgICAf4UQkwEgBSkDACEBIAAgBSkDCDcDCCAAIAE3AwAgBUEQaiQAC4kCAAJAIAAEfyABQf8ATQ0BAkBBhJUEKAIAKAIARQRAIAFBgH9xQYC/A0YNAwwBCyABQf8PTQRAIAAgAUE/cUGAAXI6AAEgACABQQZ2QcABcjoAAEECDwsgAUGAQHFBgMADRyABQYCwA09xRQRAIAAgAUE/cUGAAXI6AAIgACABQQx2QeABcjoAACAAIAFBBnZBP3FBgAFyOgABQQMPCyABQYCABGtB//8/TQRAIAAgAUE/cUGAAXI6AAMgACABQRJ2QfABcjoAACAAIAFBBnZBP3FBgAFyOgACIAAgAUEMdkE/cUGAAXI6AAFBBA8LC0GokwRBGTYCAEF/BUEBCw8LIAAgAToAAEEBC9kBAQJ/AkAgAUH/AXEiAwRAIABBA3EEQANAIAAtAAAiAkUgAiABQf8BcUZyDQMgAEEBaiIAQQNxDQALCwJAIAAoAgAiAkF/cyACQYGChAhrcUGAgYKEeHENACADQYGChAhsIQMDQCACIANzIgJBf3MgAkGBgoQIa3FBgIGChHhxDQEgACgCBCECIABBBGohACACQYGChAhrIAJBf3NxQYCBgoR4cUUNAAsLA0AgACICLQAAIgMEQCACQQFqIQAgAyABQf8BcUcNAQsLIAIPCyAAEHogAGoPCyAACyoBAX8jAEEQayIEJAAgBCADNgIMIAAgASACIAMQ9AEhACAEQRBqJAAgAAuvAQEGfyMAQfABayIHJAAgByAANgIAQQEhBgJAIANBAkgNAEEAIAFrIQkgACEFA0AgACAFIAlqIgUgBCADQQJrIgpBAnRqKAIAayIIIAIRAwBBAE4EQCAAIAUgAhEDAEEATg0CCyAHIAZBAnRqIAggBSAIIAUgAhEDAEEATiIIGyIFNgIAIAZBAWohBiADQQFrIAogCBsiA0EBSg0ACwsgASAHIAYQiwUgB0HwAWokAAvjAQECfyACQQBHIQMCQAJAAkAgAEEDcUUgAkVyDQAgAUH/AXEhBANAIAAtAAAgBEYNAiACQQFrIgJBAEchAyAAQQFqIgBBA3FFDQEgAg0ACwsgA0UNAQsCQCAALQAAIAFB/wFxRiACQQRJckUEQCABQf8BcUGBgoQIbCEDA0AgACgCACADcyIEQX9zIARBgYKECGtxQYCBgoR4cQ0CIABBBGohACACQQRrIgJBA0sNAAsLIAJFDQELIAFB/wFxIQEDQCABIAAtAABGBEAgAA8LIABBAWohACACQQFrIgINAAsLQQALwQEBA38CQCABIAIoAhAiAwR/IAMFIAIQlQUNASACKAIQCyACKAIUIgVrSwRAIAIgACABIAIoAiQRBAAPCwJAIAIoAlBBAEgEQEEAIQMMAQsgASEEA0AgBCIDRQRAQQAhAwwCCyAAIANBAWsiBGotAABBCkcNAAsgAiAAIAMgAigCJBEEACIEIANJDQEgACADaiEAIAEgA2shASACKAIUIQULIAUgACABEDQaIAIgAigCFCABajYCFCABIANqIQQLIAQLLAEBfyAAEPUEIAAoAgAEQCAAEPEEIAAQKxogACgCACEBIAAQzwEaIAEQKAsLjgoBDn8gASgCFCEJIAEoAhAhAyABKAIMIQsgASgCCCEFIAAoAuQDKAIYIQ0CQCABKAIEIgcgASgCACIGSgRAIAYhCgNAIAUgC0wEQCANIApBAnRqKAIAIQwgBSECA0AgAyAJTARAIAwgAkEGdGogA0EBdGohACADIQQDQCAALwEABEAgASAKNgIADAcLIABBAmohACAEIAlHIQggBEEBaiEEIAgNAAsLIAIgC0chACACQQFqIQIgAA0ACwsgByAKRyEAIApBAWohCiAADQALCyAGIQoLAkAgByAKSgRAIAchCANAIAUgC0wEQCANIAhBAnRqKAIAIQwgBSECA0AgAyAJTARAIAwgAkEGdGogA0EBdGohACADIQQDQCAALwEABEAgASAINgIEDAcLIABBAmohACAEIAlHIQYgBEEBaiEEIAYNAAsLIAIgC0chACACQQFqIQIgAA0ACwsgCCAKSiEAIAhBAWshCCAADQALCyAHIQgLAkAgBSALSARAIAUhBgNAIAggCiICTgRAA0AgAyAJTARAIA0gAkECdGooAgAgBkEGdGogA0EBdGohACADIQQDQCAALwEABEAgASAGNgIIDAcLIABBAmohACAEIAlHIQcgBEEBaiEEIAcNAAsLIAIgCEchACACQQFqIQIgAA0ACwsgBiALRyEAIAZBAWohBiAADQALCyAFIQYLAkAgBiALSARAIAshBwNAIAggCiICTgRAA0AgAyAJTARAIA0gAkECdGooAgAgB0EGdGogA0EBdGohACADIQQDQCAALwEABEAgASAHNgIMDAcLIABBAmohACAEIAlHIQUgBEEBaiEEIAUNAAsLIAIgCEchACACQQFqIQIgAA0ACwsgBiAHSCEAIAdBAWshByAADQALCyALIQcLAkAgAyAJSARAIAZBBnQhDCADIQUDQCAIIAoiAk4EQANAIAYgB0wEQCANIAJB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IBJrQQF0IRFBACEMQQEhDgJAA0AgDiAVRwRAQQEhCQNAAkACQAJAIAkgFkcEQCAFIAYtAABOBEAgBCARaiIDLwEAIgJBEHRBEHUiAUEASgRAIAQgATsBACACQRxsIBBqIgJBBGsgDjYCACACQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACAOajYCAAwFCyADQQJrLwEAIgFBEHRBEHUhAiADLgECIgNBAEoEQCACQQBKBEAgA0ECdCAAakEEaygCACICIAFBAnQgAGpBBGsoAgAiA0oEQCAEIAM7AQBBACEKIAxBACAMQQBKGyELIAAhAQNAIAogC0YEQCADIQIMCAsgAiABKAIARgRAIAEgAzYCAAsgCkEBaiEKIAFBBGohAQwACwALIAQgAjsBACACIANODQVBACEKIAxBACAMQQBKGyELIAAhAQNAIAogC0YNBiADIAEoAgBGBEAgASACNgIACyAKQQFqIQogAUEEaiEBDAALAAsgBEECay4BACIBQQBKBEAgA0ECdCAAakEEaygCACICIAFB//8DcUECdCAAakEEaygCACIDSgRAIAQgAzsBAEEAIQogDEEAIAxBAEobIQsgACEBA0AgCiALRgRAIAMhAgwHCyACIAEoAgBGBEAgASADNgIACyAKQQFqIQogAUEEaiEBDAALAAsgBCACOwEAIAIgA04NBEEAIQogDEEAIAxBAEobIQsgACEBA0AgCiALRg0FIAMgASgCAEYEQCABIAI2AgALIApBAWohCiABQQRqIQEMAAsACyAEIAM7AQAgA0EcbCAQaiICQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACAOajYCACAJIAJBEGsiASgCAEgEQCABIAk2AgALIAJBBGsgDjYCAAwFCyACQQBKBEAgBCACOwEAIAFBHGwgEGoiAkEcayIBIAEoAgBBAWo2AgAgAkEYayIBIAEoAgAgCWo2AgAgAkEUayIBIAEoAgAgDmo2AgAgCSACQQxrIgEoAgBKBEAgASAJNgIACyACQQRrIA42AgAMBQsgBEECay8BACICQRB0QRB1IgFBAEoEQCAEIAE7AQAgAkEcbCAQaiICQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYC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Tg0EQQAhCiAMQQAgDEEAShshCyAAIQMDQCAKIAtGDQUgBCADKAIARgRAIAMgATYCAAsgCkEBaiEKIANBBGohAwwACwALIAIgBDsBACAEQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAlqNgIAIANBFGsiASABKAIAIA9qNgIAIAkgA0EQayIBKAIASARAIAEgCTYCAAsgA0EEayAPNgIADAULIAFBAEoEQCACIAE7AQAgA0EcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACAPajYCACAJIANBDGsiASgCAEoEQCABIAk2AgALIANBBGsgDzYCAAwFCyACQQJrLwEAIgNBEHRBEHUiAUEASgRAIAIgATsBACADQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAlqNgIAIANBFGsiASABKAIAIA9qNgIAIANBDGsiASgCACAJTg0FIAEgCTYCAAwFCyAMQYCAAk4EQEEAQQNB5AtBABAtQX8hCgwJCyACIAxBAWoiATsBACAAIAxBAnRqIAFBEHRBEHU2AgAgDSAMQRxsaiIDIA82AhggAyAPNgIUIAMgCTYCECADIAk2AgwgAyAPNgIIIAMgCTYCBCADQQE2AgAgASEMDAQLIAJBADsBAAwDCyACQQRqIQIgEUECaiEIIBZBAmohDiAPQQFqIQ8MBQsgAUEQdEEQdUEcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACAPajYCAAwBCyABQRB0QRB1QRxsIA1qIgNBBGsgDzYCACADQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACAPajYCAAsgAkECaiECIAhBAWohCCAOQQFqIQ4gCUEBaiEJDAALAAsLIAxBACAMQQBKG0EBaiECQQEhA0EBIQggACEJA0AgAiADRwRAAkAgAyAJKAIAIgFGBEAgCCIKQQFqIQgMAQsgAUECdCAAakEEaygCACEKCyAJIAo2AgAgCUEEaiEJIANBAWohAwwBCwsgByAIQQFrIgk2AghBACAJRQ0BGiAHQYyACGohCiAHQQxqQQAgCUECdBAwIQsgB0GQgChqQQAgCUEEdBAwIQhBACEDA0AgAyAJTgRAQQAhCSAMQQAgDEEAShshBANAIAQgCUYEQEEAIQogBygCCCIAQQAgAEEAShshAEEAIQMDQCAAIANGDQUgCCADQQR0aiIBIAErAwAgCyADQQJ0aigCALciF6M5AwAgASABKwMIIBejOQMIIANBAWohAwwACwALIAsgACAJQQJ0aigCAEEBayICQQJ0IgNqIgEgASgCACANIAlBHGxqIgUoAgBqNgIAIAggAkEEdCIBaiICIAIrAwAgBSgCBLegOQMAIAIgAisDCCAFKAIIt6A5AwggBSgCDCICIAEgCmoiASgCAEgEQCABIAI2AgALIAUoAhAiAiAKIANBAnQiA0EEcmoiASgCAEoEQCABIAI2AgALIAUoAhQiAiAKIANBCHJqIgEoAgBIBEAgASACNgIACyAFKAIYIgIgCiADQQxyaiIBKAIASgRAIAEgAjYCAAsgCUEBaiEJDAALAAUgCiADQQR0aiIBIAY2AgAgAUEANgIEIAEgBTYCCCABQQA2AgwgA0EBaiEDIAcoAgghCQwBCwALAAsgCgsPCyAGRQRAAn8gACEEQQAhAyABIghBACABQQBKGyEAIAcoAgAiASACIgZBAWsiCSAIbEEBdGohCyABIQIDQCAAIANHBEAgC0EAOwEAIAJBADsBACADQQFqIQMgAkECaiECIAtBAmohCwwBCwsgBkEAIAZBAEobIQwgASAIQQFrIgpBAXRqIQtBACEDIAEhAgNAIAMgDEcEQCALQQA7AQAgAkEAOwEAIANBAWohAyALIAhBAXQiAGohCyAAIAJqIQIMAQsLIAlBASAJQQFKGyEQIAdBkIDQAGohDiAHQZCAyABqIQAgBCAIQQFqIgJqIQwgCkEBIApBAUobIhJBAWshFCABIAJBAXRqIQJBACAIa0EBdCEVQQAhCkEBIQ0CQANAIA0gEEcEQCAMIBRqIRZBASELA0ACQAJAAkAgCyASRwRAIAUgDC0AAEgEQCACIBVqIgQvAQAiA0EQdEEQdSIBQQBKBEAgAiABOwEAIANBHGwgDmoiA0EEayANNgIAIANBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA1qNgIADAULIARBAmsvAQAiA0EQdEEQdSEBIAQuAQIiBEEASgRAIAFBAEoEQCAEQQJ0IABqQQRrKAIAIgEgA0ECdCAAakEEaygCACIESgRAIAIgBDsBAEEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRgRAIAQhAQwICyABIAMoAgBGBEAgAyAENgIACyAJQQFqIQkgA0EEaiEDDAALAAsgAiABOwEAIAEgBE4NBUEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRg0GIAQgAygCAEYEQCADIAE2AgALIAlBAWohCSADQQRqIQMMAAsACyACQQJrLgEAIgNBAEoEQCAEQQJ0IABqQQRrKAIAIgEgA0H//wNxQQJ0IABqQQRrKAIAIgRKBEAgAiAEOwEAQQAhCSAKQQAgCkEAShshESAAIQMDQCAJIBFGBEAgBCEBDAcLIAEgAygCAEYEQCADIAQ2AgALIAlBAWohCSADQQRqIQMMAAsACyACIAE7AQAgASAETg0EQQAhCSAKQQAgCkEAShshESAAIQMDQCAJIBFGDQUgBCADKAIARgRAIAMgATYCAAsgCUEBaiEJIANBBGohAwwACwALIAIgBDsBACAEQRxsIA5qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA1qNgIAIAsgA0EQayIBKAIASARAIAEgCzYCAAsgA0EEayANNgIADAULIAFBAEoEQCACIAE7AQAgA0EcbCAOaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACANajYCACALIANBDGsiASgCAEoEQCABIAs2AgALIANBBGsgDTYCAAwFCyACQQJrLwEAIgNBEHRBEHUiAUEASgRAIAIgATsBACADQRxsIA5qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA1qNgIAIANBDGsiASgCACALTg0FIAEgCzYCAAwFCyAKQYCAAk4EQEEAQQNB5AtBABAtQX8hCQwJCyACIApBAWoiATsBACAAIApBAnRqIAFBEHRBEHU2AgAgDiAKQRxsaiIDIA02AhggAyANNgIUIAMgCzYCECADIAs2AgwgAyANNgIIIAMgCzYCBCADQQE2AgAgASEKDAQLIAJBADsBAAwDCyACQQRqIQIgFkECaiEMIA1BAWohDQwFCyABQRB0QRB1QRxsIA5qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA1qNgIADAELIAFBEHRBEHVBHGwgDmoiA0EEayANNgIAIANBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA1qNgIACyACQQJqIQIgDEEBaiEMIAtBAWohCwwACwALCyAKQQAgCkEAShtBAWohAkEBIQNBASEMIAAhCwNAIAIgA0cEQAJAIAMgCygCACIBRgRAIAwiCUEBaiEMDAELIAFBAnQgAGpBBGsoAgAhCQsgCyAJNgIAIAtBBGohCyADQQFqIQMMAQsLIAcgDEEBayILNgIIQQAgC0UNARogB0GMgAhqIQkgB0EMakEAIAtBAnQQMCEMIAdBkIAoakEAIAtBBHQQMCEFQQAhAwNAIAMgC04EQEEAIQsgCkEAIApBAEobIQQDQCAEIAtGBEBBACEJIAcoAggiAEEAIABBAEobIQBBACEDA0AgACADRg0FIAUgA0EEdGoiASABKwMAIAwgA0ECdGooAgC3IhejOQMAIAEgASsDCCAXozkDCCADQQFqIQMMAAsACyAMIAAgC0ECdGooAgBBAWsiAkECdCIDaiIBIAEoAgAgDiALQRxsaiIGKAIAajYCACAFIAJBBHQiAWoiAiACKwMAIAYoAgS3oDkDACACIAIrAwggBigCCLegOQMIIAYoAgwiAiABIAlqIgEoAgBIBEAgASACNgIACyAGKAIQIgIgCSADQQJ0IgNBBHJqIgEoAgBKBEAgASACNgIACyAGKAIUIgIgCSADQQhyaiIBKAIASARAIAEgAjYCAAsgBigCGCICIAkgA0EMcmoiASgCAEoEQCABIAI2AgALIAtBAWohCwwACwAFIAkgA0EEdGoiASAINgIAIAFBADYCBCABIAY2AgggAUEANgIMIANBAWohAyAHKAIIIQsMAQsACwALIAkLDwsCfyAAIQYgASIIQQJtIhJBACASQQBKGyEAIAcoAgAiAyACQQJtIhRBAWsiCiASbEEBdGohCUEAIQEgAyEEA0AgACABRwRAIAlBADsBACAEQQA7AQAgAUEBaiEBIARBAmohBCAJQQJqIQkMAQsLIBRBACAUQQBKGyEC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IAIgAisDCCAMKAIIt6A5AwggDCgCDCICIAEgCGoiASgCAEgEQCABIAI2AgALIAwoAhAiAiAIIANBAnQiA0EEcmoiASgCAEoEQCABIAI2AgALIAwoAhQiAiAIIANBCHJqIgEoAgBIBEAgASACNgIACyAMKAIYIgIgCCADQQxyaiIBKAIASgRAIAEgAjYCAAsgCUEBaiEJDAALAAUgCCABQQR0aiICIBI2AgAgAkEANgIEIAIgFDYCCCACQQA2AgwgAUEBaiEBIAcoAgghCQwBCwALAAsgCgsPCyAEQQFGBEAgCARAAn8gACEEQQAhAyABIgZBACABQQBKGyEAIAciDCgCACIBIAIiBUEBayILIAZsQQF0aiEJIAEhAgNAIAAgA0cEQCAJQQA7AQAgAkEAOwEAIANBAWohAyACQQJqIQIgCUECaiEJDAELCyAFQQAgBUEAShshByABIAZBAWsiCkEBdGohCUEAIQMgASECA0AgAyAHRwRAIAlBADsBACACQQA7AQAgA0EBaiEDIAkgBkEBdCIAaiEJIAAgAmohAgwBCwsgC0EBIAtBAUobIRIgDEGQgNAAaiEPIAxBkIDIAGohACAIIAZBAWoiAmohByACIARqIQ4gDCgCBCACaiENIApBASAKQQFKGyIUQQFrIRAgASACQQF0aiECQQAgBmtBAXQhFUEAIQhBASETAkADQCASIBNHBEAgDiAQaiEWIAcgEGohEUEBIQkDQAJAAkACQCAJIBRHBEAgDi0AACAHLQAATQRAIA1B/wE6AAAgAiAVaiIELwEAIgNBEHRBEHUiAUEASgRAIAIgATsBACADQRxsIA9qIgNBBGsgEzYCACADQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACATajYCAAwFCyAEQQJrLwEAIgNBEHRBEHUhASAELgECIgRBAEoEQCABQQBKBEAgBEECdCAAakEEaygCACIBIANBAnQgAGpBBGsoAgAiBEoEQCACIAQ7AQBBACEKIAhBACAIQQBKGyELIAAhAwNAIAogC0YEQCAEIQEMCAsgASADKAIARgRAIAMgBDYCAAsgCkEBaiEKIANBBGohAwwACwALIAIgATsBACABIARODQVBACEKIAhBACAIQQBKGyELIAAhAwNAIAogC0YNBiAEIAMoAgBGBEAgAyABNgIACyAKQQFqIQogA0EEaiEDDAALAAsgAkECay4BACIDQQBKBEAgBEECdCAAakEEaygCACIBIANB//8DcUECdCAAakEEaygCACIESgRAIAIgBDsBAEEAIQogCEEAIAhBAEobIQsgACEDA0AgCiALRgRAIAQhAQwHCyABIAMoAgBGBEAgAyAENgIACyAKQQFqIQogA0EEaiEDDAALAAsgAiABOwEAIAEgBE4NBEEAIQogCEEAIAhBAEobIQsgACEDA0AgCiALRg0FIAQgAygCAEYEQCADIAE2AgALIApBAWohCiADQQRqIQMMAAsACyACIAQ7AQAgBEEcbCAPaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACATajYCACAJIANBEGsiASgCAEgEQCABIAk2AgALIANBBGsgEzYCAAwFCyABQQBKBEAgAiABOwEAIANBHGwgD2oiA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgCWo2AgAgA0EUayIBIAEoAgAgE2o2AgAgCSADQQxrIgEoAgBKBEAgASAJNgIACyADQQRrIBM2AgAMBQsgAkECay8BACIDQRB0QRB1IgFBAEoEQCACIAE7AQAgA0EcbCAPaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACATajYCACADQQxrIgEoAgAgCU4NBSABIAk2AgAMBQsgCEGAgAJOBEBBAEEDQeQLQQAQLUF/IQoMCQsgAiAIQQFqIgE7AQAgACAIQQJ0aiABQRB0QRB1NgIAIA8gCEEcbGoiAyATNgIYIAMgEzYCFCADIAk2AhAgAyAJNgIMIAMgEzYCCCADIAk2AgQgA0EBNgIAIAEhCAwECyACQQA7AQAgDUEAOgAADAMLIA1BAmohDSACQQRqIQIgEUECaiEHIBZBAmohDiATQQFqIRMMBQsgAUEQdEEQdUEcbCAPaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACATajYCAAwBCyABQRB0QRB1QRxsIA9qIgNBBGsgEzYCACADQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACATajYCAAsgDUEBaiENIAJBAmohAiAHQQFqIQcgDkEBaiEOIAlBAWohCQwACwALCyAIQQAgCEEAShtBAWohAkEBIQNBASEHIAAhCQNAIAIgA0cEQAJAIAMgCSgCACIBRgRAIAciCkEBaiEHDAELIAFBAnQgAGpBBGsoAgAhCgsgCSAKNgIAIAlBBGohCSADQQFqIQMMAQsLIAwgB0EBayIJNgIIQQAgCUUNARogDEGMgAhqIQogDEEMakEAIAlBAnQQMCELIAxBkIAoakEAIAlBBHQQMCEHQQAhAwNAIAMgCU4EQEEAIQkgCEEAIAhBAEobIQQDQCAEIAlGBEBBACEKIAwoAggiAEEAIABBAEobIQBBACEDA0AgACADRg0FIAcgA0EEdGoiASABKwMAIAsgA0ECdGooAgC3IhejOQMAIAEgASsDCCAXozkDCCADQQFqIQMMAAsACyALIAAgCUECdGooAgBBAWsiAkECdCIDaiIBIAEoAgAgDyAJQRxsaiIFKAIAajYCACAHIAJBBHQiAWoiAiACKwMAIAUoAgS3oDkDACACIAIrAwggBSgCCLegOQMIIAUoAgwiAiABIApqIgEoAgBIBEAgASACNgIACyAFKAIQIgIgCiADQQJ0IgNBBHJqIgEoAgBKBEAgASACNgIACyAFKAIUIgIgCiADQQhyaiIBKAIASARAIAEgAjYCAAsgBSgCGCICIAogA0EMcmoiASgCAEoEQCABIAI2AgALIAlBAWohCQwACwAFIAogA0EEdGoiASAGNgIAIAFBADYCBCABIAU2AgggAUEANgIMIANBAWohAyAMKAIIIQkMAQsACwALIAoLDwsgBkUEQAJ/IAAhBEEAIQMgASIIQQAgAUEAShshACAHIgwoAgAiASACIgZBAWsiCSAIbEEBdGohCyABIQIDQCAAIANHBEAgC0EAOwEAIAJBADsBACADQQFqIQMgAkECaiECIAtBAmohCwwBCwsgBkEAIAZBAEobIQcgASAIQQFrIgpBAXRqIQtBACEDIAEhAgNAIAMgB0cEQCALQQA7AQAgAkEAOwEAIANBAWohAyALIAhBAXQiAGohCyAAIAJqIQIMAQsLIAlBASAJQQFKGyEQIAxBkIDQAGohDSAMQZCAyABqIQAgBCAIQQFqIgJqIQcgDCgCBCACaiEOIApBASAKQQFKGyISQQFrIRQgASACQQF0aiECQQAgCGtBAXQhFUEAIQpBASEPAkADQCAPIBBHBEAgByAUaiEWQQEhCwNAAkACQAJAIAsgEkcEQCAFIActAABOBEAgDkH/AToAACACIBVqIgQvAQAiA0EQdEEQdSIBQQBKBEAgAiABOwEAIANBHGwgDWoiA0EEayAPNgIAIANBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA9qNgIADAULIARBAmsvAQAiA0EQdEEQdSEBIAQuAQIiBEEASgRAIAFBAEoEQCAEQQJ0IABqQQRrKAIAIgEgA0ECdCAAakEEaygCACIESgRAIAIgBDsBAEEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRgRAIAQhAQwICyABIAMoAgBGBEAgAyAENgIACyAJQQFqIQkgA0EEaiEDDAALAAsgAiABOwEAIAEgBE4NBUEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRg0GIAQgAygCAEYEQCADIAE2AgALIAlBAWohCSADQQRqIQMMAAsACyACQQJrLgEAIgNBAEoEQCAEQQJ0IABqQQRrKAIAIgEgA0H//wNxQQJ0IABqQQRrKAIAIgRKBEAgAiAEOwEAQQAhCSAKQQAgCkEAShshESAAIQMDQCAJIBFGBEAgBCEBDAcLIAEgAygCAEYEQCADIAQ2AgALIAlBAWohCSADQQRqIQMMAAsACyACIAE7AQAgASAETg0EQQAhCSAKQQAgCkEAShshESAAIQMDQCAJIBFGDQUgBCADKAIARgRAIAMgATYCAAsgCUEBaiEJIANBBGohAwwACwALIAIgBDsBACAEQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA9qNgIAIAsgA0EQayIBKAIASARAIAEgCzYCAAsgA0EEayAPNgIADAULIAFBAEoEQCACIAE7AQAgA0EcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACAPajYCACALIANBDGsiASgCAEoEQCABIAs2AgALIANBBGsgDzYCAAwFCyACQQJrLwEAIgNBEHRBEHUiAUEASgRAIAIgATsBACADQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA9qNgIAIANBDGsiASgCACALTg0FIAEgCzYCAAwFCyAKQYCAAk4EQEEAQQNB5AtBABAtQX8hCQwJCyACIApBAWoiATsBACAAIApBAnRqIAFBEHRBEHU2AgAgDSAKQRxsaiIDIA82AhggAyAPNgIUIAMgCzYCECADIAs2AgwgAyAPNgIIIAMgCzYCBCADQQE2AgAgASEKDAQLIAJBADsBACAOQQA6AAAMAwsgDkECaiEOIAJBBGohAiAWQQJqIQcgD0EBaiEPDAULIAFBEHRBEHVBHGwgDWoiA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgC2o2AgAgA0EUayIBIAEoAgAgD2o2AgAMAQsgAUEQdEEQdUEcbCANaiIDQQRrIA82AgAgA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgC2o2AgAgA0EUayIBIAEoAgAgD2o2AgALIA5BAWohDiACQQJqIQIgB0EBaiEHIAtBAWohCwwACwALCyAKQQAgCkEAShtBAWohAkEBIQNBASEHIAAhCwNAIAIgA0cEQAJAIAMgCygCACIBRgRAIAciCUEBaiEHDAELIAFBAnQgAGpBBGsoAgAhCQsgCyAJNgIAIAtBBGohCyADQQFqIQMMAQsLIAwgB0EBayILNgIIQQAgC0UNARogDEGMgAhqIQkgDEEMakEAIAtBAnQQMCEHIAxBkIAoakEAIAtBBHQQMCEFQQAhAwNAIAMgC04EQEEAIQsgCkEAIApBAEobIQQDQCAEIAtGBEBBACEJIAwoAggiAEEAIABBAEobIQBBACEDA0AgACADRg0FIAUgA0EEdGoiASABKwMAIAcgA0ECdGooAgC3IhejOQMAIAEgASsDCCAXozkDCCADQQFqIQMMAAsACyAHIAAgC0ECdGooAgBBAWsiAkECdCIDaiIBIAEoAgAgDSALQRxsaiIGKAIAajYCACAFIAJBBHQiAWoiAiACKwMAIAYoAgS3oDkDACACIAIrAwggBigCCLegOQMIIAYoAgwiAiABIAlqIgEoAgBIBEAgASACNgIACyAGKAIQIgIgCSADQQJ0IgNBBHJqIgEoAgBKBEAgASACNgIACyAGKAIUIgIgCSADQQhyaiIBKAIASARAIAEgAjYCAAsgBigCGCICIAkgA0EMcmoiASgCAEoEQCABIAI2AgALIAtBAWohCwwACwAFIAkgA0EEdGoiASAINgIAIAFBADYCBCABIAY2AgggAUEANgIMIANBAWohAyAMKAIIIQsMAQsACwALIAkLDwsCfyAAIQYgASIIQQJtIhBBACAQQQBKGyEAIAcoAgAiAyACQQJtIhRBAWsiCiAQbEEBdGohCUEAIQEgAyEEA0AgACABRwRAIAlBADsBACAEQQA7AQAgAUEBaiEBIARBAmohBCAJQQJqIQkMAQsLIBRBACAUQQBKGyECIAMgEEEBayIMQQF0aiEJQQAhASADIQQDQCABIAJHBEAgCUEAOwEAIARBADsBACABQQFqIQEgCSAQQQF0IgBqIQkgACAEaiEEDAELCyAKQQEgCkEBShshFSAMQQEgDEEBShshFiAHQZCA0ABqIQ4gB0GQgMgAaiEAIBBBAWoiASAHKAIEaiEMIAhBAXQgBmpBAmohEiADIAFBAXRqIQRBACAQa0EBdCERQQAhBkEBIQ0CQANAIA0gFUcEQEEBIQkDQAJAAkACQCAJIBZHBEAgBSASLQAATgRAIAxB/wE6AAAgBCARaiIDLwEAIgJBEHRBEHUiAUEASgRAIAQgATsBACACQRxsIA5qIgJBBGsgDTYCACACQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACANajYCAAwFCyADQQJrLwEAIgFBEHRBEHUhAiADLgECIgNBAEoEQCACQQBKBEAgA0ECdCAAakEEaygCACICIAFBAnQgAGpBBGsoAgAiA0oEQCAEIAM7AQBBACEKIAZBACAGQQBKGyELIAAhAQNAIAogC0YEQCADIQIMCAsgAiABKAIARgRAIAEgAzYCAAsgCkEBaiEKIAFBBGohAQwACwALIAQgAjsBACACIANODQVBACEKIAZBACAGQQBKGyELIAAhAQNAIAogC0YNBiADIAEoAgBGBEAgASACNgIACyAKQQFqIQogAUEEaiEBDAALAAsgBEECay4BACIBQQBKBEAgA0ECdCAAakEEaygCACICIAFB//8DcUECdCAAakEEaygCACIDSgRAIAQgAzsBAEEAIQogBkEAIAZBAEobIQsgACEBA0AgCiALRgRAIAMhAgwHCyAC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CyAKCw8LIAZFBEACfyAAIQRBACEDIAEiCEEAIAFBAEobIQAgByIMKAIAIgEgAiIGQQFrIgkgCGxBAXRqIQsgASECA0AgACADRwRAIAtBADsBACACQQA7AQAgA0EBaiEDIAJBAmohAiALQQJqIQsMAQsLIAZBACAGQQBKGyEHIAEgCEEBayIKQQF0aiELQQAhAyABIQIDQCADIAdHBEAgC0EAOwEAIAJBADsBACADQQFqIQMgCyAIQQF0IgBqIQsgACACaiECDAELCyAJQQEgCUEBShshECAMQZCA0ABqIQ0gDEGQgMgAaiEAIAQgCEEBaiICaiEHIAwoAgQgAmohDiAKQQEgCkEBShsiEkEBayEUIAEgAkEBdGohAkEAIAhrQQF0IRVBACEKQQEhDwJAA0AgDyAQRwRAIAcgFGohFkEBIQsDQAJAAkACQCALIBJHBEAgBSAHLQAASARAIA5B/wE6AAAgAiAVaiIELwEAIgNBEHRBEHUiAUEASgRAIAIgATsBACADQRxsIA1qIgNBBGsgDzYCACADQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACAPajYCAAwFCyAEQQJrLwEAIgNBEHRBEHUhASAELgECIgRBAEoEQCABQQBKBEAgBEECdCAAakEEaygCACIBIANBAnQgAGpBBGsoAgAiBEoEQCACIAQ7AQBBACEJIApBACAKQQBKGyERIAAhAwNAIAkgEUYEQCAEIQEMCAsgASADKAIARgRAIAMgBDYCAAsgCUEBaiEJIANBBGohAwwACwALIAIgATsBACABIARODQVBACEJIApBACAKQQBKGyERIAAhAwNAIAkgEUYNBiAEIAMoAgBGBEAgAyABNgIACyAJQQFqIQkgA0EEaiEDDAALAAsgAkECay4BACIDQQBKBEAgBEECdCAAakEEaygCACIBIANB//8DcUECdCAAakEEaygCACIESgRAIAIgBDsBAEEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRgRAIAQhAQwHCyABIAMoAgBGBEAgAyAENgIACyAJQQFqIQkgA0EEaiEDDAALAAsgAiABOwEAIAEgBE4NBEEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRg0FIAQgAygCAEYEQCADIAE2AgALIAlBAWohCSADQQRqIQMMAAsACyACIAQ7AQAgBEEcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACAPajYCACALIANBEGsiASgCAEgEQCABIAs2AgALIANBBGsgDzYCAAwFCyABQQBKBEAgAiABOwEAIANBHGwgDWoiA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgC2o2AgAgA0EUayIBIAEoAgAgD2o2AgAgCyADQQxrIgEoAgBKBEAgASALNgIACyADQQRrIA82AgAMBQsgAkECay8BACIDQRB0QRB1IgFBAEoEQCACIAE7AQAgA0EcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACAPajYCACADQQxrIgEoAgAgC04NBSABIAs2AgAMBQsgCkGAgAJOBEBBAEEDQeQLQQAQLUF/IQkMCQsgAiAKQQFqIgE7AQAgACAKQQJ0aiABQRB0QRB1NgIAIA0gCkEcbGoiAyAPNgIYIAMgDzYCFCADIAs2AhAgAyALNgIMIAMgDzYCCCADIAs2AgQgA0EBNgIAIAEhCgwECyACQQA7AQAgDkEAOgAADAMLIA5BAmohDiACQQRqIQIgFkECaiEHIA9BAWohDwwFCyABQRB0QRB1QRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA9qNgIADAELIAFBEHRBEHVBHGwgDWoiA0EEayAPNgIAIANBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA9qNgIACyAOQQFqIQ4gAkECaiECIAdBAWohByALQQFqIQsMAAsACwsgCkEAIApBAEobQQFqIQJBASEDQQEhByAAIQsDQCACIANHBEACQCADIAsoAgAiAUYEQCAHIglBAWohBwwBCyABQQJ0IABqQQRrKAIAIQkLIAsgCTYCACALQQRqIQsgA0EBaiEDDAELCyAMIAdBAWsiCzYCCEEAIAtFDQEaIAxBjIAIaiEJIAxBDGpBACALQQJ0EDAhByAMQZCAKGpBACALQQR0EDAhBUEAIQMDQCADIAtOBEBBACELIApBACAKQQBKGyEEA0AgBCAL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dUEcbCAOaiICQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACANajYCAAwBCyACQRB0QRB1QRxsIA5qIgJBBGsgDTYCACACQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACANajYCAAsgDEEBaiEMIARBAmohBCASQQJqIRIgCUEBaiEJDAALAAsLIAZBACAGQQBKG0EBaiEDQQEhAUEBIQwgACEJA0AgASADRwRAAkAgASAJKAIAIgJGBEAgDCIKQQFqIQwMAQsgAkECdCAAakEEaygCACEKCyAJIAo2AgAgCUEEaiEJIAFBAWohAQwBCwsgByAMQQFrIgk2AghBACAJRQ0BGiAHQYyACGohDCAHQQxqQQAgCUECdBAwIQggB0GQgChqQQAgCUEEdBAwIQVBACEBA0AgASAJTgRAQQAhCSAGQQAgBkEAShshBANAIAQgCUYEQEEAIQogBygCCCIAQQAgAEEAShshAEEAIQEDQCAAIAFGDQUgBSABQQR0aiICIAIrAwAgCCABQQJ0aigCALciF6M5AwAgAiACKwMIIBejOQMIIAFBAWohAQwACwALIAggACAJQQJ0aigCAEEBayICQQJ0IgNqIgEgASgCACAOIAlBHGxqIgYoAgBqNgIAIAUgAkEEdCIBaiICIAIrAwAgBigCBLegOQMAIAIgAisDCCAGKAIIt6A5AwggBigCDCICIAEgDGoiASgCAEgEQCABIAI2AgALIAYoAhAiAiAMIANBAnQiA0EEcmoiASgCAEoEQCABIAI2AgALIAYoAhQiAiAMIANBCHJqIgEoAgBIBEAgASACNgIACyAGKAIYIgIgDCADQQxyaiIBKAIASgRAIAEgAjYCAAsgCUEBaiEJDAALAAUgDCABQQR0aiICIBA2AgAgAkEANgIEIAIgFDYCCCACQQA2AgwgAUEBaiEBIAcoAgghCQwBCwALAAsgCgsLVQEBfyAAKAIEIQIDQCACIAAoAghHBEAgACgCEBogACAAKAIIIAFrNgIIDAELCyAAKAIABEAgACgCEBogACgCACECIAAQNSgCACAAKAIAaxogAhAoCwskACAAIAE2AgAgACABKAIEIgE2AgQgACABIAIgA2xqNgIIIAALWgECfyMAQRBrIgIkACACIAE2AgwgASAAENQGIgNNBEAgABDPASIAIANBAXZJBEAgAiAAQQF0NgIIIAJBCGogAkEMahBoKAIAIQMLIAJBEGokACADDwsQtAIAC0sBAn8gACgCBCIHQQh1IQYgB0EBcQRAIAMoAgAgBhCdBCEGCyAAKAIAIgAgASACIAMgBmogBEECIAdBAnEbIAUgACgCACgCFBEMAAsgAAJAIAAoAgQgAUcNACAAKAIcQQFGDQAgACACNgIcCwuaAQAgAEEBOgA1AkAgACgCBCACRw0AIABBAToANAJAIAAoAhAiAkUEQCAAQQE2AiQgACADNgIYIAAgATYCECADQQFHDQIgACgCMEEBRg0BDAILIAEgAkYEQCAAKAIYIgJBAkYEQCAAIAM2AhggAyECCyAAKAIwQQFHDQIgAkEBRg0BDAILIAAgACgCJEEBajYCJAsgAEEBOgA2CwsKACAAIAFqKAIAC10BAX8gACgCECIDRQRAIABBATYCJCAAIAI2AhggACABNgIQDwsCQCABIANGBEAgACgCGEECRw0BIAAgAjYCGA8LIABBAToANiAAQQI2AhggACAAKAIkQQFqNgIkCwsNACAAIAEgAkEUEJgEC7kCAQN/IwBBQGoiAyQAIAAoAgAiBUEEaygCACEEIAVBCGsoAgAhBSADQgA3AyAgA0IANwMoIANCADcDMCADQgA3ADcgA0IANwMYIANBADYCFCADIAE2AhAgAyAANgIMIAMgAjYCCCAAIAVqIQBBACEBAkAgBCACQQAQmQEEQCADQQE2AjggBCADQQhqIAAgAEEBQQAgBCgCACgCFBEMACAAQQAgAygCIEEBRhshAQwBCyAEIANBCGogAEEBQQAgBCgCACgCGBEFAAJAAkAgAygCLA4CAAECCyADKAIcQQAgAygCKEEBRhtBACADKAIkQQFGG0EAIAMoAjBBAUYbIQEMAQsgAygCIEEBRwRAIAMoAjANASADKAIkQQFHDQEgAygCKEEBRw0BCyADKAIYIQELIANBQGskACABC6sBAQJ/IwBBEGsiAyQAIAMgATYCDAJAAkACQCAAEKEBRQRAQQEhAiAALQALIgFBAUYNASAAIgIgAUEBahCSAQwDCyAAEPABIQIgACgCBCIBIAJBAWsiAkcNAQsgACACQQEgAiACEOUGIAIhAQsgACgCACECIAAgAUEB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CwsgACABIAIgA0EEdEEIchDFAiADQQF0IgAQ7wQhASAAJAEgAQsfAEGwoQQoAgBFBEBBsKEEIAA2AgBBtKEEIAE2AgALCwwAIAAgACgCABDdBAuqDwIFfw9+IwBB0AJrIgUkACAEQv///////z+DIQsgAkL///////8/gyEKIAIgBIVCgICAgICAgICAf4MhDSAEQjCIp0H//wFxIQgCQAJAIAJCMIinQf//AXEiCUH//wFrQYKAfk8EQCAIQf//AWtBgYB+Sw0BCyABUCACQv///////////wCDIgxCgICAgICAwP//AFQgDEKAgICAgIDA//8AURtFBEAgAkKAgICAgIAghCENDAILIANQIARC////////////AIMiAkKAgICAgIDA//8AVCACQoCAgICAgMD//wBRG0UEQCAEQoCAgICAgCCEIQ0gAyEBDAILIAEgDEKAgICAgIDA//8AhYRQBEAgAyACQoCAgICAgMD//wCFhFAEQEIAIQFCgICAgICA4P//ACENDAMLIA1CgICAgICAwP//AIQhDUIAIQEMAgsgAyACQoCAgICAgMD//wCFhFAEQEIAIQEMAgsgASAMhFAEQEKAgICAgIDg//8AIA0gAiADhFAbIQ1CACEBDAILIAIgA4RQBEAgDUKAgICAgIDA//8AhCENQgAhAQwCCyAMQv///////z9YBEAgBUHAAmogASAKIAEgCiAKUCIGG3kgBkEGdK18pyIGQQ9rEH9BECAGayEGIAUpA8gCIQogBSkDwAIhAQsgAkL///////8/Vg0AIAVBsAJqIAMgCyADIAsgC1AiBxt5IAdBBnStfKciB0EPaxB/IAYgB2pBEGshBiAFKQO4AiELIAUpA7ACIQMLIAVBoAJqIAtCgICAgICAwACEIhJCD4YgA0IxiIQiAkIAQoCAgICw5ryC9QAgAn0iBEIAEHggBUGQAmpCACAFKQOoAn1CACAEQgAQeCAFQYACaiAFKQOYAkIBhiAFKQOQAkI/iIQiBEIAIAJCABB4IAVB8AFqIARCAEIAIAUpA4gCfUIAEHggBUHgAWogBSkD+AFCAYYgBSkD8AFCP4iEIgRCACACQgAQeCAFQdABaiAEQgBCACAFKQPoAX1CABB4IAVBwAFqIAUpA9gBQgGGIAUpA9ABQj+IhCIEQgAgAkIAEHggBUGwAWogBEIA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ASAEdCICcUUEQEHEnQQgAiADcjYCACAHIAA2AgAgACAHNgIYDAELIAFBAEEZIARBAXZrIARBH0YbdCEEIAcoAgAhAgNAIAIiAygCBEF4cSABRg0CIARBHXYhAiAEQQF0IQQgAyACQQRxaiIHQRBqKAIAIgINAAsgByAANgIQIAAgAzYCGAsgACAANgIMIAAgADYCCA8LIAMoAggiASAANgIMIAMgADYCCCAAQQA2AhggACADNgIMIAAgATYCCAsLNAAgACgCABogACgCACAAEM8BQRRsahogACgCACAAEHFBFGxqGiAAKAIAIAAQzwFBFGxqGgsSACAARQRAQQAPCyAAIAEQyQML5B4CD38FfiMAQZABayIEJAAgBEEAQZABEDAiA0F/NgJMIAMgADYCLCADQe8BNgIgIAMgADYCVCABIQQgAiEOQQAhACMAQbACayIGJAAgAygCTBoCQAJAAkACQCADKAIEDQAgAxCHAxogAygCBA0ADAELIAQtAAAiAUUNAgJAAkACQAJAA0ACQAJAIAFB/wFxENIBBEADQCAEIgFBAWohBCABLQABENIBDQALIANCABC6AQNAAn8gAygCBCICIAMoAmhHBEAgAyACQQFqNgIEIAItAAAMAQsgAxBHCxDSAQ0ACyADKAIEIQQgAykDcEIAWQRAIAMgBEEBayIENgIECyAEIAMoAixrrCADKQN4IBR8fCEUDAELAn8CQAJAIAQtAABBJUYEQCAELQABIgFBKkYNASABQSVHDQILIANCABC6AQJAIAQtAABBJUYEQANAAn8gAygCBCIBIAMoAmhHBEAgAyABQQFqNgIEIAEtAAAMAQsgAxBHCyIBENIBDQALIARBAWohBAwBCyADKAIEIgEgAygCaEcEQCADIAFBAWo2AgQgAS0AACEBDAELIAMQRyEBCyAELQAAIAFHBEAgAykDcEIAWQRAIAMgAygCBEEBazYCBAsgAUEATg0NQQAhByANDQ0MCwsgAygCBCADKAIsa6wgAykDeCAUfHwhFCAEIQEMAwtBACEIIARBAmoMAQsCQCABEKQBRQ0AIAQtAAJBJEcNACAELQABQTBrIQEjAEEQayICIA42AgwgAiAOIAFBAnRBBGtBACABQQFLG2oiAUEEajYCCCABKAIAIQggBEEDagwBCyAOKAIAIQggDkEEaiEOIARBAWoL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AGogBEEQaiADIARBCGoQ0wIhAEQAAAAAhNeXQSAEKwMIIABBAEgbCyECIARBoAJqJAAgAgvQBgIEfwN+IwBBgAFrIgUkAAJAAkACQCADIARCAEIAEPIBRQ0AAn8gBEL///////8/gyEJAn8gBEIwiKdB//8BcSIGQf//AUcEQEEEIAYNARpBAkEDIAMgCYRQGwwCCyADIAmEUAsLIQcgAkIwiKciCEH//wFxIgZB//8BRg0AIAcNAQsgBUEQaiABIAIgAyAEEFMgBSAFKQMQIgEgBSkDGCICIAEgAhDyBCAFKQMIIQIgBSkDACEEDAELIAEgAkL///////8/gyAGrUIwhoQiCiADIARC////////P4MgBEIwiKdB//8BcSIHrUIwhoQiCRDyAUEATARAIAEgCiADIAkQ8gEEQCABIQQMAgsgBUHwAGogASACQgBCABBTIAUpA3ghAiAFKQNwIQQMAQsgBgR+IAEFIAVB4ABqIAEgCkIAQoCAgICAgMC7wAAQUyAFKQNoIgpCMIinQfgAayEGIAUpA2ALIQQgB0UEQCAFQdAAaiADIAlCAEKAgICAgIDAu8AAEFMgBSkDWCIJQjCIp0H4AGshByAFKQNQIQMLIAlC////////P4NCgICAgICAwACEIQkgCkL///////8/g0KAgICAgIDAAIQhCiAGIAdKBEADQAJ+IAogCX0gAyAEVq19IgtCAFkEQCALIAQgA30iBIRQBEAgBUEgaiABIAJCAEIAEFMgBSkDKCECIAUpAyAhBAwFCyALQgGGIARCP4iEDAELIApCAYYgBEI/iIQLIQogBEIBhiEEIAZBAWsiBiAHSg0ACyAHIQYLAkAgCiAJfSADIARWrX0iCUIAUwRAIAohCQwBCyAJIAQgA30iBIRCAFINACAFQTBqIAEgAkIAQgAQUyAFKQM4IQIgBSkDMCEEDAELIAlC////////P1gEQANAIARCP4ghASAGQQFrIQYgBEIBhiEEIAEgCUIBhoQiCUKAgICAgIDAAFQNAAsLIAhBgIACcSEHIAZBAEwEQCAFQUBrIAQgCUL///////8/gyAGQfgAaiAHcq1CMIaEQgBCgICAgICAwMM/EFMgBSkDSCECIAUpA0AhBAwBCyAJQv///////z+DIAYgB3KtQjCGhCECCyAAIAQ3AwAgACACNwMIIAVBgAFqJAALvwIBAX8jAEHQAGsiBCQAAkAgA0GAgAFOBEAgBEEgaiABIAJCAEKAgICAgICA//8AEFMgBCkDKCECIAQpAyAhASADQf//AUkEQCADQf//AGshAwwCCyAEQRBqIAEgAkIAQoCAgICAgID//wAQUyADQf3/AiADQf3/AkgbQf7/AWshAyAEKQMYIQIgBCkDECEBDAELIANBgYB/Sg0AIARBQGsgASACQgBCgICAgICAgDkQUyAEKQNIIQIgBCkDQCEBIANB9IB+SwRAIANBjf8AaiEDDAELIARBMGogASACQgBCgICAgICAgDkQUyADQeiBfSADQeiBfUobQZr+AWohAyAEKQM4IQIgBCkDMCEBCyAEIAEgAkIAIANB//8Aaq1CMIYQUyAAIAQpAwg3AwggACAEKQMANwMAIARB0ABqJAALNQAgACABNwMAIAAgAkL///////8/gyAEQjCIp0GAgAJxIAJCMIinQf//AXFyrUIwhoQ3AwgLEAAgACABIAJBAEEAEIMFGgvEAgACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCABQQlrDhIACgsMCgsCAwQFDAsMDAoLBwgJCyACIAIoAgAiAUEEajYCACAAIAEoAgA2AgAPCwALIAIgAigCACIBQQRqNgIAIAAgATIBADcDAA8LIAIgAigCACIBQQRqNgIAIAAgATMBADcDAA8LIAIgAigCACIBQQRqNgIAIAAgATAAADcDAA8LIAIgAigCACIBQQRqNgIAIAAgATEAADcDAA8LAAsgAiACKAIAQQdqQXhxIgFBCGo2AgAgACABKwMAOQMADwsgACACIAMRAgALDwsgAiACKAIAIgFBBGo2AgAgACABNAIANwMADwsgAiACKAIAIgFBBGo2AgAgACABNQIANwMADwsgAiACKAIAQQdqQXhxIgFBCGo2AgAgACABKQMANwMAC20BBH8gACgCACwAABCkAUUEQEEADwsDQCAAKAIAIQNBfyEBIAJBzJmz5gBNBEBBfyADLAAAQTBrIgQgAkEKbCIBaiAEIAFB/////wdzShshAQsgACADQQFqNgIAIAEhAiADLAABEKQBDQALIAIL+xICEn8BfiMAQdAAayIIJAAgCCABNgJMIAhBN2ohFyAIQThqIRICQAJAAkACQANAIAEhDCAHIA5B/////wdzSg0BIAcg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C2EBA38gACgCACECIAAgATYCACACBEAgAgRAIAJBBGoiAygCCCEAIAMQKyEEA0AgAARAIAAoAgAhASAEIABBCGoQggYgABAoIAEhAAwBCwsgAxClAiACQQAQmQYLIAIQKAsLCQAgAUEAOwEACwsAIAAgAUECEIYCC40CAgx/AX1BfyEKAkAgASgCCCIGIAIoAgRHDQAgACgCBCIDIAEoAgRHDQAgACgCCCIHIAIoAghHDQBBACEKIANBACADQQBKGyELIAdBACAHQQBKGyEMIAZBACAGQQBKGyENIAAoAgAhAwNAIAQgC0YNASAEIAZsIQ5BACEFA0AgBSAMRkUEQEEAIQAgA0EANgIAIAIoAgAgBUECdGohCCABKAIAIA5BAnRqIQlDAAAAACEPA0AgACANRkUEQCADIAkqAgAgCCoCAJQgD5IiDzgCACAAQQFqIQAgCUEEaiEJIAggB0ECdGohCAwBCwsgBUEBaiEFIANBBGohAwwBCwsgBEEBaiEEDAALAAsgCgsVACAAQcjaATYCACAAQQRqEC8aIAALTQECfyMAQSBrIgMkACAAIAMgAEE4akEAEDEgAigCACACKAIEIAIoAgggAigCDBDEBSIEIAIQ2wIgACABIAQQ2wIgBBCMAyADQSBqJAALNQAgACgCABogACgCACAAEIECQQF0ahogACgCACAAEIACQQF0ahogACgCACAAEIECQQF0ahoLHAEBfSAAKgIAIQIgACABKgIAOAIAIAEgAjgCAAsMACAAIAEQ5gFBAXML5AEBAX8jAEEgayIDJAAgAyABNgIQIAMgADYCGCADIAI2AgggAygCECADKAIYEIYBIQEgAygCCCADKAIQEIYBIQACQAJ/An8gAUUEQEEAIQEgAEUNAyADKAIQIAMoAggQvQFBASEBIAMoAhAgAygCGBCGAUUNAyADQRBqIQAgA0EYagwBCyADKAIYIQIgAARAIANBCGohAEEBDAILIAIgAygCEBC9AUEBIQEgAygCCCADKAIQEIYBRQ0CIANBCGohACADQRBqCygCACECQQILIQEgAiAAKAIAEL0BCyADQSBqJAAgAQvHAQEJfyAAKAIIIAAoAgQQpwEiAgRAQX8hBwJAIAIoAgQiAyAAKAIIRw0AIAIoAggiASAAKAIERw0AQQAhByADQQAgA0EAShshCCABQQAgAUEA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CkEAIQdBACEBA0AgASAJRkUEQCALIAFBAnRqIAEgAmotAABB/wFzIAprIgg2AgAgAUEBaiEBIAggCGwgB2ohBwwBCwsgB7efIhQgA7ejRAAAAAAAAC5AYw0CQQAhByAAKAIAIgFBACABQQBKGyENQX8hCEF/IQpBfyEMA0AgByANRwRAIAAoAgghAQJAA0ACQCABIAxBAWoiDEECdCIOaigCAA4DAQACAAsLIAAoAhghDyAAKAIUIRBBACEDA0AgA0EERg0BIBAgAyAOaiIRQQJ0aigCACESQQAhAkEAIQEDQCABIAlGRQRAIAIgEiABQQJ0IgJqKAIAIAIgC2ooAgBsaiECIAFBAWohAQwBCwsgArcgDyARQQN0aisDAKMgFKMiFSATIBMgFWMiARshEyAMIAogARshCiADIAggARshCCADQQFqIQMMAAsACyAHQQFqIQcMAQsLCyAFIAg2AgAgBCAKNgIAIAYgEzkDACALEChBAA8LIARBADYCACAFQQA2AgAgBkKAgICAgICA+L9/NwMAIAsQKEF+DwsgBEEANgIAIAVBADYCACAGQoCAgICAgID4v383AwAgCxAoQX4PC0EAQQNB/g1BABAtQQEQAQALWgECfyMAQRBrIgIkACACIAE2AgwgASAAEJEEIgNNBEAgABCoASIAIANBAXZJBEAgAiAAQQF0NgIIIAJBCGogAkEMahBoKAIAIQMLIAJBEGokACADDwsQtAIACxYAIAEgAikCADcCACABIAIoAgg2AggLLAAgACgCABogACgCACAAEM8BQRRsahogACgCACAAEM8BQRRsahogACgCABoLDQAgAEHMmbPmABC1AgsJACAAQRQQlwQLgQEBBH8gABD1BCAAECshBCAAKAIAIQUgACgCBCEDIAFBBGohAgNAIAMgBUcEQCAEIAIoAgBBFGsgA0EUayIDEKoDIAIgAigCAEEUazYCAAwBCwsgACACEEIgAEEEaiABQQhqEEIgABArIAEQNRBCIAEgASgCBDYCACAAIAAQcRDTBgs+AQJ/QQwQLiIDBH8gAyAAIAFsIAJ0EC4iBDYCACAERQRAIAMQKEEADwsgAyABNgIIIAMgADYCBCADBUEACws+AANAIAEgAkcEQCABIAEsAAAiAEEATgR/IAMoAgAgASwAAEECdGooAgAFIAALOgAAIAFBAWoh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kQEgA0EQaiQADwsQrAEACxMAIAEEQCAAIAIQuQEgARAwGgsLCwAgACABQQwQhgIL9AEBBH8jAEEQayIIJAAgAiABQX9zQRFrTQRAIAAQOCEJAn8gAUHn////B0kEQCAIIAFBAXQ2AgggCCABIAJqNgIMIAhBDGogCEEIahBoKAIAEI4CDAELQW4LQQFqIgoQVyECIAQEQCACIAkgBBDDAQsgBgRAIAIgBGogByAGEMMBCyADIAQgBWoiC2shByADIAtHBEAgAiAEaiAGaiAEIAlqIAVqIAcQwwELIAFBCkcEQCAJECgLIAAgAhCLASAAIAoQrQEgACAEIAZqIAdqIgAQhQEgCEEAOgAHIAAgAmogCEEHahCRASAIQRBqJAAPCxCsAQALAwAACxYAIAAgASACQoCAgICAgICAgH8QugQLLwEBfyMAQRBrIgMkACAAIAIQiQIgA0EAOgAPIAEgAmogA0EPahCRASADQRBqJAALCQAgABBSNgIACysBAX8gACgCBCECA0AgASACRwRAIAAQVBogAkEEayECDAELCyAAIAE2AgQLCAAgARDcARoLPwEBfyMAQRBrIgIkAAJAAkAgAUEeSw0AIAAtAHgNACAAQQE6AHgMAQsgAkEIaiABEK0CIQALIAJBEGokACAAC0MBAX8jAEEQayIBJAAgABBUGiABQf////8DNgIMIAFB/////wc2AgggAUEMaiABQQhqELMCKAIAIQAgAUEQaiQAIAALCQAgABClBBAoCxUAIABB8L8DNgIAIABBEGoQLxogAAsVACAAQci/AzYCACAAQQxqEC8aIAAL7QMBBX8CQCADIAIiAGtBA0gNAAsDQAJAIAQgCE0gACADT3INACAALAAAIgZB/wFxIQECQCAGQQBOBEBBASEGIAFB///DAE0NAQwCCyAGQUJJDQEgBkFfTQRAIAMgAGtBAkgNAiAALQABIgVBwAFxQYABRw0CQQIhBiAFQT9xIAFBBnRBwA9xckH//8MATQ0BDAILAkACQCAGQW9NBEAgAyAAa0EDSA0EIAAtAAIhByAALQABIQUgAUHtAUYNASABQeABRgRAIAVB4AFxQaABRg0DDAULIAVBwAFxQYABRw0EDAILIAMgAGtBBEggBkF0S3INAyAALQADIQcgAC0AAiEJIAAtAAEhBQJAAkACQAJAIAFB8AFrDgUA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KAIANgAAIAogABDoAQwBCyAKIAAQrAMgAyAKKAIANgAAIAogABCqAQsgCCAKEH4gChAvGiAEIAAQtQE6AAAgBSAAEI8BOgAAIAogABCOASAGIAoQfiAKEC8aIAogABCrASAHIAoQfiAKEC8aIAAQ5wEMAQsgAhCWByEAAkAgAQRAIAogABDpASADIAooAgA2AAAgCiAAEOgBDAELIAogABCsAyADIAooAgA2AAAgCiAAEKoBCyAIIAoQfiAKEC8aIAQgABC1AToAACAFIAAQjwE6AAAgCiAAEI4BIAYgChB+IAoQLxogCiAAEKsBIAcgChB+IAoQLxogABDnAQs2AgAgCkEQaiQACzEBAX8jAEEQayICJAAgAiAAKAIANgIIIAJBCGogARDXBSACKAIIIQAgAkEQaiQAIAALCwAgAEH4sgQQuAELCwAgAEGAswQQuAELFQAgACABKAIAENUEIAEoAgAQ4AEaC/EPAQt/IwBBsARrIgskACALIAo2AqQEIAsgATYCqAQCQCAAIAtBqARqEGkEQCAFIAUoAgBBBHI2AgBBACEADAELIAtBuQI2AmAgCyALQYgBaiALQZABaiALQeAAaiIBEFwiDygCACIKNgKEASALIApBkANqNgKAASABEDshESALQdAAahA7IQwgC0FAaxA7IQ4gC0EwahA7IQ0gC0EgahA7IRAjAEEQayIBJAAgCwJ/IAIEQCABIAMQkQciAhDpASALIAEoAgA2AHggASACEOgBIA0gARDKASABEC8aIAEgAhCqASAOIAEQygEgARAvGiALIAIQtQE2AnQgCyACEI8BNgJwIAEgAhCOASARIAEQfiABEC8aIAEgAhCrASAMIAEQygEgARAvGiACEOcBDAELIAEgAxCQByICEOkBIAsgASgCADYAeCABIAIQ6AEgDSABEMoBIAEQLxogASACEKoBIA4gARDKASABEC8aIAsgAhC1ATYCdCALIAIQjwE2AnAgASACEI4BIBEgARB+IAEQLxogASACEKsBIAwgARDKASABEC8aIAIQ5wELNgIcIAFBEGokACAJIAgoAgA2AgAgBEGABHEiEkEJdiETQQAhA0EAIQEDQCABIQICQAJAAkACQCADQQRGDQAgACALQagEahCBAUUNAEEAIQoCQAJAAkACQAJAAkAgC0H4AGogA2osAAAOBQEABAMFCQsgA0EDRg0HIAdBASAAEF8QrgEEQCALQRBqIAAQkgcgECALKAIQEKEEDAILIAUgBSgCAEEEcjYCAEEAIQAMBgsgA0EDRg0GCwNAIAAgC0GoBGoQgQFFDQYgB0EBIAAQXxCuAUUNBiALQRBqIAAQkgcgECALKAIQEKEEDAALAAsCQCAOECxFDQAgABBfIA4QOCgCAEcNACAAEG8aIAZBADoAACAOIAIgDhAsQQFLGyEBDAYLAkAgDRAsRQ0AIAAQXyANEDgoAgBHDQAgABBvGiAGQQE6AAAgDSACIA0QLEEBSxshAQwGCwJAIA4QLEUNACANECxFDQAgBSAFKAIAQQRyNgIAQQAhAAwECyAOECxFBEAgDRAsRQ0FCyAGIA0QLEU6AAAMBAsgAiADQQJJckUEQEEAIQEgEyADQQJGIAstAHtBAEdxckUNBQsgCyAMEKMBNgIIIAtBEGogC0EIahCUASEEAkAgA0UNACADIAtqLQB3QQFLDQADQAJAIAsgDBDsATYCCCAEIAtBCGoQckUNACAHQQEgBCgCACgCABCuAUUNACAEEPkBDAELCyALIAwQowE2AgggBCALQQhqENsDIgEgEBAsTQRAIAsgEBDsATYCCCALQQhqQQAgAWsQjwchCiAQEOwBIRQgDBCjASEVIwBBIGsiASQAIAEgFDYCECABIAo2AhggASAVNgIIA0ACQCABQRhqIAFBEGoQciIKRQ0AIAEoAhggASgCCBCfAUUNACABQRhqEPkBIAFBCGoQ+QEMAQsLIAFBIGokACAKQQFzDQELIAsgDBCjATYCACAEIAtBCGogCxCUASgCADYCAAsgCyAEKAIANgIIA0ACQCALIAwQ7AE2AgAgC0EIaiALEHJFDQAgACALQagEahCBAUUNACAAEF8gCygCCCgCAEcNACAAEG8aIAtBCGoQ+QEMAQsLIBJFDQMgCyAMEOwBNgIAIAtBCGogCxByRQ0DIAUgBSgCAEEEcjYCAEEAIQAMAgsDQAJAIAAgC0GoBGoQgQFFDQACfyAHQcAAIAAQXyIBEK4BBEAgCSgCACIEIAsoAqQERgRAIAggCSALQaQEahC7AiAJKAIAIQQLIAkgBEEEajYCACAEIAE2AgAgCkEBagwBCyARECxFIApFcg0BIAEgCygCcEcNASALKAKEASIBIAsoAoABRgRAIA8gC0GEAWogC0GAAWoQuwIgCygChAEhAQsgCyABQQRqNgKEASABIAo2AgBBAAshCiAAEG8aDAELCyAKRSALKAKEASIBIA8oAgBGckUEQCALKAKAASABRgRAIA8gC0GEAWogC0GAAWoQuwIgCygChAEhAQsgCyABQQRqNgKEASABIAo2AgALAkAgCygCHEEATA0AAkAgACALQagEahBpRQRAIAAQXyALKAJ0Rg0BCyAFIAUoAgBBBHI2AgBBACEADAMLA0AgABBvGiALKAIcQQBMDQECQCAAIAtBqARqEGlFBEAgB0HAACAAEF8QrgENAQsgBSAFKAIAQQRyNgIAQQAhAAwECyAJKAIAIAsoAqQERgRAIAggCSALQaQEahC7AgsgABBfIQEgCSAJKAIAIgRBBGo2AgAgBCABNgIAIAsgCygCHEEBazYCHAwACwALIAIhASAIKAIAIAkoAgBHDQMgBSAFKAIAQQRyNgIAQQAhAAwBCwJAIAJFDQBBASEKA0AgAhAsIApNDQECQCAAIAtBqARqEGlFBEAgABBfIAIgChCzAygCAEYNAQsgBSAFKAIAQQRyNgIAQQAhAAwDCyAAEG8aIApBAWohCgwACwALQQEhACAPKAIAIAsoAoQBRg0AQQAhACALQQA2AhAgESAPKAIAIAsoAoQBIAtBEGoQfSALKAIQBEAgBSAFKAIAQQRyNgIADAELQQEhAAsgEBAvGiANEC8aIA4QLxogDBAvGiAREC8aIA8QWwwDCyACIQELIANBAWohAwwACwALIAtBsARqJAAgAAsdACAAIAEQsAEQbCABEEkoAgAhASAAEEkgATYCAAs0AQF/IwBBEGsiAiQAIAIgACgCADYCCCACIAIoAgggAWo2AgggAigCCCEAIAJBEGokACAACwsAIABB6LIEELgBCwsAIABB8LIEELgBC8MBAQZ/IwBBEGsiBCQAIAAQSSgCACEFAn8gAigCACAAKAIAayIDQf////8HSQRAIANBAXQMAQtBfwsiA0EBIAMbIQMgASgCACEGIAAoAgAhByAFQbkCRgR/QQAFIAAoAgALIAMQxQIiCARAIAVBuQJHBEAgABCwARoLIARBuAI2AgQgACAEQQhqIAggBEEEahBcIgUQlAcgBRBbIAEgACgCACAGIAdrajYCACACIAMgACgCAGo2AgAgBEEQaiQADwsQawALJQEBfyABKAIAENwEQRh0QRh1IQIgACABKAIANgIEIAAgAjoAAAuUEAELfyMAQbAEayILJAAgCyAKNgKkBCALIAE2AqgEAkAgACALQagEahBqBEAgBSAFKAIAQQRyNgIAQQAhAAwBCyALQbkCNgJoIAsgC0GIAWogC0GQAWogC0HoAGoiARBcIg8oAgAiCjYChAEgCyAKQZADajYCgAEgARA7IREgC0HYAGoQOyEMIAtByABqEDshDiALQThqEDshDSALQShqEDshECMAQRBrIgEkACALAn8gAgRAIAEgAxCXByICEOkBIAsgASgCADYAeCABIAIQ6AEgDSABEH4gARAvGiABIAIQqgEgDiABEH4gARAvGiALIAIQtQE6AHcgCyACEI8BOgB2IAEgAhCOASARIAEQfiABEC8aIAEgAhCrASAMIAEQfiABEC8aIAIQ5wEMAQsgASADEJYHIgIQ6QEgCyABKAIANgB4IAEgAhDoASANIAEQfiABEC8aIAEgAhCqASAOIAEQfiABEC8aIAsgAhC1AToAdyALIAIQjwE6AHYgASACEI4BIBEgARB+IAEQLxogASACEKsBIAwgARB+IAEQLxogAhDnAQs2AiQgAUEQaiQAIAkgCCgCADYCACAEQYAEcSISQQl2IRNBACEDQQAhAQNAIAEhAgJAAkACQAJAIANBBEYNACAAIAtBqARqEIMBRQ0AQQAhCgJAAkACQAJAAkACQCALQfgAaiADaiwAAA4FAQAEAwUJCyADQQNGDQcgB0EBIAAQYBCvAQRAIAtBGGogABCZByAQIAssABgQogQMAgsgBSAFKAIAQQRyNgIAQQAhAAwGCyADQQNGDQYLA0AgACALQagEahCDAUUNBiAHQQEgABBgEK8BRQ0GIAtBGGogABCZByAQIAssABgQogQMAAsACwJAIA4QLEUNACAAEGBB/wFxIA5BABA2LQAARw0AIAAQcBogBkEAOgAAIA4gAiAOECxBAUsbIQEMBgsCQCANECxFDQAgABBgQf8BcSANQQAQNi0AAEcNACAAEHAaIAZBAToAACANIAIgDRAsQQFLGyEBDAYLAkAgDhAsRQ0AIA0QLEUNACAFIAUoAgBBBHI2AgBBACEADAQLIA4QLEUEQCANECxFDQULIAYgDRAsRToAAAwECyACIANBAklyRQRAQQAhASATIANBAkYgCy0Ae0EAR3FyRQ0FCyALIAwQowE2AhAgC0EYaiALQRBqEJQBIQQCQCADRQ0AIAMgC2otAHdBAUsNAANAAkAgCyAMEO0BNgIQIAQgC0EQahByRQ0AIAdBASAEKAIALAAAEK8BRQ0AIAQQ6gIMAQsLIAsgDBCjATYCECAEKAIAIAsoAhBrIgEgEBAsTQRAIAsgEBDtATYCECALQRBqQQAgAWsQlQchCiAQEO0BIRQgDBCjASEVIwBBIGsiASQAIAEgFDYCECABIAo2AhggASAVNgIIA0ACQCABQRhqIAFBEGoQciIKRQ0AIAEoAhgtAAAgASgCCC0AAEcNACABQRhqEOoCIAFBCGoQ6gIMAQsLIAFBIGokACAKQQFzDQELIAsgDBCjATYCCCAEIAtBEGogC0EIahCUASgCADYCAAsgCyAEKAIANgIQA0ACQCALIAwQ7QE2AgggC0EQaiALQQhqEHJFDQAgACALQagEahCDAUUNACAAEGBB/wFxIAsoAhAtAABHDQAgABBwGiALQRBqEOoCDAELCyASRQ0DIAsgDBDtATYCCCALQRBqIAtBCGoQckUNAyAFIAUoAgBBBHI2AgBBACEADAILA0ACQCAAIAtBqARqEIMBRQ0AAn8gB0HAACAAEGAiARCvAQRAIAkoAgAiBCALKAKkBEYEQCAIIAkgC0GkBGoQmAcgCSgCACEECyAJIARBAWo2AgAgBCABOgAAIApBAWoMAQsgERAsRSAKRXINASALLQB2IAFB/wFxRw0BIAsoAoQBIgEgCygCgAFGBEAgDyALQYQBaiALQYABahC7AiALKAKEASEBCyALIAFBBGo2AoQBIAEgCjYCAEEACyEKIAAQcBoMAQsLIApFIAsoAoQBIgEgDygCAEZyRQRAIAsoAoABIAFGBEAgDyALQYQBaiALQYABahC7AiALKAKEASEBCyALIAFBBGo2AoQBIAEgCjYCAAsCQCALKAIkQQBMDQACQCAAIAtBqARqEGpFBEAgABBgQf8BcSALLQB3Rg0BCyAFIAUoAgBBBHI2AgBBACEADAMLA0AgABBwGiALKAIkQQBMDQECQCAAIAtBqARqEGpFBEAgB0HAACAAEGAQrwENAQsgBSAFKAIAQQRyNgIAQQAhAAwECyAJKAIAIAsoAqQERgRAIAggCSALQaQEahCYBwsgABBgIQEgCSAJKAIAIgRBAWo2AgAgBCABOgAAIAsgCygCJEEBazYCJAwACwALIAIhASAIKAIAIAkoAgBHDQMgBSAFKAIAQQRyNgIAQQAhAAwBCwJAIAJFDQBBASEKA0AgAhAsIApNDQECQCAAIAtBqARqEGpFBEAgABBgQf8BcSACIAoQNi0AAEYNAQsgBSAFKAIAQQRyNgIAQQAhAAwDCyAAEHAaIApBAWohCgwACwALQQEhACAPKAIAIAsoAoQBRg0AQQAhACALQQA2AhggESAPKAIAIAsoAoQBIAtBGGoQfSALKAIYBEAgBSAFKAIAQQRyNgIADAELQQEhAAsgEBAvGiANEC8aIA4QLxogDBAvGiAREC8aIA8QWwwDCyACIQELIANBAWohAwwACwALIAtBsARqJAAgAAsMACAAQQFBLRCmBxoLDAAgAEEBQS0QggcaCxwBAX8gAC0AACECIAAgAS0AADoAACABIAI6AAALZAEBfyMAQRBrIgYkACAGQQA6AA8gBiAFOgAOIAYgBDoADSAGQSU6AAwgBQRAIAZBDWogBkEOahCdBwsgAiABIAEgAigCABCKBiAGQQxqIAMgACgCABAZIAFqNgIAIAZBEGokAAsyAAJAQX8gACgCTBCzAUUEQCAAKAJMIQAMAQsgACAAQSAQ/QYiADYCTAsgAEEYdEEYdQtCACABIAIgAyAEQQQQywEhASADLQAAQQRxRQRAIAAgAUHQD2ogAUHsDmogASABQeQASBsgAUHFAEgbQewOazYCAAsLQAAgAiADIABBCGogACgCCCgCBBEAACIAIABBoAJqIAUgBEEAELQDIABrIgBBnwJMBEAgASAAQQxtQQxvNgIACwtAACACIAMgAEEIaiAAKAIIKAIAEQAAIgAgAEGoAWogBSAEQQAQtAMgAGsiAEGnAUwEQCABIABBDG1BB282AgALC0IAIAEgAiADIARBBBDMASEBIAMtAABBBHFFBEAgACABQdAPaiABQewOaiABIAFB5ABIGyABQcUASBtB7A5rNgIACwtAACACIAMgAEEIaiAAKAIIKAIEEQAAIgAgAEGgAmogBSAEQQAQ7gIgAGsiAEGfAkwEQCABIABBDG1BDG82AgALC0AAIAIgAyAAQQhqIAAoAggoAgARAAAiACAAQagBaiAFIARBABDuAiAAayIAQacBTARAIAEgAEEM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DQAgACgCvAEgARAsIAJqRgRAIAEQLCEDIAEgARAsQQF0EDcgASABEEoQNyAAIAMgAUEAEDYiAmo2ArwBCyAAQYgCahBgIABBB2ogAEEGaiACIABBvAFqIAAsAN8BIAAsAN4BIABB0AFqIABBEGogAEEMaiAAQQhqIABB4AFqELUDDQAgAEGIAmoQcBoMAQsLAkAgAEHQAWoQLEUNACAALQAHRQ0AIAAoAgwiAyAAQRBqa0GfAUoNACAAIANBBGo2AgwgAyAAKAIINgIACyAFIAIgACgCvAEgBBCwBDkDACAAQdABaiAAQRBqIAAoAgwgBBB9IABBiAJqIABBgAJqEGoEQCAEIAQoAgBBAnI2AgALIAAoAogCIQIgARAvGiAAQdABahAvGiAAQZACaiQAIAILvAMAIwBBkAJrIgAkACAAIAI2AoACIAAgATYCiAIgAEHQAWogAyAAQeABaiAAQd8BaiAAQd4BahC2AyAAQcABahA7IgEgARBKEDcgACABQQAQNiICNgK8ASAAIABBEGo2AgwgAEEANgIIIABBAToAByAAQcUAOgAGA0ACQCAAQYgCaiAAQYACahCDAUUNACAAKAK8ASABECwgAmpGBEAgARAsIQMgASABECxBAXQQNyABIAEQShA3IAAgAyABQQAQNiICajYCvAELIABBiAJqEGAgAEEHaiAAQQZqIAIgAEG8AWogACwA3wEgACwA3gEgAEHQAWogAEEQaiAAQQxqIABBCGogAEHgAWoQtQMNACAAQYgCahBwGgwBCwsCQCAAQdABahAsRQ0AIAAtAAdFDQAgACgCDCIDIABBEGprQZ8BSg0AIAAgA0EEajYCDCADIAAoAgg2AgALIAUgAiAAKAK8ASAEELEEOAIAIABB0AFqIABBEGogACgCDCAEEH0gAEGIAmogAEGAAmoQagRAIAQgBCgCAEECcjYCAAsgACgCiAIhAiABEC8aIABB0AFqEC8aIABBkAJqJAAgAguUAwEBfyMAQZACayIAJAAgACACNgKAAiAAIAE2AogCIAMQwQEhBiAAQdABaiADIABB/wFqEMACIABBwAFqEDsiASABEEoQNyAAIAFBABA2IgI2ArwBIAAgAEEQajYCDCAAQQA2AggDQAJAIABBiAJqIABBgAJqEIMBRQ0AIAAoArwBIAEQLCACakYEQCABECwhAyAB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AIA/IC8QmAKVOAIcIAhBBGoiBSAIKAIUIANsEIsEIANBACADQQBKGyEOA0AgDCAORwRAIAQgDHYhBiACIAx2IQdBACEDA0AgCCgCFCIPIANNBEAgDEEBaiEMDAMFIAUgDCAPbCADahBAQQIgByAGQQEQ2QMgA0EBaiEDDAELAAsACwsCQCAIQSBqIgUQgAIiAyACIARsIg5JBEAjAEEgayIHJAACQCAOIANrIgYgBRArKAIAIAUoAgRrQQF1TQRAIwBBEGsiAiQAIAIgBTYCACACIAUoAgQiBDYCBCACIAQgBkEBdGo2AgggAigCBCEMIAIoAgghBANAIAQgDEYEQCACEG4gAkEQaiQABSAFECsgDBCbBiACIAxBAmoiDDYCBAwBCwsMAQsgBRArIQogB0EIaiECAn8gBRCAAiAGaiEPIwBBEGsiAyQAIAMgDzYCDCMAQRBrIgwkACAFECsaIAxB/////wc2AgwgDEH/////BzYCCCAMQQxqIAxBCGoQswIoAgAhBCAMQRBqJAAgBCAPTwRAIAUQgQIiDCAEQQF2SQRAIAMgDEEBdDYCCCADQQhqIANBDGoQaCgCACEECyADQRBqJAAgBAwBC0HigQEQiAIACyEDIAUQgAIhD0EAIQQjAEEQayIMJAAgDEEANgIMIAJBDGogChDXASADBEAgAigCEBogA0H/////B0sEQBCHAgALIANBAXQQVyEECyACIAQ2AgAgAiAEIA9BAXRqIg82AgggAiAPNgIEIAIQNSAEIANBAXRqNgIAIAxBEGokACMAQRBrIgQkACAEIAIoAgg2AgAgAigCCCEDIAQgAkEIajYCCCAEIAMgBkEBdGo2AgQgBCIDKAIAIQQDQCADKAIEIARHBEAgAigCECADKAIAEJsGIAMgAygCAEECaiIENgIADAELCyADELIBIANBEGokACAFEKAGIAUQKyAFKAIAIAUoAgQgAkEEaiIEELICIAUgBBBCIAVBBGogAkEIahBCIAUQKyACEDUQQiACIAIoAgQ2AgAgBRCAAhogBSgCABogBSgCACAFEIECQQF0ahogBSgCACAFEIECQQF0ahogBSgCABogAigCBCEEA0AgBCACKAIIRwRAIAIoAhAaIAIgAigCCEECazYCCAwBCwsgAigCAARAIAIoAhAaIAIoAgAhBCACEDUoAgAgAigCAGsa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KgIAXkUNACAvICAgBEEBakECdCINaioCAF5FDQAgLyAJIBRqKgIAXkUNACAvIAIgFGoqAgBeRQ0AIC8gDSAUaioCAF5FDQAgLyAJIBdqKgIAXkUNACAvIAIgF2oqAgBeRQ0AIC8gDSAXaioCAF5FDQAgLyAJIBVqKgIAXkUNACAvIAIgFWoqAgBeRQ0AIC8gDSAVaioCAF5FDQAgLyAJICFqKgIAXkUNACAvIA0gIWoqAgBeRQ0AIC8gCSAWaioCAF5FDQAgLyACIBZqKgIAXkUNACAvIA0gFmoqAgBeRQ0AIC8gCSAZaioCAF5FDQAgLyACIBlqKgIAXkUNACAvIA0gGWoqAgBeRQ0AIC8gCSAbaioCAF5FDQAgLyACIBtqKgIAXkUNACAvIA0gG2oqAgBeRQ0AIC8gCSAYaioCAF5FDQAgLyACIBhqKgIAXkUNACAvIA0gGGoqAgBeDQELIC8gMl1FDQEgLyACICBqKgIAXUUNASAvICAgBEEBakECdCINaioCAF1FDQEgLyAJIBRqKgIAXUUNASAvIAIgFGoqAgBdRQ0BIC8gDSAUaioCAF1FDQEgLyAJIBdqKgIAXUUNASAvIAIgF2oqAgBdRQ0BIC8gDSAXaioCAF1FDQEgLyAJIBVqKgIAXUUNASAvIAIgFWoqAgBdRQ0BIC8gDSAVaioCAF1FDQEgLyAJICFqKgIAXUUNASAvIA0gIWoqAgBdRQ0BIC8gCSAWaioCAF1FDQEgLyACIBZqKgIAXUUNASAvIA0gFmoqAgBdRQ0BIC8gCSAZaioCAF1FDQEgLyACIBlqKgIAXUUNASAvIA0gGWoqAgBdRQ0BIC8gCSAbaioCAF1FDQEgLyACIBtqKgIAXUUNASAvIA0gG2oqAgBdRQ0BIC8gCSAYaioCAF1FDQEgLyACIBhqKgIAXUUNASAvIA0gGGoqAgBdRQ0BCyALIC84AiAgCyASNgIYIAsgEDYCFCALIA8gECAwEKQDOAIkIAtBCGoiAiAoIASzIDEgEBDmAiAnIAIQ5QILIARBAWohBAwBCwALAAsACwJAIAYoAgQgCigCBEcNACAHKAIEIAooAgRBAXZHDQAgBigCCCAKKAIIRw0EIAcoAgggCigCCEEBdkcNBUECIQICfyAHKAIEQQFrs0MAAAC/kiIvIC+SQwAAAD+SjiIvQwAAgE9dIC9D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AioCMCACKgI0IAIoAgwgAigCCBBOOAIQIAYgCCACKgI4IAIqAjwgAigCDCACKAIIEE44AhQgCCADIAUgLyAzlBD3ASAGIAggAioCQCACKgJEIAIoAgwgAigCCBBOOAIYIAYgCCACKgJIIAIqAkwgAigCDCACKAIIEE44AhwgBiAIIAIqAlAgAioCVCACKAIMIAIoAggQTjgCICAGIAggAioCWCACKgJcIAIoAgwgAigCCBBOOAIkIAYgCCACKgJgIAIqAmQgAigCDCACKAIIEE44AiggBiAIIAIqAmggAioCbCACKAIMIAIoAggQTjgCLCAIIAMgBSAvIDWUEPcBIAYgCCACKgJwIAIqAnQgAigCDCACKAIIEE44AjAgBiAIIAIqAnggAioCfCACKAIMIAIoAggQTjgCNCAGIAggAioCgAEgAioChAEgAigCDCACKAIIEE44AjggBiAIIAIqAogBIAIqAowBIAIoAgwgAigCCBBOOAI8IAYgCCACKgKQASACKgKUASACKAIMIAIoAggQTjgCQCAGIAggAioCmAEgAioCnAEgAigCDCACKAIIEE44AkQgCCADIAUgLyA0lBD3ASAGIAggAioCoAEgAioCpAEgAigCDCACKAIIEE44AkggBiAIIAIqAqgBIAIqAqwBIAIoAgwgAigCCBBOOAJMIAYgCCACKgKwASACKgK0ASACKAIMIAIoAggQTjgCUCAGIAggAioCuAEgAioCvAEgAigCDCACKAIIEE44AlQgBiAIIAIqAsABIAIqAsQBIAIoAgwgAigCCBBOOAJYIAYgCCACKgLIASACKgLMASACKAIMIAIoAggQTjgCXCAIIAMgBSAvIDKUEPcBIAYgCCACKgLQASACKgLUASACKAIMIAIoAggQTjgCYCAGIAggAioC2AEgAioC3AEgAigCDCACKAIIEE44AmQgBiAIIAIqAuABIAIqAuQBIAIoAgwgAigCCBBOOAJoIAYgCCACKgLoASACKgLsASACKAIMIAIoAggQTjgCbCAGIAggAioC8AEgAioC9AEgAigCDCACKAIIEE44AnAgBiAIIAIqAvgBIAIqAvwBIAIoAgwgAigCCBBOOAJ0IAggAyAFIC8gMZQQ9wEgBiAIIAIqAoACIAIqAoQCIAIoAgwgAigCCBBOOAJ4IAYgCCACKgKIAiACKgKMAiAC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AnQiBWooAgAhBiAAIAhqKAIAIQggASACIActAAAiACAFIA1qKAIAamotAAA6AAAgASACIAAgBiAIakEQdWpqLQAAOgABIAEgAiAAIANqai0AADoAAgsLiwIBA38jAEEQayIIJAACQAJAIAAoAtwDIgcoAiQEQCAHQSBqQQAgBCAFKAIAQQJ0akEAQQEgBygCKBCIAyAHQQA2AiQgBSAFKAIAQQFqNgIAIAcgBygCLEEBazYCLAwBCyAHKAIsIQkgCCAEIAUoAgAiA0ECdGoiBCgCADYCCCAIAn8gCSAGIANrIgMgAyAJSxsiA0ECIANBAkkbIgNBAk8EQCAEKAIEDAELIAdBATYCJCAHKAIgCzYCDCAAIAEgAigCACAIQQhqIAcoAgwRBgAgBygCJCEAIAUgBSgCACADajYCACAHIAcoAiwgA2s2AiwgAA0BCyACIAIoAgBBAWo2AgALIAhBEGokAAuGBQEOfyACQQJ0IgUgASgCCGooAgAhCiABKAIEIAVqKAIAIQsgASgCACACQQN0aiIBKAIAIQcgASgCBCEIIAMoAgQhAiADKAIAIQMgACgC0AIhBCAAKALcAyIBKAIcIQ4gASgCGCEPIAEoAhQhECABKAIQIREgACgCcCIBQQJPBH8gAUEBdiEJA0AgECALLQAAQQJ0IgFqKAIAIQwgDyAKLQAAQQJ0IgZqKAIAIQUgASAOaigCACEBIAMgBCAGIBFqKAIAIg0gBy0AACIGamotAAA6AAAgAyAEIAYgASAFakEQdSIFamotAAA6AAEgAyAEIAYgDGpqLQAAOgACIAMgBCANIActAAEiAWpqLQAAOgADIAMgBCABIAVqai0AADoABCADIAQgASAMamotAAA6AAUgAiAEIA0gCC0AACIBamotAAA6AAAgAiAEIAEgBWpqLQAAOgABIAIgBCABIAxqai0AADoAAiACIAQgDSAILQABIgFqai0AADoAAyACIAQgASAFamotAAA6AAQgAiAEIAEgDGpqLQAAOgAFIAJBBmohAiAIQQJqIQggA0EGaiEDIAdBAmohByAKQQFqIQogC0EBaiELIAlBAWsiCQ0ACyAAKAJwBSABC0EBcQRAIBAgCy0AAEECdCIAaigCACEJIA8gCi0AAEECdCIBaigCACEFIAAgDmooAgAhACADIAQgASARaigCACIBIActAAAiBmpqLQAAOgAAIAMgBCAGIAAgBWpBEHUiAGpqLQAAOgABIAMgBCAGIAlqai0AADoAAiACIAQgASAILQAAIgNqai0AADoAACACIAQgACADamotAAA6AAEgAiAEIAMgCWpqLQAAOgACCwsbAQF/IAAoAtwDIgFBADYCJCABIAAoAnQ2AiwLhQMBA38CQCAAAn8gACgCvAMiASgCCARAIAFBADYCCCAAQQAgACgC5AMoAgARAgAgAEECIAAoAsgDKAIAEQIAQQIMAQsCQCAAKAJURQ0AIAAoAogBDQACQCAAKAJcRQ0AIAAoAmxFDQAgACABKAIYNgLkAyABQQE2AggMAQsgACgCZARAIAAgASgCFDYC5AMMAQsgACgCACICQS82AhQgACACKAIAEQEACyAAIAAoAtgDKAIAEQEAIAAgACgCxAMoAggRAQAgACgCRA0BIAEoAhBFBEAgACAAKALgAygCABEBAAsgACAAKALcAygCABEBACAAKAJUBEAgACABKAIIIAAoAuQDKAIAEQIACyAAQQNBACABKAIIGyAAKALIAygCABECAEEACyAAKALAAygCABECAAsCQCAAKAIIIgJFDQAgAiABKAIMIgM2AgwgAiADQQJBASABKAIIG2oiATYCECAAKAJARQ0AIAAoAswDKAIUDQAgAkECQQEgACgCbBsgAWo2AhALCy8BAX8gACgCvAMhASAAKAJUBEAgACAAKALkAygCCBEBAAsgASABKAIMQQFqNgIMCxwAIABBAEEAQQAgASACIAMgACgCyAMoAgQRCwALYQECfwJAIAAoAsADIgQoAjAgBCgCNCIFTwRAIAAgBEEIaiAAKALEAygCDBEDAEUNASAEQQA2AjAgBCgCNCEFCyAAIARBCGogBEEwaiAFIAEgAiADIAAoAsgDKAIEEQsACwu4BwEPfwJAIAAoAsADIgQoAjhFBEAgACAEIAQoAkRBAnRqKAI8IAAoAsQDKAIMEQMARQ0BIARBATYCOCAEIAQoAkxBAWo2AkwLAkACQAJAIAQoAkgOAwECAAMLIAAgBCAEKAJEQQJ0aigCPCAEQTBqIAQoAjQgASACIAMgACgCyAMoAgQRCwAgBCgCMCAEKAI0SQ0CIARBADYCSCACKAIAIANPDQILIARBADYCMCAEIAAoAsgCIg1BAWs2AjQCQCAEKAJMIAAoAswC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AnQiB2ooAtgCIQUCQAJAIAAoAuABBEAgACgCnAMNASAAKAKkAw0CCyAFKAIUIgJBEE8EQCAAKAIAIgEgAjYCGCABQTI2AhQgACAAKAIAKAIAEQEACyADIAJBAnRqIgFBPGooAgAiAkUEQCABIABBAUHAACAAKAIEKAIAEQQAIgI2AjwLIAJCADcAACACQgA3ADggAkIANwAwIAJCADcAKCACQgA3ACAgAkIANwAYIAJCADcAECACQgA3AAggAyAHaiIBQQA2AiggAUEANgIYIAAoAuABRQRAIAAoArQDDQEMAgsgACgCnANFDQELIAUoAhgiAkEQTwRAIAAoAgAiASACNgIYIAFBMjYCFCAAIAAoAgAoAgARAQALIAMgAkECdGoiAUH8AGooAgAiAkUEQCABIABBAUGAAiAAKAIEKAIAEQQAIgI2AnwLIAJBAEGAAhAwGgsgBEEBaiIEIAAoAtQCSA0ACwsgA0FwNgIUIANCADcCDCADIAAoApgCNgI4C6sNAgp/AXwgACgCJEEASgRAIAAoAtgDIQogACgC2AEhBwNAIAEhBiACIQQCQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgBygCKCAHKAIkIghBCHRqIgNBgxBMBEAgA0GBCEwEQAJAIANBgQRrDgQXAyIeAAtB+AAhAUEAIQICQCADQYECaw4CJh8ACyADQYMGaw4EAyEhHCELIANBggxMBEACQCADQYIIaw4HFiIFIiIiHAALIANBhQprDgYFISEhIRohCwJAIANBgwxrDgoUISEGISEhISEZAAsgA0GHDmsOCAYgICAgICAXIAsgA0GFGEwEQCADQYQUTARAIANBhBBrDg0TISEhHyEhISEhISEXIAsgA0GFFGsOBhEgICAgBwgLIANBhhxMBEAgA0GGGGsOBxAgICAgIAkKCwJAIANBhxxrDggPICAgICAgCwALIANBiCBrDgkNHx8fHx8fHwwLC0H5ACEBQQAhAgwiC0H6ACEBDCELQfsAIQFBACECDCALQfwAIQFBACECDB8LQf0AIQFBACECDB4LQf4AIQFBACECDB0LQf8AIQFBACECDBwLIANBixZHDRdBgAEhAUEAIQIMGwtBgQEhAUEAIQIMGgsg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GCABQfAANgIUDAILIAAoAgAiAUHbADYCFCABIAItAAc2AhggACgCACAFNgIcDAELIAAoAgAiASAFNgIYIAFBzwA2AhQLIABBASAAKAIAKAIEEQIACwwCCwJAIAFBDEkNACACLQACQcEARw0AIAItAANB5ABHDQAgAi0ABEHvAEcNACACLQAFQeIARw0AIAItAAZB5QBHDQAgAi0ACCEDIAItAAchByACLQAKIQkgAi0ACSEKIAItAAwhCyACLQALIQ0gAi0ADSEFIAAoAgAiAUHOADYCFCABIAU2AiQgASALIA1BCHRyNgIgIAEgCSAKQQh0cjYCHCABIAMgB0EIdHI2AhggAEEBIAEoAgQRAgAgACAFOgCsAiAAQQE2AqgCDAILIAAoAgAiASAFNgIYIAFB0AA2AhQgAEEBIAAoAgAoAgQRAgAMAQsgACgCACIBIAM2AhggAUHGADYCFCAAIAAoAgAoAgARAQALIAYgBDYCBCAGIAg2AgBBASEEIAxBAEwNACAAIAwgACgCGCgCEBECAAsgAkEQaiQAIAQLNgAgAEEANgLYASAAQQA2ArgDIABBADYCkAEgACgC0AMiAEEANgKkASAAQQA2AhggAEIANwIMC4Y7AQ9/IwBBoAJrIgkkACAAKAK4AyEBA0ACQAJAAkAgAQ0AIAAoAtADKAIMRQRAIAAoAhgiAigCBCIBRQRAIAAgAigCDBEAAEUEQEEAIQEMBAsgAigCBCEBCyACKAIAIgMtAAAhBSABQQFrIgQEfyADQQFqBSAAIAIoAgwRAABFBEBBACEBDAQLIAIoAgQhBCACKAIACyIBQQFqIQMgBUH/AUYgAS0AACIBQdgBRnFFBEAgACgCACIGIAU2AhggBkE3NgIUIAAoAgAgATYCHCAAIAAoAgAoAgARAQALIAAgATYCuAMgAiAEQQFrNgIEIAIgAzYCAAwBCyAAENQDRQRAQQAhAQwCCyAAKAK4AyEBCwJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgAUEBaw7+AQ8REREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREgECBQkFBQUFAwQFCAUFBQ8PDw8PDw8PAAcGChALERENDQ0NDQ0NDQ0NDQ0NDQ0NEREREREREREMEREREREOEQsgACgCACICQegANgIUIABBASACKAIEEQIAIAAoAtADIgEoAgwEQCAAKAIAIgJBwAA2AhQgACACKAIAEQEAIAAoAtADIQELIABCADcA6AEgAEIANwDwASAAQoGChIiQoMCAATcAgAIgAEKBgoSIkKDAgAE3APgBIABChYqUqNCgwYIFNwCQAiAAQoWKlKjQoMGCBTcAiAIgAEIANwOwAiAAQQA2AiggAEIANwOYAiAAQQA6AKwCIABCgYAENwKkAiAAQQA6AKICIABBgQI7AaACIAFBATYCDAwUC0EAIQEgAEEAQQBBABDNAg0TDBILQQAhASAAQQBBAUEAEM0CDRIMEQtBACEBIABBAEEAQQEQzQINEQwQC0EAIQEgAEEAQQFBARDNAg0QDA8LIAAoAgAiAiABNgIYIAJBPzYCFCAAIAAoAgAoAgARAQAMDwsgACgCGCIGKAIEIQEgBigCACEDIAAoAtADKAIQRQRAIAAoAgAiAkE8NgIUIAJBGGpBuLQCQdAAEDQaIAAgACgCACgCABEBAAsgAUUEQCAAIAYoAgwRAABFBEBBACEBDA8LIAYoAgAhAyAGKAIEIQELIAMtAAAhBSABQQFrIgIEfyADQQFqBSAAIAYoAgwRAABFBEBBACEBDA8LIAYoAgQhAiAGKAIACyIELQAAIQEgAkEBayIDBH8gBEEBagUgACAGKAIMEQAARQRAQQAhAQwPCyAGKAIEIQMgBigCAAshBCAAKAIAIgIgBC0AACILNgIYIAJB6QA2AhRBASECIABBASAAKAIAKAIEEQIAAkACQAJAIAtBAXRBBmogBUEIdCABckcgC0EES3INACALBEAgACALNgLUAiAEQQFqIQogA0EBayEFDAILIAAoAuABRQ0AIAAgCzYC1AIgBEEBaiEKIANBAWshBQwCCyAAKAIAIgFBDDYCFCAAIAEoAgARAQAgACALNgLUAiAEQQFqIQogA0EBayEFIAtFDQELQQAhBANAIAVFBEAgACAGKAIMEQAARQRAQQAhAQwRCyAGKAIAIQogBigCBCEFCyAKLQAAIQMCQCAERQ0AIARBAmshAiAEQQFrIQhBACEBA0AgAyAAIAFBAnRqKALYAigCAEcEQCAEIAFBAWoiAUcNAQwCCwsgACgC2AIoAgAhAQJAIARBAkkNAEEBIQMgAkEDTwRAIAhBfHEhDEEAIQcDQCAAIANBAnRqIgIoAuQCKAIAIg0gAigC4AIoAgAiDiACKALcAigCACIPIAIoAtgCKAIAIgIgASABIAJIGyICIAIgD0gbIgIgAiAOSBsiAiACIA1IGyEBIANBBGohAyAHQQRqIgcgDEcNAAsLQQAhAiAIQQNxIghFDQADQCAAIANBAnRqKALYAigCACIHIAEgASAHSBshASADQQFqIQMgAkEBaiICIAhHDQALCyABQQFqIQMLIAVBAWshCCAAKALYASEBAkAgACgCJCIHQQBKBEAgASAHQdgAbGohBUEAIQIDQCADIAEoAgBGDQIgAUHYAGohASACQQFqIgIgB0cNAAsgBSEBCyAAKAIAIgIgAzYCGCACQQQ2AhQgACAAKAIAKAIAEQEACyAAIARBAnRqIAE2AtgCIAgEfyAKQQFqBSAAIAYoAgwRAABFBEBBACEBDBELIAYoAgQhCCAGKAIACyEFIAEgBS0AACICQQ9xNgIYIAEgAkEEdjYCFCAAKAIAIgIgASgCADYCGCACIAEoAhQ2AhwgASgCGCEBIAJB6gA2AhQgAiABNgIgIABBASACKAIEEQIAIAVBAWohCiAIQQFrIQUgBEEBaiIEIAtHDQALQQAhAgsgBUUEQCAAIAYoAgwRAABFBEBBACEBDA8LIAYoAgAhCiAGKAIEIQULIAAgCi0AADYCnAMgACAFQQFrIgMEfyAKQQFqBSAAIAYoAgwRAABFBEBBACEBDA8LIAYoAgQhAyAGKAIACyIELQAANgKgAyAAIANBAWsiBwR/IARBAWoFIAAgBigCDBEAAEUEQEEAIQEMDwsgBigCBCEHIAYoAgALIgUtAAAiBEEPcTYCqAMgACAEQQR2NgKkAyAAKAIAIgQgACgCnAM2AhggBCAAKAKgAzYCHCAEIAAoAqQDNgIgIAQgACgCqAM2AiQgBEHrADYCFEEBIQEgAEEBIAQoAgQRAgAgACgC0ANBADYCFCACRQRAIAAgACgCkAFBAWo2ApABCyAGIAdBAWs2AgQgBiAFQQFqNgIAIABBADYCuAMMDQsgACgCACICQdcANgIUIABBASACKAIEEQIAIABBADYCuANBAiEBDAwLIAAoAhgiBSgCBCIBRQRAIAAgBSgCDBEAAEUEQEEAIQEMDQsgBSgCBCEBCyAFKAIAIgItAAAhBCABQQFrIgMEfyACQQFqBSAAIAUoAgwRAABFBEBBACEBDA0LIAUoAgQhAyAFKAIACyIBQQFqIQIgA0EBayEDIAEtAAAgBEEIdHIiBEECayEBIARBA08EQANAIAEhBCADRQRAIAAgBSgCDBEAAEUEQEEAIQEMDwsgBSgCBCEDIAUoAgAhAgsgAi0AACEBIANBAWsiCAR/IAJBAWoFIAAgBSgCDBEAAEUEQEEAIQEMDwsgBSgCBCEIIAUoAgALIgMtAAAhAiAAKAIAIgYgATYCGCAGQdEANgIUIAAoAgAgAjYCHCAAQQEgACgCACgCBBECAAJAAkACQCABQSBPBEAgACgCACIGIAE2AhggBkEdNgIUIAAgACgCACgCABEBAAwBCyABQRBJDQELIAAgAWogAjoA+AEMAQsgACABaiIBIAJBBHYiBjoA+AEgASACQQ9xIgE6AOgBIAEgBk0NACAAKAIAIgEgAjYCGCABQR42AhQgACAAKAIAKAIAEQEACyADQQFqIQIgCEEBayEDIARBAmshASAEQQJLDQALCyABBEAgACgCACIEQQw2AhQgACAEKAIAEQEACyAFIAM2AgQgBSACNgIADAwLIAAoAhgiBigCBCIBRQRAIAAgBigCDBEAAEUNCiAGKAIEIQELIAYoAgAiAi0AACEEIAFBAWsiAQR/IAJBAWoFIAAgBigCDBEAAEUNCiAGKAIEIQEgBigCAAsiAkEBaiEDIAFBAWshASACLQAAIARBCHRyIgJBAmshBSACQRNPBEADQCABRQRAIAAgBigCDBEAAEUNDCAGKAIAIQMgBigCBCEBCyAAKAIAIgIgAy0AACIHNgIYIAJB0gA2AhRBASECIABBASAAKAIAKAIEEQIAQQAhBCAJQQA6AIACIANBAWohAyABQQFrIQEDQCABRQRAIAAgBigCDBEAAEUNDSAGKAIAIQMgBigCBCEBCyAJQYACaiACaiADLQAAIgg6AAAgA0EBaiEDIAFBAWshASAEIAhqIQQgAkEBaiICQRFHDQALIAAoAgAiAiAJLQCBAjYCGCACIAktAIICNgIcIAIgCS0AgwI2AiAgAiAJLQCEAjYCJCACIAktAIUCNgIoIAIgCS0AhgI2AiwgAiAJLQCHAjYCMCAJLQCIAiEIIAJB2AA2AhQgAiAINgI0IABBAiACKAIEEQIAIAAoAgAiAiAJLQCJAjYCGCACIAktAIoCNgIcIAIgCS0AiwI2AiAgAiAJLQCMAjYCJCACIAktAI0CNgIoIAIgCS0AjgI2AiwgAiAJLQCPAjYCMCAJLQCQAiEIIAJB2AA2AhQgAiAINgI0IABBAiACKAIEEQIAIARBgAJNIAVBEWsiBSAETnFFBEAgACgCACICQQk2AhQgACACKAIAEQEAC0EAIQIgCUEAQYACEDAhCCAEBEADQCABRQRAIAAgBigCDBEAAEUNDiAGKAIAIQMgBigCBCEBCyACIAhqIAMtAAA6AAAgA0EBaiEDIAFBAWshASACQQFqIgIgBEcNAAsLIAAgB0EQayICQQJ0akHEAWogACAHQQJ0akG0AWogB0EQcSILGyEKIAIgByALGyICQQRPBEAgACgCACIHIAI2AhggB0EfNgIUIAAgACgCACgCABEBAAsgBSAEayEFIAooAgAiAkUEQCAAQQBBmAIgACgCBCgCABEEACICQQA2ApQCIAogAjYCAAsgAiAIKQOAAjcCACACIAgpA4gCNwIIIAIgCC0AkAI6ABAgCigCAEERaiAIQYACEDQaIAVBEEoNAAsLIAUEQCAAKAIAIgJBDDYCFCAAIAIoAgARAQALIAYgATYCBCAGIAM2AgAMCwsgACgCGCIGKAIEIgFFBEAgACAGKAIMEQAARQRAQQAhAQwLCyAGKAIEIQELIAYoAgAiAi0AACEFIAFBAWsiAwR/IAJBAWoFIAAgBigCDBEAAEUEQEEAIQEMCwsgBigCBCEDIAYoAgALIgFBAWohAiADQQFrIQQgAS0AACAFQQh0ciIBQQJrIQggAUEDTwRAA0AgBEUEQCAAIAYoAgwRAABFBEBBACEBDA0LIAYoAgQhBCAGKAIAIQILIAItAAAhBSAAKAIAIgFB0wA2AhQgASAFQQ9xIgE2AhggACgCACAFQQR2NgIcIABBASAAKAIAKAIEEQIAIAFBBE8EQCAAKAIAIgMgATYCGCADQSA2AhQgACAAKAIAKAIAEQEACyAAIAFBAnRqIgMoAqQBIgFFBEAgAEEAQYQBIAAoAgQoAgARBAAiAUEANgKAASADIAE2AqQBCyAIQQFrIQoCQAJAAkACQAJ/IAVBEEkiC0UEQEEAIQcgCEGAAUsNAgNAIAEgB0EBdCIFakEBOwEAIAEgBUECcmpBATsBACABIAVBBHJqQQE7AQAgASAFQQZyakEBOwEAIAEgBUEIcmpBATsBACABIAVBCnJqQQE7AQAgASAFQQxyakEBOwEAIAEgBUEOcmpBATsBACAHQQhqIgdBwABHDQALIApBAXUMAQtBACEHIAhBwABLDQEDQCABIAdBAXQiBWpBATsBACABIAVBAnJqQQE7AQAgASAFQQRyakEBOwEAIAEgBUEGcmpBATsBACABIAVBCHJqQQE7AQAgASAFQQpyakEBOwEAIAEgBUEMcmpBATsBACABIAVBDnJqQQE7AQAgB0EIaiIHQcAARw0ACyAKCyEFQcDOAiEIAkACQAJAAkACQAJAIAVBBGsOLgUHBwcHAAcHBwcHBwEHBwcHBwcHBwIHBwcHBwcHBwcHAwcHBwcHBwcHBwcHBwQHC0HQzQIhCAwEC0HQzAIhCAwDC0GgywIhCAwCC0HQyQIhCAwBC0HAxwIhCAsgAkEBaiECIARBAWshBAwCCyACQQFqIQIgBEEBayEEQcAAIQVBgMUCIQgMAQsgAkEBaiECIARBAWshBEGAxQIhCCAFQQBMDQELQQAhAwNAAn8gC0UEQCAERQRAIAAgBigCDBEAAEUEQEEAIQEMEQsgBigCBCEEIAYoAgAhAgsgAi0AACEHIARBAWsiBAR/IAJBAWoFIAAgBigCDBEAAEUEQEEAIQEMEQsgBigCBCEEIAYoAgALIgItAAAgB0EIdHIMAQsgBEUEQCAAIAYoAgwRAABFBEBBACEBDBALIAYoAgQhBCAGKAIAIQILIAItAAALIQcgASAIIANBAnRqKAIAQQF0aiAHOwEAIAJBAWohAiAEQQFrIQQgA0EBaiIDIAVHDQALC0EAIQggACgCACgCaEECTgRAA0AgACgCACIDIAEgCEEBdCIHai8BADYCGCADIAEgB0ECcmovAQA2AhwgAyABIAdBBHJqLwEANgIgIAMgASAHQQZyai8BADYCJCADIAEgB0EIcmovAQA2AiggAyABIAdBCnJqLwEANgIsIAMgASAHQQxyai8BADYCMCABIAdBDnJqLwEAIQcgA0HfADYCFCADIAc2AjQgAEECIAMoAgQRAgAgCEE4SSEDIAhBCGohCCADDQALCyAKIAVBACAFIAsbamsiCEEASg0ACwsgCARAIAAoAgAiAUEMNgIUIAAgASgCABEBAAsgBiAENgIEIAYgAjYCAAwKCyAAKAIYIgIoAgQiA0UEQCAAIAIoAgwRAABFBEBBACEBDAoLIAIoAgQhAwsgAigCACIELQAAIQEgA0EBayIDBH8gBEEBagUgACACKAIMEQAARQRAQQAhAQwKCyACKAIEIQMgAigCAAshBCADQQFrIQMgBC0AACABQQh0ckEERwRAIAAoAgAiAUEMNgIUIAAgASgCABEBAAsgAwR/IARBAWoFIAAgAigCDBEAAEUEQEEAIQEMCgsgAigCBCEDIAIoAgALIgEtAAAhBSADQQFrIgQEfyABQQFqBSAAIAIoAgwRAABFBEBBACEBDAoLIAIoAgQhBCACKAIACyIBLQAAIQMgACgCACIGQdQANgIUIAYgAyAFQQh0ciIFNgIYIABBASAAKAIAKAIEEQIAIAAgBTYCmAIgAiAEQQFrNgIEIAIgAUEBajYCAAwJCyAAKAIYIgEoAgQhAyABKAIAIQIgACgC0AMoAhBFBEAgACgCACIEQTw2AhQgBEEYakGJtQJB0AAQNBogACAAKAIAKAIAEQEACwJAAkAgACgCJEEDSA0AIANFBEAgACABKAIMEQAARQRAQQAhAQwLCyABKAIEIQMgASgCACECCyACLQAAIQQgA0EBayIDBH8gAkEBagUgACABKAIMEQAARQRAQQAhAQwLCyABKAIEIQMgASgCAAshAiADQQFrIQMgAi0AACAEQQh0ckEYRwRAIAAoAgAiBEEMNgIUIAAgBCgCABEBAAsgAwR/IAJBAWoFIAAgASgCDBEAAEUEQEEAIQEMCwsgASgCBCEDIAEoAgALIQIgA0EBayEDIAItAABBDUcEQCAAKAIAIgRBxgA2AhQgBCAAKAK4AzYCGCAAIAAoAgAoAgARAQALIAMEfyACQQFqBSAAIAEoAgwRAABFBEBBACEBDAsLIAEoAgQhAyABKAIACyICLQAAIQQgA0EBayIDBH8gAkEBagUgACABKAIMEQAARQRAQQAhAQwLCyABKAIEIQMgASgCAAsiBUEBaiECIANBAWshAyAFLQAAIARBCHRyQf8BRw0AIANFBEAgACABKAIMEQAARQRAQQAhAQwLCyABKAIEIQMgASgCACECCyACQQFqIQQgA0EBayEDIAItAABBA0cEQCAEIQIMAQsgA0UEQCAAIAEoAgwRAABFBEBBACEBDAsLIAEoAgQhAyABKAIAIQQLIARBAWohAiADQQFrIQMgACgC2AEiBygCWCAELQAARw0AIANFBEAgACABKAIMEQAARQRAQQAhAQwLCyAAKALYASEHIAEoAgQhAyABKAIAIQILIAJBAWohBCADQQFrIQMgBygCACACLQAARwRAIAQhAgwBCyADRQRAIAAgASgCDBEAAEUEQEEAIQEMCwsgACgC2AEhByABKAIEIQMgASgCACEECyAEQQFqIQIgA0EBayEDIAcoArABIAQtAABHDQAgA0UEQCAAIAEoAgwRAABFBEBBACEBDAsLIAEoAgQhAyABKAIAIQILIAJBAWohBCADQQFrIQMgAi0AAEGAAUcEQCAEIQIMAQsgA0UEQCAAIAEoAgwRAABFBEBBACEBDAsLIAEoAgQhAyABKAIAIQQLIAQtAAAhBSADQQFrIgMEfyAEQQFqBSAAIAEoAgwRAABFBEBBACEBDAsLIAEoAgQhAyABKAIACyIEQQFqIQIgA0EBayEDIAQtAAAgBUEIdHINACADRQRAIAAgASgCDBEAAEUEQEEAIQEMCwsgASgCBCEDIAEoAgAhAgsgAi0AACEEIANBAWsiAwR/IAJBAWoFIAAgASgCDBEAAEUEQEEAIQEMCwsgASgCBCEDIAEoAgALIgVBAWohAiADQQFrIQMgBS0AACAEQQh0cg0AIANFBEAgACABKAIMEQAARQRAQQAhAQwLCyABKAIEIQMgASgCACECCyACQQFqIQQgA0EBayEDIAItAAAEQCAEIQIMAQsgA0UEQCAAIAEoAgwRAABFBEBBACEBDAsLIAEoAgQhAyABKAIAIQQLIAQtAAAhBSADQQFrIgMEfyAEQQFqBSAAIAEoAgwRAABFBEBBACEBDAsLIAEoAgQhAyABKAIACyIEQQFqIQIgA0EBayEDIAQtAAAgBUEIdHJBAUcNACADRQRAIAAgASgCDBEAAEUEQEEAIQEMCwsgASgCBCEDIAEoAgAhAgsgAi0AACEEIANBAWsiAwR/IAJB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fWw2AgAgAyAEaiABQefPfmxBgIACajYCACABQQFqIQEgAkEBaiICQYACRw0ACwsMAQsgACAAQQFBHCAAKAIEKAIAEQQAIgE2AuADIAFB7QA2AgACQAJAAkAgACgCKCICQQdLDQACQEEBIAJ0QcwBcUUEQEEBIAJ0QTBxDQEgAkEBRw0CIAAoAiRBAUcNAwwECyAAKAIkQQNHDQIMAwsgACgCJEEERw0BDAILIAAoAiRBAEoNAQsgACgCACICQQs2AhQgACACKAIAEQEACwJAIAAoArACRQ0AAkAgACgCKEECaw4FAQAAAAEACyAAKAIAIgJBHDYCFCAAIAIoAgARAQALAkACQAJAAkACQAJAIAAoAiwiAkEBaw4GAAEEAwQCBAsgAEEBNgJ4AkACQAJAIAAoAihBAWsOBwABAAICAgACCyABQe4ANgIEIAAoAiQiAUECSA0GIAFBAWsiBUEHcSEDIAAoAtgBIQRBASECIAFBAmtBB08EQCAFQXhxIQZBACEFA0AgBCACQdgAbGoiAUEANgI0IAFBADYCjAEgAUEANgLkASABQQA2ArwCIAFBADYClAMgAUEANgLsAyABQQA2AsQEIAFBADYCnAUgAkEIaiECIAVBCGoiBSAGRw0ACwsgA0UNBkEAIQEDQCAEIAJB2ABsakEANgI0IAJBAWohAiABQQFqIgEgA0cNAAsMBgsCQAJAAkACQCAAKAKwAg4CAAECCyABQe8ANgIEDAILIAFB8AA2AgQMAQsgACgCACIBQRw2AhQgACABKAIAEQEACyAAKALgAyAAQQFBgBggACgCBCgCABEEACIENgIYQQAhAQNAIAQgAUECdGoiAiABQYuZAWw2AgAgAkGAEGogAUGvOmxBgIACajYCACACQYAIaiABQcasAmw2AgAgBCABQQFyIgNBAnRqIANBi5kBbDYCACACQYQQaiADQa86bEGAgAJqNgIAIAJBhAhqIANBxqwCbDYCACABQQJqIgFBgAJHDQALDAULIAAoAgAiAUEcNgIUIAAgASgCABEBAAwECyAAQQM2AngCQAJAAkACQAJAIAAoAihBAWsOBwADAQQEBAIECyABQfEANgIEDAcLIAFB8gA2AgQgABCxBQwGCyABQfIANgIEIAAoAuADIgEgAEEBQYAIIAAoAgQoAgARBAA2AgggASAAQQFBgAggACgC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AiAgAigCDBCJAyAEQQNsIAQgBRsgBhEIADYCSCACQdgAaiECIANBAWoiAyAAKAIkSA0ACwsgAUGrATYCDCABQawBNgIEIAEgAUHIAGo2AhAMAQsgASAAQQFBgAogACgCBCgCBBEEACICNgIgIAEgAkGACWo2AkQgAUFAayACQYAIajYCACABIAJBgAdqNgI8IAEgAkGABmo2AjggASACQYAFajYCNCABIAJBgARqNgIwIAEgAkGAA2o2AiwgASACQYACajYCKCABIAJBgAFqNgIkIAAoArQDRQRAIAJBAEGAChAwGgsgAUGtATYCDCABQa4BNgIEIAFBADYCEAsgACgCREUEQEEAIQIgACAAQQFB0AAgACgCBCgCABEEACIFNgLAAyAFQbABNgIAIAAoAsgCIQMCQCAAKALcAygCCARAIANBAUwEQCAAKAIAIgFBMDYCFCAAIAEoAgARAQAgACgCyAIhAwsgACgCwAMiBiAAQQEgACgCJEEDdCAAKAIEKAIAEQQAIgE2AjwgBkFAayABIAAoAiQiBEECdGo2AgAgBEEASgRAIANBBGohAyAAKALYASEBA0AgAEEBIAEoAiggASgCDGwgACgCyAJtIgQgA2wiB0EDdCAAKAIEKAIAEQQAIQggAkECdCIJIAYoAjxqIAggBEECdGoiBDYCACAGKAJAIAlqIAQgB0ECdGo2AgAgAUHYAGohASACQQFqIgIgACgCJCIESA0ACwsgACgCyAJBAmohAwwBCyAFIAM2AjQgACgCJCEECyAEQQBKBEAgACgC2AEhAUEAIQIDQCAFIAJBAnRqIABBASABKAIkIAEoAhxsIAEoAiggASgCDGwgACgCyAJtIANsIAAoAgQoAggRCQA2AgggAUHYAGohASACQQFqIgIgACgCJEgNAAsLCyAAIAAoAgQoAhgRAQAgACAAKALMAygCCBEBAAJAIAAoAggiAUUNACAAKAJADQAgACgCzAMoAhBFDQAgACgC4AEhAyAAKAIkIQIgAUEANgIEIAAoAswCIQQgAUEANgIMIAEgBCACQQNsQQJqIAIgAxtsNgIIIAFBA0ECIAAoAmwbNgIQIAwgDCgCDEEBajYCDAsgACgCQARAIABBzwE2AhRBAQ8LIABBywE2AhQLAkAgACgCzAMoAhBFDQAgACgCCCEFA0AgBQRAIAAgBSgCABEB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AkEMajYCACACIAJBC2o2AgQgA0GbkAIgAhCcAUEATA0AIAIoAgwhAyACLQALQd8BcUHNAEYEQCACIANB6AdsIgM2AgwLIAEgA0HoB2w2AiwLIAJBEGokACAAQQA2ArgCIABBADYCGCAAQQA2AgggAEIANwKkASAAQgA3AqwBIABCADcCtAEgAEIANwK8ASAAQgA3AsQBIABCADcCzAEgACAAQQBBrAEgACgCBCgCABEEACIBNgLQAyABQgA3AmAgAUHoADYCHCABQekANgIIIAFB6gA2AgQgAUHrADYCACABQQA2AmggAUHoADYCJCABQegANgIoIAFCADcCbCABQegANgIsIAFB6AA2AjAgAUIANwJ0IAFB6AA2AjQgAUHoADYCOCABQgA3AnwgAUHoADYCPCABQQA2AoQBIAFBQGtB6AA2AgAgAUIANwKIASABQegANgJEIAFB6AA2AkggAUHoADYCTCABQegANgJQIAFCADcCkAEgAUHoADYCVCABQgA3ApgBIAFBADYCoAEgAUHoADYCXCABQewANgIgIAFB7AA2AlggAEEANgK4AyAAQQA2ApABIABBADYC2AEgACgC0AMiAUEANgKkASABQQA2AhggAUIANwIMIAAgAEEAQRwgACgCBCgCABEEACIBNgLMAyABQQE2AhggAUIANwIQIAFB5AA2AgwgAUHlADYCCCABQeYANgIEIAFB5wA2AgAgAEHIATYCFAsiAQF9QX8gACoCACABKgIAkyICQwAAAABeIAJDAAAAAF0bCwsAIAEgAiAAETQACwsAIAEgAiAAEQIACysCAX8BfCMAQRBrIgIkACACIAEgABEZADkDCCACKwMIIQMgAkEQaiQAIAMLCwAgASACIAARFAALJwEBfyMAQRBrIgEkACABIAAREQA2AgwgASgCDCEAIAFBEGokACAACwkAIAEgABEBAAs1AQF/IwBBEGsiAiQAIAIgARC5BSACIAIgABEAADYCDCACKAIMIQAgAhAvGiACQRBqJAAgAAsrAQF/IwBBEGsiAyQAIAMgASACIAARAwA2AgwgAygCDCEAIANBEGokACAACzcBAX8jAEEQayIDJAAgAyACELkFIAMgASADIAARAwA2AgwgAygCDCEAIAMQLxogA0EQaiQAIAALKQEBfyMAQRBrIgIkACACIAEgABEAADYCDCAC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IQggACsDOCEJIABBQGsrAwAhCiAAKwNIIQsgACsDUCEMIAArA1ghDSAAKwNgIQ4gACsDaCEPIAArA3AhECAAKwN4IREgACsDgAEhEiAAKwOIASETIAArA5ABIRQgACsDmAEhFSAAKwOgASEWIAArA6gBIRcgACsDsAEhGCAAKwO4ASEZIAArA8ABIRogACsDyAEhGyAAKwPQASEcIAArA9gBIR0gACsD4AEhHiACIAAoAvABNgLoASACIB45A+ABIAIgHTkD2AEgAiAcOQPQASACIBs5A8gBIAIgGjkDwAEgAiAZOQO4ASACIBg5A7ABIAIgFzkDqAEgAiAWOQOgASACIBU5A5gBIAIgFDkDkAEgAiATOQOIASACIBI5A4ABIAIgETkDeCACIBA5A3AgAiAPOQNoIAIgDjkDYCACIA05A1ggAiAMOQNQIAIgCzkDSCACQUBrIAo5AwAgAiAJOQM4IAIgCDkDMCACIAc5AyggAiAGOQMgIAIgATYCGCACIAU3AxAgAiAENwMIIAIgAzcDAEH/ggRB0K4CIAIQBxpBAAshACACQYACaiQAIAAL+QEBAn8jAEEwayIDJAAgAyAANgIsIANB/I8EIANBLGoQRTYCKCADED82AiACfyADQShqIANBIGoQRgRAQfzyAygCAAwBCyADQSxqEEhByAJqIgAQMyABSyABQQBOcUUEQEGE8wMoAgAMAQsgACABEEMhAAJAIAJBAE4EQCAAKAIEIgAoAgQgAkoNAQtBgPMDKAIADAELIAAoAgAgAkHAAmxqIgBBEGoQvgUgACgCsAIhASAAKAIAIQIgACgCBCEEIAMgACsDCDkDECADIAQ2AgggAyACNgIEIAMgATYCAEHtgARBwa4CIAMQBxpBAAshASADQTBqJAAgAQteAQF/IwBBEGsiASQAIAEgADYCDCABQfyPBCABQQxqEEU2AgggARA/NgIAQfzyAyEAIAFBCGogARBGBH9B/PIDBSABQQxqEEgoAtgBQSxqCygCACEAIAFBEGokACAAC/AcAw9/A3wHfSMAQTBrIgokACAKIAA2AiwgCkH8jwQgCkEsahBFNgIAIAoQPzYCKAJ/IAogCkEoahBGBEBB/PIDKAIADAELIApBLGoQSCEAIApBAEEoEDAhBCAAKALEASECIARBATYCECAEIAI2AgAgBCAAKALMATYC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BCAFQbgCahAIQbChBCgCACECQbChBEEANgIAQX8hAQJAIAJFDQBBtKEEKAIAIgNFDQAgAigCACAMIBAQmwEiAUUNAiADJAELIwEhAiABQQFGDQALDAELIAwQKCACIAMQ7gQAC0EAIRsLIAwQKCAFQaAGaiQAIBEgGzYCACAbBH8gEQUgERAoQQALDAELDAULIgJFDQIgAigCBEEBRwRAIA8gCTYCICAPIA9B1ABqNgIkQQBBAkHvMyAPQSBqEC0gFygCABAoIBcQKCAdECggAhAoIBIQe0EADAQLIBcoAgAiASACKAIINgIEIAEgAigCDDYCCCABIAIqAhA4AgwgASACKAIANgIAIAIQKCASQQQgFEECdGtBAhCEA0EBISECQANAIBQgIUcEQCAPQdwAakEEQQEgEhBWQQFHBEBBACEBA0AgASAhRg0EIBcgAUECdGoiAigCACgCABAoIAIoAgAQKCABQQFqIQEMAAsACyAXICFBAnRqAn8gDyoCXCElIBcoAgAiHigCBCECIB4qAgwhJiAeKAIIIQFBEBAuIQUgAbIgJZQgJpUQlwIhByACsiAllCAmlRCXAiECIAUEQAJAIAUgJTgCDCAFIAc2AgggBSACNgIEIAUgAiAHbBAuIhs2AgAgG0UNAEEAIQEgB0EAIAdBAEobIRggAkEAIAJBAEobIQkDQCABIBhHBEAgHigCCCEEIB4qAgwiJiABQQFqIgeylCAllRCXAiECICYgAbKUICWVEJcCIgggAiAEIAIgBEgbIgEgASAISBshDkEAIQEDQCABIAlGBEAgByEBDAMFIB4oAgQhDCAeKgIMIiYgAUEBaiICspQgJZUQlwIhBCAmIAGylCAllRCXAiIQIAQgDCAEIAxIGyIBIAEgEEgbIBBrIQpBACEBIAghA0EAIREDQCADIA5HBEAgASAKaiEEIB4oAgAgAyAMbCAQamohIANAIAEgBEcEQCABQQFqIQEgESAgLQAAaiERICBBAWohIAwBCwsgA0EBaiEDIAQhAQwBCwsgGyARIAFtOgAAIBtBAWohGyACIQEMAQsACwALCyAFDAILCwwICyIBNgIAIAEEQCAhQQFqISEMAgVBACEBA0AgASAhRg0EIBcgAUECdGoiAigCACgCABAoIAIoAgAQKCABQQFqIQEMAAsACwALCyASEHsgHQwECyAXECgL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ADYCAAujBAEHfyMAQRBrIgIkACACIAA2AgwgAkH8jwQgAkEMahBFNgIIIAIQPzYCAEF/IQAgAkEIaiACEEZFBEAgAkEMahBIIgEhBwJ/IAEoAtgDIQYgASgCwAEiAygCACEEIAMoAgQhBUGk6wAQLiIABEACQCAAQQE2AuBnIABCmrPm+IOAgIDAADcCKCAAQouAgICgATcCICAAQpmAgICwATcCGCAAIAU2AgggACAENgIEIAAgBjYCFCAAQfTnAGogBCAFbBAuIgQ2AgAgBEUNACAAQfjnAGpBADYCACAADAILC0EAQQNBhK4CQQAQLUEBEAEACyIAIAM2AgwgAEEBNgIAIAAgA0EIahDaAyIDNgIQIANEAAAAAAAAAAAQpQEgByAANgLsASAARQRAQQBBA0GNrAJBABAtIAEoAugBIgAEQCAAKAIAIgAEQCAAQQAQmgYLIAAQKCABKALoASgCHBAoIAEoAugBKAIkECggASgC6AEoAjQQKCABKALoASgCLBAoIAEoAugBECggAUEANgLoAQsgASgC7AEhAAsgAARAIABDAACgQDgCLAsgASgC7AEiAARAIABDAAAAPzgCKAsgASgC7AEiAARAIABBEDYCJAsgASgC7AEiAARAIABBBjYCGAsgASgC7AEiAARAIABBBjYCHAsgASgC7AEiAARAIABBBjYCIAsgASABKALAARCnBTYC6AFBACEACyACQRBqJAAgAAtJAQF/IwBBEGsiASQAIAEgADYCDCABQfyPBCABQQxqEEU2AgggARA/NgIAIAFBCGogARBGRQRAIAFBDGoQSBoLIAFBEGokAEF/C5hCAjx/Bn0jAEHgAWsiBiQAIAYgADYC3AEgBkH8jwQgBkHcAWoQRTYCoAEgBhA/NgLYAQJAAn8gBkGgAWogBkHYAWoQRgRAQfzyAygCAAwBCyABIAZB3AFqEEgiFygC9AFOBEBBgPMDKAIADAELIAZBADYC2AEgBkF/NgLUASAGQYCAgPx7NgKcAQJAAkACQAJAIBcoAvABIgBBfkYEQCAXKALoASAXKALMARC0ByAXKALoASIABEAgBiAAKAI0NgLYASAGIAAoAjg2AtQBCyAGKALUASIAQQAgAEEAShshEkMAAIC/IT4gBigC2AEhBEF/IQtBACEAA0AgACASRwRAAkAgBCAAQcQAbGoiCSgC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QdgBaiAAQdABaiAAQc8BaiAAQc4BaiAAQcABahA7IhAgAEGwAWoQOyIIIABBoAFqEDsiCyAAQZwBahCOByAAQbgCNgIwIABBKGpBACAAQTBqIgIQXCEMAn8gACgCnAEiDSAHSARAIAsQLCAHIA1rQQF0aiAIECxqIAAoApwBakEBagwBCyALECwgCBAsaiAAKAKcAWpBAmoLIg1B5QBPBEAgDCANEC4QbCAMKAIAIgJFDQELIAIgAEEkaiAAQSBqIAMoAgQgCSAHIAlqIBEgDyAAQdABaiAALADPASAALADOASAQIAggCyAAKAKcARCNByABIAIgACgCJCAAKAIgIAMgBBDqASEBIAwQWyALEC8aIAgQLxogEBAvGiAAQdgBahA8IAoQWyAOEFsgAEHQA2okACABDwsQawALtgUBA38jAEHAA2siACQAIAAgAjYCsAMgACABNgK4AyAAQbkCNgIUIABBGGogAEEgaiAAQRRqIgcQXCEJIABBEGoiASAEEEQgARCHASEIIABBADoADyAAQbgDaiACIAMgASAEKAIEIAUgAEEPaiAIIAkgByAAQbADahCTBwRAIwBBEGsiASQAAkAgBhChAQRAIAYoAgAhAiABQQA2AgwgAiABQQxqEKABIAZBABCFAQwBCyABQQA2AgggBiABQQhqEKABIAZBABCSAQsgAUEQaiQAIAAtAA8EQCAGIAhBLRCQARChBAsgCEEwEJABIQEgCSgCACECIAAoAhQiCEEEayEDA0ACQCACIANPDQAgAigCACABRw0AIAJBBGohAgwBCwsjAEEQayIBJAAgBhAsIQMgBhCpBCEEAkAgAiAIEMYDIgdFDQAgBhA4IAJNBH8gBhA4IAYQLEECdGogAk8FQQALRQRAIAcgBCADa0sEQCAGIAQgAyAHaiAEayADIAMQ5QYLIAYQOCADQQJ0aiEEA0AgAiAIRwRAIAQgAhCgASACQQRqIQIgBEEEaiEEDAELCyABQQA2AgAgBCABEKABIAYgAyAHahCJAgwBCyMAQRBrIgMkACABIAIgCBC5BCADQRBqJAAgARA4IQggARAsIQIjAEEQayIEJAACQCACIAYQqQQiByAGECwiA2tNBEAgAkUNASAGEDgiByADQQJ0aiAIIAIQwgEgBiACIANqIgIQiQIgBEEANgIMIAcgAkECdGogBEEMahCg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IwBB4AJrIgAkACAAIAI2AtACIAAgATYC2AIgAEHQAWoQOyEGIABBEGoiAiADEEQgAhCHAUHQtANB6rQDIABB4AFqENoBIAIQPCAAQcABahA7IgMgAxBKEDcgACADQQAQNiIBNgK8ASAAIAI2AgwgAEEANgIIA0ACQCAAQdgCaiAAQdACahCBAUUNACAAKAK8ASADECwgAWpGBEAgAxAsIQIgAyADECxBAXQQNyADIAMQShA3IAAgAiADQQAQNiIBajYCvAELIABB2AJqEF9BECABIABBvAFqIABBCGpBACAGIABBEGogAEEMaiAAQeABahC+Ag0AIABB2AJqEG8aDAELCyADIAAoArwBIAFrEDcgAxA4IQIQUiEBIAAgBTYCACACIAEgABCuB0EBRwRAIARBBDYCAAsgAEHYAmogAEHQAmoQaQRAIAQgBCgCAEECcjYCAAsgACgC2AIhASADEC8aIAYQLxogAEHgAmokACABC9MDAQF+IwBBgANrIgAkACAAIAI2AvACIAAgATYC+AIgAEHYAWogAyAAQfABaiAAQewBaiAAQegBahCtBCAAQcgBahA7IgEgARBKEDcgACABQQAQNiICNgLEASAAIABBIGo2AhwgAEEANgIYIABBAToAFyAAQcUAOgAWA0ACQCAAQfgCaiAAQfACahCBAUUNACAAKALEASABECwgAmpGBEAgARAsIQMgASABECxBAXQQNyABIAEQShA3IAAgAyABQQAQNiICajYCxAELIABB+AJqEF8gAEEXaiAAQRZqIAIgAEHEAWogACgC7AEgACgC6AEgAEHYAWogAEEgaiAAQRxqIABBGGogAEHwAWoQrAQNACAAQfgCahBvGgwBCwsCQCAAQdgBahAsRQ0AIAAtABdFDQAgACgCHCIDIABBIGprQZ8BSg0AIAAgA0EEajYCHCADIAAoAhg2AgALIAAgAiAAKALEASAEEK8HIAApAwAhBiAFIAApAwg3AwggBSAGNwMAIABB2AFqIABBIGogACgCHCAEEH0gAEH4AmogAEHwAmoQaQRAIAQgBCgCAEECcjYCAAsgACgC+AIhAiABEC8aIABB2AFqEC8aIABBgANqJAAgAgu8AwAjAEHwAmsiACQAIAAgAjYC4AIgACABNgLoAiAAQcgBaiADIABB4AFqIABB3AFqIABB2AFqEK0EIABB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BkY6AAAgBigCGCEBA0AgA0EMaxAvIgMgBkcNAAsLIAZBIGokACABC/UCAQF/IwBBkAJrIgAkACAAIAI2AoACIAAgATYCiAIgAEHQAWoQOyEGIABBEGoiAiADEEQgAhCNAUHQtANB6rQDIABB4AFqEO4BIAIQPCAAQcABahA7IgMgAxBKEDcgACADQQAQNiIBNgK8ASAAIAI2AgwgAEEANgIIA0ACQCAAQYgCaiAAQYACahCDAUUNACAAKAK8ASADECwgAWpGBEAgAxAsIQIgAyADECxBAXQQNyADIAMQShA3IAAgAiADQQAQNiIBajYCvAELIABBiAJqEGBBECABIABBvAFqIABBCGpBACAGIABBEGogAEEMaiAAQeABahCMAg0AIABBiAJqEHAaDAELCyADIAAoArwBIAFrEDcgAxA4IQIQUiEBIAAgBTYCACACIAEgABCuB0EBRwRAIARBBDYCAAsgAEGIAmogAEGAAmoQagRAIAQgBCgCAEECcjYCAAsgACgCiAIhASADEC8aIAYQLxogAEGQAmokACABC9MDAQF+IwBBoAJrIgAkACAAIAI2ApACIAAgATYCmAIgAEHgAWogAyAAQfABaiAAQe8BaiAAQe4BahC2AyAAQdABahA7IgEgARBKEDcgACABQQAQNiICNgLMASAAIABBIGo2AhwgAEEANgIYIABBAToAFyAAQcUAOgAWA0ACQCAAQZgCaiAAQZACahCDAUUNACAAKALMASABECwgAmpGBEAgARAsIQMgASABECxBAXQQNyABIAEQShA3IAAgAyABQQAQNiICajYCzAELIABBmAJqEGAgAEEXaiAAQRZqIAIgAEHMAWogACwA7wEgACwA7gEgAEHgAWogAEEgaiAAQRxqIABBGGogAEHwAWoQtQMNACAAQZgCahBwGgwBCwsCQCAAQeABahAsRQ0AIAAtABdFDQAgACgCHCIDIABBIGprQZ8BSg0AIAAgA0EEajYCHCADIAAoAhg2AgALIAAgAiAAKALMASAEEK8HIAApAwAhBiAFIAApAwg3AwggBSAGNwMAIABB4AFqIABBIGogACgCHCAEEH0gAEGYAmogAEGQAmoQagRAIAQgBCgCAEECcjYCAAsgACgCmAIhAiABEC8aIABB4AFqEC8aIABBoAJqJAAgAgsL+NIDSQBBgAgLwDpmc2V0ACVzLyVzACVzLiVzAHZlY3RvcgBkZWJ1ZwB3YgAlbS0lZC0lWS0lSC0lTS0lUwBNYXJrZXIgT0suACwAQXNzZXJ0aW9uIGB4ID49IG1NaW5YYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgd2lkdGggPj0gNWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHdpZHRoID49IDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB3aWR0aCA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBweXJhbWlkLT5zaXplKCkgPiAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbVN0YXJ0VGltZSA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKHNyY193aWR0aCUyKSA9PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW0ud2lkdGgoKSA9PSBpbS5zdGVwKCkvc2l6ZW9mKGZsb2F0KWAgZmFpbGVkIGluIAAgCQoNAEVycm9yOiBtYWxsb2MKAEVycm9yIDE6IGljcEdldEluaXRYdzJYYwoAID09PSBtYXRyaXggKCVkLCVkKSA9PT0KACA9PT0gdmVjdG9yICglZCkgPT09CgA/Pz8gMQoARXJyb3I6IGxhYmVsaW5nIHdvcmsgb3ZlcmZsb3cuCgAjIyMgRmVhdHVyZSBjYW5kaWRhdGVzIGZvciB0cmFja2luZyBhcmUgb3ZlcmZsb3cuCgBhcmdsQ2FtZXJhRnJ1c3R1bVJIKCk6IGFyUGFyYW1EZWNvbXBNYXQoKSBpbmRpY2F0ZWQgcGFyYW1ldGVyIGVycm9yLgoAYXJWaWRlb09wZW46IEVycm9yLCB2aWRlbyBkZXZpY2UgYWxyZWFkeSBvcGVuLgoAa3BtRGVsZXRlUmVmRGF0YVNldCgpOiBOVUxMIHJlZkRhdGFTZXRQdHIvcmVmSW1hZ2UuCgBTdGFydCB0cmFja2luZ190aHJlYWQgIyVkLgoAT3V0IG9mIG1lbW9yeSEhCgBEYXRhIG51bSBlcnJvciEhCgB3AElEIGFscmVhZHkgZXhpc3RzACVzJXMAJXMuJXMAdmVjdG9yAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9vcmllbnRhdGlvbl9hc3NpZ25tZW50LmNwcAAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9mcmFtZXdvcmsvdGltZXJzLmNwcAAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvaGFycmlzLmNwcAAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvRG9HX3NjYWxlX2ludmFyaWFudF9kZXRlY3Rvci5jcHAAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvaG91Z2hfc2ltaWxhcml0eV92b3RpbmcuY3BwAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2ZyYW1ld29yay9pbWFnZS5jcHAAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL2dhdXNzaWFuX3NjYWxlX3NwYWNlX3B5cmFtaWQuY3BwAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9weXJhbWlkLmNwcABpbmZvAEVycm9yOiBpY3BHZXRKX1VfWGMAd2IAcmIAQVJfUElYRUxfRk9STUFUX1JHQgBQYXR0ZXJuIGV4dHJhY3Rpb24gZmFpbGVkLgBBc3NlcnRpb24gYHB5cmFtaWRgIGZhaWxlZCBpbiAAVHJhY2tpbmcgdGhyZWFkID0gJWQKAFNJWkUgPSAlZCwgJWQKAEVycm9yIDI6IGljcEdldEluaXRYdzJYYwoAPz8/IDIKAEVycm9yOiB1bnN1cHBvcnRlZCBwaXhlbCBmb3JtYXQuCgBhclZpZGVvT3BlbkFzeW5jOiBFcnJvciwgdmlkZW8gZGV2aWNlIGFscmVhZHkgb3Blbi4KAFVua25vd24gb3IgdW5zdXBwb3J0ZWQgbGFiZWxpbmcgdGhyZXNob2xkIG1vZGUgcmVxdWVzdGVkLiBTZXQgdG8gbWFudWFsLgoAa3BtRGVsZXRlUmVmRGF0YVNldCgpOiAwIHhzaXplL3lzaXplL2RwaS4KAEVycm9yICglZCk6IHVuYWJsZSB0byBvcGVuIGNhbWVyYSBwYXJhbWV0ZXJzIGZpbGUgIiVzIiBmb3Igd3JpdGluZy4KAEVycm9yOiBOVUxMIHBhdHRIYW5kbGUuCgBFbmQgdHJhY2tpbmdfdGhyZWFkICMlZC4KAEVycm9yOiB1bmFibGUgdG8gb3BlbiBtdWx0aW1hcmtlciBjb25maWcgZmlsZSAnJXMnLgoAT3V0IG9mIG1lbW9yeSEhCgByAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL21hdGNoZXJzL2ZyZWFrLmgAd2FybmluZwAgJTEwZwBCdWlsZCBQeXJhbWlkACU0ZAB3YgByYgBBUl9QSVhFTF9GT1JNQVRfQkdSAE1BTlVBTABBUl9QSVhFTF9GT1JNQVRfUkdCAEdlbmVyaWMgZXJyb3IgZHVyaW5nIG1hdGNoaW5nIHBoYXNlLgAgbGluZSAAJXMlcwoARmlsZSBvcGVuIGVycm9yLiAlcwoARGlzdG9ydGlvbiBmYWN0b3I6IGsxPSUxLjEwZiwgazI9JTEuMTBmLCBwMT0lMS4xMGYsIHAyPSUxLjEwZgoARXJyb3I6IG1hbGxvYwoARXJyb3IgMzogaWNwR2V0SW5pdFh3MlhjCgBFcnJvciBpY3BHZXRKX1VfUwoAPT09PT09ICVzID09PT09PT09CgA/Pz8gMwoARXJyb3I6IGNhbid0IGxvYWQgcGF0dGVybiBmcm9tIE5VTEwgYnVmZmVyLgoAa3BtU2V0UmVmRGF0YVNldCgpOiBOVUxMIGtwbUhhbmRsZS9maWxlbmFtZS4KAEVycm9yIHNhdmluZyBmZWF0dXJlIG1hcDogZXJyb3Igd3JpdGluZyBkYXRhLgoAT3V0IG9mIG1lbW9yeSEhCgBlcnJvcgBGcmVhayBmZWF0dXJlcyAtICVkAHJiAEFSX1BJWEVMX0ZPUk1BVF9CR1IAQVVUT19NRURJQU4AQVJfUElYRUxfRk9STUFUX1JHQkEASW5zdWZmaWNpZW50IGNvbnRyYXN0IGR1cmluZyBtYXRjaGluZy4AJTcuNWYgACBsaW5lIABFcnJvciBvcGVuaW5nIGZpbGUgJyVzJzogACAgICAgICAgICAgICAgICAgIGZ4PSVmLCBmeT0lZiwgeDA9JWYsIHkwPSVmLCBzPSVmCgBFcnJvciA0OiBpY3BHZXRJbml0WHcyWGMKAEVycm9yIGljcEdldFVfZnJvbV9YX2J5X01hdFgyVQoARXJyb3IgYWxsb2NhdGluZyBtZW1vcnkuCgBFcnJvcjogb3V0IG9mIG1lbW9yeS4KAEVycm9yOiBVbmFibGUgdG8gb3BlbiBmaWxlICclcycgZm9yIHdyaXRpbmcuCgBFcnJvcjogdW5hYmxlIHRvIG9wZW4gZmlsZSAnJXMlcycgZm9yIHJlYWRpbmcuCgBPdXQgb2YgbWVtb3J5ISEKAFN0ZXAgc2l6ZSBtdXN0IGJlIGVxdWFsIHRvIHdpZHRoIGZvciBub3cARXh0cmFjdCBGZWF0dXJlcwAlcwBXaWR0aCBjYW5ub3QgYmUgemVybwBTb3VyY2Ugd2lkdGggbXVzdCBiZSBldmVuAEltYWdlIGlzIHRvbyBzbWFsbAB4IG91dCBvZiByYW5nZQBDbG9jayBoYXMgbm90IGJlZW4gc3RhcnRlZABQeXJhbWlkIGlzIG5vdCBhbGxvY2F0ZWQAJWQAcmIAQVVUT19PVFNVAEFSX1BJWEVMX0ZPUk1BVF9CR1JBAEFSX1BJWEVMX0ZPUk1BVF9SR0JBAHdwIG11c3QgYmUgYXQgbGVhc3QgMQBCYXJjb2RlIG1hdGNoaW5nIGNvdWxkIG5vdCBmaW5kIGNvcnJlY3QgYmFyY29kZSBsb2NhdG9yIHBhdHRlcm4uAFslc10gADogACVzJXMKAERpc3RvcnRpb24gZmFjdG9yID0gJWYgJWYgJWYgJWYgJWYgJWYKAEVycm9yIDU6IGljcEdldEluaXRYdzJYYwoARXJyb3IgaWNwR2V0WGNfZnJvbV9Yd19ieV9NYXRYdzJYYwoARXJyb3IgcmVhZGluZyBpbWFnZVNldC4KAEVycm9yIHdoaWxlIGFkZGluZyByZWZlcmVuY2UgZGF0YSBzZXQ6IGtwbUdlblJlZkRhdGFTZXQoKSBmYWlsZWQuCgBFcnJvciBvcGVuaW5nICclcycuCgBDYW4ndCBvcGVuIEpQRUcgZmlsZSAnJXMnCgBPdXQgb2YgbWVtb3J5ISEKAFBhdHRlcm4gRGF0YSByZWFkIGVycm9yISEKAFJlYWQgZXJyb3IhIQoAWyVzXSBbJXNdIFslc10gOiBGb3VuZCAlZCBmZWF0dXJlcwAlZgB3YgBBUl9QSVhFTF9GT1JNQVRfQUJHUgBQeXJhbWlkIGlzIE5VTEwAQVVUT19BREFQVElWRQBBUl9QSVhFTF9GT1JNQVRfQkdSQQBCYXJjb2RlIG1hdGNoaW5nIGVycm9yIGRldGVjdGlvbi9jb3JyZWN0aW9uIGZvdW5kIHVucmVjb3ZlcmFibGUgZXJyb3IuAEVycm9yIGNyZWF0aW5nIGZ1bGwgZmlsZSBwYXRoIGZyb20gJyVzJyBhbmQgJyVzJwBBc3NlcnRpb24gYHggPCBtTWF4WGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGhlaWdodCA+PSA1YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaGVpZ2h0ID49IDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBoZWlnaHQgPiAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbUltYWdlcy5zaXplKCkgPiAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeCA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbVN0b3BUaW1lID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkc3QgIT0gMGAgZmFpbGVkIGluIAAlcyVzCgBEaXN0b3J0aW9uIGZhY3RvciA9ICVmICVmICVmICVmICVmCgBFcnJvciA9ICVmCgBFcnJvciA2OiBpY3BHZXRJbml0WHcyWGMKACAgICAgICAgIEltYWdlU2l6ZSA9ICU3ZFtwaXhlbF0KAD09PT09PT09PSAlZCA9PT09PT09PT09PQoASW1hZ2VzZXQgY29udGFpbnMgJWQgaW1hZ2VzLgoARXJyb3I6IFVuYWJsZSB0byBvcGVuIGZpbGUgJyVzJyBmb3IgcmVhZGluZy4KAEVycm9yICglZCk6IHVuYWJsZSB0byBvcGVuIGNhbWVyYSBwYXJhbWV0ZXJzIGZpbGUgIiVzIiBmb3IgcmVhZGluZy4KAEVycm9yIHByb2Nlc3NpbmcgbXVsdGltYXJrZXIgY29uZmlnIGZpbGUgJyVzJzogRmlyc3QgbGluZSBtdXN0IGJlIG51bWJlciBvZiBtYXJrZXIgY29uZmlncyB0byByZWFkLgoARXJyb3IgcmVhZGluZyBwYXR0ZXJuIGZpbGUgJyVzJy4KAEhlaWdodCBjYW5ub3QgYmUgemVybwAlZiAlZiAlZiAlZgB4IG11c3QgYmUgcG9zaXRpdmUATGFwbGFjaWFuIHB5cmFtaWQgaGFzIG5vdCBiZWVuIGFsbG9jYXRlZABDbG9jayBoYXMgbm90IGJlZW4gc3RvcHBlZABBUl9QSVhFTF9GT1JNQVRfQUJHUgBBUl9QSVhFTF9GT1JNQVRfTU9OTwBEZXN0aW5hdGlvbiBpcyBOVUxMAEFVVE9fQlJBQ0tFVElORwBocCBtdXN0IGJlIGF0IGxlYXN0IDEARXJyb3IgKCVkKTogdW5hYmxlIHRvIGRldGVybWluZSBmaWxlIGxlbmd0aC4ATWF0Y2hpbmcgY29uZmlkZW5jZSBjdXRvZmYgdmFsdWUgbm90IHJlYWNoZWQuAEFzc2VydGlvbiBgeSA+PSBtTWluWWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGltYWdlLnR5cGUoKSA9PSBJTUFHRV9VSU5UOGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHN0b3JlLnNpemUoKSA9PSBwb2ludHMuc2l6ZSgpYCBmYWlsZWQgaW4gACBJTkZPICAAJXMlcwoARGlzdG9ydGlvbiBmYWN0b3IgPSAlZiAlZiAlZiAlZgoARXJyb3IgNzogaWNwR2V0SW5pdFh3MlhjCgBFeHRyYWN0ZWQgZmVhdHVyZXMgPSAlN2RbcGl4ZWxdCgBFcnJvciBpY3AyR2V0VFMKAEZhbGxpbmcgYmFjayB0byByZWFkaW5nICclcyVzJyBpbiBBUlRvb2xLaXQgdjQueCBmb3JtYXQuCgBFcnJvciBpbiBvcGVuaW5nICclcycgaW4gemlwZmlsZS4KAEVycm9yIHJlYWRpbmcgSlBFRyBmaWxlLgoARXJyb3Igd2hpbGUgYWRkaW5nIHJlZmVyZW5jZSBkYXRhIHNldDoga3BtTWVyZ2VSZWZEYXRhU2V0KCkgZmFpbGVkLgoARXJyb3Igc2F2aW5nIGZlYXR1cmUgc2V0OiBlcnJvciB3cml0aW5nIGRhdGEuCgBPdXQgb2YgbWVtb3J5ISEKAAAAAAAAQA4AAAQQAABKEgAAXRQAAGkYAABCdWlsZCBJbmRleABbJXNdIFslc10gWyVzXSA6ICVzOiAlZiBtcwBJbWFnZSBtdXN0IGJlIGdyYXlzY2FsZQB5IG91dCBvZiByYW5nZQBGZWF0dXJlIHN0b3JlIGhhcyBub3QgYmVlbiBhbGxvY2F0ZWQAJWQAJWxsdSVjAHdiAEFSX1BJWEVMX0ZPUk1BVF9NT05PAEFSX1BJWEVMX0ZPUk1BVF9BUkdCAE1heGltdW0gYWxsb3dhYmxlIHBvc2UgZXJyb3IgZXhjZWVkZWQuAEFzc2VydGlvbiBgc3RlcCA+PSB3aWR0aGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGkrMStjaHVua19zaXplIDwgd2lkdGhgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBweXJhbWlkLT5udW1PY3RhdmVzKCkgPiAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgc3JjICE9IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB4IDwgbUdyYWRpZW50c1tvY3RhdmUqbU51bVNjYWxlc1Blck9jdGF2ZStzY2FsZV0ud2lkdGgoKWAgZmFpbGVkIGluIABFcnJvciBpbiBvcGVuaW5nICclcycgZm9yIHJlYWRpbmcKACBGaWx0ZXJlZCBmZWF0dXJlcyA9ICU3ZFtwaXhlbF0KAExhYmVsaW5nIHRocmVzaG9sZCBtb2RlIHNldCB0byAlcy4KAEVycm9yIHJlYWRpbmcgSlBFRyBmaWxlIGhlYWRlci4KAEVycm9yOiBzdXBwbGllZCBmaWxlIGRvZXMgbm90IGFwcGVhciB0byBiZSBhbiBBUlRvb2xLaXQgY2FtZXJhIHBhcmFtZXRlciBmaWxlLgoAa3BtRGVsZXRlUmVmRGF0YVNldCgpOiBOVUxMIHJlZkRhdGFTZXRQdHIxL3JlZkRhdGFTZXRQdHIyLgoAQ2FuJ3QgcmVhZCBKUEVHIGZpbGUgJyVzJwoAQVJfUElYRUxfRk9STUFUXzJ2dXkAUHlyYW1pZCBkb2VzIG5vdCBjb250YWluIGFueSBsZXZlbHMAU3RlcCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0aGUgd2lkdGgAeCBtdXN0IGJlIGxlc3MgdGhhbiB0aGUgaW1hZ2Ugd2lkdGgARXh0ZW5kaW5nIGJleW9uZCB0aGUgd2lkdGggb2YgdGhlIGltYWdlAFNvdXJjZSBpcyBOVUxMAEFSX1BJWEVMX0ZPUk1BVF9BUkdCAEVycm9yICglZCk6IHVuYWJsZSB0byByZWFkIGZyb20gZmlsZS4ATXVsdGktbWFya2VyIHBvc2UgZXJyb3IgdmFsdWUgZXhjZWVkZWQuAA0lNGQvJTRkLgBBc3NlcnRpb24gYHB5cmFtaWRgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB5IDwgbU1heFlgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbWFnZS5jaGFubmVscygpID09IDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBudW1fcG9pbnRzID09IHBvaW50cy5zaXplKClgIGZhaWxlZCBpbiAAJTcuNWYgACBJTkZPICAAa3BtU2V0UmVmRGF0YVNldCgpOiBOVUxMIGtwbUhhbmRsZS9yZWZEYXRhU2V0LgoAa3BtRGVsZXRlUmVmRGF0YVNldCgpOiBOVUxMIHJlZkRhdGFTZXRQdHIuCgBFcnJvcjogdW5hYmxlIHRvIG9wZW4gZmlsZSAnJXMnIGZvciB3cml0aW5nLgoARXJyb3IgcHJvY2Vzc2luZyBtdWx0aW1hcmtlciBjb25maWcgZmlsZSAnJXMnOiBwYXR0ZXJuICclcycgc3BlY2lmaWVkIGluIG11bHRpbWFya2VyIGNvbmZpZ3VyYXRpb24gd2hpbGUgaW4gYmFyY29kZS1vbmx5IG1vZGUuCgBFcnJvcjogVW5zdXBwb3J0ZWQgcGl4ZWwgZm9ybWF0ICglZCkgcmVxdWVzdGVkLgoARXJyb3IgaW4gcmVhZGluZyAnJXMnLgoACiMjIyBTdXJmYWNlIE5vLiVkICMjIwoAQdTCAAvZIAEAAAABAAAAAQAAAAAAAAD//////////////////////////wAAAAABAAAAAQAAAAEAAAAAAAAA/////0FSX1BJWEVMX0ZPUk1BVF8ydnV5AEFSX1BJWEVMX0ZPUk1BVF95dXZzACVzAEltYWdlIG11c3QgaGF2ZSAxIGNoYW5uZWwAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvdmlzdWFsX2RhdGFiYXNlLmgAU2hvdWxkIGJlIHNhbWUgc2l6ZQBSZWplY3RlZCBmcmVxdWVudGx5IG1pc3JlY29nbmlzZWQgbWF0cml4IG1hcmtlci4AQXNzZXJ0aW9uIGBidWNrZXRbMF0uZmlyc3QgPj0gYnVja2V0W25dLmZpcnN0YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYW5nbGUgPiAtUElgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBjaGFubmVscyA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBzcmNfd2lkdGggPiAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeSA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZHluYW1pY19jYXN0PGNvbnN0IEJpbm9taWFsUHlyYW1pZDMyZio+KHB5cmFtaWQpYCBmYWlsZWQgaW4gAGtwbVNhdmVSZWZEYXRhU2V0KCk6IE5VTEwgZmlsZW5hbWUvcmVmRGF0YVNldC4KAGtwbVNldFJlZkRhdGFTZXQoKTogcmVmRGF0YVNldC4KAEVycm9yOiBzdXBwbGllZCBidWZmZXIgZG9lcyBub3QgYXBwZWFyIHRvIGJlIEFSVG9vbEtpdCBjYW1lcmEgcGFyYW1ldGVycy4KAEVycm9yIHByb2Nlc3NpbmcgbXVsdGltYXJrZXIgY29uZmlnIGZpbGUgJyVzJzogVW5hYmxlIHRvIGRldGVybWluZSBkaXJlY3RvcnkgbmFtZS4KAEVycm9yIGluIHdyaXRpbmcgJyVzJyBpbiB0aGUgemlwZmlsZS4KAEVycm9yIHNhdmluZyBpbWFnZSBzZXQ6IGVycm9yIHdyaXRpbmcgZGF0YS4KAEFSX1BJWEVMX0ZPUk1BVF95dXZzAE51bWJlciBvZiBjaGFubmVscyBjYW5ub3QgYmUgemVybwB5IG11c3QgYmUgcG9zaXRpdmUAV2lkdGggbXVzdCBiZSBwb3NpdGl2ZQBhbmdsZSBvdXQgb2YgcmFuZ2UAT25seSBiaW5vbWlhbCBweXJhbWlkIGlzIHN1cHBvcnRlZABudGhfZWxlbWVudCBmYWlsZWQAQVJfUElYRUxfRk9STUFUX1JHQl81NjUAQXNzZXJ0aW9uIGBtUHlyYW1pZC5zaXplKCkgPT0gbU51bU9jdGF2ZXMqbU51bVNjYWxlc1Blck9jdGF2ZWAgZmFpbGVkIGluIAAgbGluZSAARmllbGQtb2YtdmlldyB2ZXJ0aWNhbCA9ICUuMWYsIGhvcml6b250YWwgPSAlLjFmIGRlZ3JlZXMsIGFzcGVjdCByYXRpbyA9ICUuM2YKAE1heCBmZWF0dXJlID0gJWQKACAgUmVhZCBJbWFnZVNldC4KAEVycm9yIHNhdmluZyBLUE0gZGF0YTogdW5hYmxlIHRvIG9wZW4gZmlsZSAnJXMlcyVzJyBmb3Igd3JpdGluZy4KAEVycm9yICglZCk6IHVuYWJsZSB0byBvcGVuIGV4dGVybmFsIHBhcmFtZXRlcnMgZmlsZSAiJXMiIGZvciB3cml0aW5nLgoARXJyb3IgaW4gY2xvc2luZyAlcyBpbiB0aGUgemlwZmlsZS4KAEF1dG8gdGhyZXNob2xkIChicmFja2V0KSBtYXJrZXIgY291bnRzIC1bJTNkOiAlM2RdIFslM2Q6ICUzZF0gWyUzZDogJTNkXSsuCgBFcnJvciBwcm9jZXNzaW5nIG11bHRpbWFya2VyIGNvbmZpZyBmaWxlICclcyc6IFVuYWJsZSB0byBsb2FkIHBhdHRlcm4gJyVzJy4KAE91dCBvZiBtZW1vcnkhIQoAUHlyYW1pZCBoYXMgbm90IGJlZW4gYWxsb2NhdGVkIHlldAAlbGYAQVJfUElYRUxfRk9STUFUX1JHQl81NjUAQVJfUElYRUxfRk9STUFUX1JHQkFfNTU1MQAuAEFzc2VydGlvbiBgcFswXSA+IHBtMVstMV1gIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBhbmdsZSA8PSBQSWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGQudHlwZSgpID09IElNQUdFX0YzMmAgZmFpbGVkIGluIABBc3NlcnRpb24gYHNyY19oZWlnaHQgPiAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgb2N0YXZlID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB5IDwgbUdyYWRpZW50c1tvY3RhdmUqbU51bVNjYWxlc1Blck9jdGF2ZStzY2FsZV0uaGVpZ2h0KClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBtRGF0YS5nZXQoKWAgZmFpbGVkIGluIAA6IAAlM2Q6ICglM2QsJTNkKSA6ICVmIG1pbj0lZiBtYXg9JWYsIHNkPSVmCgBwb2ludHMtJWQKAEVycm9yICglZCk6IHVuYWJsZSB0byBvcGVuIGV4dGVybmFsIHBhcmFtZXRlcnMgZmlsZSAiJXMiIGZvciByZWFkaW5nLgoAQXV0byB0aHJlc2hvbGQgKGJyYWNrZXQpIGFkanVzdGVkIHRocmVzaG9sZCB0byAlZC4KAEVycm9yIG9wZW5pbmcgZmlsZSAnJXMuaXNldCcuCgBFcnJvciBpbiBjbG9zaW5nICclcycuCgB5IG11c3QgYmUgbGVzcyB0aGFuIHRoZSBpbWFnZSBoZWlnaHQAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL2dhdXNzaWFuX3NjYWxlX3NwYWNlX3B5cmFtaWQuaABIZWlnaHQgbXVzdCBiZSBwb3NpdGl2ZQBPbmx5IEYzMiBpbWFnZXMgc3VwcG9ydGVkAFNob3VsZCBiZSBtYXhpbWEARGF0YSBwb2ludGVyIGlzIE5VTEwAUHlyYW1pZCBpcyBOVUxMAEFSX1BJWEVMX0ZPUk1BVF9SR0JBXzQ0NDQAQVJfUElYRUxfRk9STUFUX1JHQkFfNTU1MQBBc3NlcnRpb24gYHNjYWxlID49IG1NaW5TY2FsZWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGltYWdlLndpZHRoKCkgPT0gbVB5cmFtaWRbMF0ud2lkdGgoKWAgZmFpbGVkIGluIABbJSAuM2YgJSAuM2YgJSAuM2ZdIFslIDYuMWZdCgBFcnJvciBwcm9jZXNzaW5nIG11bHRpbWFya2VyIGNvbmZpZyBmaWxlICclcycsIG1hcmtlciBkZWZpbml0aW9uICUzZDogRmlyc3QgbGluZSBtdXN0IGJlIHBhdHRlcm4gd2lkdGguCgBFcnJvciAoJWQpOiB1bmFibGUgdG8gb3BlbiBvcHRpY2FsIHBhcmFtZXRlcnMgZmlsZSAiJXMiIGZvciB3cml0aW5nLgoAa3BtU2V0UmVmRGF0YVNldEZpbGUoKTogTlVMTCBrcG1IYW5kbGUvZmlsZW5hbWUuCgAgICAgZW5kLgoAQXV0byB0aHJlc2hvbGQgKCVzKSBhZGp1c3RlZCB0aHJlc2hvbGQgdG8gJWQuCgAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KAEFSX1BJWEVMX0ZPUk1BVF80MjB2AG1lZGlhbgAlbGYgJWxmICVsZiAlbGYAT2N0YXZlIG11c3QgYmUgcG9zaXRpdmUAc2NhbGUgb3V0IG9mIHJhbmdlAEltYWdlIG9mIHdyb25nIHNpemUgZm9yIHB5cmFtaWQAVW5hYmxlIHRvIGFsbG9jYXRlIGltYWdlIGRhdGEAQVJfUElYRUxfRk9STUFUX1JHQkFfNDQ0NABBc3NlcnRpb24gYGRldGVjdG9yYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgcFswXSA+IHBtMVswXWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGltMS50eXBlKCkgPT0gSU1BR0VfRjMyYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZy5jaGFubmVscygpID09IDJgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBzcmNfc3RlcCA+IDBgIGZhaWxlZCBpbiAAJTNkLCAlM2Q6IG1heF9zaW0gPSAlZgoAICBSZWFkIEZlYXR1cmVTZXQuCgBDYW5ub3QgZmluZCB0aGUgcGFnZSBmb3Igc2tpcHBpbmcuCgBFcnJvciAoJWQpOiB1bmFibGUgdG8gb3BlbiBvcHRpY2FsIHBhcmFtZXRlcnMgZmlsZSAiJXMiIGZvciByZWFkaW5nLgoARXJyb3Igc2F2aW5nIEtQTSBkYXRhOiBlcnJvciB3cml0aW5nIGRhdGEuCgBBUl9QSVhFTF9GT1JNQVRfNDIwdgBPdHN1AEFSX1BJWEVMX0ZPUk1BVF80MjBmACVmICVmAFN0ZXAgbXVzdCBiZSBwb3NpdGl2ZQBJbnZhbGlkIGltYWdlIHR5cGUARGV0ZWN0b3IgaXMgTlVMTABOdW1iZXIgb2YgY2hhbm5lbHMgc2hvdWxkIGJlIDIAQXNzZXJ0aW9uIGBvY3RhdmUgPCBtTnVtT2N0YXZlc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYHNjYWxlIDwgbU1heFNjYWxlYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgcFswXSA+IHBtMVsxXWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGltMi50eXBlKCkgPT0gSU1BR0VfRjMyYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW1hZ2UuaGVpZ2h0KCkgPT0gbVB5cmFtaWRbMF0uaGVpZ2h0KClgIGZhaWxlZCBpbiAAJTcuNGYgAGtwbUxvYWRSZWZEYXRhU2V0KCk6IE5VTEwgZmlsZW5hbWUvcmVmRGF0YVNldFB0ci4KAGtwbU1hdGNoaW5nKCk6IE5VTEwga3BtSGFuZGxlL2luSW1hZ2VMdW1hLgoARXJyb3Igb3BlbmluZyBmaWxlICclcy5mc2V0Jy4KAAEAAAAJAAAABQAAAAQAAAADAAAAAgBBw+MAC8JJAQABAQEAAgT//wUDAQAC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IABBc3NlcnRpb24gYHNpemUgPiAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgcHlyYW1pZC0+aW1hZ2VzKCkuc2l6ZSgpID4gMGAgZmFpbGVkIGluIABQYWdlWyVkXSAgcHJlOiUzZCwgYWZ0OiUzZCwgZXJyb3IgPSAlZgoAJTNkLCAlM2Q6IG1heF9zaW0gPSAlZiwgKG1heCxtaW4pID0gJWYsICVmLCBzZCA9ICVmCgAgIFJlYWQgTWFya2VyU2V0LgoARXJyb3IgcHJvY2Vzc2luZyBtdWx0aW1hcmtlciBjb25maWcgZmlsZSAnJXMnLCBtYXJrZXIgZGVmaW5pdGlvbiAlM2Q6IExpbmVzIDIgLSA0IG11c3QgYmUgbWFya2VyIHRyYW5zZm9ybS4KAEVycm9yIGxvYWRpbmcgS1BNIGRhdGE6IHVuYWJsZSB0byBvcGVuIGZpbGUgJyVzJXMlcycgZm9yIHJlYWRpbmcuCgBQeXJhbWlkIGlzIGVtcHR5AERlc3RpbmF0aW9uIGltYWdlIHNob3VsZCBiZSBhIGZsb2F0AG1yawBzaXplIG11c3QgYmUgcG9zaXRpdmUATWF4aW11bSBiaW4gc2hvdWxkIGJlIHBvc2l0aXZlAE9ubHkgc2luZ2xlIGNoYW5uZWwgaW1hZ2VzIHN1cHBvcnRlZABBUl9QSVhFTF9GT1JNQVRfTlYyMQBBc3NlcnRpb24gYHBbMF0gPiBwWzFdYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZHN0X3N0ZXAgPiAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgc2NhbGUgPj0gMGAgZmFpbGVkIGluIABKUEVHIGZpbGUgaGFzIHVuc3VwcG9ydGVkICVkLWNvbXBvbmVudCBwaXhlbHMKAEVycm9yIGxvYWRpbmcgS1BNIGRhdGE6IGVycm9yIHJlYWRpbmcgZGF0YS4KAGFyVXRpbEdldFBpeGVsRm9ybWF0TmFtZTogRXJyb3IsIHVucmVjb2duaXNlZCBwaXhlbCBmb3JtYXQgKCVkKS4KAFNjYWxlIG11c3QgYmUgcG9zaXRpdmUAVW5rbm93biBpbWFnZSB0eXBlAEFzc2VydGlvbiBgcFswXSA+IHBwMVstMV1gIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBoaXN0ICE9IE5VTExgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAoc3JjX3dpZHRoJTIpID09IDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbTEuY2hhbm5lbHMoKSA9PSAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbVJlZkltYWdlV2lkdGggPiAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgcHlyYW1pZC0+aW1hZ2VzKClbMF0ud2lkdGgoKSA9PSBkZXRlY3Rvci0+d2lkdGgoKWAgZmFpbGVkIGluIABPdXQgb2YgbWVtb3J5LgoAa3BtQ2hhbmdlUGFnZU5vT2ZSZWZEYXRhU2V0KCk6IE5VTEwgcmVmRGF0YVNldC4KAGFyVmlkZW9VdGlsR2V0UGl4ZWxGb3JtYXROYW1lOiBFcnJvciwgdW5yZWNvZ25pc2VkIHBpeGVsIGZvcm1hdCAoJWQpLgoARXJyb3Igb3BlbmluZyBmaWxlICclcy5tcmsnLgoAJSUlMDJ4AHZlY3RvcgBQeXJhbWlkIGFuZCBkZXRlY3RvciBzaXplIG1pc21hdGNoAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9vcmllbnRhdGlvbl9hc3NpZ25tZW50LmgAJWYgJWYgJWYgJWYAd2lkdGggbXVzdCBiZSBwb3NpdGl2ZQBVbnN1cHBvcnRlZCBpbWFnZSB0eXBlAFNvdXJjZSB3aWR0aCBtdXN0IGJlIG9kZABBc3NlcnRpb24gYHNjYWxlIDwgbU51bVNjYWxlc1Blck9jdGF2ZWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHBbMF0gPiBwcDFbMF1gIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbTIuY2hhbm5lbHMoKSA9PSAxYCBmYWlsZWQgaW4gAC9wcm9jL3NlbGYvZXhlAFNjYWxlIG11c3QgYmUgbGVzcyB0aGFuIG51bWJlciBvZiBzY2FsZSBwZXIgb2N0YXZlAEhpc3RvZ3JhbSBwb2ludGVyIGlzIE5VTEwAQXNzZXJ0aW9uIGBwWzBdID4gcHAxWzFdYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKGNodW5rX3NpemUlMik9PTBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBtUmVmSW1hZ2VIZWlnaHQgPiAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgcHlyYW1pZC0+aW1hZ2VzKClbMF0uaGVpZ2h0KCkgPT0gZGV0ZWN0b3ItPmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZC53aWR0aCgpID09IGltMi53aWR0aCgpYCBmYWlsZWQgaW4gAFRyYW5zZm9ybWF0aW9uIG1hdHJpeCByZWFkIGVycm9yISEKAHZlY3RvcgBJbWFnZXMgbXVzdCBoYXZlIHRoZSBzYW1lIHdpZHRoAGpwZwBVbnRlc3RlZCBiZWhhdmlvciBmb3Igb2RkIGNodW5rIHNpemUAaGVpZ2h0IG11c3QgYmUgcG9zaXRpdmUAT2N0YXZlIG91dCBvZiByYW5nZQBBc3NlcnRpb24gYChmYmluKzAuNWYpID4gMCAmJiAoZmJpbi0wLjVmKSA8IG51bV9iaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYXNzaWdubWVudC5zaXplKCkgPT0gbnVtX2luZGljZXNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAhaXNpbmYodVswXSlgIGZhaWxlZCBpbiAAJXMlcwoAV2lkdGggaXMgemVybwAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9tYXRjaGVycy9ob3VnaF9zaW1pbGFyaXR5X3ZvdGluZy5oAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL21hdGNoZXJzL2JpbmFyeV9oaWVyYXJjaGljYWxfY2x1c3RlcmluZy5oAERlY2ltYWwgYmluIHBvc2l0aW9uIGluZGV4IG91dCBvZiByYW5nZQBTY2FsZSBvdXQgb2YgcmFuZ2UASU5GAEFzc2VydGlvbiBgZC5oZWlnaHQoKSA9PSBpbTIuaGVpZ2h0KClgIGZhaWxlZCBpbiAASW1hZ2VzIG11c3QgaGF2ZSB0aGUgc2FtZSBoZWlnaHQALy4uL3NoYXJlLyVzAEhlaWdodCBpcyB6ZXJvAEFzc2lnbm1lbnQgc2l6ZSB3cm9uZwBBc3NlcnRpb24gYChpbnQpc3RkOjpmbG9vcih4KSA9PSAoaW50KXhgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbmRleCA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbWFnbml0dWRlID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAhaXNpbmYodVsxXSlgIGZhaWxlZCBpbiAAU3RlcCBpcyB6ZXJvAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9pbnRlcnBvbGF0ZS5oAE1hZ25pdHVkZSBjYW5ub3QgYmUgbmVnYXRpdmUAaW5kZXggb3V0IG9mIHJhbmdlAEhPTUUAQXNzZXJ0aW9uIGBhc3NpZ25tZW50W2ldICE9IC0xYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW0xLndpZHRoKCkgPT0gaW0yLndpZHRoKClgIGZhaWxlZCBpbiAAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL2hhcnJpcy1pbmxpbmUuaAAvcHJvYy9zZWxmL2NtZGxpbmUAZmxvb3IoKSBhbmQgY2FzdCBub3QgdGhlIHNhbWUAQXNzaWdubWVudCBpcyBpbnZhbGlkAEFzc2VydGlvbiBgbnVtX2JpbnMgPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpblggPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYChpPj4xKSA8IHN0ZDo6Y2VpbCgoc3JjX2hlaWdodC0xKS8yLmYpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW0xLmhlaWdodCgpID09IGltMi5oZWlnaHQoKWAgZmFpbGVkIGluIABJbmRleCBpcyBvdXQgb2YgYm91bmRzAE51bWJlciBiaW5zIG11c3QgYmUgcG9zaXRpdmUAYmluWCBvdXQgb2YgcmFuZ2UAT3V0IG9mIHJhbmdlAERvRyBQeXJhbWlkAHJiAEFzc2VydGlvbiBgKGludClzdGQ6OmZsb29yKHkpID09IChpbnQpeWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGFzc2lnbm1lbnRbaV0gPCBudW1faW5kaWNlc2AgZmFpbGVkIGluIABOb24tbWF4IHN1cHByZXNzaW9uAEFzc2lnbm1lbnQgb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgeXAgPj0gMCAmJiB5cCA8IGhlaWdodGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpblggPCBtTnVtWEJpbnNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbWFnZS50eXBlKCkgPT0gSU1BR0VfVUlOVDhgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB3MSA+PSAwYCBmYWlsZWQgaW4gACVzOiAlcwoAeXAgb3V0IG9mIGJvdW5kcwBTdWJwaXhlbAB3MSBtdXN0IGJlIHBvc2l0aXZlAFVuYWJsZSB0byBkZXRlcm1pbmUgcHJvY2VzcyBuYW1lAE9ubHkgZ3JheSBzY2FsZSBpbWFnZXMgYXJlIHN1cHBvcnRlZABBc3NlcnRpb24gYGluZGljZXNbYXNzaWdubWVudFtpXV0gPCBudW1fZmVhdHVyZXNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBiaW5ZID49IDBgIGZhaWxlZCBpbiAAcHJ1bmVGZWF0dXJlcwAlcyVzAGJpblkgb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgeXBfcGx1c18xID49IDAgJiYgeXBfcGx1c18xIDwgaGVpZ2h0YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgb2N0YXZlIDwgbU51bU9jdGF2ZXNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB3MiA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaXQtPnNlY29uZC5zaXplKCkgIT0gMGAgZmFpbGVkIGluIABGaW5kIE9yaWVudGF0aW9ucwB5cF9wbHVzXzEgb3V0IG9mIGJvdW5kcwAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvZ2F1c3NpYW5fc2NhbGVfc3BhY2VfcHlyYW1pZC5oAHcyIG11c3QgYmUgcG9zaXRpdmUAQ2x1c3RlciBtdXN0IGhhdmUgYXRsZWFzZXQgMSBmZWF0dXJlAC92YXIvY2FjaGUAQXNzZXJ0aW9uIGBiaW5ZIDwgbU51bVlCaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZHN0W2ldID49IC0yNTgwNjRgIGZhaWxlZCBpbiAALy5jYWNoZQBPY3RhdmUgb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgYjEgPj0gMCAmJiBiMSA8IG51bV9iaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeHAgPj0gMCAmJiB4cCA8IHdpZHRoYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZHN0W2ldIDw9IDI1ODA2NGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpbkFuZ2xlID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbTAuaGVpZ2h0KCkgPT0gaW0xLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbUsgPT0gbUNlbnRlcnMuc2l6ZSgpYCBmYWlsZWQgaW4gAEhlaWdodCBpcyBpbmNvbnNpc3RlbnQAeHAgb3V0IG9mIGJvdW5kcwAlcy8lcwAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9tYXRjaGVycy9rbWVkb2lkcy5oAGIxIGJpbiBpbmRleCBvdXQgb2YgcmFuZ2UAYmluQW5nbGUgb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgc2NhbGUgPCBtTnVtU2NhbGVzUGVyT2N0YXZlYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZHN0W2ldIDw9IDQxMjkwMjRgIGZhaWxlZCBpbiAAayBzaG91bGQgbWF0Y2ggdGhlIG51bWJlciBvZiBjbHVzdGVyIGNlbnRlcnMAU2NhbGUgb3V0IG9mIHJhbmdlAC92YXIvbGliAEFzc2VydGlvbiBgYjIgPj0gMCAmJiBiMiA8IG51bV9iaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYmluQW5nbGUgPCBtTnVtQW5nbGVCaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeHBfcGx1c18xID49IDAgJiYgeHBfcGx1c18xIDwgd2lkdGhgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkc3RbaV0gPj0gLTQxMjkwMjRgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbTAuaGVpZ2h0KCkgPT0gaW0yLmhlaWdodCgpYCBmYWlsZWQgaW4gAHhwX3BsdXNfMSBvdXQgb2YgYm91bmRzAC8uY29uZmlnAGIyIGJpbiBpbmRleCBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGBudW1fZmVhdHVyZXMgPiAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYmluU2NhbGUgPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYChpbTEuaGVpZ2h0KCk+PjEpID09IGltMi5oZWlnaHQoKWAgZmFpbGVkIGluIAB2ZWN0b3IATnVtYmVyIG9mIGZlYXR1cmVzIG11c3QgYmUgcG9zaXRpdmUAYmluU2NhbGUgb3V0IG9mIHJhbmdlAFRNUERJUgBBc3NlcnRpb24gYGd4eCA8PSA0MTI5MDI0YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgdzAgPj0gMCAmJiB3MCA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAoaW0wLmhlaWdodCgpPj4xKSA9PSBpbTEuaGVpZ2h0KClgIGZhaWxlZCBpbiAAdmVjdG9yAC90bXAAT3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgYmluU2NhbGUgPCBtTnVtU2NhbGVCaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbnVtX2luZGljZXMgPD0gbnVtX2ZlYXR1cmVzYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZ3h4ID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAoaW0wLmhlaWdodCgpPj4xKSA9PSBpbTIuaGVpZ2h0KClgIGZhaWxlZCBpbiAATW9yZSBpbmRpY2VzIHRoYW4gZmVhdHVyZXMARXJyb3IgbG9va2luZyBmb3IgcmVzb3VyY2VzIGRpcmVjdG9yeSBwYXRoAEFzc2VydGlvbiBgcm93IDwgbUhlaWdodGAgZmFpbGVkIGluIABBc3NlcnRpb24gYG1CdWNrZXRzLnNpemUoKSA9PSBtTnVtQnVja2V0c1hgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBneXkgPD0gNDEyOTAyNGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHcxID49IDAgJiYgdzEgPD0gMS4wMDAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW5kZXggPD0gKGJpblggKyBiaW5ZKm1OdW1YQmlucyArIGJpbkFuZ2xlKm1OdW1YQmlucyptTnVtWUJpbnMgKyBiaW5TY2FsZSptTnVtWEJpbnMqbU51bVlCaW5zKm1OdW1BbmdsZUJpbnMpYCBmYWlsZWQgaW4gAEVycm9yIGNyZWF0aW5nIHJlc291cmNlcyBkaXJlY3RvcnkgcGF0aAAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9mcmFtZXdvcmsvaW1hZ2UuaABCdWNrZXRzIGFyZSBub3QgYWxsb2NhdGVkAEFzc2VydGlvbiBgbnVtX2luZGljZXMgPj0gbUtgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB3MiA+PSAwICYmIHcyIDw9IDEuMDAwMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGd5eSA+PSAwYCBmYWlsZWQgaW4gAE5vdCBlbm91Z2ggZmVhdHVyZXMAcm93IG91dCBvZiBib3VuZHMAdmVjdG9yAEFzc2VydGlvbiBgbUJ1Y2tldHNbMF0uc2l6ZSgpID09IG1OdW1CdWNrZXRzWWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGd4eSA8PSA0MTI5MDI0YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgdzMgPj0gMCAmJiB3MyA8PSAxLjAwMDFgIGZhaWxlZCBpbiAARXJyb3I6IFVuYWJsZSB0byBjaGFuZ2Ugd29ya2luZyBkaXJlY3RvcnkgdG8gJyVzJy4KAEFzc2lnbm1lbnQgc2l6ZSBpcyBpbmNvcnJlY3QAQXNzZXJ0aW9uIGBtRmVhdHVyZVBvaW50cy5zaXplKCkgPD0gbU1heE51bUZlYXR1cmVQb2ludHNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBneHkgPj0gLTQxMjkwMjRgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAodzArdzErdzIrdzMpIDw9IDEuMDAwMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYG4gPiAwYCBmYWlsZWQgaW4gAFslIC4zZiAlIC4zZiAlIC4zZl0gWyUgNi4xZl0KAAADAAAAAwAAAAQAAAAEAAAABAAAAAEAAAAEAAAAAgAAAAIAAAACAAAAAgAAAAIAAAABAAAAAQAAAAEAQZCtAQunMgQAAACIAAAABQAAAJAAAAAGAAAAmAAAAAkAAACwAAAAGAQAAFMLAAAGDgAA0w8AAC5pc2V0AHJiAE42dmlzaW9uMjVHYXVzc2lhblNjYWxlU3BhY2VQeXJhbWlkRQAAAIj3AADJVgAAVG9vIG1hbnkgZmVhdHVyZSBwb2ludHMAdmVjdG9yAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL3V0aWxzL3BhcnRpYWxfc29ydC5oAEFzc2VydGlvbiBgcG9zID09IDY2NmAgZmFpbGVkIGluIABBc3NlcnRpb24gYG51bV9jZW50ZXJzID4gMGAgZmFpbGVkIGluIABUaGVyZSBtdXN0IGJlIGF0IGxlYXN0IDEgY2VudGVyAG4gbXVzdCBiZSBwb3NpdGl2ZQBQb3NpdGlvbiBpcyBub3Qgd2l0aGluIHJhbmdlAEFzc2VydGlvbiBga3Auc2NhbGUgPCBtTGFwbGFjaWFuUHlyYW1pZC5udW1TY2FsZVBlck9jdGF2ZSgpYCBmYWlsZWQgaW4gAFslc10gWyVzXSBbJXNdIDogRm91bmQgJWQgZmVhdHVyZXMgaW4gcXVlcnkARmVhdHVyZSBwb2ludCBzY2FsZSBpcyBvdXQgb2YgYm91bmRzAEFzc2VydGlvbiBgayA+IDBgIGZhaWxlZCBpbiAAayBtdXN0IGJlIHBvc2l0aXZlAEZpbmQgTWF0Y2hlcyAoMSkAQXNzZXJ0aW9uIGBrcC5zY29yZSA9PSBsYXAxLmdldDxmbG9hdD4oeSlbeF1gIGZhaWxlZCBpbiAAU2NvcmUgaXMgbm90IGNvbnNpc3RlbnQgd2l0aCB0aGUgRG9HIGltYWdlAEhvdWdoIFZvdGluZyAoMSkARmluZCBIb3VnaCBNYXRjaGVzICgxKQBBc3NlcnRpb24gYGJ1Y2tldFswXS5maXJzdCA+PSBidWNrZXRbbl0uZmlyc3RgIGZhaWxlZCBpbiAAbnRoX2VsZW1lbnQgZmFpbGVkAEVzdGltYXRlIEhvbW9ncmFwaHkgKDEpAEZpbmQgSW5saWVycyAoMSkAQXNzZXJ0aW9uIGBvY3RhdmUgPCBtTnVtT2N0YXZlc2AgZmFpbGVkIGluIAAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvZ2F1c3NpYW5fc2NhbGVfc3BhY2VfcHlyYW1pZC5oAEZpbmQgTWF0Y2hlcyAoMikAT2N0YXZlIG91dCBvZiByYW5nZQBIb3VnaCBWb3RpbmcgKDIpAEZpbmQgSG91Z2ggTWF0Y2hlcyAoMikAQXNzZXJ0aW9uIGBzY2FsZSA8IG1OdW1TY2FsZXNQZXJPY3RhdmVgIGZhaWxlZCBpbiAAU2NhbGUgb3V0IG9mIHJhbmdlAEVzdGltYXRlIEhvbW9ncmFwaHkgKDIpAEZpbmQgSW5saWVycyAoMikAQXNzZXJ0aW9uIGBpbmRleCA8IG1JbWFnZXMuc2l6ZSgpYCBmYWlsZWQgaW4gAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9Eb0dfc2NhbGVfaW52YXJpYW50X2RldGVjdG9yLmgAQXNzZXJ0aW9uIGBiZXN0X2luZGV4ICE9IHN0ZDo6bnVtZXJpY19saW1pdHM8c2l6ZV90Pjo6bWF4KClgIGZhaWxlZCBpbiAAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvZmVhdHVyZV9tYXRjaGVyLWlubGluZS5oAEluZGV4IGlzIG91dCBvZiByYW5nZQBTb21ldGhpbmcgc3RyYW5nZQBBc3NlcnRpb24gYHNjYWxlID49IDBgIGZhaWxlZCBpbiAAU2NhbGUgbXVzdCBiZSBwb3NpdGl2ZQBBc3NlcnRpb24gYG1NYXRjaGVzLnNpemUoKSA8PSBmZWF0dXJlczEtPnNpemUoKWAgZmFpbGVkIGluIABOdW1iZXIgb2YgbWF0Y2hlcyBzaG91bGQgYmUgbG93ZXIAU2NhbGUgbXVzdCBiZSBsZXNzIHRoYW4gbnVtYmVyIG9mIHNjYWxlIHBlciBvY3RhdmUAQXNzZXJ0aW9uIGBsYXAwLmhlaWdodCgpID09IGxhcDEuaGVpZ2h0KCkgPT0gbGFwMi5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYG1Sb290LmdldCgpYCBmYWlsZWQgaW4gAFdpZHRoL2hlaWdodCBhcmUgbm90IGNvbnNpc3RlbnQAUm9vdCBjYW5ub3QgYmUgTlVMTABBc3NlcnRpb24gYG1pbmkgIT0gLTFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAobGFwMC5oZWlnaHQoKSA9PSBsYXAxLmhlaWdodCgpKSAmJiAoKGxhcDEuaGVpZ2h0KCk+PjEpID09IGxhcDIuaGVpZ2h0KCkpYCBmYWlsZWQgaW4gAE1pbmltdW0gaW5kZXggbm90IHNldABBc3NlcnRpb24gYCgobGFwMC53aWR0aCgpPj4xKSA9PSBsYXAxLndpZHRoKCkpICYmIChsYXAxLndpZHRoKCkgPT0gbGFwMi53aWR0aCgpKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBuIDw9IGluX21hdGNoZXMuc2l6ZSgpYCBmYWlsZWQgaW4gAEltYWdlIHNpemVzIGFyZSBpbmNvbnNpc3RlbnQAU2hvdWxkIGJlIHRoZSBzYW1lAEFzc2VydGlvbiBgYmluWCA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKHgtMSkgPj0gMCAmJiAoeCsxKSA8IGxhcDEud2lkdGgoKWAgZmFpbGVkIGluIAB4IG91dCBvZiBib3VuZHMAL2hvbWUvd2FsdGVyL2thbHdhbHQtZ2l0aHViL0FSLmpzLWdpdGh1Yi1vcmcvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvaG91Z2hfc2ltaWxhcml0eV92b3RpbmcuaABiaW5YIG91dCBvZiByYW5nZQBBc3NlcnRpb24gYCh5LTEpID49IDAgJiYgKHkrMSkgPCBsYXAxLmhlaWdodCgpYCBmYWlsZWQgaW4gAHkgb3V0IG9mIGJvdW5kcwBBc3NlcnRpb24gYGJpblggPCBtTnVtWEJpbnNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBiaW5ZID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBsYXAwLndpZHRoKCkgPT0gbGFwMS53aWR0aCgpYCBmYWlsZWQgaW4gAEltYWdlIGRpbWVuc2lvbnMgaW5jb25zaXN0ZW50AGJpblkgb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgYmluWSA8IG1OdW1ZQmluc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYGxhcDAud2lkdGgoKSA9PSBsYXAyLndpZHRoKClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBiaW5BbmdsZSA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbGFwMC5oZWlnaHQoKSA9PSBsYXAxLmhlaWdodCgpYCBmYWlsZWQgaW4gAGJpbkFuZ2xlIG91dCBvZiByYW5nZQBBc3NlcnRpb24gYGxhcDAuaGVpZ2h0KCkgPT0gbGFwMi5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpbkFuZ2xlIDwgbU51bUFuZ2xlQmluc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYCh4LTEpID49IDAgJiYgKHgrMSkgPCBpbS53aWR0aCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYmluU2NhbGUgPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYCh5LTEpID49IDAgJiYgKHkrMSkgPCBpbS5oZWlnaHQoKWAgZmFpbGVkIGluIABiaW5TY2FsZSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGAobGFwMC53aWR0aCgpPj4xKSA9PSBsYXAyLndpZHRoKClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBiaW5TY2FsZSA8IG1OdW1TY2FsZUJpbnNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAobGFwMC5oZWlnaHQoKT4+MSkgPT0gbGFwMi5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHhfZGl2XzItMC41ZiA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZGlzdEJpbkFuZ2xlID49IDBgIGZhaWxlZCBpbiAAeF9kaXZfMiBvdXQgb2YgYm91bmRzIG91dCBvZiBib3VuZHMgZm9yIGludGVycG9sYXRpb24AZGlzdEJpbkFuZ2xlIG11c3Qgbm90IGJlIG5lZ2F0aXZlAEFzc2VydGlvbiBgaHlwLnNpemUoKSA+PSA5Km1heF9udW1faHlwb3RoZXNlc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYHlfZGl2XzItMC41ZiA+PSAwYCBmYWlsZWQgaW4gAHlfZGl2XzIgb3V0IG9mIGJvdW5kcyBvdXQgb2YgYm91bmRzIGZvciBpbnRlcnBvbGF0aW9uAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2hvbW9ncmFwaHlfZXN0aW1hdGlvbi9yb2J1c3RfaG9tb2dyYXBoeS5oAGh5cCB2ZWN0b3Igc2hvdWxkIGJlIG9mIHNpemUgOSptYXhfbnVtX2h5cG90aGVzZXMAQXNzZXJ0aW9uIGB4X2Rpdl8yKzAuNWYgPCBsYXAyLndpZHRoKClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB0bXBfaS5zaXplKCkgPj0gbnVtX3BvaW50c2AgZmFpbGVkIGluIABBc3NlcnRpb24gYHlfZGl2XzIrMC41ZiA8IGxhcDIuaGVpZ2h0KClgIGZhaWxlZCBpbiAAdG1wX2kgdmVjdG9yIHNob3VsZCBiZSBvZiBzaXplIG51bV9wb2ludHMAQXNzZXJ0aW9uIGAobGFwMC53aWR0aCgpPj4xKSA9PSBsYXAxLndpZHRoKClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBoeXBfY29zdHMuc2l6ZSgpID49IG1heF9udW1faHlwb3RoZXNlc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYChsYXAwLmhlaWdodCgpPj4xKSA9PSBsYXAxLmhlaWdodCgpYCBmYWlsZWQgaW4gAHZlY3RvcgBBc3NlcnRpb24gYG4gPiAwYCBmYWlsZWQgaW4gAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL3V0aWxzL3BhcnRpYWxfc29ydC5oAEFzc2VydGlvbiBgcm93IDwgbUhlaWdodGAgZmFpbGVkIGluIAAvaG9tZS93YWx0ZXIva2Fsd2FsdC1naXRodWIvQVIuanMtZ2l0aHViLW9yZy9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9mcmFtZXdvcmsvaW1hZ2UuaABuIG11c3QgYmUgcG9zaXRpdmUAcm93IG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGBrID4gMGAgZmFpbGVkIGluIABrIG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGAoaW50KXN0ZDo6Zmxvb3IoeCkgPT0gKGludCl4YCBmYWlsZWQgaW4gAC9ob21lL3dhbHRlci9rYWx3YWx0LWdpdGh1Yi9BUi5qcy1naXRodWItb3JnL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9pbnRlcnBvbGF0ZS5oAEFzc2VydGlvbiBgMGAgZmFpbGVkIGluIABGYWlsZWQgdG8gY29tcHV0ZSBtYXRyaXggaW52ZXJzZQBmbG9vcigpIGFuZCBjYXN0IG5vdCB0aGUgc2FtZQBBc3NlcnRpb24gYChpbnQpc3RkOjpmbG9vcih5KSA9PSAoaW50KXlgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB5cCA+PSAwICYmIHlwIDwgaGVpZ2h0YCBmYWlsZWQgaW4gAHlwIG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGB5cF9wbHVzXzEgPj0gMCAmJiB5cF9wbHVzXzEgPCBoZWlnaHRgIGZhaWxlZCBpbiAAeXBfcGx1c18xIG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGB4cCA+PSAwICYmIHhwIDwgd2lkdGhgIGZhaWxlZCBpbiAAeHAgb3V0IG9mIGJvdW5kcwBBc3NlcnRpb24gYHhwX3BsdXNfMSA+PSAwICYmIHhwX3BsdXNfMSA8IHdpZHRoYCBmYWlsZWQgaW4gAHhwX3BsdXNfMSBvdXQgb2YgYm91bmRzAEFzc2VydGlvbiBgdzAgPj0gMCAmJiB3MCA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAT3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgdzEgPj0gMCAmJiB3MSA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB3MiA+PSAwICYmIHcyIDw9IDEuMDAwMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHczID49IDAgJiYgdzMgPD0gMS4wMDAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKHcwK3cxK3cyK3czKSA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAAAAAAADwVgAAEQAAABIAAAAAAAAANG0AABMAAAAUAAAATjZ2aXNpb245RXhjZXB0aW9uRQCw9wAA9GwAAKz4AABONnZpc2lvbjE4Qmlub21pYWxQeXJhbWlkMzJmRQAAALD3AAAUbQAA8FYAAAAAAAAIbQAADwAAABUAAAAWAAAAuVKMPo5a5z65Uow+AAAAAAAAAAAIbgAAFwAAABgAAAAZAAAAGgAAABsAAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfcG9pbnRlcklQTjZ2aXNpb244S2V5ZnJhbWVJTGk5NkVFRU5TXzEwc2hhcmVkX3B0cklTM19FMjdfX3NoYXJlZF9wdHJfZGVmYXVsdF9kZWxldGVJUzNfUzNfRUVOU185YWxsb2NhdG9ySVMzX0VFRUUAsPcAAIBtAACk9QAATlN0M19fMjEwc2hhcmVkX3B0cklONnZpc2lvbjhLZXlmcmFtZUlMaTk2RUVFRTI3X19zaGFyZWRfcHRyX2RlZmF1bHRfZGVsZXRlSVMzX1MzX0VFAGJvb2wgdmlzaW9uOjpWaXN1YWxEYXRhYmFzZTx2aXNpb246OkZSRUFLRXh0cmFjdG9yLCB2aXNpb246OkJpbmFyeUZlYXR1cmVTdG9yZSwgdmlzaW9uOjpCaW5hcnlGZWF0dXJlTWF0Y2hlcjw5Nj4+OjpxdWVyeShjb25zdCBHYXVzc2lhblNjYWxlU3BhY2VQeXJhbWlkICopIFtGRUFUVVJFX0VYVFJBQ1RPUiA9IHZpc2lvbjo6RlJFQUtFeHRyYWN0b3IsIFNUT1JFID0gdmlzaW9uOjpCaW5hcnlGZWF0dXJlU3RvcmUsIE1BVENIRVIgPSB2aXNpb246OkJpbmFyeUZlYXR1cmVNYXRjaGVyPDk2Pl0AaHlwX2Nvc3RzIHZlY3RvciBzaG91bGQgYmUgb2Ygc2l6ZSBtYXhfbnVtX2h5cG90aGVzZXMAQcTfAQuBT7K+uT4S3KC+kL45PhLcoL6Qvjm+AAAAgLK+ub4S3KA+kL45vhLcoD6Qvjk+0nIYvwAAAADScpi+OgYEv9JymD46BgS/0nIYPwAAAIDScpg+OgYEP9JymL46BgQ/AAAAgFa4Pb9mTSQ/Vri9vmZNJD9WuL0+AAAAAFa4PT9mTSS/Vri9PmZNJL9WuL2+DOlYPwAAAIAM6dg+mdk7Pwzp2L6Z2Ts/DOlYvwAAAAAM6di+mdk7vwzp2D6Z2Tu/AAAAAPxTbj/xZU6/DVTuPvFlTr8NVO6+AAAAgPxTbr/xZU4/DVTuvvFlTj8NVO4+AACAvwAAAAAAAAC/0LNdvwAAAD/Qs12/AACAPwAAAIAAAAA/0LNdPwAAAL/Qs10/AAAAAEhxAAAXAAAAHAAAAB0AAAAeAAAAHwAAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9wb2ludGVySVBoMTZOdWxsQXJyYXlEZWxldGVySWhFTlNfOWFsbG9jYXRvckloRUVFRQAAAACw9wAA/HAAAKT1AAAxNk51bGxBcnJheURlbGV0ZXJJaEUAAAAAAAAA8HEAABcAAAAgAAAAIQAAACIAAAAjAAAATlN0M19fMjIwX19zaGFyZWRfcHRyX3BvaW50ZXJJUGhOU18xMHNoYXJlZF9wdHJJaEUyN19fc2hhcmVkX3B0cl9kZWZhdWx0X2RlbGV0ZUloaEVFTlNfOWFsbG9jYXRvckloRUVFRQCw9wAAiHEAAKT1AABOU3QzX18yMTBzaGFyZWRfcHRySWhFMjdfX3NoYXJlZF9wdHJfZGVmYXVsdF9kZWxldGVJaGhFRQB2aXNpb246OlNjb3BlZFRpbWVyOjp+U2NvcGVkVGltZXIoKQBpbmZpbml0eQBNaXNzaW5nIEh1ZmZtYW4gY29kZSB0YWJsZSBlbnRyeQBGZWJydWFyeQBKYW51YXJ5AEp1bHkAVGh1cnNkYXkAVHVlc2RheQBXZWRuZXNkYXkAU2F0dXJkYXkAU3VuZGF5AE1vbmRheQBGcmlkYXkATWF5ACVtLyVkLyV5AE1BWF9BTExPQ19DSFVOSyBpcyB3cm9uZywgcGxlYXNlIGZpeABBTElHTl9UWVBFIGlzIHdyb25nLCBwbGVhc2UgZml4AHNldE1hcmtlckluZm9WZXJ0ZXgATm90IGEgSlBFRyBmaWxlOiBzdGFydHMgd2l0aCAweCUwMnggMHglMDJ4AENvcnJ1cHQgSlBFRyBkYXRhOiAldSBleHRyYW5lb3VzIGJ5dGVzIGJlZm9yZSBtYXJrZXIgMHglMDJ4AFVuZXhwZWN0ZWQgbWFya2VyIDB4JTAyeABVbnN1cHBvcnRlZCBtYXJrZXIgdHlwZSAweCUwMngAVW5zdXBwb3J0ZWQgSlBFRyBwcm9jZXNzOiBTT0YgdHlwZSAweCUwMngARGVmaW5lIEh1ZmZtYW4gVGFibGUgMHglMDJ4AERlZmluZSBBcml0aG1ldGljIFRhYmxlIDB4JTAyeDogMHglMDJ4AC0rICAgMFgweAAtMFgrMFggMFgtMHgrMHggMHgAQm9ndXMgREFDIHZhbHVlIDB4JXgAX19uZXh0X3ByaW1lIG92ZXJmbG93AEh1ZmZtYW4gY29kZSBzaXplIHRhYmxlIG92ZXJmbG93AE5vdgBUaHUAICAgICAgICAlNHUgJTR1ICU0dSAlNHUgJTR1ICU0dSAlNHUgJTR1AEpQRUcgcGFyYW1ldGVyIHN0cnVjdCBtaXNtYXRjaDogbGlicmFyeSB0aGlua3Mgc2l6ZSBpcyAldSwgY2FsbGVyIGV4cGVjdHMgJXUARGVmaW5lIFJlc3RhcnQgSW50ZXJ2YWwgJXUAV2FybmluZzogdGh1bWJuYWlsIGltYWdlIHNpemUgZG9lcyBub3QgbWF0Y2ggZGF0YSBsZW5ndGggJXUATWlzY2VsbGFuZW91cyBtYXJrZXIgMHglMDJ4LCBsZW5ndGggJXUASkZJRiBleHRlbnNpb24gbWFya2VyOiB0eXBlIDB4JTAyeCwgbGVuZ3RoICV1AEpGSUYgZXh0ZW5zaW9uIG1hcmtlcjogcGFsZXR0ZSB0aHVtYm5haWwgaW1hZ2UsIGxlbmd0aCAldQBKRklGIGV4dGVuc2lvbiBtYXJrZXI6IEpQRUctY29tcHJlc3NlZCB0aHVtYm5haWwgaW1hZ2UsIGxlbmd0aCAldQBKRklGIGV4dGVuc2lvbiBtYXJrZXI6IFJHQiB0aHVtYm5haWwgaW1hZ2UsIGxlbmd0aCAldQBVbmtub3duIEFQUDE0IG1hcmtlciAobm90IEFkb2JlKSwgbGVuZ3RoICV1AFVua25vd24gQVBQMCBtYXJrZXIgKG5vdCBKRklGKSwgbGVuZ3RoICV1AE9idGFpbmVkIFhNUyBoYW5kbGUgJXUARnJlZWQgWE1TIGhhbmRsZSAldQBPYnRhaW5lZCBFTVMgaGFuZGxlICV1AEZyZWVkIEVNUyBoYW5kbGUgJXUAdW5zdXBwb3J0ZWQgbG9jYWxlIGZvciBzdGFuZGFyZCBpbnB1dABBdWd1c3QAZ2V0VHJhbnNNYXRNdWx0aVNxdWFyZVJvYnVzdABJbnZhbGlkIGNyb3AgcmVxdWVzdABVbnN1cHBvcnRlZCBjb2xvciBjb252ZXJzaW9uIHJlcXVlc3QAdW5zaWduZWQgc2hvcnQAZ2V0TXVsdGlNYXJrZXJDb3VudABnZXRUcmFuc01hdFNxdWFyZUNvbnQAdW5zaWduZWQgaW50AENvcnJ1cHQgSlBFRyBkYXRhOiBwcmVtYXR1cmUgZW5kIG9mIGRhdGEgc2VnbWVudABGcmFjdGlvbmFsIHNhbXBsaW5nIG5vdCBpbXBsZW1lbnRlZCB5ZXQAQ0NJUjYwMSBzYW1wbGluZyBub3QgaW1wbGVtZW50ZWQgeWV0AE5vdCBpbXBsZW1lbnRlZCB5ZXQAZnNldABPY3QAZmxvYXQAU2F0AHVpbnQ2NF90AENhbm5vdCBxdWFudGl6ZSBtb3JlIHRoYW4gJWQgY29sb3IgY29tcG9uZW50cwBTdGFydCBPZiBTY2FuOiAlZCBjb21wb25lbnRzAEJvZ3VzIHZpcnR1YWwgYXJyYXkgYWNjZXNzAEJvZ3VzIHNhbXBsaW5nIGZhY3RvcnMAUXVhbnRpemluZyB0byAlZCA9ICVkKiVkKiVkIGNvbG9ycwBRdWFudGl6aW5nIHRvICVkIGNvbG9ycwBDYW5ub3QgcXVhbnRpemUgdG8gZmV3ZXIgdGhhbiAlZCBjb2xvcnMAQ2Fubm90IHF1YW50aXplIHRvIG1vcmUgdGhhbiAlZCBjb2xvcnMASW52YWxpZCBKUEVHIGZpbGUgc3RydWN0dXJlOiB0d28gU09JIG1hcmtlcnMASW52YWxpZCBKUEVHIGZpbGUgc3RydWN0dXJlOiB0d28gU09GIG1hcmtlcnMAU21vb3RoaW5nIG5vdCBzdXBwb3J0ZWQgd2l0aCBub25zdGFuZGFyZCBzYW1wbGluZyByYXRpb3MATWF4aW11bSBzdXBwb3J0ZWQgaW1hZ2UgZGltZW5zaW9uIGlzICV1IHBpeGVscwBBcHBsaWNhdGlvbiB0cmFuc2ZlcnJlZCB0b28gbWFueSBzY2FubGluZXMAQXBwbGljYXRpb24gdHJhbnNmZXJyZWQgdG9vIGZldyBzY2FubGluZXMARmFpbGVkIHRvIGNyZWF0ZSB0ZW1wb3JhcnkgZmlsZSAlcwBDbG9zZWQgdGVtcG9yYXJ5IGZpbGUgJXMAT3BlbmVkIHRlbXBvcmFyeSBmaWxlICVzAEFwcgB2ZWN0b3IASW5wdXQgZmlsZSByZWFkIGVycm9yAHNldE1hcmtlckluZm9EaXIASW52YWxpZCBKUEVHIGZpbGUgc3RydWN0dXJlOiBtaXNzaW5nIFNPUyBtYXJrZXIAZ2V0TWFya2VyAGRldGVjdE1hcmtlcgBfYWRkTXVsdGlNYXJrZXIAZ2V0TXVsdGlFYWNoTWFya2VyAF9hZGRNYXJrZXIAZ2V0TkZUTWFya2VyAGRldGVjdE5GVE1hcmtlcgBfYWRkTkZUTWFya2VyAE9jdG9iZXIATm92ZW1iZXIAU2VwdGVtYmVyAERlY2VtYmVyAHVuc2lnbmVkIGNoYXIAaW9zX2Jhc2U6OmNsZWFyAE1hcgBVbnJlY29nbml6ZWQgY29tcG9uZW50IElEcyAlZCAlZCAlZCwgYXNzdW1pbmcgWUNiQ3IAc2V0dXAAVmlydHVhbCBhcnJheSBjb250cm9sbGVyIG1lc3NlZCB1cABTZXAAJUk6JU06JVMgJXAAc2V0UGF0dFJhdGlvAGdldFBhdHRSYXRpbwB0ZWFyZG93bgBTdW4ASnVuAHN0ZDo6ZXhjZXB0aW9uAEJvZ3VzIEh1ZmZtYW4gdGFibGUgZGVmaW5pdGlvbgBTZWxlY3RlZCAlZCBjb2xvcnMgZm9yIHF1YW50aXphdGlvbgBJbWFnZSB0b28gd2lkZSBmb3IgdGhpcyBpbXBsZW1lbnRhdGlvbgBNb24AbmFuAERpZG4ndCBleHBlY3QgbW9yZSB0aGFuIG9uZSBzY2FuAFNhbXBsaW5nIGZhY3RvcnMgdG9vIGxhcmdlIGZvciBpbnRlcmxlYXZlZCBzY2FuAEphbgBnZXRNYXJrZXJOdW0AZ2V0TXVsdGlNYXJrZXJOdW0ASnVsAGJvb2wAQnVmZmVyIHBhc3NlZCB0byBKUEVHIGxpYnJhcnkgaXMgdG9vIHNtYWxsAEFwcmlsAHNldExvZ0xldmVsAGdldExvZ0xldmVsAGVtc2NyaXB0ZW46OnZhbABGcmkAYmFkX2FycmF5X25ld19sZW5ndGgAQm9ndXMgbWFya2VyIGxlbmd0aABNYXJjaABBdWcAdW5zaWduZWQgbG9uZwBzdGQ6OndzdHJpbmcAYmFzaWNfc3RyaW5nAHN0ZDo6c3RyaW5nAHN0ZDo6dTE2c3RyaW5nAHN0ZDo6dTMyc3RyaW5nAENvcHlyaWdodCAoQykgMjAxOCwgVGhvbWFzIEcuIExhbmUsIEd1aWRvIFZvbGxiZWRpbmcAaW5mACUuMExmACVMZgB0cnVlAFR1ZQBmYWxzZQBTdXNwZW5zaW9uIG5vdCBhbGxvd2VkIGhlcmUAZ2V0VHJhbnNNYXRTcXVhcmUAZ2V0VHJhbnNNYXRNdWx0aVNxdWFyZQBzZXRNYXRyaXhDb2RlVHlwZQBnZXRNYXRyaXhDb2RlVHlwZQBKdW5lAHNldFByb2plY3Rpb25OZWFyUGxhbmUAZ2V0UHJvamVjdGlvbk5lYXJQbGFuZQBzZXRQcm9qZWN0aW9uRmFyUGxhbmUAZ2V0UHJvamVjdGlvbkZhclBsYW5lAFJlcXVlc3RlZCBmZWF0dXJlIHdhcyBvbWl0dGVkIGF0IGNvbXBpbGUgdGltZQBTZWVrIGZhaWxlZCBvbiB0ZW1wb3JhcnkgZmlsZQBSZWFkIGZhaWxlZCBvbiB0ZW1wb3JhcnkgZmlsZQBFbXB0eSBpbnB1dCBmaWxlAFByZW1hdHVyZSBlbmQgb2YgaW5wdXQgZmlsZQBQcmVtYXR1cmUgZW5kIG9mIEpQRUcgZmlsZQBzZXRDYW1lcmEoKTogRXJyb3IgY3JlYXRpbmcgM0QgaGFuZGxlAGRvdWJsZQBEQ1QgY29lZmZpY2llbnQgb3V0IG9mIHJhbmdlAEludmFsaWQgY29sb3IgcXVhbnRpemF0aW9uIG1vZGUgY2hhbmdlAEpQRUcgZGF0YXN0cmVhbSBjb250YWlucyBubyBpbWFnZQAgICAgd2l0aCAlZCB4ICVkIHRodW1ibmFpbCBpbWFnZQBnZXRQcm9jZXNzaW5nSW1hZ2UAU3RhcnQgb2YgSW1hZ2UARW5kIE9mIEltYWdlAEJvZ3VzIGJ1ZmZlciBjb250cm9sIG1vZGUAQ29ycnVwdCBKUEVHIGRhdGE6IGJhZCBIdWZmbWFuIGNvZGUAQ29ycnVwdCBKUEVHIGRhdGE6IGJhZCBhcml0aG1ldGljIGNvZGUAc2V0UGF0dGVybkRldGVjdGlvbk1vZGUAZ2V0UGF0dGVybkRldGVjdGlvbk1vZGUAc2V0RGVidWdNb2RlAGdldERlYnVnTW9kZQBzZXRMYWJlbGluZ01vZGUAZ2V0TGFiZWxpbmdNb2RlAHNldFRocmVzaG9sZE1vZGUAZ2V0VGhyZXNob2xkTW9kZQBzZXRJbWFnZVByb2NNb2RlAGdldEltYWdlUHJvY01vZGUAQm9ndXMgaW5wdXQgY29sb3JzcGFjZQBCb2d1cyBKUEVHIGNvbG9yc3BhY2UAc2V0VGhyZXNob2xkAGdldFRocmVzaG9sZAB2b2lkAEJhY2tpbmcgc3RvcmUgbm90IHN1cHBvcnRlZABEQ1Qgc2NhbGVkIGJsb2NrIHNpemUgJWR4JWQgbm90IHN1cHBvcnRlZABRdWFudGl6YXRpb24gdGFibGUgMHglMDJ4IHdhcyBub3QgZGVmaW5lZABIdWZmbWFuIHRhYmxlIDB4JTAyeCB3YXMgbm90IGRlZmluZWQAQXJpdGhtZXRpYyB0YWJsZSAweCUwMnggd2FzIG5vdCBkZWZpbmVkAFdyaXRlIHRvIFhNUyBmYWlsZWQAUmVhZCBmcm9tIFhNUyBmYWlsZWQAV3JpdGUgdG8gRU1TIGZhaWxlZABSZWFkIGZyb20gRU1TIGZhaWxlZABXZWQAICAgICAgICAlM2QgJTNkICUzZCAlM2QgJTNkICUzZCAlM2QgJTNkAFdhcm5pbmc6IHVua25vd24gSkZJRiByZXZpc2lvbiBudW1iZXIgJWQuJTAyZABDb3JydXB0IEpQRUcgZGF0YTogZm91bmQgbWFya2VyIDB4JTAyeCBpbnN0ZWFkIG9mIFJTVCVkAFN0YXJ0IE9mIEZyYW1lIDB4JTAyeDogd2lkdGg9JXUsIGhlaWdodD0ldSwgY29tcG9uZW50cz0lZAAgICAgQ29tcG9uZW50ICVkOiAlZGh4JWR2IHE9JWQASW52YWxpZCBwcm9ncmVzc2l2ZSBwYXJhbWV0ZXJzIFNzPSVkIFNlPSVkIEFoPSVkIEFsPSVkACAgU3M9JWQsIFNlPSVkLCBBaD0lZCwgQWw9JWQAICAgIENvbXBvbmVudCAlZDogZGM9JWQgYWM9JWQASW52YWxpZCBwcm9ncmVzc2l2ZSBwYXJhbWV0ZXJzIGF0IHNjYW4gc2NyaXB0IGVudHJ5ICVkAEludmFsaWQgc2NhbiBzY3JpcHQgYXQgZW50cnkgJWQAQm9ndXMgRFFUIGluZGV4ICVkAEJvZ3VzIERIVCBpbmRleCAlZABCb2d1cyBEQUMgaW5kZXggJWQAVG9vIG1hbnkgY29sb3IgY29tcG9uZW50czogJWQsIG1heCAlZABJbmNvbnNpc3RlbnQgcHJvZ3Jlc3Npb24gc2VxdWVuY2UgZm9yIGNvbXBvbmVudCAlZCBjb2VmZmljaWVudCAlZABXcm9uZyBKUEVHIGxpYnJhcnkgdmVyc2lvbjogbGlicmFyeSBpcyAlZCwgY2FsbGVyIGV4cGVjdHMgJWQAQXQgbWFya2VyIDB4JTAyeCwgcmVjb3ZlcnkgYWN0aW9uICVkAFVuc3VwcG9ydGVkIEpQRUcgZGF0YSBwcmVjaXNpb24gJWQARGVmaW5lIFF1YW50aXphdGlvbiBUYWJsZSAlZCAgcHJlY2lzaW9uICVkAEFkb2JlIEFQUDE0IG1hcmtlcjogdmVyc2lvbiAlZCwgZmxhZ3MgMHglMDR4IDB4JTA0eCwgdHJhbnNmb3JtICVkAEltcHJvcGVyIGNhbGwgdG8gSlBFRyBsaWJyYXJ5IGluIHN0YXRlICVkAENhbm5vdCB0cmFuc2NvZGUgZHVlIHRvIG11bHRpcGxlIHVzZSBvZiBxdWFudGl6YXRpb24gdGFibGUgJWQAVW5rbm93biBBZG9iZSBjb2xvciB0cmFuc2Zvcm0gY29kZSAlZABJbnZhbGlkIG1lbW9yeSBwb29sIGNvZGUgJWQAQm9ndXMgbWVzc2FnZSBjb2RlICVkAEpGSUYgQVBQMCBtYXJrZXI6IHZlcnNpb24gJWQuJTAyZCwgZGVuc2l0eSAlZHglZCAgJWQAc3RkOjpiYWRfYWxsb2MARGVjACVsZCVjAENvbXBvbmVudCBpbmRleCAlZDogbWlzbWF0Y2hpbmcgc2FtcGxpbmcgcmF0aW8gJWQ6JWQsICVkOiVkLCAlYwBGZWIAcndhAFNjYW4gc2NyaXB0IGRvZXMgbm90IHRyYW5zbWl0IGFsbCBkYXRhAF9sb2FkQ2FtZXJhAEFSX1VTRV9UUkFDS0lOR19ISVNUT1JZAEFSX05PVVNFX1RSQUNLSU5HX0hJU1RPUlkAJWEgJWIgJWQgJUg6JU06JVMgJVkAUE9TSVgAQVJfVEVNUExBVEVfTUFUQ0hJTkdfQ09MT1JfQU5EX01BVFJJWABBUl9URU1QTEFURV9NQVRDSElOR19NT05PX0FORF9NQVRSSVgAQVJfTEFCRUxJTkdfVEhSRVNIX01PREVfQVVUT19PVFNVAEFSX01BUktFUl9JTkZPX0NVVE9GRl9QSEFTRV9NQVRDSF9DT05UUkFTVABBUl9NQVhfTE9PUF9DT1VOVABJbnZhbGlkIGNvbXBvbmVudCBJRCAlZCBpbiBTT1MAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX0hFVVJJU1RJQ19UUk9VQkxFU09NRV9NQVRSSVhfQ09ERVMARVJST1JfTUFSS0VSX0lOREVYX09VVF9PRl9CT1VORFMAJUg6JU06JVMAQVJfTE9HX0xFVkVMX0VSUk9SAEFSX01BUktFUl9JTkZPX0NVVE9GRl9QSEFTRV9QT1NFX0VSUk9SAEFSX1RFTVBMQVRFX01BVENISU5HX0NPTE9SAEFSX1RFTVBMQVRFX01BVENISU5HX01PTk8AQVJfTE9HX0xFVkVMX0lORk8AQVJfTE9HX0xFVkVMX1JFTF9JTkZPAEFSX0xPR19MRVZFTF9XQVJOAEFSX01BVFJJWF9DT0RFX0RFVEVDVElPTgBBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfUEFUVEVSTl9FWFRSQUNUSU9OAEFSX0xBQkVMSU5HX0JMQUNLX1JFR0lPTgBBUl9MQUJFTElOR19XSElURV9SRUdJT04ATkFOAEFSX0xBQkVMSU5HX1RIUkVTSF9NT0RFX0FVVE9fTUVESUFOAFBNAEpQRUdNRU0AQU0ATENfQUxMAEFSX01BUktFUl9JTkZPX0NVVE9GRl9QSEFTRV9NQVRDSF9CQVJDT0RFX0VEQ19GQUlMAEFSX0xBQkVMSU5HX1RIUkVTSF9NT0RFX01BTlVBTABBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfUE9TRV9FUlJPUl9NVUxUSQBBUl9MT09QX0JSRUFLX1RIUkVTSABBUl9ERUZBVUxUX0xBQkVMSU5HX1RIUkVTSABBUl9MT0dfTEVWRUxfREVCVUcATEFORwBJbnZhbGlkIFNPUyBwYXJhbWV0ZXJzIGZvciBzZXF1ZW50aWFsIEpQRUcAQ2F1dGlvbjogcXVhbnRpemF0aW9uIHRhYmxlcyBhcmUgdG9vIGNvYXJzZSBmb3IgYmFzZWxpbmUgSlBFRwBJbnZhbGlkIEpQRUcgZmlsZSBzdHJ1Y3R1cmU6ICVzIGJlZm9yZSBTT0YASU5GAEFSX0xBQkVMSU5HX1RIUkVTSF9NT0RFX0FVVE9fQURBUFRJVkUAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX05PTkUAQVJfREVCVUdfRElTQUJMRQBBUl9ERUJVR19FTkFCTEUAQVJfSU1BR0VfUFJPQ19GUkFNRV9JTUFHRQBBUl9JTUFHRV9QUk9DX0ZJRUxEX0lNQUdFAEFSX0RFRkFVTFRfUEFUVEVSTl9ERVRFQ1RJT05fTU9ERQBBUl9ERUZBVUxUX01BUktFUl9FWFRSQUNUSU9OX01PREUAQVJfREVGQVVMVF9ERUJVR19NT0RFAEFSX0RFRkFVTFRfTEFCRUxJTkdfTU9ERQBBUl9ERUZBVUxUX0lNQUdFX1BST0NfTU9ERQBBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfTUFUQ0hfQ09ORklERU5DRQBFUlJPUl9BUkNPTlRST0xMRVJfTk9UX0ZPVU5EAEVSUk9SX01VTFRJTUFSS0VSX05PVF9GT1VORABBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfTUFUQ0hfQkFSQ09ERV9OT1RfRk9VTkQAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX01BVENIX0dFTkVSSUMAT3V0cHV0IGZpbGUgd3JpdGUgZXJyb3IgLS0tIG91dCBvZiBkaXNrIHNwYWNlPwBXcml0ZSBmYWlsZWQgb24gdGVtcG9yYXJ5IGZpbGUgLS0tIG91dCBvZiBkaXNrIHNwYWNlPwBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxzaG9ydD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgc2hvcnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgaW50PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxmbG9hdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDhfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50OF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50MTZfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50MTZfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDMyX3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDMyX3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGNoYXI+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGNoYXI+AHN0ZDo6YmFzaWNfc3RyaW5nPHVuc2lnbmVkIGNoYXI+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHNpZ25lZCBjaGFyPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxsb25nPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1bnNpZ25lZCBsb25nPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxkb3VibGU+ADAxMjM0NTY3ODkAOWMgIDE0LUphbi0yMDE4AEMuVVRGLTgAQVJfTUFUUklYX0NPREVfNng2AEFSX01BVFJJWF9DT0RFXzV4NQBBUl9NQVRSSVhfQ09ERV80eDRfQkNIXzEzXzVfNQBBUl9NQVRSSVhfQ09ERV8zeDNfUEFSSVRZNjUAQVJfTUFUUklYX0NPREVfNHg0AEFSX01BVFJJWF9DT0RFXzN4MwBmc2V0MwBBUl9NQVRSSVhfQ09ERV80eDRfQkNIXzEzXzlfMwBBUl9NQVRSSVhfQ09ERV8zeDNfSEFNTUlORzYzAEFSX1VTRV9UUkFDS0lOR19ISVNUT1JZX1YyAHNldHVwQVIyAG9uLgBvZmYuAChudWxsKQBFbXB0eSBKUEVHIGltYWdlIChETkwgbm90IHN1cHBvcnRlZCkASW5zdWZmaWNpZW50IG1lbW9yeSAoY2FzZSAlZCkAUHVyZSB2aXJ0dWFsIGZ1bmN0aW9uIGNhbGxlZCEARXJyb3IgcmVhZGluZyBkYXRhIGZyb20gJXMuZnNldAoAUmVhZGluZyAlcy5mc2V0CgBFcnJvcjoga3BtU2V0UmVmRGF0YVNldAoARXJyb3I6IGtwbUNoYW5nZVBhZ2VOb09mUmVmRGF0YVNldAoARXJyb3I6IGtwbU1lcmdlUmVmRGF0YVNldAoARGVidWcgbW9kZSBzZXQgdG8gJXMKAExhYmVsaW5nIG1vZGUgc2V0IHRvICVkCgBUaHJlc2hvbGQgbW9kZSBzZXQgdG8gJWQKAFRocmVzaG9sZCBzZXQgdG8gJWQKAEFsbG9jYXRlZCB2aWRlb0ZyYW1lU2l6ZSAlZAoAVHJhY2tpbmcgbG9zdC4gJWQKAEVycm9yOiBtYWxsb2MKAEVycm9yIHJlYWRpbmcgS1BNIGRhdGEgZnJvbSAlcy5mc2V0MwoAUmVhZGluZyAlcy5mc2V0MwoAIyMjIEZlYXR1cmUgY2FuZGlkYXRlcyBmb3IgdHJhY2tpbmcgYXJlIG92ZXJmbG93LgoAbG9hZE1hcmtlcigpOiBFcnJvciBsb2FkaW5nIHBhdHRlcm4gZmlsZSAlcy4KAEFSVG9vbEtpdEpTKCk6IFVuYWJsZSB0byBzZXQgdXAgQVIgbXVsdGltYXJrZXIuCgBBUlRvb2xLaXRKUygpOiBVbmFibGUgdG8gc2V0IHVwIE5GVCBtYXJrZXIuCgBBUlRvb2xLaXRKUygpOiBVbmFibGUgdG8gc2V0IHVwIEFSIG1hcmtlci4KAFBhdHRlcm4gcmF0aW8gc2l6ZSBzZXQgdG8gJWYuCgBMb2FkaW5nIG9mIE5GVCBkYXRhIGNvbXBsZXRlLgoAc2V0Q2FtZXJhKCk6IEVycm9yOiBhclBhcmFtTFRDcmVhdGUuCgAgIERvbmUuCgBzZXR1cCgpOiBFcnJvcjogYXJQYXR0Q3JlYXRlSGFuZGxlLgoAc2V0Q2FtZXJhKCk6IEVycm9yOiBhckNyZWF0ZUhhbmRsZS4KAEVycm9yOiBhcjJDcmVhdGVIYW5kbGUuCgBQYXR0ZXJuIGRldGVjdGlvbiBtb2RlIHNldCB0byAlZC4KAEltYWdlIHByb2MuIG1vZGUgc2V0IHRvICVkLgoAICBBc3NpZ25lZCBwYWdlIG5vLiAlZC4KAGxvYWRDYW1lcmEoKTogRXJyb3IgbG9hZGluZyBwYXJhbWV0ZXIgZmlsZSAlcyBmb3IgY2FtZXJhLgoAVHJhY2tlZCBwYWdlICVkIChtYXggJWQpLgoAKioqIENhbWVyYSBQYXJhbWV0ZXIgcmVzaXplZCBmcm9tICVkLCAlZC4gKioqCgBPdXQgb2YgbWVtb3J5ISEKAGNvbmZpZyBkYXRhIGxvYWQgZXJyb3IgISEKAGlkZGRkZGRkZGRkZGRkAGkAaWlpZABB0K4CC+sFaWlpaWlpaWRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRpAGlpaWlpaQAAAAAAAAAAJPcAACT3AAAk9wAAJPcAAGlpaWlpAAAAJPcAACT3AABpaWkAJPcAACT3AADwlwAATlN0M19fMjEyYmFzaWNfc3RyaW5nSWNOU18xMWNoYXJf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AD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAAAAAAAAQAAAAgAAAAQAAAACQAAAAIAAAAKAAAAEQAAABIAAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AEHEzgILxgYBAAAACAAAAAkAAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAATlN0M19fMjEyYmFzaWNfc3RyaW5nSWhOU18xMWNoYXJfdHJhaXRzSWhFRU5TXzlhbGxvY2F0b3JJaEVFRUUAAIj3AACQpwAATlN0M19fMjEyYmFzaWNfc3RyaW5nSXdOU18xMWNoYXJfdHJhaXRzSXdFRU5TXzlhbGxvY2F0b3JJd0VFRUUAAIj3AADYpwAATlN0M19fMjEyYmFzaWNfc3RyaW5nSURzTlNfMTFjaGFyX3RyYWl0c0lEc0VFTlNfOWFsbG9jYXRvcklEc0VFRUUAAACI9wAAIKgAAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0lEaU5TXzExY2hhcl90cmFpdHNJRGlFRU5TXzlhbGxvY2F0b3JJRGlFRUVFAAAAiPcAAGyoAABOMTBlbXNjcmlwdGVuM3ZhbEUAAIj3AAC4qAAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJY0VFAACI9wAA1KgAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWFFRQAAiPcAAPyoAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0loRUUAAIj3AAAkqQAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJc0VFAACI9wAATKkAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SXRFRQAAiPcAAHSpAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lpRUUAAIj3AACcqQAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJakVFAACI9wAAxKkAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWxFRQAAiPcAAOypAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0ltRUUAAIj3AAAUqgAATjEwZW1z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AEkvTyBlcnJvcgBObyBzdWNoIGRldmljZSBvciBhZGRyZXNzAEJsb2NrIGRldmljZSByZXF1aXJlZABObyBzdWNoIGRldmljZQBOb3QgYSBkaXJlY3RvcnkASXMgYSBkaXJlY3RvcnkAVGV4dCBmaWxlIGJ1c3kARXhlYyBmb3JtYXQgZXJyb3IASW52YWxpZCBhcmd1bWVudABBcmd1bWVudCBsaXN0IHRvbyBsb25nAFN5bWJvbGljIGxpbmsgbG9vcABGaWxlbmFtZSB0b28gbG9uZwBUb28gbWFueSBvcGVuIGZpbGVzIGluIHN5c3RlbQBObyBmaWxlIGRlc2NyaXB0b3JzIGF2YWlsYWJsZQBCYWQgZmlsZSBkZXNjcmlwdG9yAE5vIGNoaWxkIHByb2Nlc3MAQmFkIGFkZHJlc3MARmlsZSB0b28gbGFyZ2UAVG9vIG1hbnkgbGlua3MATm8gbG9ja3MgYXZhaWxhYmxlAFJlc291cmNlIGRlYWRsb2NrIHdvdWxkIG9jY3VyAFN0YXRlIG5vdCByZWNvdmVyYWJsZQBQcmV2aW91cyBvd25lciBkaWVkAE9wZXJhdGlvbiBjYW5jZWxlZABGdW5jdGlvbiBub3QgaW1wbGVtZW50ZWQATm8gbWVzc2FnZSBvZiBkZXNpcmVkIHR5cGUASWRlbnRpZmllciByZW1vdmVkAERldmljZSBub3QgYSBzdHJlYW0ATm8gZGF0YSBhdmFpbGFibGUARGV2aWNlIHRpbWVvdXQAT3V0IG9mIHN0cmVhbXMgcmVzb3VyY2VzAExpbmsgaGFzIGJlZW4gc2V2ZXJlZABQcm90b2NvbCBlcnJvcgBCYWQgbWVzc2FnZQBGaWxlIGRlc2NyaXB0b3IgaW4gYmFkIHN0YXRlAE5vdCBhIHNvY2tldABEZXN0aW5hdGlvbiBhZGRyZXNzIHJlcXVpcmVkAE1lc3NhZ2UgdG9vIGxhcmdlAFByb3RvY29sIHdyb25nIHR5cGUgZm9yIHNvY2tldABQcm90b2NvbCBub3QgYXZhaWxhYmxlAFByb3RvY29sIG5vdCBzdXBwb3J0ZWQAU29ja2V0IHR5cGUgbm90IHN1cHBvcnRlZABOb3Qgc3VwcG9ydGVkAFByb3RvY29sIGZhbWlseSBub3Qgc3VwcG9ydGVkAEFkZHJlc3MgZmFtaWx5IG5vdCBzdXBwb3J0ZWQgYnkgcHJvdG9jb2wAQWRkcmVzcyBub3QgYXZhaWxhYmxlAE5ldHdvcmsgaXMgZG93bgBOZXR3b3JrIHVucmVhY2hhYmxlAENvbm5lY3Rpb24gcmVzZXQgYnkgbmV0d29yawBDb25uZWN0aW9uIGFib3J0ZWQATm8gYnVmZmVyIHNwYWNlIGF2YWlsYWJsZQBTb2NrZXQgaXMgY29ubmVjdGVkAFNvY2tldCBub3QgY29ubmVjdGVkAENhbm5vdCBzZW5kIGFmdGVyIHNvY2tldCBzaHV0ZG93bgBPcGVyYXRpb24gYWxyZWFkeSBpbiBwcm9ncmVzcwBPcGVyYXRpb24gaW4gcHJvZ3Jlc3MAU3RhbGUgZmlsZSBoYW5kbGUAUmVtb3RlIEkvTyBlcnJvcgBRdW90YSBleGNlZWRlZABObyBtZWRpdW0gZm91bmQAV3JvbmcgbWVkaXVtIHR5cGUATXVsdGlob3AgYXR0ZW1wdGVkAEGCggMLlgGlAlsA8AG1BYwFJQGDBh0DlAT/AMcDMQMLBrwBjwF/A8oEKwDaBq8AQgNOA9wBDgQVAKEGDQGUAgsCOAZkArwC/wJdA+cECwfPAssF7wXbBeECHgZFAoUAggJsA28E8QDzAxgF2QDaA0wGVAJ7AZ0DvQQAAFEAFQK7ALMDbQD/AYUELwX5BDgAZQFGAZ8AtwaoAXMCUwEAQciDAwsMIQQAAAAAAAAAAC8CAEHogwMLBjUERwRWBABB/oMDCwKgBABBkoQDC19GBWAFbgVhBgAAzwEAAAAAAAAAAMkG6Qb5BgAAAAAZAAoAGRkZAAAAAAUAAAAAAAAJAAAAAAsAAAAAAAAAABkAEQoZGRkDCgcAAQAJCxgAAAkGCwAACwAGGQAAABkZGQBBgYUDCyEOAAAAAAAAAAAZAAoNGRkZAA0AAAIACQ4AAAAJAA4AAA4AQbuFAwsBDABBx4UDCxUTAAAAABMAAAAACQwAAAAAAAwAAAwAQfWFAwsBEABBgYYDCxUPAAAABA8AAAAACRAAAAAAABAAABAAQa+GAwsBEgBBu4YDCx4RAAAAABEAAAAACRIAAAAAABIAABIAABoAAAAaGhoAQfKGAwsOGgAAABoaGgAAAAAAAAkAQaOHAwsBFABBr4cDCxUXAAAAABcAAAAACRQAAAAAABQAABQAQd2HAwsBFgBB6YcDCycVAAAAABUAAAAACRYAAAAAABYAABYAADAxMjM0NTY3ODlBQkNERUYAQbSIAwsB7gBB3IgDCwj//////////wBBoIkDC4MS0XSeAFedvSqAcFIP//8+JwoAAABkAAAA6AMAABAnAACghgEAQEIPAICWmAAA4fUFGAAAADUAAABxAAAAa////877//+Sv///AAAAAAAAAAD/////////////////////////////////////////////////////////////////AAECAwQFBgcICf////////8KCwwNDg8QERITFBUWFxgZGhscHR4fICEiI////////woLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIj/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////wABAgQHAwYFAAAAAAAAAAIAAMADAADABAAAwAUAAMAGAADABwAAwAgAAMAJAADACgAAwAsAAMAMAADADQAAwA4AAMAPAADAEAAAwBEAAMASAADAEwAAwBQAAMAVAADAFgAAwBcAAMAYAADAGQAAwBoAAMAbAADAHAAAwB0AAMAeAADAHwAAwAAAALMBAADDAgAAwwMAAMMEAADDBQAAwwYAAMMHAADDCAAAwwkAAMMKAADDCwAAwwwAAMMNAADTDgAAww8AAMMAAAy7AQAMwwIADMMDAAzDBAAM2wAAAAAAAAAAAgAAAAMAAAAFAAAABwAAAAsAAAANAAAAEQAAABMAAAAXAAAAHQAAAB8AAAAlAAAAKQAAACsAAAAvAAAANQAAADsAAAA9AAAAQwAAAEcAAABJAAAATwAAAFMAAABZAAAAYQAAAGUAAABnAAAAawAAAG0AAABxAAAAfwAAAIMAAACJAAAAiwAAAJUAAACXAAAAnQAAAKMAAACnAAAArQAAALMAAAC1AAAAvwAAAMEAAADFAAAAxwAAANMAAAABAAAACwAAAA0AAAARAAAAEwAAABcAAAAdAAAAHwAAACUAAAApAAAAKwAAAC8AAAA1AAAAOwAAAD0AAABDAAAARwAAAEkAAABPAAAAUwAAAFkAAABhAAAAZQAAAGcAAABrAAAAbQAAAHEAAAB5AAAAfwAAAIMAAACJAAAAiwAAAI8AAACVAAAAlwAAAJ0AAACjAAAApwAAAKkAAACtAAAAswAAALUAAAC7AAAAvwAAAMEAAADFAAAAxwAAANEAAAAAAAAADMoAAPAAAADxAAAA8gAAAPMAAAD0AAAA9QAAAPYAAAD3AAAA+AAAAPkAAAD6AAAA+wAAAPwAAAD9AAAACAAAAAAAAABEygAA/gAAAP8AAAD4////+P///0TKAAAAAQAAAQEAAJzIAACwyAAABAAAAAAAAACMygAAAgEAAAMBAAD8/////P///4zKAAAEAQAABQEAAMzIAADgyAAAAAAAACDLAAAGAQAABwEAAAgBAAAJAQAACgEAAAsBAAAMAQAADQEAAA4BAAAPAQAAEAEAABEBAAASAQAAEwEAAAgAAAAAAAAAWMsAABQBAAAVAQAA+P////j///9YywAAFgEAABcBAAA8yQAAUMkAAAQAAAAAAAAAoMsAABgBAAAZAQAA/P////z///+gywAAGgEAABsBAABsyQAAgMkAAAAAAADMyQAAHAEAAB0BAABOU3QzX18yOWJhc2ljX2lvc0ljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRQAAALD3AACgyQAA3MsAAE5TdDNfXzIxNWJhc2ljX3N0cmVhbWJ1ZkljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRQAAAACI9wAA2MkAAE5TdDNfXzIxM2Jhc2ljX2lzdHJlYW1JY05TXzExY2hhcl90cmFpdHNJY0VFRUUAAAz4AAAUygAAAAAAAAEAAADMyQAAA/T//05TdDNfXzIxM2Jhc2ljX29zdHJlYW1JY05TXzExY2hhcl90cmFpdHNJY0VFRUUAAAz4AABcygAAAAAAAAEAAADMyQAAA/T//wAAAADgygAAHgEAAB8BAABOU3QzX18yOWJhc2ljX2lvc0l3TlNfMTFjaGFyX3RyYWl0c0l3RUVFRQAAALD3AAC0ygAA3MsAAE5TdDNfXzIxNWJhc2ljX3N0cmVhbWJ1Zkl3TlNfMTFjaGFyX3RyYWl0c0l3RUVFRQAAAACI9wAA7MoAAE5TdDNfXzIxM2Jhc2ljX2lzdHJlYW1Jd05TXzExY2hhcl90cmFpdHNJd0VFRUUAAAz4AAAoywAAAAAAAAEAAADgygAAA/T//05TdDNfXzIxM2Jhc2ljX29zdHJlYW1Jd05TXzExY2hhcl90cmFpdHNJd0VFRUUAAAz4AABwywAAAAAAAAEAAADgygAAA/T//wAAAADcywAAIAEAACEBAABOU3QzX18yOGlvc19iYXNlRQAAAIj3AADIywAAuPoAAAAAAABAzAAA8AAAACQBAAAlAQAA8wAAAPQAAAD1AAAA9gAAAPcAAAD4AAAAJgEAACcBAAAoAQAA/AAAAP0AAABOU3QzX18yMTBfX3N0ZGluYnVmSWNFRQCw9wAAKMwAAAzKAAAAAAAAqMwAAPAAAAApAQAAKgEAAPMAAAD0AAAA9QAAACsBAAD3AAAA+AAAAPkAAAD6AAAA+wAAACwBAAAtAQAATlN0M19fMjExX19zdGRvdXRidWZJY0VFAAAAALD3AACMzAAADMoAAAAAAAAMzQAABgEAAC4BAAAvAQAACQEAAAoBAAALAQAADAEAAA0BAAAOAQAAMAEAADEBAAAyAQAAEgEAABMBAABOU3QzX18yMTBfX3N0ZGluYnVmSXdFRQCw9wAA9MwAACDLAAAAAAAAdM0AAAYBAAAzAQAANAEAAAkBAAAKAQAACwEAADUBAAANAQAADgEAAA8BAAAQAQAAEQEAADYBAAA3AQAATlN0M19fMjExX19zdGRvdXRidWZJd0VFAAAAALD3AABYzQAAIMsAAN4SBJUAAAAA////////////////gM0AABQAAABDLlVURi04AEHQmwMLApTNAEHwmwMLSkxDX0NUWVBFAAAAAExDX05VTUVSSUMAAExDX1RJTUUAAAAAAExDX0NPTExBVEUAAExDX01PTkVUQVJZAExDX01FU1NBR0VTAEDQAEHEoAML+QMBAAAAAgAAAAMAAAAEAAAABQAAAAYAAAAHAAAACAAAAAkAAAAKAAAACwAAAAwAAAANAAAADgAAAA8AAAAQAAAAEQAAABIAAAATAAAAFAAAABUAAAAWAAAAFwAAABgAAAAZAAAAGgAAABsAAAAcAAAAHQAAAB4AAAAfAAAAIAAAACEAAAAiAAAAIwAAACQAAAAlAAAAJgAAACcAAAAoAAAAKQAAACoAAAArAAAALAAAAC0AAAAuAAAALwAAADAAAAAxAAAAMgAAADMAAAA0AAAANQAAADYAAAA3AAAAOAAAADkAAAA6AAAAOwAAADwAAAA9AAAAPgAAAD8AAABAAAAAQQAAAEIAAABDAAAARAAAAEUAAABGAAAARwAAAEgAAABJAAAASgAAAEsAAABMAAAATQAAAE4AAABPAAAAUAAAAFEAAABSAAAAUwAAAFQAAABVAAAAVgAAAFcAAABYAAAAWQAAAFoAAABbAAAAXAAAAF0AAABeAAAAXwAAAGAAAABBAAAAQgAAAEMAAABEAAAARQAAAEYAAABHAAAASAAAAEkAAABKAAAASwAAAEwAAABNAAAATgAAAE8AAABQAAAAUQAAAFIAAABTAAAAVAAAAFUAAABWAAAAVwAAAFgAAABZAAAAWgAAAHsAAAB8AAAAfQAAAH4AAAB/AEHAqAMLAlDWAEHUrAML+QMBAAAAAgAAAAMAAAAEAAAABQAAAAYAAAAHAAAACAAAAAkAAAAKAAAACwAAAAwAAAANAAAADgAAAA8AAAAQAAAAEQAAABIAAAATAAAAFAAAABUAAAAWAAAAFwAAABgAAAAZAAAAGgAAABsAAAAcAAAAHQAAAB4AAAAfAAAAIAAAACEAAAAiAAAAIwAAACQAAAAlAAAAJgAAACcAAAAoAAAAKQAAACoAAAArAAAALAAAAC0AAAAuAAAALwAAADAAAAAxAAAAMgAAADMAAAA0AAAANQAAADYAAAA3AAAAOAAAADkAAAA6AAAAOwAAADwAAAA9AAAAPgAAAD8AAABAAAAAYQAAAGIAAABjAAAAZAAAAGUAAABmAAAAZwAAAGgAAABpAAAAagAAAGsAAABsAAAAbQAAAG4AAABvAAAAcAAAAHEAAAByAAAAcwAAAHQAAAB1AAAAdgAAAHcAAAB4AAAAeQAAAHoAAABbAAAAXAAAAF0AAABeAAAAXwAAAGAAAABhAAAAYgAAAGMAAABkAAAAZQAAAGYAAABnAAAAaAAAAGkAAABqAAAAawAAAGwAAABtAAAAbgAAAG8AAABwAAAAcQAAAHIAAABzAAAAdAAAAHUAAAB2AAAAdwAAAHgAAAB5AAAAegAAAHsAAAB8AAAAfQAAAH4AAAB/AEHQtAMLMTAxMjM0NTY3ODlhYmNkZWZBQkNERUZ4WCstcFBpSW5OACVJOiVNOiVTICVwJUg6JU0AQZC1AwuBASUAAABtAAAALwAAACUAAABkAAAALwAAACUAAAB5AAAAJQAAAFkAAAAtAAAAJQAAAG0AAAAtAAAAJQAAAGQAAAAlAAAASQAAADoAAAAlAAAATQAAADoAAAAlAAAAUwAAACAAAAAlAAAAcAAAAAAAAAAlAAAASAAAADoAAAAlAAAATQBBoLYDC2YlAAAASAAAADoAAAAlAAAATQAAADoAAAAlAAAAUwAAAAAAAACU5AAASgEAAEsBAABMAQAAAAAAAPTkAABNAQAATgEAAEwBAABPAQAAUAEAAFEBAABSAQAAUwEAAFQBAABVAQAAVgEAQZC3Awv9AwQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAUCAAAFAAAABQAAAAUAAAAFAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAAwIAAIIAAACCAAAAggAAAIIAAACCAAAAggAAAIIAAACCAAAAggAAAIIAAACCAAAAggAAAIIAAACCAAAAggAAAEIBAABCAQAAQgEAAEIBAABCAQAAQgEAAEIBAABCAQAAQgEAAEIBAACCAAAAggAAAIIAAACCAAAAggAAAIIAAACCAAAAKgEAACoBAAAqAQAAKgEAACoBAAAqAQAAKgAAACoAAAAqAAAAKgAAACoAAAAqAAAAKgAAACoAAAAqAAAAKgAAACoAAAAqAAAAKgAAACoAAAAqAAAAKgAAACoAAAAqAAAAKgAAACoAAACCAAAAggAAAIIAAACCAAAAggAAAIIAAAAyAQAAMgEAADIBAAAyAQAAMgEAADIBAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAAIIAAACCAAAAggAAAIIAAAAEAEGUvwML7QJc5AAAVwEAAFgBAABMAQAAWQEAAFoBAABbAQAAXAEAAF0BAABeAQAAXwEAAAAAAAAs5QAAYAEAAGEBAABMAQAAYgEAAGMBAABkAQAAZQEAAGYBAAAAAAAAUOUAAGcBAABoAQAATAEAAGkBAABqAQAAawEAAGwBAABtAQAAdAAAAHIAAAB1AAAAZQAAAAAAAABmAAAAYQAAAGwAAABzAAAAZQAAAAAAAAAlAAAAbQAAAC8AAAAlAAAAZAAAAC8AAAAlAAAAeQAAAAAAAAAlAAAASAAAADoAAAAlAAAATQAAADoAAAAlAAAAUwAAAAAAAAAlAAAAYQAAACAAAAAlAAAAYgAAACAAAAAlAAAAZAAAACAAAAAlAAAASAAAADoAAAAlAAAATQAAADoAAAAlAAAAUwAAACAAAAAlAAAAWQAAAAAAAAAlAAAASQAAADoAAAAlAAAATQAAADoAAAAlAAAAUwAAACAAAAAlAAAAcABBjMIDC/4KNOEAAG4BAABvAQAATAEAAE5TdDNfXzI2bG9jYWxlNWZhY2V0RQAAALD3AAAc4QAAYPUAAAAAAAC04QAAbgEAAHABAABMAQAAcQEAAHIBAABzAQAAdAEAAHUBAAB2AQAAdwEAAHgBAAB5AQAAegEAAHsBAAB8AQAATlN0M19fMjVjdHlwZUl3RUUATlN0M19fMjEwY3R5cGVfYmFzZUUAAIj3AACW4QAADPgAAIThAAAAAAAAAgAAADThAAACAAAArOEAAAIAAAAAAAAASOIAAG4BAAB9AQAATAEAAH4BAAB/AQAAgAEAAIEBAACCAQAAgwEAAIQBAABOU3QzX18yN2NvZGVjdnRJY2MxMV9fbWJzdGF0ZV90RUUATlN0M19fMjEyY29kZWN2dF9iYXNlRQAAAACI9wAAJuIAAAz4AAAE4gAAAAAAAAIAAAA04QAAAgAAAEDiAAACAAAAAAAAALziAABuAQAAhQEAAEwBAACGAQAAhwEAAIgBAACJAQAAigEAAIsBAACMAQAATlN0M19fMjdjb2RlY3Z0SURzYzExX19tYnN0YXRlX3RFRQAADPgAAJjiAAAAAAAAAgAAADThAAACAAAAQOIAAAIAAAAAAAAAMOMAAG4BAACNAQAATAEAAI4BAACPAQAAkAEAAJEBAACSAQAAkwEAAJQBAABOU3QzX18yN2NvZGVjdnRJRHNEdTExX19tYnN0YXRlX3RFRQAM+AAADOMAAAAAAAACAAAANOEAAAIAAABA4gAAAgAAAAAAAACk4wAAbgEAAJUBAABMAQAAlgEAAJcBAACYAQAAmQEAAJoBAACbAQAAnAEAAE5TdDNfXzI3Y29kZWN2dElEaWMxMV9fbWJzdGF0ZV90RUUAAAz4AACA4wAAAAAAAAIAAAA04QAAAgAAAEDiAAACAAAAAAAAABjkAABuAQAAnQEAAEwBAACeAQAAnwEAAKABAAChAQAAogEAAKMBAACkAQAATlN0M19fMjdjb2RlY3Z0SURpRHUxMV9fbWJzdGF0ZV90RUUADPgAAPTjAAAAAAAAAgAAADThAAACAAAAQOIAAAIAAABOU3QzX18yN2NvZGVjdnRJd2MxMV9fbWJzdGF0ZV90RUUAAAAM+AAAOOQAAAAAAAACAAAANOEAAAIAAABA4gAAAgAAAE5TdDNfXzI2bG9jYWxlNV9faW1wRQAAALD3AAB85AAANOEAAE5TdDNfXzI3Y29sbGF0ZUljRUUAsPcAAKDkAAA04QAATlN0M19fMjdjb2xsYXRlSXdFRQCw9wAAwOQAADThAABOU3QzX18yNWN0eXBlSWNFRQAAAAz4AADg5AAAAAAAAAIAAAA04QAAAgAAAKzhAAACAAAATlN0M19fMjhudW1wdW5jdEljRUUAAAAAsPcAABTlAAA04QAATlN0M19fMjhudW1wdW5jdEl3RUUAAAAAsPcAADjlAAA04QAAAAAAALTkAAClAQAApgEAAEwBAACnAQAAqAEAAKkBAAAAAAAA1OQAAKoBAACrAQAATAEAAKwBAACtAQAArgEAAAAAAABw5gAAbgEAAK8BAABMAQAAsAEAALEBAACyAQAAswEAALQBAAC1AQAAtgEAALcBAAC4AQAAuQEAALoBAABOU3QzX18yN251bV9nZXRJY05TXzE5aXN0cmVhbWJ1Zl9pdGVyYXRvckljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRUVFAE5TdDNfXzI5X19udW1fZ2V0SWNFRQBOU3QzX18yMTRfX251bV9nZXRfYmFzZUUAAIj3AAA25gAADPgAACDmAAAAAAAAAQAAAFDmAAAAAAAADPgAANzlAAAAAAAAAgAAADThAAACAAAAWOYAQZTNAwvKAUTnAABuAQAAuwEAAEwBAAC8AQAAvQEAAL4BAAC/AQAAwAEAAMEBAADCAQAAwwEAAMQBAADFAQAAxgEAAE5TdDNfXzI3bnVtX2dldEl3TlNfMTlpc3RyZWFtYnVmX2l0ZXJhdG9ySXdOU18xMWNoYXJfdHJhaXRzSXdFRUVFRUUATlN0M19fMjlfX251bV9nZXRJd0VFAAAADPgAABTnAAAAAAAAAQAAAFDmAAAAAAAADPgAANDmAAAAAAAAAgAAADThAAACAAAALOcAQejOAwveASzoAABuAQAAxwEAAEwBAADIAQAAyQEAAMoBAADLAQAAzAEAAM0BAADOAQAAzwEAAE5TdDNfXzI3bnVtX3B1dEljTlNfMTlvc3RyZWFtYnVmX2l0ZXJhdG9ySWNOU18xMWNoYXJfdHJhaXRzSWNFRUVFRUUATlN0M19fMjlfX251bV9wdXRJY0VFAE5TdDNfXzIxNF9fbnVtX3B1dF9iYXNlRQAAiPcAAPLnAAAM+AAA3OcAAAAAAAABAAAADOgAAAAAAAAM+AAAmOcAAAAAAAACAAAANOEAAAIAAAAU6ABB0NADC74B9OgAAG4BAADQAQAATAEAANEBAADSAQAA0wEAANQBAADVAQAA1gEAANcBAADYAQAATlN0M19fMjdudW1fcHV0SXdOU18xOW9zdHJlYW1idWZfaXRlcmF0b3JJd05TXzExY2hhcl90cmFpdHNJd0VFRUVFRQBOU3QzX18yOV9fbnVtX3B1dEl3RUUAAAAM+AAAxOgAAAAAAAABAAAADOgAAAAAAAAM+AAAgOgAAAAAAAACAAAANOEAAAIAAADc6ABBmNIDC5oL9OkAANkBAADaAQAATAEAANsBAADcAQAA3QEAAN4BAADfAQAA4AEAAOEBAAD4////9OkAAOIBAADjAQAA5AEAAOUBAADmAQAA5wEAAOgBAABOU3QzX18yOHRpbWVfZ2V0SWNOU18xOWlzdHJlYW1idWZfaXRlcmF0b3JJY05TXzExY2hhcl90cmFpdHNJY0VFRUVFRQBOU3QzX18yOXRpbWVfYmFzZUUAiPcAAK3pAABOU3QzX18yMjBfX3RpbWVfZ2V0X2Nfc3RvcmFnZUljRUUAAACI9wAAyOkAAAz4AABo6QAAAAAAAAMAAAA04QAAAgAAAMDpAAACAAAA7OkAAAAIAAAAAAAA4OoAAOkBAADqAQAATAEAAOsBAADsAQAA7QEAAO4BAADvAQAA8AEAAPEBAAD4////4OoAAPIBAADzAQAA9AEAAPUBAAD2AQAA9wEAAPgBAABOU3QzX18yOHRpbWVfZ2V0SXdOU18xOWlzdHJlYW1idWZfaXRlcmF0b3JJd05TXzExY2hhcl90cmFpdHNJd0VFRUVFRQBOU3QzX18yMjBfX3RpbWVfZ2V0X2Nfc3RvcmFnZUl3RUUAAIj3AAC16gAADPgAAHDqAAAAAAAAAwAAADThAAACAAAAwOkAAAIAAADY6gAAAAgAAAAAAACE6wAA+QEAAPoBAABMAQAA+wEAAE5TdDNfXzI4dGltZV9wdXRJY05TXzE5b3N0cmVhbWJ1Zl9pdGVyYXRvckljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRUVFAE5TdDNfXzIxMF9fdGltZV9wdXRFAAAAiPcAAGXrAAAM+AAAIOsAAAAAAAACAAAANOEAAAIAAAB86wAAAAgAAAAAAAAE7AAA/AEAAP0BAABMAQAA/gEAAE5TdDNfXzI4dGltZV9wdXRJd05TXzE5b3N0cmVhbWJ1Zl9pdGVyYXRvckl3TlNfMTFjaGFyX3RyYWl0c0l3RUVFRUVFAAAAAAz4AAC86wAAAAAAAAIAAAA04QAAAgAAAHzrAAAACAAAAAAAAJjsAABuAQAA/wEAAEwBAAAAAgAAAQIAAAICAAADAgAABAIAAAUCAAAGAgAABwIAAAgCAABOU3QzX18yMTBtb25leXB1bmN0SWNMYjBFRUUATlN0M19fMjEwbW9uZXlfYmFzZUUAAAAAiPcAAHjsAAAM+AAAXOwAAAAAAAACAAAANOEAAAIAAACQ7AAAAgAAAAAAAAAM7QAAbgEAAAkCAABMAQAACgIAAAsCAAAMAgAADQIAAA4CAAAPAgAAEAIAABECAAASAgAATlN0M19fMjEwbW9uZXlwdW5jdEljTGIxRUVFAAz4AADw7AAAAAAAAAIAAAA04QAAAgAAAJDsAAACAAAAAAAAAIDtAABuAQAAEwIAAEwBAAAUAgAAFQIAABYCAAAXAgAAGAIAABkCAAAaAgAAGwIAABwCAABOU3QzX18yMTBtb25leXB1bmN0SXdMYjBFRUUADPgAAGTtAAAAAAAAAgAAADThAAACAAAAkOwAAAIAAAAAAAAA9O0AAG4BAAAdAgAATAEAAB4CAAAfAgAAIAIAACECAAAiAgAAIwIAACQCAAAlAgAAJgIAAE5TdDNfXzIxMG1vbmV5cHVuY3RJd0xiMUVFRQAM+AAA2O0AAAAAAAACAAAANOEAAAIAAACQ7AAAAgAAAAAAAACY7gAAbgEAACcCAABMAQAAKAIAACkCAABOU3QzX18yOW1vbmV5X2dldEljTlNfMTlpc3RyZWFtYnVmX2l0ZXJhdG9ySWNOU18xMWNoYXJfdHJhaXRzSWNFRUVFRUUATlN0M19fMjExX19tb25leV9nZXRJY0VFAACI9wAAdu4AAAz4AAAw7gAAAAAAAAIAAAA04QAAAgAAAJDuAEG83QMLmgE87wAAbgEAACoCAABMAQAAKwIAACwCAABOU3QzX18yOW1vbmV5X2dldEl3TlNfMTlpc3RyZWFtYnVmX2l0ZXJhdG9ySXdOU18xMWNoYXJfdHJhaXRzSXdFRUVFRUUATlN0M19fMjExX19tb25leV9nZXRJd0VFAACI9wAAGu8AAAz4AADU7gAAAAAAAAIAAAA04QAAAgAAADTvAEHg3gMLmgHg7wAAbgEAAC0CAABMAQAALgIAAC8CAABOU3QzX18yOW1vbmV5X3B1dEljTlNfMTlvc3RyZWFtYnVmX2l0ZXJhdG9ySWNOU18xMWNoYXJfdHJhaXRzSWNFRUVFRUUATlN0M19fMjExX19tb25leV9wdXRJY0VFAACI9wAAvu8AAAz4AAB47wAAAAAAAAIAAAA04QAAAgAAANjvAEGE4AMLmgGE8AAAbgEAADACAABMAQAAMQIAADICAABOU3QzX18yOW1vbmV5X3B1dEl3TlNfMTlvc3RyZWFtYnVmX2l0ZXJhdG9ySXdOU18xMWNoYXJfdHJhaXRzSXdFRUVFRUUATlN0M19fMjExX19tb25leV9wdXRJd0VFAACI9wAAYvAAAAz4AAAc8AAAAAAAAAIAAAA04QAAAgAAAHzwAEGo4QMLuQj88AAAbgEAADMCAABMAQAANAIAADUCAAA2AgAATlN0M19fMjhtZXNzYWdlc0ljRUUATlN0M19fMjEzbWVzc2FnZXNfYmFzZUUAAAAAiPcAANnwAAAM+AAAxPAAAAAAAAACAAAANOEAAAIAAAD08AAAAgAAAAAAAABU8QAAbgEAADcCAABMAQAAOAIAADkCAAA6AgAATlN0M19fMjhtZXNzYWdlc0l3RUUAAAAADPgAADzxAAAAAAAAAgAAADThAAACAAAA9PAAAAIAAABTAAAAdQAAAG4AAABkAAAAYQAAAHkAAAAAAAAATQAAAG8AAABuAAAAZAAAAGEAAAB5AAAAAAAAAFQAAAB1AAAAZQAAAHMAAABkAAAAYQAAAHkAAAAAAAAAVwAAAGUAAABkAAAAbgAAAGUAAABzAAAAZAAAAGEAAAB5AAAAAAAAAFQAAABoAAAAdQAAAHIAAABzAAAAZAAAAGEAAAB5AAAAAAAAAEYAAAByAAAAaQAAAGQAAABhAAAAeQAAAAAAAABTAAAAYQAAAHQAAAB1AAAAcgAAAGQAAABhAAAAeQAAAAAAAABTAAAAdQAAAG4AAAAAAAAATQAAAG8AAABuAAAAAAAAAFQAAAB1AAAAZQAAAAAAAABXAAAAZQAAAGQAAAAAAAAAVAAAAGgAAAB1AAAAAAAAAEYAAAByAAAAaQAAAAAAAABTAAAAYQAAAHQAAAAAAAAASgAAAGEAAABuAAAAdQAAAGEAAAByAAAAeQAAAAAAAABGAAAAZQAAAGIAAAByAAAAdQAAAGEAAAByAAAAeQAAAAAAAABNAAAAYQAAAHIAAABjAAAAaAAAAAAAAABBAAAAcAAAAHIAAABpAAAAbAAAAAAAAABNAAAAYQAAAHkAAAAAAAAASgAAAHUAAABuAAAAZQAAAAAAAABKAAAAdQAAAGwAAAB5AAAAAAAAAEEAAAB1AAAAZwAAAHUAAABzAAAAdAAAAAAAAABTAAAAZQAAAHAAAAB0AAAAZQAAAG0AAABiAAAAZQAAAHIAAAAAAAAATwAAAGMAAAB0AAAAbwAAAGIAAABlAAAAcgAAAAAAAABOAAAAbwAAAHYAAABlAAAAbQAAAGIAAABlAAAAcgAAAAAAAABEAAAAZQAAAGMAAABlAAAAbQAAAGIAAABlAAAAcgAAAAAAAABKAAAAYQAAAG4AAAAAAAAARgAAAGUAAABiAAAAAAAAAE0AAABhAAAAcgAAAAAAAABBAAAAcAAAAHIAAAAAAAAASgAAAHUAAABuAAAAAAAAAEoAAAB1AAAAbAAAAAAAAABBAAAAdQAAAGcAAAAAAAAAUwAAAGUAAABwAAAAAAAAAE8AAABjAAAAdAAAAAAAAABOAAAAbwAAAHYAAAAAAAAARAAAAGUAAABjAAAAAAAAAEEAAABNAAAAAAAAAFAAAABNAEHs6QMLhgns6QAA4gEAAOMBAADkAQAA5QEAAOYBAADnAQAA6AEAAAAAAADY6gAA8gEAAPMBAAD0AQAA9QEAAPYBAAD3AQAA+AEAAAAAAABg9QAAFwAAADsCAAA8AgAATlN0M19fMjE0X19zaGFyZWRfY291bnRFAAAAAIj3AABE9QAAAAAAAKT1AAAXAAAAPQIAADwCAAA+AgAAPAIAAE5TdDNfXzIxOV9fc2hhcmVkX3dlYWtfY291bnRFAAAADPgAAIT1AAAAAAAAAQAAAGD1AAAAAAAATjEwX19jeHhhYml2MTE2X19zaGltX3R5cGVfaW5mb0UAAAAAsPcAALz1AABs+QAATjEwX19jeHhhYml2MTE3X19jbGFzc190eXBlX2luZm9FAAAAsPcAAOz1AADg9QAATjEwX19jeHhhYml2MTE3X19wYmFzZV90eXBlX2luZm9FAAAAsPcAABz2AADg9QAATjEwX19jeHhhYml2MTE5X19wb2ludGVyX3R5cGVfaW5mb0UAsPcAAEz2AABA9gAAAAAAAMD2AAA/AgAAQAIAAEECAABCAgAAQwIAAE4xMF9fY3h4YWJpdjEyM19fZnVuZGFtZW50YWxfdHlwZV9pbmZvRQCw9wAAmPYAAOD1AAB2AAAAhPYAAMz2AABiAAAAhPYAANj2AABjAAAAhPYAAOT2AABoAAAAhPYAAPD2AABhAAAAhPYAAPz2AABzAAAAhPYAAAj3AAB0AAAAhPYAABT3AABpAAAAhPYAACD3AABqAAAAhPYAACz3AABsAAAAhPYAADj3AABtAAAAhPYAAET3AAB4AAAAhPYAAFD3AAB5AAAAhPYAAFz3AABmAAAAhPYAAGj3AABkAAAAhPYAAHT3AAAAAAAAEPYAAD8CAABEAgAAQQIAAEICAABFAgAARgIAAEcCAABIAgAAAAAAAPj3AAA/AgAASQIAAEECAABCAgAARQIAAEoCAABLAgAATAIAAE4xMF9fY3h4YWJpdjEyMF9fc2lfY2xhc3NfdHlwZV9pbmZvRQAAAACw9wAA0PcAABD2AAAAAAAAVPgAAD8CAABNAgAAQQIAAEICAABFAgAATgIAAE8CAABQAgAATjEwX19jeHhhYml2MTIxX192bWlfY2xhc3NfdHlwZV9pbmZvRQAAALD3AAAs+AAAEPYAAAAAAADE+AAADQAAAFECAABSAgAAAAAAAOz4AAANAAAAUwIAAFQCAAAAAAAArPgAAA0AAABVAgAAVgIAAFN0OWV4Y2VwdGlvbgAAAACI9wAAnPgAAFN0OWJhZF9hbGxvYwAAAACw9wAAtPgAAKz4AABTdDIwYmFkX2FycmF5X25ld19sZW5ndGgAAAAAsPcAAND4AADE+AAAAAAAABz5AAAMAAAAVwIAAFgCAABTdDExbG9naWNfZXJyb3IAsPcAAAz5AACs+AAAAAAAAFD5AAAMAAAAWQIAAFgCAABTdDEybGVuZ3RoX2Vycm9yAAAAALD3AAA8+QAAHPkAAFN0OXR5cGVfaW5mbwAAAACI9wAAXPkAQfjyAwsRAQAAAP/////9/////v///wUAQZTzAwsB6QBBrPMDCwvnAAAA5gAAALAKAQBBxPMDCwECAEHU8wMLCP//////////AEGY9AMLCYj5AAAAAAAABQBBrPQDCwHqAEHE9AMLDucAAADrAAAAuAoBAAAEAEHc9AMLAQEAQez0AwsF/////woAQbD1AwsJIPoAACAhUQAJAEHE9QMLAekAQdj1AwsS6AAAAAAAAADmAAAAyBABAAAEAEGE9gMLBP////8=\")||(AA=$,$=A.locateFile?A.locateFile(AA,r):r+AA);var iA={64328:function(){var A=arguments,I=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkit.NFTMarkerInfo;g.id=A[I++],g.error=A[I++],g.found=1,g.pose[0]=A[I++],g.pose[1]=A[I++],g.pose[2]=A[I++],g.pose[3]=A[I++],g.pose[4]=A[I++],g.pose[5]=A[I++],g.pose[6]=A[I++],g.pose[7]=A[I++],g.pose[8]=A[I++],g.pose[9]=A[I++],g.pose[10]=A[I++],g.pose[11]=A[I++]},65025:function(){var A=arguments,I=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkit.NFTMarkerInfo;g.id=A[I++],g.error=-1,g.found=0,g.pose[0]=0,g.pose[1]=0,g.pose[2]=0,g.pose[3]=0,g.pose[4]=0,g.pose[5]=0,g.pose[6]=0,g.pose[7]=0,g.pose[8]=0,g.pose[9]=0,g.pose[10]=0,g.pose[11]=0},65645:function(A,I,g,B){artoolkit.multiEachMarkerInfo||(artoolkit.multiEachMarkerInfo={});var C=artoolkit.multiEachMarkerInfo;C.visible=A,C.pattId=I,C.pattType=g,C.width=B},65919:function(A,I,g,B,C,Q,E,i,o,D,a,w){var s=arguments,G=12;artoolkit.markerInfo||(artoolkit.markerInfo={pos:[0,0],line:[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],vertex:[[0,0],[0,0],[0,0],[0,0]]});var t=artoolkit.markerInfo;t.area=A,t.id=I,t.idPatt=g,t.idMatrix=B,t.dir=C,t.dirPatt=Q,t.dirMatrix=E,t.cf=i,t.cfPatt=o,t.cfMatrix=D,t.pos[0]=a,t.pos[1]=w,t.line[0][0]=s[G++],t.line[0][1]=s[G++],t.line[0][2]=s[G++],t.line[1][0]=s[G++],t.line[1][1]=s[G++],t.line[1][2]=s[G++],t.line[2][0]=s[G++],t.line[2][1]=s[G++],t.line[2][2]=s[G++],t.line[3][0]=s[G++],t.line[3][1]=s[G++],t.line[3][2]=s[G++],t.vertex[0][0]=s[G++],t.vertex[0][1]=s[G++],t.vertex[1][0]=s[G++],t.vertex[1][1]=s[G++],t.vertex[2][0]=s[G++],t.vertex[2][1]=s[G++],t.vertex[3][0]=s[G++],t.vertex[3][1]=s[G++],t.errorCorrected=s[G++]},67254:function(A,I,g,B,C,Q){artoolkit.frameMalloc||(artoolkit.frameMalloc={});var E=artoolkit.frameMalloc;E.framepointer=I,E.framesize=g,E.camera=B,E.transform=C,E.videoLumaPointer=Q}};function oA(A){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+A+\")\",this.status=A}function DA(I){for(;I.length>0;)I.shift()(A)}function aA(A){this.excPtr=A,this.ptr=A-24,this.set_type=function(A){q[this.ptr+4>>2]=A},this.get_type=function(){return q[this.ptr+4>>2]},this.set_destructor=function(A){q[this.ptr+8>>2]=A},this.get_destructor=function(){return q[this.ptr+8>>2]},this.set_refcount=function(A){d[this.ptr>>2]=A},this.set_caught=function(A){A=A?1:0,U[this.ptr+12>>0]=A},this.get_caught=function(){return 0!=U[this.ptr+12>>0]},this.set_rethrown=function(A){A=A?1:0,U[this.ptr+13>>0]=A},this.get_rethrown=function(){return 0!=U[this.ptr+13>>0]},this.init=function(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var A=d[this.ptr>>2];d[this.ptr>>2]=A+1},this.release_ref=function(){var A=d[this.ptr>>2];return d[this.ptr>>2]=A-1,1===A},this.set_adjusted_ptr=function(A){q[this.ptr+16>>2]=A},this.get_adjusted_ptr=function(){return q[this.ptr+16>>2]},this.get_exception_ptr=function(){if(rI(this.get_type()))return q[this.excPtr>>2];var A=this.get_adjusted_ptr();return 0!==A?A:this.excPtr}}var wA={isAbs:function(A){return\"/\"===A.charAt(0)},splitPath:function(A){return/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/.exec(A).slice(1)},normalizeArray:function(A,I){for(var g=0,B=A.length-1;B>=0;B--){var C=A[B];\".\"===C?A.splice(B,1):\"..\"===C?(A.splice(B,1),g++):g&&(A.splice(B,1),g--)}if(I)for(;g;g--)A.unshift(\"..\");return A},normalize:function(A){var I=wA.isAbs(A),g=\"/\"===A.substr(-1);return(A=wA.normalizeArray(A.split(\"/\").filter((function(A){return!!A})),!I).join(\"/\"))||I||(A=\".\"),A&&g&&(A+=\"/\"),(I?\"/\":\"\")+A},dirname:function(A){var I=wA.splitPath(A),g=I[0],B=I[1];return g||B?(B&&(B=B.substr(0,B.length-1)),g+B):\".\"},basename:function(A){if(\"/\"===A)return\"/\";var I=(A=(A=wA.normalize(A)).replace(/\\/$/,\"\")).lastIndexOf(\"/\");return-1===I?A:A.substr(I+1)},join:function(){var A=Array.prototype.slice.call(arguments);return wA.normalize(A.join(\"/\"))},join2:function(A,I){return wA.normalize(A+\"/\"+I)}},sA={resolve:function(){for(var A=\"\",I=!1,g=arguments.length-1;g>=-1&&!I;g--){var B=g>=0?arguments[g]:FA.cwd();if(\"string\"!=typeof B)throw new TypeError(\"Arguments to path.resolve must be strings\");if(!B)return\"\";A=B+\"/\"+A,I=wA.isAbs(B)}return(I?\"/\":\"\")+(A=wA.normalizeArray(A.split(\"/\").filter((function(A){return!!A})),!I).join(\"/\"))||\".\"},relative:function(A,I){function g(A){for(var I=0;I<A.length&&\"\"===A[I];I++);for(var g=A.length-1;g>=0&&\"\"===A[g];g--);return I>g?[]:A.slice(I,g-I+1)}A=sA.resolve(A).substr(1),I=sA.resolve(I).substr(1);for(var B=g(A.split(\"/\")),C=g(I.split(\"/\")),Q=Math.min(B.length,C.length),E=Q,i=0;i<Q;i++)if(B[i]!==C[i]){E=i;break}var o=[];for(i=E;i<B.length;i++)o.push(\"..\");return(o=o.concat(C.slice(E))).join(\"/\")}};function GA(A,I,g){var B=g>0?g:b(A)+1,C=new Array(B),Q=m(A,C,0,C.length);return I&&(C.length=Q),C}var tA={ttys:[],init:function(){},shutdown:function(){},register:function(A,I){tA.ttys[A]={input:[],output:[],ops:I},FA.registerDevice(A,tA.stream_ops)},stream_ops:{open:function(A){var I=tA.ttys[A.node.rdev];if(!I)throw new FA.ErrnoError(43);A.tty=I,A.seekable=!1},close:function(A){A.tty.ops.fsync(A.tty)},fsync:function(A){A.tty.ops.fsync(A.tty)},read:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.get_char)throw new FA.ErrnoError(60);for(var Q=0,E=0;E<B;E++){var i;try{i=A.tty.ops.get_char(A.tty)}catch(A){throw new FA.ErrnoError(29)}if(void 0===i&&0===Q)throw new FA.ErrnoError(6);if(null==i)break;Q++,I[g+E]=i}return Q&&(A.node.timestamp=Date.now()),Q},write:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.put_char)throw new FA.ErrnoError(60);try{for(var Q=0;Q<B;Q++)A.tty.ops.put_char(A.tty,I[g+Q])}catch(A){throw new FA.ErrnoError(29)}return B&&(A.node.timestamp=Date.now()),Q}},default_tty_ops:{get_char:function(A){if(!A.input.length){var I=null;if(y){var g=Buffer.alloc(256),B=0;try{B=i.readSync(process.stdin.fd,g,0,256,-1)}catch(A){if(!A.toString().includes(\"EOF\"))throw A;B=0}I=B>0?g.slice(0,B).toString(\"utf-8\"):null}else\"undefined\"!=typeof window&&\"function\"==typeof window.prompt?null!==(I=window.prompt(\"Input: \"))&&(I+=\"\\n\"):\"function\"==typeof readline&&null!==(I=readline())&&(I+=\"\\n\");if(!I)return null;A.input=GA(I,!0)}return A.input.shift()},put_char:function(A,I){null===I||10===I?(S(u(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(S(u(A.output,0)),A.output=[])}},default_tty1_ops:{put_char:function(A,I){null===I||10===I?(M(u(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(M(u(A.output,0)),A.output=[])}}};function hA(A){_()}var RA={ops_table:null,mount:function(A){return RA.createNode(null,\"/\",16895,0)},createNode:function(A,I,g,B){if(FA.isBlkdev(g)||FA.isFIFO(g))throw new FA.ErrnoError(63);RA.ops_table||(RA.ops_table={dir:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr,lookup:RA.node_ops.lookup,mknod:RA.node_ops.mknod,rename:RA.node_ops.rename,unlink:RA.node_ops.unlink,rmdir:RA.node_ops.rmdir,readdir:RA.node_ops.readdir,symlink:RA.node_ops.symlink},stream:{llseek:RA.stream_ops.llseek}},file:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr},stream:{llseek:RA.stream_ops.llseek,read:RA.stream_ops.read,write:RA.stream_ops.write,allocate:RA.stream_ops.allocate,mmap:RA.stream_ops.mmap,msync:RA.stream_ops.msync}},link:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr,readlink:RA.node_ops.readlink},stream:{}},chrdev:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr},stream:FA.chrdev_stream_ops}});var C=FA.createNode(A,I,g,B);return FA.isDir(C.mode)?(C.node_ops=RA.ops_table.dir.node,C.stream_ops=RA.ops_table.dir.stream,C.contents={}):FA.isFile(C.mode)?(C.node_ops=RA.ops_table.file.node,C.stream_ops=RA.ops_table.file.stream,C.usedBytes=0,C.contents=null):FA.isLink(C.mode)?(C.node_ops=RA.ops_table.link.node,C.stream_ops=RA.ops_table.link.stream):FA.isChrdev(C.mode)&&(C.node_ops=RA.ops_table.chrdev.node,C.stream_ops=RA.ops_table.chrdev.stream),C.timestamp=Date.now(),A&&(A.contents[I]=C,A.timestamp=C.timestamp),C},getFileDataAsTypedArray:function(A){return A.contents?A.contents.subarray?A.contents.subarray(0,A.usedBytes):new Uint8Array(A.contents):new Uint8Array(0)},expandFileStorage:function(A,I){var g=A.contents?A.contents.length:0;if(!(g>=I)){I=Math.max(I,g*(g<1048576?2:1.125)>>>0),0!=g&&(I=Math.max(I,256));var B=A.contents;A.contents=new Uint8Array(I),A.usedBytes>0&&A.contents.set(B.subarray(0,A.usedBytes),0)}},resizeFileStorage:function(A,I){if(A.usedBytes!=I)if(0==I)A.contents=null,A.usedBytes=0;else{var g=A.contents;A.contents=new Uint8Array(I),g&&A.contents.set(g.subarray(0,Math.min(I,A.usedBytes))),A.usedBytes=I}},node_ops:{getattr:function(A){var I={};return I.dev=FA.isChrdev(A.mode)?A.id:1,I.ino=A.id,I.mode=A.mode,I.nlink=1,I.uid=0,I.gid=0,I.rdev=A.rdev,FA.isDir(A.mode)?I.size=4096:FA.isFile(A.mode)?I.size=A.usedBytes:FA.isLink(A.mode)?I.size=A.link.length:I.size=0,I.atime=new Date(A.timestamp),I.mtime=new Date(A.timestamp),I.ctime=new Date(A.timestamp),I.blksize=4096,I.blocks=Math.ceil(I.size/I.blksize),I},setattr:function(A,I){void 0!==I.mode&&(A.mode=I.mode),void 0!==I.timestamp&&(A.timestamp=I.timestamp),void 0!==I.size&&RA.resizeFileStorage(A,I.size)},lookup:function(A,I){throw FA.genericErrors[44]},mknod:function(A,I,g,B){return RA.createNode(A,I,g,B)},rename:function(A,I,g){if(FA.isDir(A.mode)){var B;try{B=FA.lookupNode(I,g)}catch(A){}if(B)for(var C in B.contents)throw new FA.ErrnoError(55)}delete A.parent.contents[A.name],A.parent.timestamp=Date.now(),A.name=g,I.contents[g]=A,I.timestamp=A.parent.timestamp,A.parent=I},unlink:function(A,I){delete A.contents[I],A.timestamp=Date.now()},rmdir:function(A,I){var g=FA.lookupNode(A,I);for(var B in g.contents)throw new FA.ErrnoError(55);delete A.contents[I],A.timestamp=Date.now()},readdir:function(A){var I=[\".\",\"..\"];for(var g in A.contents)A.contents.hasOwnProperty(g)&&I.push(g);return I},symlink:function(A,I,g){var B=RA.createNode(A,I,41471,0);return B.link=g,B},readlink:function(A){if(!FA.isLink(A.mode))throw new FA.ErrnoError(28);return A.link}},stream_ops:{read:function(A,I,g,B,C){var Q=A.node.contents;if(C>=A.node.usedBytes)return 0;var E=Math.min(A.node.usedBytes-C,B);if(E>8&&Q.subarray)I.set(Q.subarray(C,C+E),g);else for(var i=0;i<E;i++)I[g+i]=Q[C+i];return E},write:function(A,I,g,B,C,Q){if(I.buffer===U.buffer&&(Q=!1),!B)return 0;var E=A.node;if(E.timestamp=Date.now(),I.subarray&&(!E.contents||E.contents.subarray)){if(Q)return E.contents=I.subarray(g,g+B),E.usedBytes=B,B;if(0===E.usedBytes&&0===C)return E.contents=I.slice(g,g+B),E.usedBytes=B,B;if(C+B<=E.usedBytes)return E.contents.set(I.subarray(g,g+B),C),B}if(RA.expandFileStorage(E,C+B),E.contents.subarray&&I.subarray)E.contents.set(I.subarray(g,g+B),C);else for(var i=0;i<B;i++)E.contents[C+i]=I[g+i];return E.usedBytes=Math.max(E.usedBytes,C+B),B},llseek:function(A,I,g){var B=I;if(1===g?B+=A.position:2===g&&FA.isFile(A.node.mode)&&(B+=A.node.usedBytes),B<0)throw new FA.ErrnoError(28);return B},allocate:function(A,I,g){RA.expandFileStorage(A.node,I+g),A.node.usedBytes=Math.max(A.node.usedBytes,I+g)},mmap:function(A,I,g,B,C){if(!FA.isFile(A.node.mode))throw new FA.ErrnoError(43);var Q,E,i=A.node.contents;if(2&C||i.buffer!==J){if((g>0||g+I<i.length)&&(i=i.subarray?i.subarray(g,g+I):Array.prototype.slice.call(i,g,g+I)),E=!0,!(Q=hA()))throw new FA.ErrnoError(48);U.set(i,Q)}else E=!1,Q=i.byteOffset;return{ptr:Q,allocated:E}},msync:function(A,I,g,B,C){if(!FA.isFile(A.node.mode))throw new FA.ErrnoError(43);return 2&C||RA.stream_ops.write(A,I,0,B,g,!1),0}}},FA={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(A){var I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(A=sA.resolve(FA.cwd(),A)))return{path:\"\",node:null};var g={follow_mount:!0,recurse_count:0};if((I=Object.assign(g,I)).recurse_count>8)throw new FA.ErrnoError(32);for(var B=wA.normalizeArray(A.split(\"/\").filter((function(A){return!!A})),!1),C=FA.root,Q=\"/\",E=0;E<B.length;E++){var i=E===B.length-1;if(i&&I.parent)break;if(C=FA.lookupNode(C,B[E]),Q=wA.join2(Q,B[E]),FA.isMountpoint(C)&&(!i||i&&I.follow_mount)&&(C=C.mounted.root),!i||I.follow)for(var o=0;FA.isLink(C.mode);){var D=FA.readlink(Q);Q=sA.resolve(wA.dirname(Q),D);var a=FA.lookupPath(Q,{recurse_count:I.recurse_count+1});if(C=a.node,o++>40)throw new FA.ErrnoError(32)}}return{path:Q,node:C}},getPath:function(A){for(var I;;){if(FA.isRoot(A)){var g=A.mount.mountpoint;return I?\"/\"!==g[g.length-1]?g+\"/\"+I:g+I:g}I=I?A.name+\"/\"+I:A.name,A=A.parent}},hashName:function(A,I){for(var g=0,B=0;B<I.length;B++)g=(g<<5)-g+I.charCodeAt(B)|0;return(A+g>>>0)%FA.nameTable.length},hashAddNode:function(A){var I=FA.hashName(A.parent.id,A.name);A.name_next=FA.nameTable[I],FA.nameTable[I]=A},hashRemoveNode:function(A){var I=FA.hashName(A.parent.id,A.name);if(FA.nameTable[I]===A)FA.nameTable[I]=A.name_next;else for(var g=FA.nameTable[I];g;){if(g.name_next===A){g.name_next=A.name_next;break}g=g.name_next}},lookupNode:function(A,I){var g=FA.mayLookup(A);if(g)throw new FA.ErrnoError(g,A);for(var B=FA.hashName(A.id,I),C=FA.nameTable[B];C;C=C.name_next){var Q=C.name;if(C.parent.id===A.id&&Q===I)return C}return FA.lookup(A,I)},createNode:function(A,I,g,B){var C=new FA.FSNode(A,I,g,B);return FA.hashAddNode(C),C},destroyNode:function(A){FA.hashRemoveNode(A)},isRoot:function(A){return A===A.parent},isMountpoint:function(A){return!!A.mounted},isFile:function(A){return 32768==(61440&A)},isDir:function(A){return 16384==(61440&A)},isLink:function(A){return 40960==(61440&A)},isChrdev:function(A){return 8192==(61440&A)},isBlkdev:function(A){return 24576==(61440&A)},isFIFO:function(A){return 4096==(61440&A)},isSocket:function(A){return 49152==(49152&A)},flagModes:{r:0,\"r+\":2,w:577,\"w+\":578,a:1089,\"a+\":1090},modeStringToFlags:function(A){var I=FA.flagModes[A];if(void 0===I)throw new Error(\"Unknown file open mode: \"+A);return I},flagsToPermissionString:function(A){var I=[\"r\",\"w\",\"rw\"][3&A];return 512&A&&(I+=\"w\"),I},nodePermissions:function(A,I){return FA.ignorePermissions||(!I.includes(\"r\")||292&A.mode)&&(!I.includes(\"w\")||146&A.mode)&&(!I.includes(\"x\")||73&A.mode)?0:2},mayLookup:function(A){return FA.nodePermissions(A,\"x\")||(A.node_ops.lookup?0:2)},mayCreate:function(A,I){try{return FA.lookupNode(A,I),20}catch(A){}return FA.nodePermissions(A,\"wx\")},mayDelete:function(A,I,g){var B;try{B=FA.lookupNode(A,I)}catch(A){return A.errno}var C=FA.nodePermissions(A,\"wx\");if(C)return C;if(g){if(!FA.isDir(B.mode))return 54;if(FA.isRoot(B)||FA.getPath(B)===FA.cwd())return 10}else if(FA.isDir(B.mode))return 31;return 0},mayOpen:function(A,I){return A?FA.isLink(A.mode)?32:FA.isDir(A.mode)&&(\"r\"!==FA.flagsToPermissionString(I)||512&I)?31:FA.nodePermissions(A,FA.flagsToPermissionString(I)):44},MAX_OPEN_FDS:4096,nextfd:function(){for(var A=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:FA.MAX_OPEN_FDS,g=A;g<=I;g++)if(!FA.streams[g])return g;throw new FA.ErrnoError(33)},getStream:function(A){return FA.streams[A]},createStream:function(A,I,g){FA.FSStream||(FA.FSStream=function(){this.shared={}},FA.FSStream.prototype={},Object.defineProperties(FA.FSStream.prototype,{object:{get:function(){return this.node},set:function(A){this.node=A}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(A){this.shared.flags=A}},position:{get:function(){return this.shared.position},set:function(A){this.shared.position=A}}})),A=Object.assign(new FA.FSStream,A);var B=FA.nextfd(I,g);return A.fd=B,FA.streams[B]=A,A},closeStream:function(A){FA.streams[A]=null},chrdev_stream_ops:{open:function(A){var I=FA.getDevice(A.node.rdev);A.stream_ops=I.stream_ops,A.stream_ops.open&&A.stream_ops.open(A)},llseek:function(){throw new FA.ErrnoError(70)}},major:function(A){return A>>8},minor:function(A){return 255&A},makedev:function(A,I){return A<<8|I},registerDevice:function(A,I){FA.devices[A]={stream_ops:I}},getDevice:function(A){return FA.devices[A]},getMounts:function(A){for(var I=[],g=[A];g.length;){var B=g.pop();I.push(B),g.push.apply(g,B.mounts)}return I},syncfs:function(A,I){\"function\"==typeof A&&(I=A,A=!1),FA.syncFSRequests++,FA.syncFSRequests>1&&M(\"warning: \"+FA.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\");var g=FA.getMounts(FA.root.mount),B=0;function C(A){return FA.syncFSRequests--,I(A)}function Q(A){if(A)return Q.errored?void 0:(Q.errored=!0,C(A));++B>=g.length&&C(null)}g.forEach((function(I){if(!I.type.syncfs)return Q(null);I.type.syncfs(I,A,Q)}))},mount:function(A,I,g){var B,C=\"/\"===g,Q=!g;if(C&&FA.root)throw new FA.ErrnoError(10);if(!C&&!Q){var E=FA.lookupPath(g,{follow_mount:!1});if(g=E.path,B=E.node,FA.isMountpoint(B))throw new FA.ErrnoError(10);if(!FA.isDir(B.mode))throw new FA.ErrnoError(54)}var i={type:A,opts:I,mountpoint:g,mounts:[]},o=A.mount(i);return o.mount=i,i.root=o,C?FA.root=o:B&&(B.mounted=i,B.mount&&B.mount.mounts.push(i)),o},unmount:function(A){var I=FA.lookupPath(A,{follow_mount:!1});if(!FA.isMountpoint(I.node))throw new FA.ErrnoError(28);var g=I.node,B=g.mounted,C=FA.getMounts(B);Object.keys(FA.nameTable).forEach((function(A){for(var I=FA.nameTable[A];I;){var g=I.name_next;C.includes(I.mount)&&FA.destroyNode(I),I=g}})),g.mounted=null;var Q=g.mount.mounts.indexOf(B);g.mount.mounts.splice(Q,1)},lookup:function(A,I){return A.node_ops.lookup(A,I)},mknod:function(A,I,g){var B=FA.lookupPath(A,{parent:!0}).node,C=wA.basename(A);if(!C||\".\"===C||\"..\"===C)throw new FA.ErrnoError(28);var Q=FA.mayCreate(B,C);if(Q)throw new FA.ErrnoError(Q);if(!B.node_ops.mknod)throw new FA.ErrnoError(63);return B.node_ops.mknod(B,C,I,g)},create:function(A,I){return I=void 0!==I?I:438,I&=4095,I|=32768,FA.mknod(A,I,0)},mkdir:function(A,I){return I=void 0!==I?I:511,I&=1023,I|=16384,FA.mknod(A,I,0)},mkdirTree:function(A,I){for(var g=A.split(\"/\"),B=\"\",C=0;C<g.length;++C)if(g[C]){B+=\"/\"+g[C];try{FA.mkdir(B,I)}catch(A){if(20!=A.errno)throw A}}},mkdev:function(A,I,g){return void 0===g&&(g=I,I=438),I|=8192,FA.mknod(A,I,g)},symlink:function(A,I){if(!sA.resolve(A))throw new FA.ErrnoError(44);var g=FA.lookupPath(I,{parent:!0}).node;if(!g)throw new FA.ErrnoError(44);var B=wA.basename(I),C=FA.mayCreate(g,B);if(C)throw new FA.ErrnoError(C);if(!g.node_ops.symlink)throw new FA.ErrnoError(63);return g.node_ops.symlink(g,B,A)},rename:function(A,I){var g,B,C=wA.dirname(A),Q=wA.dirname(I),E=wA.basename(A),i=wA.basename(I);if(g=FA.lookupPath(A,{parent:!0}).node,B=FA.lookupPath(I,{parent:!0}).node,!g||!B)throw new FA.ErrnoError(44);if(g.mount!==B.mount)throw new FA.ErrnoError(75);var o,D=FA.lookupNode(g,E),a=sA.relative(A,Q);if(\".\"!==a.charAt(0))throw new FA.ErrnoError(28);if(\".\"!==(a=sA.relative(I,C)).charAt(0))throw new FA.ErrnoError(55);try{o=FA.lookupNode(B,i)}catch(A){}if(D!==o){var w=FA.isDir(D.mode),s=FA.mayDelete(g,E,w);if(s)throw new FA.ErrnoError(s);if(s=o?FA.mayDelete(B,i,w):FA.mayCreate(B,i))throw new FA.ErrnoError(s);if(!g.node_ops.rename)throw new FA.ErrnoError(63);if(FA.isMountpoint(D)||o&&FA.isMountpoint(o))throw new FA.ErrnoError(10);if(B!==g&&(s=FA.nodePermissions(g,\"w\")))throw new FA.ErrnoError(s);FA.hashRemoveNode(D);try{g.node_ops.rename(D,B,i)}catch(A){throw A}finally{FA.hashAddNode(D)}}},rmdir:function(A){var I=FA.lookupPath(A,{parent:!0}).node,g=wA.basename(A),B=FA.lookupNode(I,g),C=FA.mayDelete(I,g,!0);if(C)throw new FA.ErrnoError(C);if(!I.node_ops.rmdir)throw new FA.ErrnoError(63);if(FA.isMountpoint(B))throw new FA.ErrnoError(10);I.node_ops.rmdir(I,g),FA.destroyNode(B)},readdir:function(A){var I=FA.lookupPath(A,{follow:!0}).node;if(!I.node_ops.readdir)throw new FA.ErrnoError(54);return I.node_ops.readdir(I)},unlink:function(A){var I=FA.lookupPath(A,{parent:!0}).node;if(!I)throw new FA.ErrnoError(44);var g=wA.basename(A),B=FA.lookupNode(I,g),C=FA.mayDelete(I,g,!1);if(C)throw new FA.ErrnoError(C);if(!I.node_ops.unlink)throw new FA.ErrnoError(63);if(FA.isMountpoint(B))throw new FA.ErrnoError(10);I.node_ops.unlink(I,g),FA.destroyNode(B)},readlink:function(A){var I=FA.lookupPath(A).node;if(!I)throw new FA.ErrnoError(44);if(!I.node_ops.readlink)throw new FA.ErrnoError(28);return sA.resolve(FA.getPath(I.parent),I.node_ops.readlink(I))},stat:function(A,I){var g=FA.lookupPath(A,{follow:!I}).node;if(!g)throw new FA.ErrnoError(44);if(!g.node_ops.getattr)throw new FA.ErrnoError(63);return g.node_ops.getattr(g)},lstat:function(A){return FA.stat(A,!0)},chmod:function(A,I,g){var B;if(!(B=\"string\"==typeof A?FA.lookupPath(A,{follow:!g}).node:A).node_ops.setattr)throw new FA.ErrnoError(63);B.node_ops.setattr(B,{mode:4095&I|-4096&B.mode,timestamp:Date.now()})},lchmod:function(A,I){FA.chmod(A,I,!0)},fchmod:function(A,I){var g=FA.getStream(A);if(!g)throw new FA.ErrnoError(8);FA.chmod(g.node,I)},chown:function(A,I,g,B){var C;if(!(C=\"string\"==typeof A?FA.lookupPath(A,{follow:!B}).node:A).node_ops.setattr)throw new FA.ErrnoError(63);C.node_ops.setattr(C,{timestamp:Date.now()})},lchown:function(A,I,g){FA.chown(A,I,g,!0)},fchown:function(A,I,g){var B=FA.getStream(A);if(!B)throw new FA.ErrnoError(8);FA.chown(B.node,I,g)},truncate:function(A,I){if(I<0)throw new FA.ErrnoError(28);var g;if(!(g=\"string\"==typeof A?FA.lookupPath(A,{follow:!0}).node:A).node_ops.setattr)throw new FA.ErrnoError(63);if(FA.isDir(g.mode))throw new FA.ErrnoError(31);if(!FA.isFile(g.mode))throw new FA.ErrnoError(28);var B=FA.nodePermissions(g,\"w\");if(B)throw new FA.ErrnoError(B);g.node_ops.setattr(g,{size:I,timestamp:Date.now()})},ftruncate:function(A,I){var g=FA.getStream(A);if(!g)throw new FA.ErrnoError(8);if(0==(2097155&g.flags))throw new FA.ErrnoError(28);FA.truncate(g.node,I)},utime:function(A,I,g){var B=FA.lookupPath(A,{follow:!0}).node;B.node_ops.setattr(B,{timestamp:Math.max(I,g)})},open:function(I,g,B){if(\"\"===I)throw new FA.ErrnoError(44);var C;if(B=void 0===B?438:B,B=64&(g=\"string\"==typeof g?FA.modeStringToFlags(g):g)?4095&B|32768:0,\"object\"==D(I))C=I;else{I=wA.normalize(I);try{C=FA.lookupPath(I,{follow:!(131072&g)}).node}catch(A){}}var Q=!1;if(64&g)if(C){if(128&g)throw new FA.ErrnoError(20)}else C=FA.mknod(I,B,0),Q=!0;if(!C)throw new FA.ErrnoError(44);if(FA.isChrdev(C.mode)&&(g&=-513),65536&g&&!FA.isDir(C.mode))throw new FA.ErrnoError(54);if(!Q){var E=FA.mayOpen(C,g);if(E)throw new FA.ErrnoError(E)}512&g&&!Q&&FA.truncate(C,0),g&=-131713;var i=FA.createStream({node:C,path:FA.getPath(C),flags:g,seekable:!0,position:0,stream_ops:C.stream_ops,ungotten:[],error:!1});return i.stream_ops.open&&i.stream_ops.open(i),!A.logReadFiles||1&g||(FA.readFiles||(FA.readFiles={}),I in FA.readFiles||(FA.readFiles[I]=1)),i},close:function(A){if(FA.isClosed(A))throw new FA.ErrnoError(8);A.getdents&&(A.getdents=null);try{A.stream_ops.close&&A.stream_ops.close(A)}catch(A){throw A}finally{FA.closeStream(A.fd)}A.fd=null},isClosed:function(A){return null===A.fd},llseek:function(A,I,g){if(FA.isClosed(A))throw new FA.ErrnoError(8);if(!A.seekable||!A.stream_ops.llseek)throw new FA.ErrnoError(70);if(0!=g&&1!=g&&2!=g)throw new FA.ErrnoError(28);return A.position=A.stream_ops.llseek(A,I,g),A.ungotten=[],A.position},read:function(A,I,g,B,C){if(B<0||C<0)throw new FA.ErrnoError(28);if(FA.isClosed(A))throw new FA.ErrnoError(8);if(1==(2097155&A.flags))throw new FA.ErrnoError(8);if(FA.isDir(A.node.mode))throw new FA.ErrnoError(31);if(!A.stream_ops.read)throw new FA.ErrnoError(28);var Q=void 0!==C;if(Q){if(!A.seekable)throw new FA.ErrnoError(70)}else C=A.position;var E=A.stream_ops.read(A,I,g,B,C);return Q||(A.position+=E),E},write:function(A,I,g,B,C,Q){if(B<0||C<0)throw new FA.ErrnoError(28);if(FA.isClosed(A))throw new FA.ErrnoError(8);if(0==(2097155&A.flags))throw new FA.ErrnoError(8);if(FA.isDir(A.node.mode))throw new FA.ErrnoError(31);if(!A.stream_ops.write)throw new FA.ErrnoError(28);A.seekable&&1024&A.flags&&FA.llseek(A,0,2);var E=void 0!==C;if(E){if(!A.seekable)throw new FA.ErrnoError(70)}else C=A.position;var i=A.stream_ops.write(A,I,g,B,C,Q);return E||(A.position+=i),i},allocate:function(A,I,g){if(FA.isClosed(A))throw new FA.ErrnoError(8);if(I<0||g<=0)throw new FA.ErrnoError(28);if(0==(2097155&A.flags))throw new FA.ErrnoError(8);if(!FA.isFile(A.node.mode)&&!FA.isDir(A.node.mode))throw new FA.ErrnoError(43);if(!A.stream_ops.allocate)throw new FA.ErrnoError(138);A.stream_ops.allocate(A,I,g)},mmap:function(A,I,g,B,C){if(0!=(2&B)&&0==(2&C)&&2!=(2097155&A.flags))throw new FA.ErrnoError(2);if(1==(2097155&A.flags))throw new FA.ErrnoError(2);if(!A.stream_ops.mmap)throw new FA.ErrnoError(43);return A.stream_ops.mmap(A,I,g,B,C)},msync:function(A,I,g,B,C){return A&&A.stream_ops.msync?A.stream_ops.msync(A,I,g,B,C):0},munmap:function(A){return 0},ioctl:function(A,I,g){if(!A.stream_ops.ioctl)throw new FA.ErrnoError(59);return A.stream_ops.ioctl(A,I,g)},readFile:function(A){var I,g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(g.flags=g.flags||0,g.encoding=g.encoding||\"binary\",\"utf8\"!==g.encoding&&\"binary\"!==g.encoding)throw new Error('Invalid encoding type \"'+g.encoding+'\"');var B=FA.open(A,g.flags),C=FA.stat(A),Q=C.size,E=new Uint8Array(Q);return FA.read(B,E,0,Q,0),\"utf8\"===g.encoding?I=u(E,0):\"binary\"===g.encoding&&(I=E),FA.close(B),I},writeFile:function(A,I){var g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};g.flags=g.flags||577;var B=FA.open(A,g.flags,g.mode);if(\"string\"==typeof I){var C=new Uint8Array(b(I)+1),Q=m(I,C,0,C.length);FA.write(B,C,0,Q,void 0,g.canOwn)}else{if(!ArrayBuffer.isView(I))throw new Error(\"Unsupported data type\");FA.write(B,I,0,I.byteLength,void 0,g.canOwn)}FA.close(B)},cwd:function(){return FA.currentPath},chdir:function(A){var I=FA.lookupPath(A,{follow:!0});if(null===I.node)throw new FA.ErrnoError(44);if(!FA.isDir(I.node.mode))throw new FA.ErrnoError(54);var g=FA.nodePermissions(I.node,\"x\");if(g)throw new FA.ErrnoError(g);FA.currentPath=I.path},createDefaultDirectories:function(){FA.mkdir(\"/tmp\"),FA.mkdir(\"/home\"),FA.mkdir(\"/home/web_user\")},createDefaultDevices:function(){FA.mkdir(\"/dev\"),FA.registerDevice(FA.makedev(1,3),{read:function(){return 0},write:function(A,I,g,B,C){return B}}),FA.mkdev(\"/dev/null\",FA.makedev(1,3)),tA.register(FA.makedev(5,0),tA.default_tty_ops),tA.register(FA.makedev(6,0),tA.default_tty1_ops),FA.mkdev(\"/dev/tty\",FA.makedev(5,0)),FA.mkdev(\"/dev/tty1\",FA.makedev(6,0));var A=function(){if(\"object\"==(\"undefined\"==typeof crypto?\"undefined\":D(crypto))&&\"function\"==typeof crypto.getRandomValues){var A=new Uint8Array(1);return function(){return crypto.getRandomValues(A),A[0]}}if(y)try{var I=g(654);return function(){return I.randomBytes(1)[0]}}catch(A){}return function(){return _(\"randomDevice\")}}();FA.createDevice(\"/dev\",\"random\",A),FA.createDevice(\"/dev\",\"urandom\",A),FA.mkdir(\"/dev/shm\"),FA.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:function(){FA.mkdir(\"/proc\");var A=FA.mkdir(\"/proc/self\");FA.mkdir(\"/proc/self/fd\"),FA.mount({mount:function(){var I=FA.createNode(A,\"fd\",16895,73);return I.node_ops={lookup:function(A,I){var g=+I,B=FA.getStream(g);if(!B)throw new FA.ErrnoError(8);var C={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:function(){return B.path}}};return C.parent=C,C}},I}},{},\"/proc/self/fd\")},createStandardStreams:function(){A.stdin?FA.createDevice(\"/dev\",\"stdin\",A.stdin):FA.symlink(\"/dev/tty\",\"/dev/stdin\"),A.stdout?FA.createDevice(\"/dev\",\"stdout\",null,A.stdout):FA.symlink(\"/dev/tty\",\"/dev/stdout\"),A.stderr?FA.createDevice(\"/dev\",\"stderr\",null,A.stderr):FA.symlink(\"/dev/tty1\",\"/dev/stderr\"),FA.open(\"/dev/stdin\",0),FA.open(\"/dev/stdout\",1),FA.open(\"/dev/stderr\",1)},ensureErrnoError:function(){FA.ErrnoError||(FA.ErrnoError=function(A,I){this.node=I,this.setErrno=function(A){this.errno=A},this.setErrno(A),this.message=\"FS error\"},FA.ErrnoError.prototype=new Error,FA.ErrnoError.prototype.constructor=FA.ErrnoError,[44].forEach((function(A){FA.genericErrors[A]=new FA.ErrnoError(A),FA.genericErrors[A].stack=\"<generic error, no stack>\"})))},staticInit:function(){FA.ensureErrnoError(),FA.nameTable=new Array(4096),FA.mount(RA,{},\"/\"),FA.createDefaultDirectories(),FA.createDefaultDevices(),FA.createSpecialDirectories(),FA.filesystems={MEMFS:RA}},init:function(I,g,B){FA.init.initialized=!0,FA.ensureErrnoError(),A.stdin=I||A.stdin,A.stdout=g||A.stdout,A.stderr=B||A.stderr,FA.createStandardStreams()},quit:function(){FA.init.initialized=!1;for(var A=0;A<FA.streams.length;A++){var I=FA.streams[A];I&&FA.close(I)}},getMode:function(A,I){var g=0;return A&&(g|=365),I&&(g|=146),g},findObject:function(A,I){var g=FA.analyzePath(A,I);return g.exists?g.object:null},analyzePath:function(A,I){try{A=(B=FA.lookupPath(A,{follow:!I})).path}catch(A){}var g={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var B=FA.lookupPath(A,{parent:!0});g.parentExists=!0,g.parentPath=B.path,g.parentObject=B.node,g.name=wA.basename(A),B=FA.lookupPath(A,{follow:!I}),g.exists=!0,g.path=B.path,g.object=B.node,g.name=B.node.name,g.isRoot=\"/\"===B.path}catch(A){g.error=A.errno}return g},createPath:function(A,I,g,B){A=\"string\"==typeof A?A:FA.getPath(A);for(var C=I.split(\"/\").reverse();C.length;){var Q=C.pop();if(Q){var E=wA.join2(A,Q);try{FA.mkdir(E)}catch(A){}A=E}}return E},createFile:function(A,I,g,B,C){var Q=wA.join2(\"string\"==typeof A?A:FA.getPath(A),I),E=FA.getMode(B,C);return FA.create(Q,E)},createDataFile:function(A,I,g,B,C,Q){var E=I;A&&(A=\"string\"==typeof A?A:FA.getPath(A),E=I?wA.join2(A,I):A);var i=FA.getMode(B,C),o=FA.create(E,i);if(g){if(\"string\"==typeof g){for(var D=new Array(g.length),a=0,w=g.length;a<w;++a)D[a]=g.charCodeAt(a);g=D}FA.chmod(o,146|i);var s=FA.open(o,577);FA.write(s,g,0,g.length,0,Q),FA.close(s),FA.chmod(o,i)}return o},createDevice:function(A,I,g,B){var C=wA.join2(\"string\"==typeof A?A:FA.getPath(A),I),Q=FA.getMode(!!g,!!B);FA.createDevice.major||(FA.createDevice.major=64);var E=FA.makedev(FA.createDevice.major++,0);return FA.registerDevice(E,{open:function(A){A.seekable=!1},close:function(A){B&&B.buffer&&B.buffer.length&&B(10)},read:function(A,I,B,C,Q){for(var E=0,i=0;i<C;i++){var o;try{o=g()}catch(A){throw new FA.ErrnoError(29)}if(void 0===o&&0===E)throw new FA.ErrnoError(6);if(null==o)break;E++,I[B+i]=o}return E&&(A.node.timestamp=Date.now()),E},write:function(A,I,g,C,Q){for(var E=0;E<C;E++)try{B(I[g+E])}catch(A){throw new FA.ErrnoError(29)}return C&&(A.node.timestamp=Date.now()),E}}),FA.mkdev(C,Q,E)},forceLoadFile:function(A){if(A.isDevice||A.isFolder||A.link||A.contents)return!0;if(\"undefined\"!=typeof XMLHttpRequest)throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");if(!C)throw new Error(\"Cannot load without read() or XMLHttpRequest.\");try{A.contents=GA(C(A.url),!0),A.usedBytes=A.contents.length}catch(A){throw new FA.ErrnoError(29)}},createLazyFile:function(A,I,g,B,C){function Q(){this.lengthKnown=!1,this.chunks=[]}if(Q.prototype.get=function(A){if(!(A>this.length-1||A<0)){var I=A%this.chunkSize,g=A/this.chunkSize|0;return this.getter(g)[I]}},Q.prototype.setDataGetter=function(A){this.getter=A},Q.prototype.cacheLength=function(){var A=new XMLHttpRequest;if(A.open(\"HEAD\",g,!1),A.send(null),!(A.status>=200&&A.status<300||304===A.status))throw new Error(\"Couldn't load \"+g+\". Status: \"+A.status);var I,B=Number(A.getResponseHeader(\"Content-length\")),C=(I=A.getResponseHeader(\"Accept-Ranges\"))&&\"bytes\"===I,Q=(I=A.getResponseHeader(\"Content-Encoding\"))&&\"gzip\"===I,E=1048576;C||(E=B);var i=this;i.setDataGetter((function(A){var I=A*E,C=(A+1)*E-1;if(C=Math.min(C,B-1),void 0===i.chunks[A]&&(i.chunks[A]=function(A,I){if(A>I)throw new Error(\"invalid range (\"+A+\", \"+I+\") or no bytes requested!\");if(I>B-1)throw new Error(\"only \"+B+\" bytes available! programmer error!\");var C=new XMLHttpRequest;if(C.open(\"GET\",g,!1),B!==E&&C.setRequestHeader(\"Range\",\"bytes=\"+A+\"-\"+I),C.responseType=\"arraybuffer\",C.overrideMimeType&&C.overrideMimeType(\"text/plain; charset=x-user-defined\"),C.send(null),!(C.status>=200&&C.status<300||304===C.status))throw new Error(\"Couldn't load \"+g+\". Status: \"+C.status);return void 0!==C.response?new Uint8Array(C.response||[]):GA(C.responseText||\"\",!0)}(I,C)),void 0===i.chunks[A])throw new Error(\"doXHR failed!\");return i.chunks[A]})),!Q&&B||(E=B=1,B=this.getter(0).length,E=B,S(\"LazyFiles on gzip forces download of the whole file when length is accessed\")),this._length=B,this._chunkSize=E,this.lengthKnown=!0},\"undefined\"!=typeof XMLHttpRequest){if(!F)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var E=new Q;Object.defineProperties(E,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var i={isDevice:!1,contents:E}}else i={isDevice:!1,url:g};var o=FA.createFile(A,I,i,B,C);i.contents?o.contents=i.contents:i.url&&(o.contents=null,o.url=i.url),Object.defineProperties(o,{usedBytes:{get:function(){return this.contents.length}}});var D={};function a(A,I,g,B,C){var Q=A.node.contents;if(C>=Q.length)return 0;var E=Math.min(Q.length-C,B);if(Q.slice)for(var i=0;i<E;i++)I[g+i]=Q[C+i];else for(i=0;i<E;i++)I[g+i]=Q.get(C+i);return E}return Object.keys(o.stream_ops).forEach((function(A){var I=o.stream_ops[A];D[A]=function(){return FA.forceLoadFile(o),I.apply(null,arguments)}})),D.read=function(A,I,g,B,C){return FA.forceLoadFile(o),a(A,I,g,B,C)},D.mmap=function(A,I,g,B,C){FA.forceLoadFile(o);var Q=hA();if(!Q)throw new FA.ErrnoError(48);return a(A,U,Q,I,g),{ptr:Q,allocated:!0}},o.stream_ops=D,o},createPreloadedFile:function(A,I,g,B,C,E,i,o,D,a){var w=I?sA.resolve(wA.join2(A,I)):A;function s(g){function Q(g){a&&a(),o||FA.createDataFile(A,I,g,B,C,D),E&&E(),z()}Browser.handledByPreloadPlugin(g,w,Q,(function(){i&&i(),z()}))||Q(g)}P(),\"string\"==typeof g?function(A,I,g,B){var C=\"al \"+A;Q(A,(function(I){c(I,'Loading data file \"'+A+'\" failed (no arrayBuffer).'),s(new Uint8Array(I)),C&&z()}),(function(I){if(!g)throw'Loading data file \"'+A+'\" failed.';g()})),C&&P()}(g,0,i):s(g)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=FA.indexedDB();try{var C=B.open(FA.DB_NAME(),FA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=function(){S(\"creating db\"),C.result.createObjectStore(FA.DB_STORE_NAME)},C.onsuccess=function(){var B=C.result.transaction([FA.DB_STORE_NAME],\"readwrite\"),Q=B.objectStore(FA.DB_STORE_NAME),E=0,i=0,o=A.length;function D(){0==i?I():g()}A.forEach((function(A){var I=Q.put(FA.analyzePath(A).object.contents,A);I.onsuccess=function(){++E+i==o&&D()},I.onerror=function(){i++,E+i==o&&D()}})),B.onerror=g},C.onerror=g},loadFilesFromDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=FA.indexedDB();try{var C=B.open(FA.DB_NAME(),FA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=g,C.onsuccess=function(){var B=C.result;try{var Q=B.transaction([FA.DB_STORE_NAME],\"readonly\")}catch(A){return void g(A)}var E=Q.objectStore(FA.DB_STORE_NAME),i=0,o=0,D=A.length;function a(){0==o?I():g()}A.forEach((function(A){var I=E.get(A);I.onsuccess=function(){FA.analyzePath(A).exists&&FA.unlink(A),FA.createDataFile(wA.dirname(A),wA.basename(A),I.result,!0,!0,!0),++i+o==D&&a()},I.onerror=function(){o++,i+o==D&&a()}})),Q.onerror=g},C.onerror=g}},yA={DEFAULT_POLLMASK:5,calculateAt:function(A,I,g){if(wA.isAbs(I))return I;var B;if(B=-100===A?FA.cwd():yA.getStreamFromFD(A).path,0==I.length){if(!g)throw new FA.ErrnoError(44);return B}return wA.join2(B,I)},doStat:function(A,I,g){try{var B=A(I)}catch(A){if(A&&A.node&&wA.normalize(I)!==wA.normalize(FA.getPath(A.node)))return-54;throw A}return d[g>>2]=B.dev,d[g+8>>2]=B.ino,d[g+12>>2]=B.mode,q[g+16>>2]=B.nlink,d[g+20>>2]=B.uid,d[g+24>>2]=B.gid,d[g+28>>2]=B.rdev,gA=[B.size>>>0,(IA=B.size,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+40>>2]=gA[0],d[g+44>>2]=gA[1],d[g+48>>2]=4096,d[g+52>>2]=B.blocks,gA=[Math.floor(B.atime.getTime()/1e3)>>>0,(IA=Math.floor(B.atime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+56>>2]=gA[0],d[g+60>>2]=gA[1],q[g+64>>2]=0,gA=[Math.floor(B.mtime.getTime()/1e3)>>>0,(IA=Math.floor(B.mtime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+72>>2]=gA[0],d[g+76>>2]=gA[1],q[g+80>>2]=0,gA=[Math.floor(B.ctime.getTime()/1e3)>>>0,(IA=Math.floor(B.ctime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+88>>2]=gA[0],d[g+92>>2]=gA[1],q[g+96>>2]=0,gA=[B.ino>>>0,(IA=B.ino,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+104>>2]=gA[0],d[g+108>>2]=gA[1],0},doMsync:function(A,I,g,B,C){var Q=K.slice(A,A+g);FA.msync(I,Q,C,g,B)},varargs:void 0,get:function(){return yA.varargs+=4,d[yA.varargs-4>>2]},getStr:function(A){return W(A)},getStreamFromFD:function(A){var I=FA.getStream(A);if(!I)throw new FA.ErrnoError(8);return I}};function rA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+A)}}var nA=void 0;function SA(A){for(var I=\"\",g=A;K[g];)I+=nA[K[g++]];return I}var MA={},eA={},NA={};function kA(A){if(void 0===A)return\"_unknown\";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,\"$\")).charCodeAt(0);return I>=48&&I<=57?\"_\"+A:A}function cA(A,I){return A=kA(A),new Function(\"body\",\"return function \"+A+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(I)}function JA(A,I){var g=cA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+\"\\n\"+g.replace(/^Error(:[^\\n]*)?\\n/,\"\"))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message},g}var UA=void 0;function KA(A){throw new UA(A)}var LA=void 0;function YA(A){throw new LA(A)}function dA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&YA(\"Mismatched type converter count\");for(var C=0;C<A.length;++C)qA(A[C],B[C])}A.forEach((function(A){NA[A]=I}));var C=new Array(I.length),Q=[],E=0;I.forEach((function(A,I){eA.hasOwnProperty(A)?C[I]=eA[A]:(Q.push(A),MA.hasOwnProperty(A)||(MA[A]=[]),MA[A].push((function(){C[I]=eA[A],++E===Q.length&&B(C)})))})),0===Q.length&&B(C)}function qA(A,I){var g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!(\"argPackAdvance\"in I))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var B=I.name;if(A||KA('type \"'+B+'\" must have a positive integer typeid pointer'),eA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;KA(\"Cannot register type '\"+B+\"' twice\")}if(eA[A]=I,delete NA[A],MA.hasOwnProperty(A)){var C=MA[A];delete MA[A],C.forEach((function(A){return A()}))}}var HA=[],lA=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function fA(A){return this.fromWireType(d[A>>2])}function uA(A,I){switch(I){case 2:return function(A){return this.fromWireType(H[A>>2])};case 3:return function(A){return this.fromWireType(l[A>>3])};default:throw new TypeError(\"Unknown float type: \"+A)}}function WA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function mA(A){return Z.get(A)}function bA(I,g,B){return I.includes(\"j\")?function(I,g,B){var C=A[\"dynCall_\"+I];return B&&B.length?C.apply(null,[g].concat(B)):C.call(null,g)}(I,g,B):mA(g).apply(null,B)}var pA=void 0;function ZA(A){var I=hI(A),g=SA(I);return GI(I),g}function xA(A,I,g){switch(I){case 0:return g?function(A){return U[A]}:function(A){return K[A]};case 1:return g?function(A){return L[A>>1]}:function(A){return Y[A>>1]};case 2:return g?function(A){return d[A>>2]}:function(A){return q[A>>2]};default:throw new TypeError(\"Unknown integer type: \"+A)}}var VA=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;function XA(A,I){for(var g=A,B=g>>1,C=B+I/2;!(B>=C)&&Y[B];)++B;if((g=B<<1)-A>32&&VA)return VA.decode(K.subarray(A,g));for(var Q=\"\",E=0;!(E>=I/2);++E){var i=L[A+2*E>>1];if(0==i)break;Q+=String.fromCharCode(i)}return Q}function TA(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,C=(g-=2)<2*A.length?g/2:A.length,Q=0;Q<C;++Q){var E=A.charCodeAt(Q);L[I>>1]=E,I+=2}return L[I>>1]=0,I-B}function OA(A){return 2*A.length}function vA(A,I){for(var g=0,B=\"\";!(g>=I/4);){var C=d[A+4*g>>2];if(0==C)break;if(++g,C>=65536){var Q=C-65536;B+=String.fromCharCode(55296|Q>>10,56320|1023&Q)}else B+=String.fromCharCode(C)}return B}function jA(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,C=B+g-4,Q=0;Q<A.length;++Q){var E=A.charCodeAt(Q);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++Q)),d[I>>2]=E,(I+=4)+4>C)break}return d[I>>2]=0,I-B}function PA(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}function zA(A){var I=b(A)+1,g=sI(I);return g&&m(A,U,g,I),g}var _A=[];function $A(A){try{return e.grow(A-J.byteLength+65535>>>16),p(e.buffer),1}catch(A){}}var AI={};function II(){if(!II.strings){var A={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==(\"undefined\"==typeof navigator?\"undefined\":D(navigator))&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:t||\"./this.program\"};for(var I in AI)void 0===AI[I]?delete A[I]:A[I]=AI[I];var g=[];for(var I in A)g.push(I+\"=\"+A[I]);II.strings=g}return II.strings}function gI(A){return A%4==0&&(A%100!=0||A%400==0)}var BI=[31,29,31,30,31,30,31,31,30,31,30,31],CI=[31,28,31,30,31,30,31,31,30,31,30,31];function QI(A,I,g,B){var C=d[B+40>>2],Q={tm_sec:d[B>>2],tm_min:d[B+4>>2],tm_hour:d[B+8>>2],tm_mday:d[B+12>>2],tm_mon:d[B+16>>2],tm_year:d[B+20>>2],tm_wday:d[B+24>>2],tm_yday:d[B+28>>2],tm_isdst:d[B+32>>2],tm_gmtoff:d[B+36>>2],tm_zone:C?W(C):\"\"},E=W(g),i={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var o in i)E=E.replace(new RegExp(o,\"g\"),i[o]);var D=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],a=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function w(A,I,g){for(var B=\"number\"==typeof A?A.toString():A||\"\";B.length<I;)B=g[0]+B;return B}function s(A,I){return w(A,I,\"0\")}function G(A,I){function g(A){return A<0?-1:A>0?1:0}var B;return 0===(B=g(A.getFullYear()-I.getFullYear()))&&0===(B=g(A.getMonth()-I.getMonth()))&&(B=g(A.getDate()-I.getDate())),B}function t(A){switch(A.getDay()){case 0:return new Date(A.getFullYear()-1,11,29);case 1:return A;case 2:return new Date(A.getFullYear(),0,3);case 3:return new Date(A.getFullYear(),0,2);case 4:return new Date(A.getFullYear(),0,1);case 5:return new Date(A.getFullYear()-1,11,31);case 6:return new Date(A.getFullYear()-1,11,30)}}function h(A){var I=function(A,I){for(var g=new Date(A.getTime());I>0;){var B=gI(g.getFullYear()),C=g.getMonth(),Q=(B?BI:CI)[C];if(!(I>Q-g.getDate()))return g.setDate(g.getDate()+I),g;I-=Q-g.getDate()+1,g.setDate(1),C<11?g.setMonth(C+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1))}return g}(new Date(A.tm_year+1900,0,1),A.tm_yday),g=new Date(I.getFullYear(),0,4),B=new Date(I.getFullYear()+1,0,4),C=t(g),Q=t(B);return G(C,I)<=0?G(Q,I)<=0?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}var R={\"%a\":function(A){return D[A.tm_wday].substring(0,3)},\"%A\":function(A){return D[A.tm_wday]},\"%b\":function(A){return a[A.tm_mon].substring(0,3)},\"%B\":function(A){return a[A.tm_mon]},\"%C\":function(A){return s((A.tm_year+1900)/100|0,2)},\"%d\":function(A){return s(A.tm_mday,2)},\"%e\":function(A){return w(A.tm_mday,2,\" \")},\"%g\":function(A){return h(A).toString().substring(2)},\"%G\":function(A){return h(A)},\"%H\":function(A){return s(A.tm_hour,2)},\"%I\":function(A){var I=A.tm_hour;return 0==I?I=12:I>12&&(I-=12),s(I,2)},\"%j\":function(A){return s(A.tm_mday+function(A,I){for(var g=0,B=0;B<=I;g+=A[B++]);return g}(gI(A.tm_year+1900)?BI:CI,A.tm_mon-1),3)},\"%m\":function(A){return s(A.tm_mon+1,2)},\"%M\":function(A){return s(A.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(A){return A.tm_hour>=0&&A.tm_hour<12?\"AM\":\"PM\"},\"%S\":function(A){return s(A.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(A){return A.tm_wday||7},\"%U\":function(A){var I=A.tm_yday+7-A.tm_wday;return s(Math.floor(I/7),2)},\"%V\":function(A){var I=Math.floor((A.tm_yday+7-(A.tm_wday+6)%7)/7);if((A.tm_wday+371-A.tm_yday-2)%7<=2&&I++,I){if(53==I){var g=(A.tm_wday+371-A.tm_yday)%7;4==g||3==g&&gI(A.tm_year)||(I=1)}}else{I=52;var B=(A.tm_wday+7-A.tm_yday-1)%7;(4==B||5==B&&gI(A.tm_year%400-1))&&I++}return s(I,2)},\"%w\":function(A){return A.tm_wday},\"%W\":function(A){var I=A.tm_yday+7-(A.tm_wday+6)%7;return s(Math.floor(I/7),2)},\"%y\":function(A){return(A.tm_year+1900).toString().substring(2)},\"%Y\":function(A){return A.tm_year+1900},\"%z\":function(A){var I=A.tm_gmtoff,g=I>=0;return I=(I=Math.abs(I)/60)/60*100+I%60,(g?\"+\":\"-\")+String(\"0000\"+I).slice(-4)},\"%Z\":function(A){return A.tm_zone},\"%%\":function(){return\"%\"}};for(var o in E=E.replace(/%%/g,\"\\0\\0\"),R)E.includes(o)&&(E=E.replace(new RegExp(o,\"g\"),R[o](Q)));var F=GA(E=E.replace(/\\0\\0/g,\"%\"),!1);return F.length>I?0:(function(A,I){U.set(A,I)}(F,A),F.length-1)}var EI=function(A,I,g,B){A||(A=this),this.parent=A,this.mount=A.mount,this.mounted=null,this.id=FA.nextInode++,this.name=I,this.mode=g,this.node_ops={},this.stream_ops={},this.rdev=B};Object.defineProperties(EI.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(A){A?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(A){A?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return FA.isDir(this.mode)}},isDevice:{get:function(){return FA.isChrdev(this.mode)}}}),FA.FSNode=EI,FA.staticInit(),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);nA=A}(),UA=A.BindingError=JA(Error,\"BindingError\"),LA=A.InternalError=JA(Error,\"InternalError\"),A.count_emval_handles=function(){for(var A=0,I=5;I<lA.length;++I)void 0!==lA[I]&&++A;return A},A.get_first_emval=function(){for(var A=5;A<lA.length;++A)if(void 0!==lA[A])return lA[A];return null},pA=A.UnboundTypeError=JA(Error,\"UnboundTypeError\");var iI=!1,oI=\"function\"==typeof atob?atob:function(A){var I,g,B,C,Q,E,i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",o=\"\",D=0;A=A.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{I=i.indexOf(A.charAt(D++))<<2|(C=i.indexOf(A.charAt(D++)))>>4,g=(15&C)<<4|(Q=i.indexOf(A.charAt(D++)))>>2,B=(3&Q)<<6|(E=i.indexOf(A.charAt(D++))),o+=String.fromCharCode(I),64!==Q&&(o+=String.fromCharCode(g)),64!==E&&(o+=String.fromCharCode(B))}while(D<A.length);return o};function DI(A){if(CA(A))return function(A){if(\"boolean\"==typeof y&&y){var I=Buffer.from(A,\"base64\");return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=oI(A),B=new Uint8Array(g.length),C=0;C<g.length;++C)B[C]=g.charCodeAt(C);return B}catch(A){throw new Error(\"Converting base64 string to bytes failed.\")}}(A.slice(BA.length))}var aI,wI={g:function(A){return sI(A+24)+24},f:function(A,I,g){throw new aA(A).init(I,g),A},n:function(A,I,g){yA.varargs=g;try{var B=yA.getStreamFromFD(A);switch(I){case 0:return(C=yA.get())<0?-28:FA.createStream(B,C).fd;case 1:case 2:case 6:case 7:return 0;case 3:return B.flags;case 4:var C=yA.get();return B.flags|=C,0;case 5:return C=yA.get(),L[C+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return 28,d[tI()>>2]=28,-1}}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return-A.errno}},F:function(A,I,g){yA.varargs=g;try{var B=yA.getStreamFromFD(A);switch(I){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return B.tty?0:-59;case 21519:if(!B.tty)return-59;var C=yA.get();return d[C>>2]=0,0;case 21520:return B.tty?-28:-59;case 21531:return C=yA.get(),FA.ioctl(B,I,C);default:return-28}}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return-A.errno}},G:function(A,I,g,B){yA.varargs=B;try{I=yA.getStr(I),I=yA.calculateAt(A,I);var C=B?yA.get():0;return FA.open(I,g,C).fd}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return-A.errno}},y:function(A,I,g,B,C){},K:function(A,I,g,B,C){var Q=rA(g);qA(A,{name:I=SA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:C},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=U;else if(2===g)B=L;else{if(4!==g)throw new TypeError(\"Unknown boolean type size: \"+I);B=d}return this.fromWireType(B[A>>Q])},destructorFunction:null})},r:function(I,g,B){I=SA(I),dA([],[g],(function(g){return g=g[0],A[I]=g.fromWireType(B),[]}))},J:function(A,I){qA(A,{name:I=SA(I),fromWireType:function(A){var I=function(A){return A||KA(\"Cannot use deleted val. handle = \"+A),lA[A].value}(A);return function(A){A>4&&0==--lA[A].refcount&&(lA[A]=void 0,HA.push(A))}(A),I},toWireType:function(A,I){return function(A){switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=HA.length?HA.pop():lA.length;return lA[I]={refcount:1,value:A},I}}(I)},argPackAdvance:8,readValueFromPointer:fA,destructorFunction:null})},q:function(A,I,g){var B=rA(g);qA(A,{name:I=SA(I),fromWireType:function(A){return A},toWireType:function(A,I){return I},argPackAdvance:8,readValueFromPointer:uA(I,B),destructorFunction:null})},d:function(I,g,B,C,Q,E){var i=function(A,I){for(var g=[],B=0;B<A;B++)g.push(q[I+4*B>>2]);return g}(g,B);I=SA(I),Q=function(A,I){var g,B,C,Q=(A=SA(A)).includes(\"j\")?(g=A,B=I,C=[],function(){return C.length=0,Object.assign(C,arguments),bA(g,B,C)}):mA(I);return\"function\"!=typeof Q&&KA(\"unknown function pointer with signature \"+A+\": \"+I),Q}(C,Q),function(I,g,B){A.hasOwnProperty(I)?((void 0===B||void 0!==A[I].overloadTable&&void 0!==A[I].overloadTable[B])&&KA(\"Cannot register public name '\"+I+\"' twice\"),function(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||KA(\"Function '\"+g+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+A[I].overloadTable+\")!\"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}(A,I,I),A.hasOwnProperty(B)&&KA(\"Cannot register multiple overloads of a function with the same number of arguments (\"+B+\")!\"),A[I].overloadTable[B]=g):(A[I]=g,void 0!==B&&(A[I].numArguments=B))}(I,(function(){!function(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||eA[I]||(NA[I]?NA[I].forEach(A):(g.push(I),B[I]=!0))})),new pA(A+\": \"+g.map(ZA).join([\", \"]))}(\"Cannot call \"+I+\" due to unbound types\",i)}),g-1),dA([],i,(function(B){var C=[B[0],null].concat(B.slice(1));return function(I,g,B){A.hasOwnProperty(I)||YA(\"Replacing nonexistant public symbol\"),void 0!==A[I].overloadTable&&void 0!==B?A[I].overloadTable[B]=g:(A[I]=g,A[I].argCount=B)}(I,function(A,I,g,B,C){var Q=I.length;Q<2&&KA(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var a=\"void\"!==I[0].name,w=\"\",s=\"\";for(o=0;o<Q-2;++o)w+=(0!==o?\", \":\"\")+\"arg\"+o,s+=(0!==o?\", \":\"\")+\"arg\"+o+\"Wired\";var G=\"return function \"+kA(A)+\"(\"+w+\") {\\nif (arguments.length !== \"+(Q-2)+\") {\\nthrowBindingError('function \"+A+\" called with ' + arguments.length + ' arguments, expected \"+(Q-2)+\" args!');\\n}\\n\";i&&(G+=\"var destructors = [];\\n\");var t=i?\"destructors\":\"null\",h=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"],R=[KA,B,C,WA,I[0],I[1]];for(E&&(G+=\"var thisWired = classParam.toWireType(\"+t+\", this);\\n\"),o=0;o<Q-2;++o)G+=\"var arg\"+o+\"Wired = argType\"+o+\".toWireType(\"+t+\", arg\"+o+\"); // \"+I[o+2].name+\"\\n\",h.push(\"argType\"+o),R.push(I[o+2]);if(E&&(s=\"thisWired\"+(s.length>0?\", \":\"\")+s),G+=(a?\"var rv = \":\"\")+\"invoker(fn\"+(s.length>0?\", \":\"\")+s+\");\\n\",i)G+=\"runDestructors(destructors);\\n\";else for(o=E?1:2;o<I.length;++o){var F=1===o?\"thisWired\":\"arg\"+(o-2)+\"Wired\";null!==I[o].destructorFunction&&(G+=F+\"_dtor(\"+F+\"); // \"+I[o].name+\"\\n\",h.push(F+\"_dtor\"),R.push(I[o].destructorFunction))}return a&&(G+=\"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\"),G+=\"}\\n\",h.push(G),function(A,I){if(!(A instanceof Function))throw new TypeError(\"new_ called with constructor type \"+D(A)+\" which is not a function\");var g=cA(A.name||\"unknownFunctionName\",(function(){}));g.prototype=A.prototype;var B=new g,C=A.apply(B,I);return C instanceof Object?C:B}(Function,h).apply(null,R)}(I,C,null,Q,E),g-1),[]}))},e:function(A,I,g,B,C){I=SA(I),-1===C&&(C=4294967295);var Q=rA(g),E=function(A){return A};if(0===B){var i=32-8*g;E=function(A){return A<<i>>>i}}var o=I.includes(\"unsigned\");qA(A,{name:I,fromWireType:E,toWireType:o?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:xA(I,Q,0!==B),destructorFunction:null})},c:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function C(A){var I=q,g=I[A>>=2],C=I[A+1];return new B(J,C,g)}qA(A,{name:g=SA(g),fromWireType:C,argPackAdvance:8,readValueFromPointer:C},{ignoreDuplicateRegistrations:!0})},p:function(A,I){var g=\"std::string\"===(I=SA(I));qA(A,{name:I,fromWireType:function(A){var I,B=q[A>>2],C=A+4;if(g)for(var Q=C,E=0;E<=B;++E){var i=C+E;if(E==B||0==K[i]){var o=W(Q,i-Q);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),Q=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(K[C+E]);I=D.join(\"\")}return GI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var C=\"string\"==typeof I;C||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||KA(\"Cannot pass non-string to std::string\"),B=g&&C?b(I):I.length;var Q=sI(4+B+1),E=Q+4;if(q[Q>>2]=B,g&&C)m(I,K,E,B+1);else if(C)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(GI(E),KA(\"String has UTF-16 code units that do not fit in 8 bits\")),K[E+i]=o}else for(i=0;i<B;++i)K[E+i]=I[i];return null!==A&&A.push(GI,Q),Q},argPackAdvance:8,readValueFromPointer:fA,destructorFunction:function(A){GI(A)}})},k:function(A,I,g){var B,C,Q,E,i;g=SA(g),2===I?(B=XA,C=TA,E=OA,Q=function(){return Y},i=1):4===I&&(B=vA,C=jA,E=PA,Q=function(){return q},i=2),qA(A,{name:g,fromWireType:function(A){for(var g,C=q[A>>2],E=Q(),o=A+4,D=0;D<=C;++D){var a=A+4+D*I;if(D==C||0==E[a>>i]){var w=B(o,a-o);void 0===g?g=w:(g+=String.fromCharCode(0),g+=w),o=a+I}}return GI(A),g},toWireType:function(A,B){\"string\"!=typeof B&&KA(\"Cannot pass non-string to C++ string type \"+g);var Q=E(B),o=sI(4+Q+I);return q[o>>2]=Q>>i,C(B,o+4,Q+I),null!==A&&A.push(GI,o),o},argPackAdvance:8,readValueFromPointer:fA,destructorFunction:function(A){GI(A)}})},L:function(A,I){qA(A,{isVoid:!0,name:I=SA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},o:function(){return Date.now()},A:function(){throw 1/0},H:function(A,I){var g,B=new Date(1e3*(q[(g=A)>>2]+4294967296*d[g+4>>2]));d[I>>2]=B.getSeconds(),d[I+4>>2]=B.getMinutes(),d[I+8>>2]=B.getHours(),d[I+12>>2]=B.getDate(),d[I+16>>2]=B.getMonth(),d[I+20>>2]=B.getFullYear()-1900,d[I+24>>2]=B.getDay();var C=new Date(B.getFullYear(),0,1),Q=(B.getTime()-C.getTime())/864e5|0;d[I+28>>2]=Q,d[I+36>>2]=-60*B.getTimezoneOffset();var E=new Date(B.getFullYear(),6,1).getTimezoneOffset(),i=C.getTimezoneOffset(),o=0|(E!=i&&B.getTimezoneOffset()==Math.min(i,E));d[I+32>>2]=o},I:function A(I,g,B){A.called||(A.called=!0,function(A,I,g){var B=(new Date).getFullYear(),C=new Date(B,0,1),Q=new Date(B,6,1),E=C.getTimezoneOffset(),i=Q.getTimezoneOffset(),o=Math.max(E,i);function D(A){var I=A.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return I?I[1]:\"GMT\"}d[A>>2]=60*o,d[I>>2]=Number(E!=i);var a=D(C),w=D(Q),s=zA(a),G=zA(w);i<E?(q[g>>2]=s,q[g+4>>2]=G):(q[g>>2]=G,q[g+4>>2]=s)}(I,g,B))},a:function(){_(\"\")},h:function(A,I,g){var B=function(A,I){var g;for(_A.length=0,I>>=2;g=K[A++];)I+=105!=g&I,_A.push(105==g?d[I]:l[I++>>1]),++I;return _A}(I,g);return iA[A].apply(null,B)},B:function(A){var I=K.length,g=2147483648;if((A>>>=0)>g)return!1;for(var B,C=1;C<=4;C*=2){var Q=I*(1+.2/C);if(Q=Math.min(Q,A+100663296),$A(Math.min(g,(B=Math.max(A,Q))+(65536-B%65536)%65536)))return!0}return!1},C:function(A,I){var g=0;return II().forEach((function(B,C){var Q=I+g;q[A+4*C>>2]=Q,function(A,I,g){for(var B=0;B<A.length;++B)U[I++>>0]=A.charCodeAt(B);U[I>>0]=0}(B,Q),g+=B.length+1})),0},D:function(A,I){var g=II();q[A>>2]=g.length;var B=0;return g.forEach((function(A){B+=A.length+1})),q[I>>2]=B,0},b:function(I,g){var B;B=I,T()||(A.onExit&&A.onExit(B),k=!0),h(B,new oA(B))},l:function(A){try{var I=yA.getStreamFromFD(A);return FA.close(I),0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}},E:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=q[I>>2],i=q[I+4>>2];I+=8;var o=FA.read(A,U,E,i,undefined);if(o<0)return-1;if(C+=o,o<i)break}return C}(yA.getStreamFromFD(A),I,g);return q[B>>2]=C,0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}},x:function(A,I,g,B,C){try{var Q=(o=g)+2097152>>>0<4194305-!!(i=I)?(i>>>0)+4294967296*o:NaN;if(isNaN(Q))return 61;var E=yA.getStreamFromFD(A);return FA.llseek(E,Q,B),gA=[E.position>>>0,(IA=E.position,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[C>>2]=gA[0],d[C+4>>2]=gA[1],E.getdents&&0===Q&&0===B&&(E.getdents=null),0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}var i,o},m:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=q[I>>2],i=q[I+4>>2];I+=8;var o=FA.write(A,U,E,i,undefined);if(o<0)return-1;C+=o}return C}(yA.getStreamFromFD(A),I,g);return q[B>>2]=C,0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}},s:function(A,I){var g=FI();try{return mA(A)(I)}catch(A){if(yI(g),A!==A+0)throw A;RI(1,0)}},u:function(A,I,g){var B=FI();try{return mA(A)(I,g)}catch(A){if(yI(B),A!==A+0)throw A;RI(1,0)}},t:function(A,I,g,B){var C=FI();try{return mA(A)(I,g,B)}catch(A){if(yI(C),A!==A+0)throw A;RI(1,0)}},i:function(A,I){var g=FI();try{mA(A)(I)}catch(A){if(yI(g),A!==A+0)throw A;RI(1,0)}},v:function(A,I,g){var B=FI();try{mA(A)(I,g)}catch(A){if(yI(B),A!==A+0)throw A;RI(1,0)}},w:function(A,I,g,B){var C=FI();try{mA(A)(I,g,B)}catch(A){if(yI(C),A!==A+0)throw A;RI(1,0)}},j:function(A,I,g,B,C){var Q=FI();try{mA(A)(I,g,B,C)}catch(A){if(yI(Q),A!==A+0)throw A;RI(1,0)}},M:QI,z:function(A,I,g,B){return QI(A,I,g,B)}},sI=(function(){var I={a:wI};function g(I,g){var B,C=I.exports;A.asm=C,p((e=A.asm.N).buffer),Z=A.asm.S,B=A.asm.O,V.unshift(B),z()}function C(A){g(A.instance)}function E(A){return function(){if(!n&&(R||F)){if(\"function\"==typeof fetch&&!QA($))return fetch($,{credentials:\"same-origin\"}).then((function(A){if(!A.ok)throw\"failed to load wasm binary file at '\"+$+\"'\";return A.arrayBuffer()})).catch((function(){return EA($)}));if(Q)return new Promise((function(A,I){Q($,(function(I){A(new Uint8Array(I))}),I)}))}return Promise.resolve().then((function(){return EA($)}))}().then((function(A){return WebAssembly.instantiate(A,I)})).then((function(A){return A})).then(A,(function(A){M(\"failed to asynchronously prepare wasm: \"+A),_(A)}))}if(P(),A.instantiateWasm)try{return A.instantiateWasm(I,g)}catch(A){return M(\"Module.instantiateWasm callback failed with error: \"+A),!1}(n||\"function\"!=typeof WebAssembly.instantiateStreaming||CA($)||QA($)||y||\"function\"!=typeof fetch?E(C):fetch($,{credentials:\"same-origin\"}).then((function(A){return WebAssembly.instantiateStreaming(A,I).then(C,(function(A){return M(\"wasm streaming compile failed: \"+A),M(\"falling back to ArrayBuffer instantiation\"),E(C)}))}))).catch(B)}(),A.___wasm_call_ctors=function(){return(A.___wasm_call_ctors=A.asm.O).apply(null,arguments)},A._malloc=function(){return(sI=A._malloc=A.asm.P).apply(null,arguments)}),GI=A._free=function(){return(GI=A._free=A.asm.Q).apply(null,arguments)},tI=A.___errno_location=function(){return(tI=A.___errno_location=A.asm.R).apply(null,arguments)},hI=A.___getTypeName=function(){return(hI=A.___getTypeName=A.asm.T).apply(null,arguments)},RI=(A.__embind_initialize_bindings=function(){return(A.__embind_initialize_bindings=A.asm.U).apply(null,arguments)},A._setThrew=function(){return(RI=A._setThrew=A.asm.V).apply(null,arguments)}),FI=A.stackSave=function(){return(FI=A.stackSave=A.asm.W).apply(null,arguments)},yI=A.stackRestore=function(){return(yI=A.stackRestore=A.asm.X).apply(null,arguments)},rI=A.___cxa_is_pointer_type=function(){return(rI=A.___cxa_is_pointer_type=A.asm.Y).apply(null,arguments)};function nI(g){function B(){aI||(aI=!0,A.calledRun=!0,k||(A.noFSInit||FA.init.initialized||FA.init(),FA.ignorePermissions=!1,tA.init(),DA(V),I(A),A.onRuntimeInitialized&&A.onRuntimeInitialized(),function(){if(A.postRun)for(\"function\"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)I=A.postRun.shift(),X.unshift(I);var I;DA(X)}()))}g=g||G,O>0||(function(){if(A.preRun)for(\"function\"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)I=A.preRun.shift(),x.unshift(I);var I;DA(x)}(),O>0||(A.setStatus?(A.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){A.setStatus(\"\")}),1),B()}),1)):B()))}if(A.dynCall_jiji=function(){return(A.dynCall_jiji=A.asm.Z).apply(null,arguments)},A.dynCall_viijii=function(){return(A.dynCall_viijii=A.asm._).apply(null,arguments)},A.dynCall_iiiiij=function(){return(A.dynCall_iiiiij=A.asm.$).apply(null,arguments)},A.dynCall_iiiiijj=function(){return(A.dynCall_iiiiijj=A.asm.aa).apply(null,arguments)},A.dynCall_iiiiiijj=function(){return(A.dynCall_iiiiiijj=A.asm.ba).apply(null,arguments)},A.FS=FA,j=function A(){aI||nI(),aI||(j=A)},A.preInit)for(\"function\"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return nI(),A.ready});const s=w,G=function(){return new Promise((function(A){s({onRuntimeInitialized:function(){A({instance:this})}})}))};function t(A,I){return function(){return A.apply(I,arguments)}}const{toString:h}=Object.prototype,{getPrototypeOf:R}=Object,F=(y=Object.create(null),A=>{const I=h.call(A);return y[I]||(y[I]=I.slice(8,-1).toLowerCase())});var y;const r=A=>(A=A.toLowerCase(),I=>F(I)===A),n=A=>I=>typeof I===A,{isArray:S}=Array,M=n(\"undefined\"),e=r(\"ArrayBuffer\"),N=n(\"string\"),k=n(\"function\"),c=n(\"number\"),J=A=>null!==A&&\"object\"==typeof A,U=A=>{if(\"object\"!==F(A))return!1;const I=R(A);return!(null!==I&&I!==Object.prototype&&null!==Object.getPrototypeOf(I)||Symbol.toStringTag in A||Symbol.iterator in A)},K=r(\"Date\"),L=r(\"File\"),Y=r(\"Blob\"),d=r(\"FileList\"),q=r(\"URLSearchParams\");function H(A,I,{allOwnKeys:g=!1}={}){if(null==A)return;let B,C;if(\"object\"!=typeof A&&(A=[A]),S(A))for(B=0,C=A.length;B<C;B++)I.call(null,A[B],B,A);else{const C=g?Object.getOwnPropertyNames(A):Object.keys(A),Q=C.length;let E;for(B=0;B<Q;B++)E=C[B],I.call(null,A[E],E,A)}}const l=(f=\"undefined\"!=typeof Uint8Array&&R(Uint8Array),A=>f&&A instanceof f);var f;const u=r(\"HTMLFormElement\"),W=(({hasOwnProperty:A})=>(I,g)=>A.call(I,g))(Object.prototype),m=r(\"RegExp\"),b=(A,I)=>{const g=Object.getOwnPropertyDescriptors(A),B={};H(g,((g,C)=>{!1!==I(g,C,A)&&(B[C]=g)})),Object.defineProperties(A,B)},p={isArray:S,isArrayBuffer:e,isBuffer:function(A){return null!==A&&!M(A)&&null!==A.constructor&&!M(A.constructor)&&k(A.constructor.isBuffer)&&A.constructor.isBuffer(A)},isFormData:A=>{const I=\"[object FormData]\";return A&&(\"function\"==typeof FormData&&A instanceof FormData||h.call(A)===I||k(A.toString)&&A.toString()===I)},isArrayBufferView:function(A){let I;return I=\"undefined\"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(A):A&&A.buffer&&e(A.buffer),I},isString:N,isNumber:c,isBoolean:A=>!0===A||!1===A,isObject:J,isPlainObject:U,isUndefined:M,isDate:K,isFile:L,isBlob:Y,isRegExp:m,isFunction:k,isStream:A=>J(A)&&k(A.pipe),isURLSearchParams:q,isTypedArray:l,isFileList:d,forEach:H,merge:function A(){const I={},g=(g,B)=>{U(I[B])&&U(g)?I[B]=A(I[B],g):U(g)?I[B]=A({},g):S(g)?I[B]=g.slice():I[B]=g};for(let A=0,I=arguments.length;A<I;A++)arguments[A]&&H(arguments[A],g);return I},extend:(A,I,g,{allOwnKeys:B}={})=>(H(I,((I,B)=>{g&&k(I)?A[B]=t(I,g):A[B]=I}),{allOwnKeys:B}),A),trim:A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\"\"),stripBOM:A=>(65279===A.charCodeAt(0)&&(A=A.slice(1)),A),inherits:(A,I,g,B)=>{A.prototype=Object.create(I.prototype,B),A.prototype.constructor=A,Object.defineProperty(A,\"super\",{value:I.prototype}),g&&Object.assign(A.prototype,g)},toFlatObject:(A,I,g,B)=>{let C,Q,E;const i={};if(I=I||{},null==A)return I;do{for(C=Object.getOwnPropertyNames(A),Q=C.length;Q-- >0;)E=C[Q],B&&!B(E,A,I)||i[E]||(I[E]=A[E],i[E]=!0);A=!1!==g&&R(A)}while(A&&(!g||g(A,I))&&A!==Object.prototype);return I},kindOf:F,kindOfTest:r,endsWith:(A,I,g)=>{A=String(A),(void 0===g||g>A.length)&&(g=A.length),g-=I.length;const B=A.indexOf(I,g);return-1!==B&&B===g},toArray:A=>{if(!A)return null;if(S(A))return A;let I=A.length;if(!c(I))return null;const g=new Array(I);for(;I-- >0;)g[I]=A[I];return g},forEachEntry:(A,I)=>{const g=(A&&A[Symbol.iterator]).call(A);let B;for(;(B=g.next())&&!B.done;){const g=B.value;I.call(A,g[0],g[1])}},matchAll:(A,I)=>{let g;const B=[];for(;null!==(g=A.exec(I));)B.push(g);return B},isHTMLForm:u,hasOwnProperty:W,hasOwnProp:W,reduceDescriptors:b,freezeMethods:A=>{b(A,((I,g)=>{const B=A[g];k(B)&&(I.enumerable=!1,\"writable\"in I?I.writable=!1:I.set||(I.set=()=>{throw Error(\"Can not read-only method '\"+g+\"'\")}))}))},toObjectSet:(A,I)=>{const g={},B=A=>{A.forEach((A=>{g[A]=!0}))};return S(A)?B(A):B(String(A).split(I)),g},toCamelCase:A=>A.toLowerCase().replace(/[_-\\s]([a-z\\d])(\\w*)/g,(function(A,I,g){return I.toUpperCase()+g})),noop:()=>{},toFiniteNumber:(A,I)=>(A=+A,Number.isFinite(A)?A:I)};function Z(A,I,g,B,C){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=A,this.name=\"AxiosError\",I&&(this.code=I),g&&(this.config=g),B&&(this.request=B),C&&(this.response=C)}p.inherits(Z,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const x=Z.prototype,V={};[\"ERR_BAD_OPTION_VALUE\",\"ERR_BAD_OPTION\",\"ECONNABORTED\",\"ETIMEDOUT\",\"ERR_NETWORK\",\"ERR_FR_TOO_MANY_REDIRECTS\",\"ERR_DEPRECATED\",\"ERR_BAD_RESPONSE\",\"ERR_BAD_REQUEST\",\"ERR_CANCELED\",\"ERR_NOT_SUPPORT\",\"ERR_INVALID_URL\"].forEach((A=>{V[A]={value:A}})),Object.defineProperties(Z,V),Object.defineProperty(x,\"isAxiosError\",{value:!0}),Z.from=(A,I,g,B,C,Q)=>{const E=Object.create(x);return p.toFlatObject(A,E,(function(A){return A!==Error.prototype}),(A=>\"isAxiosError\"!==A)),Z.call(E,A.message,I,g,B,C),E.cause=A,E.name=A.name,Q&&Object.assign(E,Q),E};const X=Z,T=g(230);function O(A){return p.isPlainObject(A)||p.isArray(A)}function v(A){return p.endsWith(A,\"[]\")?A.slice(0,-2):A}function j(A,I,g){return A?A.concat(I).map((function(A,I){return A=v(A),!g&&I?\"[\"+A+\"]\":A})).join(g?\".\":\"\"):I}const P=p.toFlatObject(p,{},null,(function(A){return/^is[A-Z]/.test(A)})),z=function(A,I,g){if(!p.isObject(A))throw new TypeError(\"target must be an object\");I=I||new(T||FormData);const B=(g=p.toFlatObject(g,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(A,I){return!p.isUndefined(I[A])}))).metaTokens,C=g.visitor||a,Q=g.dots,E=g.indexes,i=(g.Blob||\"undefined\"!=typeof Blob&&Blob)&&(o=I)&&p.isFunction(o.append)&&\"FormData\"===o[Symbol.toStringTag]&&o[Symbol.iterator];var o;if(!p.isFunction(C))throw new TypeError(\"visitor must be a function\");function D(A){if(null===A)return\"\";if(p.isDate(A))return A.toISOString();if(!i&&p.isBlob(A))throw new X(\"Blob is not supported. Use a Buffer instead.\");return p.isArrayBuffer(A)||p.isTypedArray(A)?i&&\"function\"==typeof Blob?new Blob([A]):Buffer.from(A):A}function a(A,g,C){let i=A;if(A&&!C&&\"object\"==typeof A)if(p.endsWith(g,\"{}\"))g=B?g:g.slice(0,-2),A=JSON.stringify(A);else if(p.isArray(A)&&function(A){return p.isArray(A)&&!A.some(O)}(A)||p.isFileList(A)||p.endsWith(g,\"[]\")&&(i=p.toArray(A)))return g=v(g),i.forEach((function(A,B){!p.isUndefined(A)&&null!==A&&I.append(!0===E?j([g],B,Q):null===E?g:g+\"[]\",D(A))})),!1;return!!O(A)||(I.append(j(C,g,Q),D(A)),!1)}const w=[],s=Object.assign(P,{defaultVisitor:a,convertValue:D,isVisitable:O});if(!p.isObject(A))throw new TypeError(\"data must be an object\");return function A(g,B){if(!p.isUndefined(g)){if(-1!==w.indexOf(g))throw Error(\"Circular reference detected in \"+B.join(\".\"));w.push(g),p.forEach(g,(function(g,Q){!0===(!(p.isUndefined(g)||null===g)&&C.call(I,g,p.isString(Q)?Q.trim():Q,B,s))&&A(g,B?B.concat(Q):[Q])})),w.pop()}}(A),I};function _(A){const I={\"!\":\"%21\",\"'\":\"%27\",\"(\":\"%28\",\")\":\"%29\",\"~\":\"%7E\",\"%20\":\"+\",\"%00\":\"\\0\"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,(function(A){return I[A]}))}function $(A,I){this._pairs=[],A&&z(A,this,I)}const AA=$.prototype;AA.append=function(A,I){this._pairs.push([A,I])},AA.toString=function(A){const I=A?function(I){return A.call(this,I,_)}:_;return this._pairs.map((function(A){return I(A[0])+\"=\"+I(A[1])}),\"\").join(\"&\")};const IA=$;function gA(A){return encodeURIComponent(A).replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%20/g,\"+\").replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\")}function BA(A,I,g){if(!I)return A;const B=g&&g.encode||gA,C=g&&g.serialize;let Q;if(Q=C?C(I,g):p.isURLSearchParams(I)?I.toString():new IA(I,g).toString(B),Q){const I=A.indexOf(\"#\");-1!==I&&(A=A.slice(0,I)),A+=(-1===A.indexOf(\"?\")?\"?\":\"&\")+Q}return A}const CA=class{constructor(){this.handlers=[]}use(A,I,g){return this.handlers.push({fulfilled:A,rejected:I,synchronous:!!g&&g.synchronous,runWhen:g?g.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){p.forEach(this.handlers,(function(I){null!==I&&A(I)}))}},QA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},EA=\"undefined\"!=typeof URLSearchParams?URLSearchParams:IA,iA=FormData,oA=(()=>{let A;return(\"undefined\"==typeof navigator||\"ReactNative\"!==(A=navigator.product)&&\"NativeScript\"!==A&&\"NS\"!==A)&&\"undefined\"!=typeof window&&\"undefined\"!=typeof document})(),DA={isBrowser:!0,classes:{URLSearchParams:EA,FormData:iA,Blob},isStandardBrowserEnv:oA,protocols:[\"http\",\"https\",\"file\",\"blob\",\"url\",\"data\"]},aA=function(A){function I(A,g,B,C){let Q=A[C++];const E=Number.isFinite(+Q),i=C>=A.length;return Q=!Q&&p.isArray(B)?B.length:Q,i?(p.hasOwnProp(B,Q)?B[Q]=[B[Q],g]:B[Q]=g,!E):(B[Q]&&p.isObject(B[Q])||(B[Q]=[]),I(A,g,B[Q],C)&&p.isArray(B[Q])&&(B[Q]=function(A){const I={},g=Object.keys(A);let B;const C=g.length;let Q;for(B=0;B<C;B++)Q=g[B],I[Q]=A[Q];return I}(B[Q])),!E)}if(p.isFormData(A)&&p.isFunction(A.entries)){const g={};return p.forEachEntry(A,((A,B)=>{I(function(A){return p.matchAll(/\\w+|\\[(\\w*)]/g,A).map((A=>\"[]\"===A[0]?\"\":A[1]||A[0]))}(A),B,g,0)})),g}return null},wA=DA.isStandardBrowserEnv?{write:function(A,I,g,B,C,Q){const E=[];E.push(A+\"=\"+encodeURIComponent(I)),p.isNumber(g)&&E.push(\"expires=\"+new Date(g).toGMTString()),p.isString(B)&&E.push(\"path=\"+B),p.isString(C)&&E.push(\"domain=\"+C),!0===Q&&E.push(\"secure\"),document.cookie=E.join(\"; \")},read:function(A){const I=document.cookie.match(new RegExp(\"(^|;\\\\s*)(\"+A+\")=([^;]*)\"));return I?decodeURIComponent(I[3]):null},remove:function(A){this.write(A,\"\",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}};function sA(A,I){return A&&!/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(I)?function(A,I){return I?A.replace(/\\/+$/,\"\")+\"/\"+I.replace(/^\\/+/,\"\"):A}(A,I):I}const GA=DA.isStandardBrowserEnv?function(){const A=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement(\"a\");let g;function B(g){let B=g;return A&&(I.setAttribute(\"href\",B),B=I.href),I.setAttribute(\"href\",B),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,\"\"):\"\",host:I.host,search:I.search?I.search.replace(/^\\?/,\"\"):\"\",hash:I.hash?I.hash.replace(/^#/,\"\"):\"\",hostname:I.hostname,port:I.port,pathname:\"/\"===I.pathname.charAt(0)?I.pathname:\"/\"+I.pathname}}return g=B(window.location.href),function(A){const I=p.isString(A)?B(A):A;return I.protocol===g.protocol&&I.host===g.host}}():function(){return!0};function tA(A,I,g){X.call(this,null==A?\"canceled\":A,X.ERR_CANCELED,I,g),this.name=\"CanceledError\"}p.inherits(tA,X,{__CANCEL__:!0});const hA=tA,RA=p.toObjectSet([\"age\",\"authorization\",\"content-length\",\"content-type\",\"etag\",\"expires\",\"from\",\"host\",\"if-modified-since\",\"if-unmodified-since\",\"last-modified\",\"location\",\"max-forwards\",\"proxy-authorization\",\"referer\",\"retry-after\",\"user-agent\"]),FA=Symbol(\"internals\"),yA=Symbol(\"defaults\");function rA(A){return A&&String(A).trim().toLowerCase()}function nA(A){return!1===A||null==A?A:p.isArray(A)?A.map(nA):String(A)}function SA(A,I,g,B){return p.isFunction(B)?B.call(this,I,g):p.isString(I)?p.isString(B)?-1!==I.indexOf(B):p.isRegExp(B)?B.test(I):void 0:void 0}function MA(A,I){I=I.toLowerCase();const g=Object.keys(A);let B,C=g.length;for(;C-- >0;)if(B=g[C],I===B.toLowerCase())return B;return null}function eA(A,I){A&&this.set(A),this[yA]=I||null}Object.assign(eA.prototype,{set:function(A,I,g){const B=this;function C(A,I,g){const C=rA(I);if(!C)throw new Error(\"header name must be a non-empty string\");const Q=MA(B,C);(!Q||!0===g||!1!==B[Q]&&!1!==g)&&(B[Q||I]=nA(A))}return p.isPlainObject(A)?p.forEach(A,((A,g)=>{C(A,g,I)})):C(I,A,g),this},get:function(A,I){if(!(A=rA(A)))return;const g=MA(this,A);if(g){const A=this[g];if(!I)return A;if(!0===I)return function(A){const I=Object.create(null),g=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;let B;for(;B=g.exec(A);)I[B[1]]=B[2];return I}(A);if(p.isFunction(I))return I.call(this,A,g);if(p.isRegExp(I))return I.exec(A);throw new TypeError(\"parser must be boolean|regexp|function\")}},has:function(A,I){if(A=rA(A)){const g=MA(this,A);return!(!g||I&&!SA(0,this[g],g,I))}return!1},delete:function(A,I){const g=this;let B=!1;function C(A){if(A=rA(A)){const C=MA(g,A);!C||I&&!SA(0,g[C],C,I)||(delete g[C],B=!0)}}return p.isArray(A)?A.forEach(C):C(A),B},clear:function(){return Object.keys(this).forEach(this.delete.bind(this))},normalize:function(A){const I=this,g={};return p.forEach(this,((B,C)=>{const Q=MA(g,C);if(Q)return I[Q]=nA(B),void delete I[C];const E=A?function(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,((A,I,g)=>I.toUpperCase()+g))}(C):String(C).trim();E!==C&&delete I[C],I[E]=nA(B),g[E]=!0})),this},toJSON:function(A){const I=Object.create(null);return p.forEach(Object.assign({},this[yA]||null,this),((g,B)=>{null!=g&&!1!==g&&(I[B]=A&&p.isArray(g)?g.join(\", \"):g)})),I}}),Object.assign(eA,{from:function(A){return p.isString(A)?new this((A=>{const I={};let g,B,C;return A&&A.split(\"\\n\").forEach((function(A){C=A.indexOf(\":\"),g=A.substring(0,C).trim().toLowerCase(),B=A.substring(C+1).trim(),!g||I[g]&&RA[g]||(\"set-cookie\"===g?I[g]?I[g].push(B):I[g]=[B]:I[g]=I[g]?I[g]+\", \"+B:B)})),I})(A)):A instanceof this?A:new this(A)},accessor:function(A){const I=(this[FA]=this[FA]={accessors:{}}).accessors,g=this.prototype;function B(A){const B=rA(A);I[B]||(function(A,I){const g=p.toCamelCase(\" \"+I);[\"get\",\"set\",\"has\"].forEach((B=>{Object.defineProperty(A,B+g,{value:function(A,g,C){return this[B].call(this,I,A,g,C)},configurable:!0})}))}(g,A),I[B]=!0)}return p.isArray(A)?A.forEach(B):B(A),this}}),eA.accessor([\"Content-Type\",\"Content-Length\",\"Accept\",\"Accept-Encoding\",\"User-Agent\"]),p.freezeMethods(eA.prototype),p.freezeMethods(eA);const NA=eA;function kA(A,I){let g=0;const B=function(A,I){A=A||10;const g=new Array(A),B=new Array(A);let C,Q=0,E=0;return I=void 0!==I?I:1e3,function(i){const o=Date.now(),D=B[E];C||(C=o),g[Q]=i,B[Q]=o;let a=E,w=0;for(;a!==Q;)w+=g[a++],a%=A;if(Q=(Q+1)%A,Q===E&&(E=(E+1)%A),o-C<I)return;const s=D&&o-D;return s?Math.round(1e3*w/s):void 0}}(50,250);return C=>{const Q=C.loaded,E=C.lengthComputable?C.total:void 0,i=Q-g,o=B(i);g=Q;const D={loaded:Q,total:E,progress:E?Q/E:void 0,bytes:i,rate:o||void 0,estimated:o&&E&&Q<=E?(E-Q)/o:void 0};D[I?\"download\":\"upload\"]=!0,A(D)}}function cA(A){return new Promise((function(I,g){let B=A.data;const C=NA.from(A.headers).normalize(),Q=A.responseType;let E;function i(){A.cancelToken&&A.cancelToken.unsubscribe(E),A.signal&&A.signal.removeEventListener(\"abort\",E)}p.isFormData(B)&&DA.isStandardBrowserEnv&&C.setContentType(!1);let o=new XMLHttpRequest;if(A.auth){const I=A.auth.username||\"\",g=A.auth.password?unescape(encodeURIComponent(A.auth.password)):\"\";C.set(\"Authorization\",\"Basic \"+btoa(I+\":\"+g))}const D=sA(A.baseURL,A.url);function a(){if(!o)return;const B=NA.from(\"getAllResponseHeaders\"in o&&o.getAllResponseHeaders());!function(A,I,g){const B=g.config.validateStatus;g.status&&B&&!B(g.status)?I(new X(\"Request failed with status code \"+g.status,[X.ERR_BAD_REQUEST,X.ERR_BAD_RESPONSE][Math.floor(g.status/100)-4],g.config,g.request,g)):A(g)}((function(A){I(A),i()}),(function(A){g(A),i()}),{data:Q&&\"text\"!==Q&&\"json\"!==Q?o.response:o.responseText,status:o.status,statusText:o.statusText,headers:B,config:A,request:o}),o=null}if(o.open(A.method.toUpperCase(),BA(D,A.params,A.paramsSerializer),!0),o.timeout=A.timeout,\"onloadend\"in o?o.onloadend=a:o.onreadystatechange=function(){o&&4===o.readyState&&(0!==o.status||o.responseURL&&0===o.responseURL.indexOf(\"file:\"))&&setTimeout(a)},o.onabort=function(){o&&(g(new X(\"Request aborted\",X.ECONNABORTED,A,o)),o=null)},o.onerror=function(){g(new X(\"Network Error\",X.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let I=A.timeout?\"timeout of \"+A.timeout+\"ms exceeded\":\"timeout exceeded\";const B=A.transitional||QA;A.timeoutErrorMessage&&(I=A.timeoutErrorMessage),g(new X(I,B.clarifyTimeoutError?X.ETIMEDOUT:X.ECONNABORTED,A,o)),o=null},DA.isStandardBrowserEnv){const I=(A.withCredentials||GA(D))&&A.xsrfCookieName&&wA.read(A.xsrfCookieName);I&&C.set(A.xsrfHeaderName,I)}void 0===B&&C.setContentType(null),\"setRequestHeader\"in o&&p.forEach(C.toJSON(),(function(A,I){o.setRequestHeader(I,A)})),p.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),Q&&\"json\"!==Q&&(o.responseType=A.responseType),\"function\"==typeof A.onDownloadProgress&&o.addEventListener(\"progress\",kA(A.onDownloadProgress,!0)),\"function\"==typeof A.onUploadProgress&&o.upload&&o.upload.addEventListener(\"progress\",kA(A.onUploadProgress)),(A.cancelToken||A.signal)&&(E=I=>{o&&(g(!I||I.type?new hA(null,A,o):I),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(E),A.signal&&(A.signal.aborted?E():A.signal.addEventListener(\"abort\",E)));const w=function(A){const I=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return I&&I[1]||\"\"}(D);w&&-1===DA.protocols.indexOf(w)?g(new X(\"Unsupported protocol \"+w+\":\",X.ERR_BAD_REQUEST,A)):o.send(B||null)}))}const JA={http:cA,xhr:cA},UA=A=>{if(p.isString(A)){const I=JA[A];if(!A)throw Error(p.hasOwnProp(A)?`Adapter '${A}' is not available in the build`:`Can not resolve adapter '${A}'`);return I}if(!p.isFunction(A))throw new TypeError(\"adapter is not a function\");return A},KA={\"Content-Type\":\"application/x-www-form-urlencoded\"},LA={transitional:QA,adapter:function(){let A;return\"undefined\"!=typeof XMLHttpRequest?A=UA(\"xhr\"):\"undefined\"!=typeof process&&\"process\"===p.kindOf(process)&&(A=UA(\"http\")),A}(),transformRequest:[function(A,I){const g=I.getContentType()||\"\",B=g.indexOf(\"application/json\")>-1,C=p.isObject(A);if(C&&p.isHTMLForm(A)&&(A=new FormData(A)),p.isFormData(A))return B&&B?JSON.stringify(aA(A)):A;if(p.isArrayBuffer(A)||p.isBuffer(A)||p.isStream(A)||p.isFile(A)||p.isBlob(A))return A;if(p.isArrayBufferView(A))return A.buffer;if(p.isURLSearchParams(A))return I.setContentType(\"application/x-www-form-urlencoded;charset=utf-8\",!1),A.toString();let Q;if(C){if(g.indexOf(\"application/x-www-form-urlencoded\")>-1)return function(A,I){return z(A,new DA.classes.URLSearchParams,Object.assign({visitor:function(A,I,g,B){return DA.isNode&&p.isBuffer(A)?(this.append(I,A.toString(\"base64\")),!1):B.defaultVisitor.apply(this,arguments)}},I))}(A,this.formSerializer).toString();if((Q=p.isFileList(A))||g.indexOf(\"multipart/form-data\")>-1){const I=this.env&&this.env.FormData;return z(Q?{\"files[]\":A}:A,I&&new I,this.formSerializer)}}return C||B?(I.setContentType(\"application/json\",!1),function(A,I,g){if(p.isString(A))try{return(0,JSON.parse)(A),p.trim(A)}catch(A){if(\"SyntaxError\"!==A.name)throw A}return(0,JSON.stringify)(A)}(A)):A}],transformResponse:[function(A){const I=this.transitional||LA.transitional,g=I&&I.forcedJSONParsing,B=\"json\"===this.responseType;if(A&&p.isString(A)&&(g&&!this.responseType||B)){const g=!(I&&I.silentJSONParsing)&&B;try{return JSON.parse(A)}catch(A){if(g){if(\"SyntaxError\"===A.name)throw X.from(A,X.ERR_BAD_RESPONSE,this,null,this.response);throw A}}}return A}],timeout:0,xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",maxContentLength:-1,maxBodyLength:-1,env:{FormData:DA.classes.FormData,Blob:DA.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:\"application/json, text/plain, */*\"}}};p.forEach([\"delete\",\"get\",\"head\"],(function(A){LA.headers[A]={}})),p.forEach([\"post\",\"put\",\"patch\"],(function(A){LA.headers[A]=p.merge(KA)}));const YA=LA;function dA(A,I){const g=this||YA,B=I||g,C=NA.from(B.headers);let Q=B.data;return p.forEach(A,(function(A){Q=A.call(g,Q,C.normalize(),I?I.status:void 0)})),C.normalize(),Q}function qA(A){return!(!A||!A.__CANCEL__)}function HA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new hA}function lA(A){return HA(A),A.headers=NA.from(A.headers),A.data=dA.call(A,A.transformRequest),(A.adapter||YA.adapter)(A).then((function(I){return HA(A),I.data=dA.call(A,A.transformResponse,I),I.headers=NA.from(I.headers),I}),(function(I){return qA(I)||(HA(A),I&&I.response&&(I.response.data=dA.call(A,A.transformResponse,I.response),I.response.headers=NA.from(I.response.headers))),Promise.reject(I)}))}function fA(A,I){I=I||{};const g={};function B(A,I){return p.isPlainObject(A)&&p.isPlainObject(I)?p.merge(A,I):p.isPlainObject(I)?p.merge({},I):p.isArray(I)?I.slice():I}function C(g){return p.isUndefined(I[g])?p.isUndefined(A[g])?void 0:B(void 0,A[g]):B(A[g],I[g])}function Q(A){if(!p.isUndefined(I[A]))return B(void 0,I[A])}function E(g){return p.isUndefined(I[g])?p.isUndefined(A[g])?void 0:B(void 0,A[g]):B(void 0,I[g])}function i(g){return g in I?B(A[g],I[g]):g in A?B(void 0,A[g]):void 0}const o={url:Q,method:Q,data:Q,baseURL:E,transformRequest:E,transformResponse:E,paramsSerializer:E,timeout:E,timeoutMessage:E,withCredentials:E,adapter:E,responseType:E,xsrfCookieName:E,xsrfHeaderName:E,onUploadProgress:E,onDownloadProgress:E,decompress:E,maxContentLength:E,maxBodyLength:E,beforeRedirect:E,transport:E,httpAgent:E,httpsAgent:E,cancelToken:E,socketPath:E,responseEncoding:E,validateStatus:i};return p.forEach(Object.keys(A).concat(Object.keys(I)),(function(A){const I=o[A]||C,B=I(A);p.isUndefined(B)&&I!==i||(g[A]=B)})),g}const uA={};[\"object\",\"boolean\",\"number\",\"function\",\"string\",\"symbol\"].forEach(((A,I)=>{uA[A]=function(g){return typeof g===A||\"a\"+(I<1?\"n \":\" \")+A}}));const WA={};uA.transitional=function(A,I,g){function B(A,I){return\"[Axios v1.1.3] Transitional option '\"+A+\"'\"+I+(g?\". \"+g:\"\")}return(g,C,Q)=>{if(!1===A)throw new X(B(C,\" has been removed\"+(I?\" in \"+I:\"\")),X.ERR_DEPRECATED);return I&&!WA[C]&&(WA[C]=!0,console.warn(B(C,\" has been deprecated since v\"+I+\" and will be removed in the near future\"))),!A||A(g,C,Q)}};const mA={assertOptions:function(A,I,g){if(\"object\"!=typeof A)throw new X(\"options must be an object\",X.ERR_BAD_OPTION_VALUE);const B=Object.keys(A);let C=B.length;for(;C-- >0;){const Q=B[C],E=I[Q];if(E){const I=A[Q],g=void 0===I||E(I,Q,A);if(!0!==g)throw new X(\"option \"+Q+\" must be \"+g,X.ERR_BAD_OPTION_VALUE)}else if(!0!==g)throw new X(\"Unknown option \"+Q,X.ERR_BAD_OPTION)}},validators:uA},bA=mA.validators;class pA{constructor(A){this.defaults=A,this.interceptors={request:new CA,response:new CA}}request(A,I){\"string\"==typeof A?(I=I||{}).url=A:I=A||{},I=fA(this.defaults,I);const{transitional:g,paramsSerializer:B}=I;void 0!==g&&mA.assertOptions(g,{silentJSONParsing:bA.transitional(bA.boolean),forcedJSONParsing:bA.transitional(bA.boolean),clarifyTimeoutError:bA.transitional(bA.boolean)},!1),void 0!==B&&mA.assertOptions(B,{encode:bA.function,serialize:bA.function},!0),I.method=(I.method||this.defaults.method||\"get\").toLowerCase();const C=I.headers&&p.merge(I.headers.common,I.headers[I.method]);C&&p.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\",\"common\"],(function(A){delete I.headers[A]})),I.headers=new NA(I.headers,C);const Q=[];let E=!0;this.interceptors.request.forEach((function(A){\"function\"==typeof A.runWhen&&!1===A.runWhen(I)||(E=E&&A.synchronous,Q.unshift(A.fulfilled,A.rejected))}));const i=[];let o;this.interceptors.response.forEach((function(A){i.push(A.fulfilled,A.rejected)}));let D,a=0;if(!E){const A=[lA.bind(this),void 0];for(A.unshift.apply(A,Q),A.push.apply(A,i),D=A.length,o=Promise.resolve(I);a<D;)o=o.then(A[a++],A[a++]);return o}D=Q.length;let w=I;for(a=0;a<D;){const A=Q[a++],I=Q[a++];try{w=A(w)}catch(A){I.call(this,A);break}}try{o=lA.call(this,w)}catch(A){return Promise.reject(A)}for(a=0,D=i.length;a<D;)o=o.then(i[a++],i[a++]);return o}getUri(A){return BA(sA((A=fA(this.defaults,A)).baseURL,A.url),A.params,A.paramsSerializer)}}p.forEach([\"delete\",\"get\",\"head\",\"options\"],(function(A){pA.prototype[A]=function(I,g){return this.request(fA(g||{},{method:A,url:I,data:(g||{}).data}))}})),p.forEach([\"post\",\"put\",\"patch\"],(function(A){function I(I){return function(g,B,C){return this.request(fA(C||{},{method:A,headers:I?{\"Content-Type\":\"multipart/form-data\"}:{},url:g,data:B}))}}pA.prototype[A]=I(),pA.prototype[A+\"Form\"]=I(!0)}));const ZA=pA;class xA{constructor(A){if(\"function\"!=typeof A)throw new TypeError(\"executor must be a function.\");let I;this.promise=new Promise((function(A){I=A}));const g=this;this.promise.then((A=>{if(!g._listeners)return;let I=g._listeners.length;for(;I-- >0;)g._listeners[I](A);g._listeners=null})),this.promise.then=A=>{let I;const B=new Promise((A=>{g.subscribe(A),I=A})).then(A);return B.cancel=function(){g.unsubscribe(I)},B},A((function(A,B,C){g.reason||(g.reason=new hA(A,B,C),I(g.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){this.reason?A(this.reason):this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;const I=this._listeners.indexOf(A);-1!==I&&this._listeners.splice(I,1)}static source(){let A;return{token:new xA((function(I){A=I})),cancel:A}}}const VA=xA,XA=function A(I){const g=new ZA(I),B=t(ZA.prototype.request,g);return p.extend(B,ZA.prototype,g,{allOwnKeys:!0}),p.extend(B,g,null,{allOwnKeys:!0}),B.create=function(g){return A(fA(I,g))},B}(YA);XA.Axios=ZA,XA.CanceledError=hA,XA.CancelToken=VA,XA.isCancel=qA,XA.VERSION=\"1.1.3\",XA.toFormData=z,XA.AxiosError=X,XA.Cancel=XA.CanceledError,XA.all=function(A){return Promise.all(A)},XA.spread=function(A){return function(I){return A.apply(null,I)}},XA.isAxiosError=function(A){return p.isObject(A)&&!0===A.isAxiosError},XA.formToJSON=A=>aA(p.isHTMLForm(A)?new FormData(A):A);const TA=XA,{Axios:OA,AxiosError:vA,CanceledError:jA,isCancel:PA,CancelToken:zA,VERSION:_A,all:$A,Cancel:AI,isAxiosError:II,spread:gI,toFormData:BI}=TA,CI=TA;var QI=function(){function A(){C(this,A)}var g;return E(A,null,[{key:\"fetchRemoteData\",value:(g=I(o().mark((function A(I){var g;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,CI.get(I,{responseType:\"arraybuffer\"});case 3:return g=A.sent,A.abrupt(\"return\",new Uint8Array(g.data));case 7:throw A.prev=7,A.t0=A.catch(0),A.t0;case 10:case\"end\":return A.stop()}}),A,null,[[0,7]])}))),function(A){return g.apply(this,arguments)})},{key:\"string2Uint8Data\",value:function(A){for(var I=new Uint8Array(A.length),g=0;g<I.length;g++)I[g]=255&A.charCodeAt(g);return I}},{key:\"uint8Data2String\",value:function(A){return String.fromCharCode.apply(String,A)}},{key:\"parseMultiFile\",value:function(I){var g=A.uint8Data2String(I).split(\"\\n\"),B=[],C=0;return g.forEach((function(A){if((A=A.trim())&&!A.startsWith(\"#\"))switch(C){case 0:return void(C=1);case 1:A.match(/^\\d+$/)||B.push(A);case 2:case 3:case 4:return void C++;case 5:return void(C=1)}})),B}}]),A}(),EI=function(){function A(){C(this,A),this.instance,this.markerCount=0,this.multiMarkerCount=0,this.cameraCount=0,this.version=\"0.1.3\",console.info(\"ARToolkit \",this.version)}var B,Q,i,D,a;return E(A,[{key:\"init\",value:(a=I(o().mark((function A(){var I;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,G();case 2:return I=A.sent,this.instance=I.instance,this._decorate(),(\"undefined\"!=typeof window?window:g.g).artoolkit=this,A.abrupt(\"return\",this);case 8:case\"end\":return A.stop()}}),A,this)}))),function(){return a.apply(this,arguments)})},{key:\"_decorate\",value:function(){var A=this;for(var I in[\"setup\",\"teardown\",\"setupAR2\",\"setLogLevel\",\"getLogLevel\",\"setDebugMode\",\"getDebugMode\",\"getProcessingImage\",\"setMarkerInfoDir\",\"setMarkerInfoVertex\",\"getTransMatSquare\",\"getTransMatSquareCont\",\"getTransMatMultiSquare\",\"getTransMatMultiSquareRobust\",\"getMultiMarkerNum\",\"getMultiMarkerCount\",\"detectMarker\",\"getMarkerNum\",\"detectNFTMarker\",\"getNFTMarker\",\"getMarker\",\"getMultiEachMarker\",\"setProjectionNearPlane\",\"getProjectionNearPlane\",\"setProjectionFarPlane\",\"getProjectionFarPlane\",\"setThresholdMode\",\"getThresholdMode\",\"setThreshold\",\"getThreshold\",\"setPatternDetectionMode\",\"getPatternDetectionMode\",\"setMatrixCodeType\",\"getMatrixCodeType\",\"setLabelingMode\",\"getLabelingMode\",\"setPattRatio\",\"getPattRatio\",\"setImageProcMode\",\"getImageProcMode\"].forEach((function(I){A[I]=A.instance[I]})),this.instance)I.match(/^AR/)&&(this[I]=this.instance[I])}},{key:\"loadCamera\",value:(D=I(o().mark((function A(I){var g,B;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(g=\"/camera_param_\"+this.cameraCount++,!(I instanceof Uint8Array)){A.next=5;break}B=I,A.next=14;break;case 5:return A.prev=5,A.next=8,QI.fetchRemoteData(I);case 8:B=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(B,g),A.abrupt(\"return\",this.instance._loadCamera(g));case 16:case\"end\":return A.stop()}}),A,this,[[5,11]])}))),function(A){return D.apply(this,arguments)})},{key:\"addMarker\",value:(i=I(o().mark((function A(I,g){var B,C;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(B=\"/marker_\"+this.markerCount++,-1===g.indexOf(\"\\n\")){A.next=5;break}C=QI.string2Uint8Data(g),A.next=14;break;case 5:return A.prev=5,A.next=8,QI.fetchRemoteData(g);case 8:C=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(C,B),A.abrupt(\"return\",this.instance._addMarker(I,B));case 16:case\"end\":return A.stop()}}),A,this,[[5,11]])}))),function(A,I){return i.apply(this,arguments)})},{key:\"addMultiMarker\",value:(Q=I(o().mark((function A(g,B){var C,Q,E,i,D,a,w;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return C=\"/multi_marker_\"+this.multiMarkerCount++,A.next=3,QI.fetchRemoteData(B);case 3:return Q=A.sent,E=QI.parseMultiFile(Q),i=function(){var A=I(o().mark((function A(I){var g,C;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return g=new URL(I,B).toString(),A.next=3,QI.fetchRemoteData(g);case 3:C=A.sent,this._storeDataFile(C,I);case 5:case\"end\":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),D=E.map(i,this),A.next=9,Promise.all(D);case 9:return a=this.instance._addMultiMarker(g,C),w=this.instance.getMultiMarkerNum(g,a),A.abrupt(\"return\",[a,w]);case 12:case\"end\":return A.stop()}}),A,this)}))),function(A,I){return Q.apply(this,arguments)})},{key:\"addNFTMarker\",value:(B=I(o().mark((function A(g,B){var C,Q,E,i;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return C=\"/markerNFT_\"+this.markerCount++,Q=[\"fset\",\"iset\",\"fset3\"],E=function(){var A=I(o().mark((function A(I){var g,Q,E;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return g=B+\".\"+I,Q=C+\".\"+I,A.next=4,QI.fetchRemoteData(g);case 4:E=A.sent,this._storeDataFile(E,Q);case 6:case\"end\":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),i=Q.map(E,this),A.next=6,Promise.all(i);case 6:return A.abrupt(\"return\",this.instance._addNFTMarker(g,C));case 7:case\"end\":return A.stop()}}),A,this)}))),function(A,I){return B.apply(this,arguments)})},{key:\"_storeDataFile\",value:function(A,I){this.instance.FS.writeFile(I,A,{encoding:\"binary\"})}}],[{key:\"UNKNOWN_MARKER\",get:function(){return-1}},{key:\"PATTERN_MARKER\",get:function(){return 0}},{key:\"BARCODE_MARKER\",get:function(){return 1}},{key:\"NFT_MARKER\",get:function(){return 2}}]),A}();function iI(A,I,g){return I in A?Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}):A[I]=g,A}function oI(A,I){var g=Object.keys(A);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(A);I&&(B=B.filter((function(I){return Object.getOwnPropertyDescriptor(A,I).enumerable}))),g.push.apply(g,B)}return g}function DI(A){for(var I=1;I<arguments.length;I++){var g=null!=arguments[I]?arguments[I]:{};I%2?oI(Object(g),!0).forEach((function(I){iI(A,I,g[I])})):Object.getOwnPropertyDescriptors?Object.defineProperties(A,Object.getOwnPropertyDescriptors(g)):oI(Object(g)).forEach((function(I){Object.defineProperty(A,I,Object.getOwnPropertyDescriptor(g,I))}))}return A}var aI=function(){function A(I,g,B,Q){C(this,A),this.options=DI(DI({},{canvas:null,orientation:\"landscape\"}),Q),this.id=-1,this.width=I,this.height=g,this.image,this.orientation=this.options.orientation,this.cameraParam=B,this.cameraId=-1,this.cameraLoaded=!1,this.artoolkit,this.listeners={},this.defaultMarkerWidth=1,this.patternMarkers={},this.barcodeMarkers={},this.nftMarkers={},this.transform_mat=new Float32Array(16),this.transformGL_RH=new Float64Array(16),this.videoWidth=I,this.videoHeight=g,this.videoSize=this.videoWidth*this.videoHeight,this.framepointer=null,this.framesize=null,this.dataHeap=null,this.videoLuma=null,this.camera_mat=null,this.marker_transform_mat=null,this.videoLumaPointer=null,this.options.canvas?this.canvas=this.options.canvas:\"undefined\"!=typeof document&&(this.canvas=document.createElement(\"canvas\")),this.canvas?(this.canvas.width=I,this.canvas.height=g,this.ctx=this.canvas.getContext(\"2d\")):console.warn(\"No canvas available\"),this.nftMarkerFound=!1,this.nftMarkerFoundTime=!1,this.nftMarkerCount=0,this._bwpointer=!1}var g,B,Q,i,D,a;return E(A,[{key:\"dispose\",value:function(){for(var A in this.cameraId=-1,this.cameraParam=\"\",this.cameraLoaded=!1,this.id>-1&&this.artoolkit.teardown(this.id),this.image&&this.image.srcObject,this)this[A]=null}},{key:\"process\",value:function(A){var I=this.detectMarker(A);0!=I&&console.error(\"[ARController]\",\"detectMarker error:\",I);var g,B,C=this.getMarkerNum();for(g in this.patternMarkers)(B=this.patternMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(g in this.barcodeMarkers)(B=this.barcodeMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(g in this.nftMarkers)(B=this.nftMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(var Q=0;Q<C;Q++){var E=this.getMarker(Q),i=EI.UNKNOWN_MARKER,o=this.trackPatternMarkerId(-1);E.idPatt>-1&&(E.id===E.idPatt||-1===E.idMatrix)?(o=this.trackPatternMarkerId(E.idPatt),i=EI.PATTERN_MARKER,E.dir!==E.dirPatt&&this.setMarkerInfoDir(Q,E.dirPatt)):E.idMatrix>-1&&(o=this.trackBarcodeMarkerId(E.idMatrix),i=EI.BARCODE_MARKER,E.dir!==E.dirMatrix&&this.setMarkerInfoDir(Q,E.dirMatrix)),i!==EI.UNKNOWN_MARKER&&o.inPrevious?this.getTransMatSquareCont(Q,o.markerWidth,o.matrix,o.matrix):this.getTransMatSquare(Q,o.markerWidth,o.matrix),o.inCurrent=!0,this.transMatToGLMat(o.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:\"getMarker\",target:this,data:{index:Q,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}var D=this.nftMarkerCount;this.detectNFTMarker();for(var a=0;a<D;a++){var w=this.getNFTMarker(a),s=EI.NFT_MARKER;if(w.found){this.nftMarkerFound=a,this.nftMarkerFoundTime=Date.now();var G=this.trackNFTMarkerId(a);G.matrix.set(w.pose),G.inCurrent=!0,this.transMatToGLMat(G.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:\"getNFTMarker\",target:this,data:{index:a,type:s,marker:w,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}else self.nftMarkerFound===a&&Date.now()-this.nftMarkerFoundTime>200&&(this.nftMarkerFound=!1,this.dispatchEvent({name:\"lostNFTMarker\",target:this,data:{index:a,type:s,marker:w,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}}))}for(var t=this.getMultiMarkerCount(),h=0;h<t;h++){var R=this.getMultiMarkerPatternCount(h),F=!1;this.artoolkit.getTransMatMultiSquareRobust(this.id,h),this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat);for(var y=0;y<R;y++)if((n=this.getMultiEachMarker(h,y)).visible>=0){F=!0,this.dispatchEvent({name:\"getMultiMarker\",target:this,data:{multiMarkerId:h,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}});break}if(F)for(var r=0;r<R;r++){var n=this.getMultiEachMarker(h,r);this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:\"getMultiMarkerSub\",target:this,data:{multiMarkerId:h,markerIndex:r,marker:n,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}}this._bwpointer&&this.debugDraw()}},{key:\"detectNFTMarker\",value:function(){this.artoolkit.detectNFTMarker(this.id)}},{key:\"trackPatternMarkerId\",value:function(A,I){var g=this.patternMarkers[A];return g||(this.patternMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:\"trackBarcodeMarkerId\",value:function(A,I){var g=this.barcodeMarkers[A];return g||(this.barcodeMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:\"trackNFTMarkerId\",value:function(A,I){var g=this.nftMarkers[A];return g||(this.nftMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:\"getMultiMarkerCount\",value:function(){return this.artoolkit.getMultiMarkerCount(this.id)}},{key:\"getMultiMarkerPatternCount\",value:function(A){return this.artoolkit.getMultiMarkerNum(this.id,A)}},{key:\"addEventListener\",value:function(A,I){this.listeners[A]||(this.listeners[A]=[]),this.listeners[A].push(I)}},{key:\"removeEventListener\",value:function(A,I){if(this.listeners[A]){var g=this.listeners[A].indexOf(I);g>-1&&this.listeners[A].splice(g,1)}}},{key:\"dispatchEvent\",value:function(A){var I=this.listeners[A.name];if(I)for(var g=0;g<I.length;g++)I[g].call(this,A)}},{key:\"debugSetup\",value:function(){\"undefined\"!=typeof document?(document.body.appendChild(this.canvas),this.setDebugMode(!0),this._bwpointer=this.getProcessingImage()):console.log(\"debugSetup() currently only supports Browser environments\")}},{key:\"debugDraw\",value:function(){for(var A=new Uint8ClampedArray(this.artoolkit.instance.HEAPU8.buffer,this._bwpointer,this.framesize),I=new ImageData(new Uint8ClampedArray(this.canvas.width*this.canvas.height*4),this.canvas.width,this.canvas.height),g=0,B=0;g<A.length;g++,B+=4){var C=A[g];I.data[B+0]=C,I.data[B+1]=C,I.data[B+2]=C,I.data[B+3]=255}this.ctx.putImageData(I,0,0);for(var Q=this.getMarkerNum(),E=0;E<Q;E++)this.drawDebugMarker(this.getMarker(E))}},{key:\"drawDebugMarker\",value:function(A){var I=A.vertex,g=A.pos,B=this.ctx;B.lineWidth=5,B.strokeStyle=\"red\",B.beginPath(),B.moveTo(I[0][0],I[0][1]),B.lineTo(I[1][0],I[1][1]),B.stroke(),B.beginPath(),B.moveTo(I[2][0],I[2][1]),B.lineTo(I[3][0],I[3][1]),B.stroke(),B.strokeStyle=\"green\",B.beginPath(),B.lineTo(I[1][0],I[1][1]),B.lineTo(I[2][0],I[2][1]),B.stroke(),B.beginPath(),B.moveTo(I[3][0],I[3][1]),B.lineTo(I[0][0],I[0][1]),B.stroke(),B.beginPath(),B.arc(g[0],g[1],8,0,2*Math.PI),B.fillStyle=\"red\",B.fill()}},{key:\"loadMarker\",value:(a=I(o().mark((function A(I){return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMarker(this.id,I);case 2:return A.abrupt(\"return\",A.sent);case 3:case\"end\":return A.stop()}}),A,this)}))),function(A){return a.apply(this,arguments)})},{key:\"loadMultiMarker\",value:(D=I(o().mark((function A(I){return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMultiMarker(this.id,I);case 2:return A.abrupt(\"return\",A.sent);case 3:case\"end\":return A.stop()}}),A,this)}))),function(A){return D.apply(this,arguments)})},{key:\"loadNFTMarker\",value:(i=I(o().mark((function A(I){var g;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addNFTMarker(this.id,I);case 2:return g=A.sent,this.nftMarkerCount=g+1,A.abrupt(\"return\",g);case 5:case\"end\":return A.stop()}}),A,this)}))),function(A){return i.apply(this,arguments)})},{key:\"getTransMatSquare\",value:function(A,I,g){return this.artoolkit.getTransMatSquare(this.id,A,I),g.set(this.marker_transform_mat),g}},{key:\"getTransMatSquareCont\",value:function(A,I,g,B){return this.marker_transform_mat.set(g),this.artoolkit.getTransMatSquareCont(this.id,A,I),B.set(this.marker_transform_mat),B}},{key:\"getTransMatMultiSquare\",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:\"getTransMatMultiSquareRobust\",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:\"transMatToGLMat\",value:function(A,I,g){return null==I&&(I=new Float64Array(16)),I[0]=A[0],I[4]=A[1],I[8]=A[2],I[12]=A[3],I[1]=A[4],I[5]=A[5],I[9]=A[6],I[13]=A[7],I[2]=A[8],I[6]=A[9],I[10]=A[10],I[14]=A[11],I[3]=0,I[7]=0,I[11]=0,I[15]=1,null!=g&&0!==g&&(I[12]*=g,I[13]*=g,I[14]*=g),I}},{key:\"arglCameraViewRHf\",value:function(A,I,g){var B;return(B=null==I?new Float64Array(16):I)[0]=A[0],B[4]=A[4],B[8]=A[8],B[12]=A[12],B[1]=-A[1],B[5]=-A[5],B[9]=-A[9],B[13]=-A[13],B[2]=-A[2],B[6]=-A[6],B[10]=-A[10],B[14]=-A[14],B[3]=0,B[7]=0,B[11]=0,B[15]=1,null!=g&&0!==g&&(B[12]*=g,B[13]*=g,B[14]*=g),B}},{key:\"detectMarker\",value:function(A){return this._copyImageToHeap(A)?this.artoolkit.detectMarker(this.id):-99}},{key:\"getMarkerNum\",value:function(){return this.artoolkit.getMarkerNum(this.id)}},{key:\"getMarker\",value:function(A){if(0===this.artoolkit.getMarker(this.id,A))return this.artoolkit.markerInfo}},{key:\"getNFTMarker\",value:function(A){if(0===this.artoolkit.getNFTMarker(this.id,A))return this.artoolkit.NFTMarkerInfo}},{key:\"setMarkerInfoVertex\",value:function(A,I){for(var g=0;g<I.length;g++)this.marker_transform_mat[2*g+0]=I[g][0],this.marker_transform_mat[2*g+1]=I[g][1];return this.artoolkit.setMarkerInfoVertex(this.id,A)}},{key:\"cloneMarkerInfo\",value:function(A){return JSON.parse(JSON.stringify(A))}},{key:\"getMultiEachMarker\",value:function(A,I){if(0===this.artoolkit.getMultiEachMarker(this.id,A,I))return this.artoolkit.multiEachMarkerInfo}},{key:\"getTransformationMatrix\",value:function(){return this.transform_mat}},{key:\"getCameraMatrix\",value:function(){return this.camera_mat}},{key:\"getMarkerTransformationMatrix\",value:function(){return this.marker_transform_mat}},{key:\"setDebugMode\",value:function(A){return this.artoolkit.setDebugMode(this.id,A)}},{key:\"getDebugMode\",value:function(){return this.artoolkit.getDebugMode(this.id)}},{key:\"getProcessingImage\",value:function(){return this.artoolkit.getProcessingImage(this.id)}},{key:\"setLogLevel\",value:function(A){return this.artoolkit.setLogLevel(A)}},{key:\"getLogLevel\",value:function(){return this.artoolkit.getLogLevel()}},{key:\"setMarkerInfoDir\",value:function(A,I){return this.artoolkit.setMarkerInfoDir(this.id,A,I)}},{key:\"setProjectionNearPlane\",value:function(A){return this.artoolkit.setProjectionNearPlane(this.id,A)}},{key:\"getProjectionNearPlane\",value:function(){return this.artoolkit.getProjectionNearPlane(this.id)}},{key:\"setProjectionFarPlane\",value:function(A){return this.artoolkit.setProjectionFarPlane(this.id,A)}},{key:\"getProjectionFarPlane\",value:function(){return this.artoolkit.getProjectionFarPlane(this.id)}},{key:\"setThresholdMode\",value:function(A){return this.artoolkit.setThresholdMode(this.id,A)}},{key:\"getThresholdMode\",value:function(){return this.artoolkit.getThresholdMode(this.id)}},{key:\"setThreshold\",value:function(A){return this.artoolkit.setThreshold(this.id,A)}},{key:\"getThreshold\",value:function(){return this.artoolkit.getThreshold(this.id)}},{key:\"setPatternDetectionMode\",value:function(A){return this.artoolkit.setPatternDetectionMode(this.id,A)}},{key:\"getPatternDetectionMode\",value:function(){return this.artoolkit.getPatternDetectionMode(this.id)}},{key:\"setMatrixCodeType\",value:function(A){return this.artoolkit.setMatrixCodeType(this.id,A)}},{key:\"getMatrixCodeType\",value:function(){return this.artoolkit.getMatrixCodeType(this.id)}},{key:\"setLabelingMode\",value:function(A){return this.artoolkit.setLabelingMode(this.id,A)}},{key:\"getLabelingMode\",value:function(){return this.artoolkit.getLabelingMode(this.id)}},{key:\"setPattRatio\",value:function(A){return this.artoolkit.setPattRatio(this.id,A)}},{key:\"getPattRatio\",value:function(){return this.artoolkit.getPattRatio(this.id)}},{key:\"setImageProcMode\",value:function(A){return this.artoolkit.setImageProcMode(this.id,A)}},{key:\"getImageProcMode\",value:function(){return this.artoolkit.getImageProcMode(this.id)}},{key:\"_initialize\",value:(Q=I(o().mark((function A(){var I,g=this;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,(new EI).init();case 2:return this.artoolkit=A.sent,console.log(\"[ARController]\",\"ARToolkit initialized\"),A.next=6,this.artoolkit.loadCamera(this.cameraParam);case 6:return this.cameraId=A.sent,console.log(\"[ARController]\",\"Camera params loaded with ID\",this.cameraId),this.id=this.artoolkit.setup(this.width,this.height,this.cameraId),console.log(\"[ARController]\",\"Got ID from setup\",this.id),this._initNFT(),I=artoolkit.frameMalloc,this.framepointer=I.framepointer,this.framesize=I.framesize,this.videoLumaPointer=I.videoLumaPointer,this.dataHeap=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.framepointer,this.framesize),this.videoLuma=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.videoLumaPointer,this.framesize/4),this.camera_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.camera,16),this.marker_transform_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.transform,12),this.setProjectionNearPlane(.1),this.setProjectionFarPlane(1e3),setTimeout((function(){g.dispatchEvent({name:\"load\",target:g})}),1),A.abrupt(\"return\",this);case 23:case\"end\":return A.stop()}}),A,this)}))),function(){return Q.apply(this,arguments)})},{key:\"_initNFT\",value:function(){this.artoolkit.setupAR2(this.id)}},{key:\"_copyImageToHeap\",value:function(A){var I;if(A||(A=this.image),A.data)I=A.data;else{if(this.ctx.save(),\"portrait\"===this.orientation){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);var g=this.canvas.height/this.canvas.width,B=this.canvas.width*g,C=this.canvas.height*g,Q=(this.canvas.width-C)/2;this.ctx.drawImage(A,Q,0,C,B)}else this.ctx.drawImage(A,0,0,this.canvas.width,this.canvas.height);this.ctx.restore(),I=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height).data}if(this.videoLuma)for(var E=0,i=0;i<this.videoSize;i++){var o=I[E+0],D=I[E+1],a=I[E+2];this.videoLuma[i]=o+o+o+a+D+D+D+D>>3,E+=4}return!!this.dataHeap&&(this.dataHeap.set(I),!0)}}],[{key:\"initWithDimensions\",value:(B=I(o().mark((function I(g,B,C,Q){var E;return o().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return E=new A(g,B,C,Q),I.next=3,E._initialize();case 3:return I.abrupt(\"return\",I.sent);case 4:case\"end\":return I.stop()}}),I)}))),function(A,I,g,C){return B.apply(this,arguments)})},{key:\"initWithImage\",value:(g=I(o().mark((function I(g,B,C){var Q,E,i;return o().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return Q=g.videoWidth||g.width,E=g.videoHeight||g.height,I.next=4,A.initWithDimensions(Q,E,B,C);case 4:return(i=I.sent).image=g,I.abrupt(\"return\",i);case 7:case\"end\":return I.stop()}}),I)}))),function(A,I,B){return g.apply(this,arguments)})}]),A}();const wI={ARToolkit:EI,ARController:aI}})(),B.default})()));\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\n(() => {\n\"use strict\";\n/*!***************************************************************!*\\\n  !*** ./three.js/src/threex/arjs-markercontrols-nft.worker.js ***!\n  \\***************************************************************/\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsartoolkit */ \"./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js\");\n/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsartoolkit__WEBPACK_IMPORTED_MODULE_0__);\n/* eslint-env worker */\n\nconst { ARController } = (jsartoolkit__WEBPACK_IMPORTED_MODULE_0___default());\n\nonmessage = function (e) {\n  var msg = e.data;\n  switch (msg.type) {\n    case \"init\": {\n      load(msg);\n      return;\n    }\n    case \"process\": {\n      next = msg.imagedata;\n      process();\n      return;\n    }\n  }\n};\n\nvar next = null;\n\nvar ar = null;\nvar markerResult = null;\n\nfunction load(msg) {\n  var camUrl, nftMarkerUrl;\n  var basePath = self.origin;\n  console.log(\"base path:\", basePath);\n  // test if the msg.param (the incoming url) is an http or https path\n  var regexC =\n    /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim;\n  var reC = regexC.test(msg.param);\n  if (reC == true) {\n    camUrl = msg.param;\n  } else if (reC == false) {\n    camUrl = basePath + \"/\" + msg.param;\n  }\n  var onLoad = function (arController) {\n    ar = arController;\n    var cameraMatrix = ar.getCameraMatrix();\n\n    // after the ARController is set up, we load the NFT Marker\n    var regexM =\n      /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim;\n    var reM = regexM.test(msg.marker);\n    if (reM == true) {\n      nftMarkerUrl = msg.marker;\n    } else if (reM == false) {\n      nftMarkerUrl = basePath + \"/\" + msg.marker;\n    }\n    ar.loadNFTMarker(nftMarkerUrl)\n      .then(function (markerId) {\n        ar.trackNFTMarkerId(markerId);\n        postMessage({ type: \"endLoading\" });\n      })\n      .catch(function (err) {\n        console.log(\"Error in loading marker on Worker\", err);\n      });\n\n    // ...and we listen for event when marker has been found from camera\n    ar.addEventListener(\"getNFTMarker\", function (ev) {\n      // let AR.js know that a NFT marker has been found, with its matrix for positioning\n      markerResult = {\n        type: \"found\",\n        matrix: JSON.stringify(ev.data.matrix),\n      };\n    });\n\n    postMessage({ type: \"loaded\", proj: JSON.stringify(cameraMatrix) });\n  };\n\n  var onError = function (error) {\n    console.error(\"Error while intizalizing arController\", error);\n  };\n\n  ARController.initWithDimensions(msg.pw, msg.ph, camUrl)\n    .then(onLoad)\n    .catch(onError);\n}\n\nfunction process() {\n  markerResult = null;\n\n  if (ar && ar.process) {\n    ar.process(next);\n  }\n\n  if (markerResult) {\n    postMessage(markerResult);\n  } else {\n    postMessage({\n      type: \"not found\",\n    });\n  }\n  next = null;\n}\n\n})();\n\n/******/ })()\n;\n", "Worker", undefined, undefined);
}


/***/ }),

/***/ "./node_modules/worker-loader/dist/runtime/inline.js":
/*!***********************************************************!*\
  !*** ./node_modules/worker-loader/dist/runtime/inline.js ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";


/* eslint-env browser */

/* eslint-disable no-undef, no-use-before-define, new-cap */
module.exports = function (content, workerConstructor, workerOptions, url) {
  var globalScope = self || window;

  try {
    try {
      var blob;

      try {
        // New API
        blob = new globalScope.Blob([content]);
      } catch (e) {
        // BlobBuilder = Deprecated, but widely implemented
        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;
        blob = new BlobBuilder();
        blob.append(content);
        blob = blob.getBlob();
      }

      var URL = globalScope.URL || globalScope.webkitURL;
      var objectURL = URL.createObjectURL(blob);
      var worker = new globalScope[workerConstructor](objectURL, workerOptions);
      URL.revokeObjectURL(objectURL);
      return worker;
    } catch (e) {
      return new globalScope[workerConstructor]("data:application/javascript,".concat(encodeURIComponent(content)), workerOptions);
    }
  } catch (e) {
    if (!url) {
      throw Error("Inline worker is not supported");
    }

    return new globalScope[workerConstructor](url, workerOptions);
  }
};

/***/ }),

/***/ "./three.js/src/markers-area/arjs-markersareacontrols.js":
/*!***************************************************************!*\
  !*** ./three.js/src/markers-area/arjs-markersareacontrols.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../threex/threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");
/* harmony import */ var _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../threex/arjs-markercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./arjs-markersareacontrols */ "./three.js/src/markers-area/arjs-markersareacontrols.js");





const MarkersAreaControls = function (arToolkitContext, object3d, parameters) {
  var _this = this;
  _threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__["default"].call(this, object3d);

  if (arguments.length > 3)
    console.assert("wrong api for", MarkersAreaControls);

  // have a parameters in argument
  this.parameters = {
    // list of controls for each subMarker
    subMarkersControls: parameters.subMarkersControls,
    // list of pose for each subMarker relative to the origin
    subMarkerPoses: parameters.subMarkerPoses,
    // change matrix mode - [modelViewMatrix, cameraTransformMatrix]
    changeMatrixMode:
      parameters.changeMatrixMode !== undefined
        ? parameters.changeMatrixMode
        : "modelViewMatrix",
  };

  this.object3d.visible = false;
  // honor obsolete stuff - add a warning to use
  this.subMarkersControls = this.parameters.subMarkersControls;
  this.subMarkerPoses = this.parameters.subMarkerPoses;

  // listen to arToolkitContext event 'sourceProcessed'
  // - after we fully processed one image, aka when we know all detected poses in it
  arToolkitContext.addEventListener("sourceProcessed", function () {
    _this._onSourceProcessed();
  });
};

MarkersAreaControls.prototype = Object.create(_threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__["default"].prototype);
MarkersAreaControls.prototype.constructor = MarkersAreaControls;

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

/**
 * What to do when a image source is fully processed
 */
MarkersAreaControls.prototype._onSourceProcessed = function () {
  var _this = this;
  var stats = {
    count: 0,
    position: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
    },
    quaternion: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0, 0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0, 0, 0, 0),
    },
    scale: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
    },
  };

  var firstQuaternion =
    _this.parameters.subMarkersControls[0].object3d.quaternion;

  this.parameters.subMarkersControls.forEach(function (
    markerControls,
    markerIndex
  ) {
    var markerObject3d = markerControls.object3d;
    // if this marker is not visible, ignore it
    if (markerObject3d.visible === false) return;

    // transformation matrix of this.object3d according to this sub-markers
    var matrix = markerObject3d.matrix.clone();
    var markerPose = _this.parameters.subMarkerPoses[markerIndex];
    matrix.multiply(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().getInverse(markerPose));

    // decompose the matrix into .position, .quaternion, .scale
    var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();
    var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    matrix.decompose(position, quaternion, scale);

    // http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
    stats.count++;

    MarkersAreaControls.averageVector3(
      stats.position.sum,
      position,
      stats.count,
      stats.position.average
    );
    MarkersAreaControls.averageQuaternion(
      stats.quaternion.sum,
      quaternion,
      firstQuaternion,
      stats.count,
      stats.quaternion.average
    );
    MarkersAreaControls.averageVector3(
      stats.scale.sum,
      scale,
      stats.count,
      stats.scale.average
    );
  });

  // honor _this.object3d.visible
  if (stats.count > 0) {
    _this.object3d.visible = true;
  } else {
    _this.object3d.visible = false;
  }

  // if at least one sub-marker has been detected, make the average of all detected markers
  if (stats.count > 0) {
    // compute modelViewMatrix
    var modelViewMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4();
    modelViewMatrix.compose(
      stats.position.average,
      stats.quaternion.average,
      stats.scale.average
    );

    // change _this.object3d.matrix based on parameters.changeMatrixMode
    if (this.parameters.changeMatrixMode === "modelViewMatrix") {
      _this.object3d.matrix.copy(modelViewMatrix);
    } else if (this.parameters.changeMatrixMode === "cameraTransformMatrix") {
      _this.object3d.matrix.getInverse(modelViewMatrix);
    } else {
      console.assert(false);
    }

    // decompose - the matrix into .position, .quaternion, .scale
    _this.object3d.matrix.decompose(
      _this.object3d.position,
      _this.object3d.quaternion,
      _this.object3d.scale
    );
  }
};

//////////////////////////////////////////////////////////////////////////////
//		Utility functions
//////////////////////////////////////////////////////////////////////////////

/**
 * from http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
 */
MarkersAreaControls.averageQuaternion = function (
  quaternionSum,
  newQuaternion,
  firstQuaternion,
  count,
  quaternionAverage
) {
  quaternionAverage = quaternionAverage || new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();
  // sanity check
  console.assert(firstQuaternion instanceof three__WEBPACK_IMPORTED_MODULE_0__.Quaternion === true);

  // from http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
  if (newQuaternion.dot(firstQuaternion) > 0) {
    newQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(
      -newQuaternion.x,
      -newQuaternion.y,
      -newQuaternion.z,
      -newQuaternion.w
    );
  }

  quaternionSum.x += newQuaternion.x;
  quaternionSum.y += newQuaternion.y;
  quaternionSum.z += newQuaternion.z;
  quaternionSum.w += newQuaternion.w;

  quaternionAverage.x = quaternionSum.x / count;
  quaternionAverage.y = quaternionSum.y / count;
  quaternionAverage.z = quaternionSum.z / count;
  quaternionAverage.w = quaternionSum.w / count;

  quaternionAverage.normalize();

  return quaternionAverage;
};

MarkersAreaControls.averageVector3 = function (
  vector3Sum,
  vector3,
  count,
  vector3Average
) {
  vector3Average = vector3Average || new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();

  vector3Sum.x += vector3.x;
  vector3Sum.y += vector3.y;
  vector3Sum.z += vector3.z;

  vector3Average.x = vector3Sum.x / count;
  vector3Average.y = vector3Sum.y / count;
  vector3Average.z = vector3Sum.z / count;

  return vector3Average;
};

//////////////////////////////////////////////////////////////////////////////
//		Utility function
//////////////////////////////////////////////////////////////////////////////

/**
 * compute the center of this multimarker file
 */
MarkersAreaControls.computeCenter = function (jsonData) {
  var multiMarkerFile = JSON.parse(jsonData);
  var stats = {
    count: 0,
    position: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
    },
    quaternion: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0, 0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0, 0, 0, 0),
    },
    scale: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
    },
  };
  var firstQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(); // FIXME ???

  multiMarkerFile.subMarkersControls.forEach(function (item) {
    var poseMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix);

    var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();
    var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    poseMatrix.decompose(position, quaternion, scale);

    // http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
    stats.count++;

    MarkersAreaControls.averageVector3(
      stats.position.sum,
      position,
      stats.count,
      stats.position.average
    );
    MarkersAreaControls.averageQuaternion(
      stats.quaternion.sum,
      quaternion,
      firstQuaternion,
      stats.count,
      stats.quaternion.average
    );
    MarkersAreaControls.averageVector3(
      stats.scale.sum,
      scale,
      stats.count,
      stats.scale.average
    );
  });

  var averageMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4();
  averageMatrix.compose(
    stats.position.average,
    stats.quaternion.average,
    stats.scale.average
  );

  return averageMatrix;
};

MarkersAreaControls.computeBoundingBox = function (jsonData) {
  var multiMarkerFile = JSON.parse(jsonData);
  var boundingBox = new three__WEBPACK_IMPORTED_MODULE_0__.Box3();

  multiMarkerFile.subMarkersControls.forEach(function (item) {
    var poseMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix);

    var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();
    var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    poseMatrix.decompose(position, quaternion, scale);

    boundingBox.expandByPoint(position);
  });

  return boundingBox;
};
//////////////////////////////////////////////////////////////////////////////
//		updateSmoothedControls
//////////////////////////////////////////////////////////////////////////////

MarkersAreaControls.prototype.updateSmoothedControls = function (
  smoothedControls,
  lerpsValues
) {
  // handle default values
  if (lerpsValues === undefined) {
    // FIXME this parameter format is uselessly cryptic
    // lerpValues = [
    // {lerpPosition: 0.5, lerpQuaternion: 0.2, lerpQuaternion: 0.7}
    // ]
    lerpsValues = [
      [0.3 + 0.1, 0.1, 0.3],
      [0.4 + 0.1, 0.1, 0.4],
      [0.4 + 0.1, 0.2, 0.5],
      [0.5 + 0.1, 0.2, 0.7],
      [0.5 + 0.1, 0.2, 0.7],
    ];
  }
  // count how many subMarkersControls are visible
  var nVisible = 0;
  this.parameters.subMarkersControls.forEach(function (
    markerControls,
    markerIndex
  ) {
    var markerObject3d = markerControls.object3d;
    if (markerObject3d.visible === true) nVisible++;
  });

  // find the good lerpValues
  if (lerpsValues[nVisible - 1] !== undefined) {
    var lerpValues = lerpsValues[nVisible - 1];
  } else {
    var lerpValues = lerpsValues[lerpsValues.length - 1];
  }

  // modify lerpValues in smoothedControls
  smoothedControls.parameters.lerpPosition = lerpValues[0];
  smoothedControls.parameters.lerpQuaternion = lerpValues[1];
  smoothedControls.parameters.lerpScale = lerpValues[2];
};

//////////////////////////////////////////////////////////////////////////////
//		Create ArMultiMarkerControls from JSON
//////////////////////////////////////////////////////////////////////////////

MarkersAreaControls.fromJSON = function (
  arToolkitContext,
  parent3D,
  markerRoot,
  jsonData,
  parameters
) {
  var multiMarkerFile = JSON.parse(jsonData);
  // declare variables
  var subMarkersControls = [];
  var subMarkerPoses = [];
  // handle default arguments
  parameters = parameters || {};

  // prepare the parameters
  multiMarkerFile.subMarkersControls.forEach(function (item) {
    // create a markerRoot
    var markerRoot = new three__WEBPACK_IMPORTED_MODULE_0__.Object3D();
    parent3D.add(markerRoot);

    // create markerControls for our markerRoot
    var subMarkerControls = new _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_2__["default"](
      arToolkitContext,
      markerRoot,
      item.parameters
    );

    // if( true ){
    // store it in the parameters
    subMarkersControls.push(subMarkerControls);
    subMarkerPoses.push(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix));
    // }else{
    // 		// build a smoothedControls
    // 		var smoothedRoot = new THREE.Group()
    // 		parent3D.add(smoothedRoot)
    // 		var smoothedControls = new THREEx.ArSmoothedControls(smoothedRoot, {
    // 			lerpPosition : 0.1,
    // 			lerpQuaternion : 0.1,
    // 			lerpScale : 0.1,
    // 			minVisibleDelay: 0,
    // 			minUnvisibleDelay: 0,
    // 		})
    // 		onRenderFcts.push(function(delta){
    // 			smoothedControls.update(markerRoot)	// TODO this is a global
    // 		})
    //
    //
    // 		// store it in the parameters
    // 		subMarkersControls.push(smoothedControls)
    // 		subMarkerPoses.push(new THREE.Matrix4().fromArray(item.poseMatrix))
    // }
  });

  parameters.subMarkersControls = subMarkersControls;
  parameters.subMarkerPoses = subMarkerPoses;
  // create a new ArMultiMarkerControls
  var multiMarkerControls = new _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_3__["default"](
    arToolkitContext,
    markerRoot,
    parameters
  );

  // return it
  return multiMarkerControls;
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkersAreaControls);


/***/ }),

/***/ "./three.js/src/markers-area/arjs-markersareautils.js":
/*!************************************************************!*\
  !*** ./three.js/src/markers-area/arjs-markersareautils.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../threex/arjs-context */ "./three.js/src/threex/arjs-context.js");

 // TODO context build-dependent

const MarkersAreaUtils = {};

//////////////////////////////////////////////////////////////////////////////
//		navigateToLearnerPage
//////////////////////////////////////////////////////////////////////////////

/**
 * Navigate to the multi-marker learner page
 *
 * @param {String} learnerBaseURL  - the base url for the learner
 * @param {String} trackingBackend - the tracking backend to use
 */
MarkersAreaUtils.navigateToLearnerPage = function (
  learnerBaseURL,
  trackingBackend
) {
  var learnerParameters = {
    backURL: location.href,
    trackingBackend: trackingBackend,
    markersControlsParameters:
      MarkersAreaUtils.createDefaultMarkersControlsParameters(trackingBackend),
  };
  location.href =
    learnerBaseURL +
    "?" +
    encodeURIComponent(JSON.stringify(learnerParameters));
};

//////////////////////////////////////////////////////////////////////////////
//		DefaultMultiMarkerFile
//////////////////////////////////////////////////////////////////////////////

/**
 * Create and store a default multi-marker file
 *
 * @param {String} trackingBackend - the tracking backend to use
 */
MarkersAreaUtils.storeDefaultMultiMarkerFile = function (trackingBackend) {
  var file = MarkersAreaUtils.createDefaultMultiMarkerFile(trackingBackend);
  // json.strinfy the value and store it in localStorage
  localStorage.setItem("ARjsMultiMarkerFile", JSON.stringify(file));
};

/**
 * Create a default multi-marker file
 * @param {String} trackingBackend - the tracking backend to use
 * @return {Object} - json object of the multi-marker file
 */
MarkersAreaUtils.createDefaultMultiMarkerFile = function (trackingBackend) {
  console.assert(trackingBackend);
  if (trackingBackend === undefined) debugger;

  // create absoluteBaseURL
  var link = document.createElement("a");
  link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL;
  var absoluteBaseURL = link.href;

  // create the base file
  var file = {
    meta: {
      createdBy: "AR.js " + _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].REVISION + " - Default Marker",
      createdAt: new Date().toJSON(),
    },
    trackingBackend: trackingBackend,
    subMarkersControls: [
      // empty for now... being filled
    ],
  };
  // add a subMarkersControls
  file.subMarkersControls[0] = {
    parameters: {},
    poseMatrix: new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeTranslation(0, 0, 0).toArray(),
  };
  if (trackingBackend === "artoolkit") {
    file.subMarkersControls[0].parameters.type = "pattern";
    file.subMarkersControls[0].parameters.patternUrl =
      absoluteBaseURL +
      "examples/marker-training/examples/pattern-files/pattern-hiro.patt";
  } else console.assert(false);

  // json.strinfy the value and store it in localStorage
  return file;
};

//////////////////////////////////////////////////////////////////////////////
//		createDefaultMarkersControlsParameters
//////////////////////////////////////////////////////////////////////////////

/**
 * Create a default controls parameters for the multi-marker learner
 *
 * @param {String} trackingBackend - the tracking backend to use
 * @return {Object} - json object containing the controls parameters
 */
MarkersAreaUtils.createDefaultMarkersControlsParameters = function (
  trackingBackend
) {
  // create absoluteBaseURL
  var link = document.createElement("a");
  link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL;
  var absoluteBaseURL = link.href;

  if (trackingBackend === "artoolkit") {
    // pattern hiro/kanji/a/b/c/f
    var markersControlsParameters = [
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-hiro.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-kanji.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterA.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterB.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterC.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterF.patt",
      },
    ];
  } else console.assert(false);
  return markersControlsParameters;
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////
/**
 * generate areaFile
 */
MarkersAreaUtils.storeMarkersAreaFileFromResolution = function (
  trackingBackend,
  resolutionW,
  resolutionH
) {
  // generate areaFile
  var areaFile = this.buildMarkersAreaFileFromResolution(
    trackingBackend,
    resolutionW,
    resolutionH
  );
  // store areaFile in localStorage
  localStorage.setItem("ARjsMultiMarkerFile", JSON.stringify(areaFile));
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

MarkersAreaUtils.buildMarkersAreaFileFromResolution = function (
  trackingBackend,
  resolutionW,
  resolutionH
) {
  // create the base file
  var file = {
    meta: {
      createdBy: "AR.js - Augmented Website",
      createdAt: new Date().toJSON(),
    },
    trackingBackend: trackingBackend,
    subMarkersControls: [
      // empty for now...
    ],
  };

  var whiteMargin = 0.1;
  if (resolutionW > resolutionH) {
    var markerImageSize = 0.4 * resolutionH;
  } else if (resolutionW < resolutionH) {
    var markerImageSize = 0.4 * resolutionW;
  } else if (resolutionW === resolutionH) {
    // specific for twitter player - https://dev.twitter.com/cards/types/player
    var markerImageSize = 0.33 * resolutionW;
  } else console.assert(false);

  // console.warn('using new markerImageSize computation')
  var actualMarkerSize = markerImageSize * (1 - 2 * whiteMargin);

  var deltaX = (resolutionW - markerImageSize) / 2 / actualMarkerSize;
  var deltaZ = (resolutionH - markerImageSize) / 2 / actualMarkerSize;

  var subMarkerControls = buildSubMarkerControls("center", 0, 0);
  file.subMarkersControls.push(subMarkerControls);

  var subMarkerControls = buildSubMarkerControls("topleft", -deltaX, -deltaZ);
  file.subMarkersControls.push(subMarkerControls);

  var subMarkerControls = buildSubMarkerControls("topright", +deltaX, -deltaZ);
  file.subMarkersControls.push(subMarkerControls);

  var subMarkerControls = buildSubMarkerControls(
    "bottomleft",
    -deltaX,
    +deltaZ
  );
  file.subMarkersControls.push(subMarkerControls);

  var subMarkerControls = buildSubMarkerControls(
    "bottomright",
    +deltaX,
    +deltaZ
  );
  file.subMarkersControls.push(subMarkerControls);

  return file;

  //////////////////////////////////////////////////////////////////////////////
  //		Code Separator
  //////////////////////////////////////////////////////////////////////////////

  function buildSubMarkerControls(layout, positionX, positionZ) {
    console.log("buildSubMarkerControls", layout, positionX, positionZ);
    // create subMarkersControls
    var subMarkersControls = {
      parameters: {},
      poseMatrix: new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4()
        .makeTranslation(positionX, 0, positionZ)
        .toArray(),
    };
    // fill the parameters
    if (trackingBackend === "artoolkit") {
      layout2MarkerParametersArtoolkit(subMarkersControls.parameters, layout);
    } else console.assert(false);
    // return subMarkersControls
    return subMarkersControls;
  }

  function layout2MarkerParametersArtoolkit(parameters, layout) {
    // create absoluteBaseURL
    var link = document.createElement("a");
    link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL;
    var absoluteBaseURL = link.href;

    var layout2PatternUrl = {
      center: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-hiro.patt"
      ),
      topleft: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterA.patt"
      ),
      topright: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterB.patt"
      ),
      bottomleft: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterC.patt"
      ),
      bottomright: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterF.patt"
      ),
    };
    console.assert(layout2PatternUrl[layout] !== undefined);
    parameters.type = "pattern";
    parameters.patternUrl = layout2PatternUrl[layout];
    return;
    function convertRelativeUrlToAbsolute(relativeUrl) {
      var tmpLink = document.createElement("a");
      tmpLink.href = relativeUrl;
      return tmpLink.href;
    }
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkersAreaUtils);


/***/ }),

/***/ "./three.js/src/new-api/arjs-anchor.js":
/*!*********************************************!*\
  !*** ./three.js/src/new-api/arjs-anchor.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var threexArmarkercontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! threexArmarkercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var _threex_threex_armarkerhelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../threex/threex-armarkerhelper */ "./three.js/src/threex/threex-armarkerhelper.js");
/* harmony import */ var _threex_threex_arsmoothedcontrols__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../threex/threex-arsmoothedcontrols */ "./three.js/src/threex/threex-arsmoothedcontrols.js");
/* harmony import */ var _markers_area_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../markers-area/arjs-markersareacontrols */ "./three.js/src/markers-area/arjs-markersareacontrols.js");
/* harmony import */ var _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../markers-area/arjs-markersareautils */ "./three.js/src/markers-area/arjs-markersareautils.js");

 // Alias for dynamic importing





// TODO this is a controls... should i give the object3d here ?
// not according to 'no three.js dependancy'

/**
 * Create an anchor in the real world
 *
 * @param {ARjs.Session} arSession - the session on which we create the anchor
 * @param {Object} markerParameters - parameter of this anchor
 */
const Anchor = function (arSession, markerParameters) {
  var _this = this;
  var arContext = arSession.arContext;
  var scene = arSession.parameters.scene;
  var camera = arSession.parameters.camera;

  this.arSession = arSession;
  this.parameters = markerParameters;

  // log to debug
  console.log(
    "ARjs.Anchor -",
    "changeMatrixMode:",
    this.parameters.changeMatrixMode,
    "/ markersAreaEnabled:",
    markerParameters.markersAreaEnabled
  );

  var markerRoot = new three__WEBPACK_IMPORTED_MODULE_0__.Group();
  scene.add(markerRoot);

  // set controlledObject depending on changeMatrixMode
  if (markerParameters.changeMatrixMode === "modelViewMatrix") {
    var controlledObject = markerRoot;
  } else if (markerParameters.changeMatrixMode === "cameraTransformMatrix") {
    var controlledObject = camera;
  } else console.assert(false);

  if (markerParameters.markersAreaEnabled === false) {
    var markerControls = new threexArmarkercontrols__WEBPACK_IMPORTED_MODULE_1__["default"](
      arContext,
      controlledObject,
      markerParameters
    );
    this.controls = markerControls;
  } else {
    // sanity check - MUST be a trackingBackend with markers
    console.assert(arContext.parameters.trackingBackend === "artoolkit");

    // honor markers-page-resolution for https://webxr.io/augmented-website
    if (
      location.hash.substring(1).startsWith("markers-page-resolution=") === true
    ) {
      // get resolutionW/resolutionH from url
      var markerPageResolution = location.hash.substring(1);
      var matches = markerPageResolution.match(
        /markers-page-resolution=(\d+)x(\d+)/
      );
      console.assert(matches.length === 3);
      var resolutionW = parseInt(matches[1]);
      var resolutionH = parseInt(matches[2]);
      var arContext = arSession.arContext;
      // generate and store the ARjsMultiMarkerFile
      _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_5__["default"].storeMarkersAreaFileFromResolution(
        arContext.parameters.trackingBackend,
        resolutionW,
        resolutionH
      );
    }

    // if there is no ARjsMultiMarkerFile, build a default one
    if (localStorage.getItem("ARjsMultiMarkerFile") === null) {
      _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_5__["default"].storeDefaultMultiMarkerFile(
        arContext.parameters.trackingBackend
      );
    }

    // get multiMarkerFile from localStorage
    console.assert(localStorage.getItem("ARjsMultiMarkerFile") !== null);
    var multiMarkerFile = localStorage.getItem("ARjsMultiMarkerFile");

    // set controlledObject depending on changeMatrixMode
    if (markerParameters.changeMatrixMode === "modelViewMatrix") {
      var parent3D = scene;
    } else if (markerParameters.changeMatrixMode === "cameraTransformMatrix") {
      var parent3D = camera;
    } else console.assert(false);

    // build a multiMarkerControls
    var multiMarkerControls = _markers_area_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_4__["default"].fromJSON(
      arContext,
      parent3D,
      controlledObject,
      multiMarkerFile
    );
    this.controls = multiMarkerControls;

    // honor markerParameters.changeMatrixMode
    multiMarkerControls.parameters.changeMatrixMode =
      markerParameters.changeMatrixMode;

    // TODO put subMarkerControls visibility into an external file. with 2 handling for three.js and babylon.js
    // create ArMarkerHelper - useful to debug - super three.js specific
    var markerHelpers = [];
    multiMarkerControls.subMarkersControls.forEach(function (
      subMarkerControls
    ) {
      // add an helper to visuable each sub-marker
      var markerHelper = new _threex_threex_armarkerhelper__WEBPACK_IMPORTED_MODULE_2__["default"](subMarkerControls);
      markerHelper.object3d.visible = false;
      // subMarkerControls.object3d.add( markerHelper.object3d )
      subMarkerControls.object3d.add(markerHelper.object3d);
      // add it to markerHelpers
      markerHelpers.push(markerHelper);
    });
    // define API specific to markersArea
    this.markersArea = {};
    this.markersArea.setSubMarkersVisibility = function (visible) {
      markerHelpers.forEach(function (markerHelper) {
        markerHelper.object3d.visible = visible;
      });
    };
  }

  this.object3d = new three__WEBPACK_IMPORTED_MODULE_0__.Group();

  //////////////////////////////////////////////////////////////////////////////
  //		THREEx.ArSmoothedControls
  //////////////////////////////////////////////////////////////////////////////

  var shouldBeSmoothed = true;

  if (shouldBeSmoothed === true) {
    // build a smoothedControls
    var smoothedRoot = new three__WEBPACK_IMPORTED_MODULE_0__.Group();
    scene.add(smoothedRoot);
    var smoothedControls = new _threex_threex_arsmoothedcontrols__WEBPACK_IMPORTED_MODULE_3__["default"](smoothedRoot);
    smoothedRoot.add(this.object3d);
  } else {
    markerRoot.add(this.object3d);
  }

  //////////////////////////////////////////////////////////////////////////////
  //		Code Separator
  //////////////////////////////////////////////////////////////////////////////
  this.update = function () {
    // update _this.object3d.visible
    _this.object3d.visible = _this.object3d.parent.visible;

    // console.log('controlledObject.visible', _this.object3d.parent.visible)
    if (smoothedControls !== undefined) {
      // update smoothedControls parameters depending on how many markers are visible in multiMarkerControls
      if (multiMarkerControls !== undefined) {
        multiMarkerControls.updateSmoothedControls(smoothedControls);
      }

      // update smoothedControls
      smoothedControls.update(markerRoot);
    }
  };
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Anchor);


/***/ }),

/***/ "./three.js/src/new-api/arjs-debugui.js":
/*!**********************************************!*\
  !*** ./three.js/src/new-api/arjs-debugui.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnchorDebugUI": () => (/* binding */ AnchorDebugUI),
/* harmony export */   "SessionDebugUI": () => (/* binding */ SessionDebugUI)
/* harmony export */ });
/* harmony import */ var _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../markers-area/arjs-markersareautils */ "./three.js/src/markers-area/arjs-markersareautils.js");
/* harmony import */ var _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../threex/arjs-context */ "./three.js/src/threex/arjs-context.js");

 // TODO context build-dependent

/**
 * Create an debug UI for an ARjs.Anchor
 *
 * @param {ARjs.Anchor} arAnchor - the anchor to user
 */
const SessionDebugUI = function (arSession) {
  var trackingBackend = arSession.arContext.parameters.trackingBackend;

  this.domElement = document.createElement("div");
  this.domElement.style.color = "rgba(0,0,0,0.9)";
  this.domElement.style.backgroundColor = "rgba(127,127,127,0.5)";
  this.domElement.style.display = "block";
  this.domElement.style.padding = "0.5em";
  this.domElement.style.position = "fixed";
  this.domElement.style.left = "5px";
  this.domElement.style.bottom = "10px";
  this.domElement.style.textAlign = "right";

  //////////////////////////////////////////////////////////////////////////////
  //		current-tracking-backend
  //////////////////////////////////////////////////////////////////////////////

  var domElement = document.createElement("span");
  domElement.style.display = "block";
  domElement.innerHTML = "<b>trackingBackend</b> : " + trackingBackend;
  this.domElement.appendChild(domElement);
};

/**
 * Url of augmented-website service - if === '' then dont include augmented-website link
 * @type {String}
 */
SessionDebugUI.AugmentedWebsiteURL = "https://webxr.io/augmented-website";

//////////////////////////////////////////////////////////////////////////////
//		AnchorDebugUI
//////////////////////////////////////////////////////////////////////////////

/**
 * Create an debug UI for an ARjs.Anchor
 *
 * @param {ARjs.Anchor} arAnchor - the anchor to user
 */
const AnchorDebugUI = function (arAnchor) {
  var arSession = arAnchor.arSession;
  var trackingBackend = arSession.arContext.parameters.trackingBackend;

  this.domElement = document.createElement("div");
  this.domElement.style.color = "rgba(0,0,0,0.9)";
  this.domElement.style.backgroundColor = "rgba(127,127,127,0.5)";
  this.domElement.style.display = "inline-block";
  this.domElement.style.padding = "0.5em";
  this.domElement.style.margin = "0.5em";
  this.domElement.style.textAlign = "left";

  //////////////////////////////////////////////////////////////////////////////
  //		current-tracking-backend
  //////////////////////////////////////////////////////////////////////////////

  var domElement = document.createElement("span");
  domElement.style.display = "block";
  domElement.style.padding = "0.5em";
  domElement.style.color = "rgba(0,0,0,0.9)";
  domElement.style.backgroundColor = "rgba(127,127,127,0.5)";
  domElement.style.position = "fixed";
  domElement.style.left = "5px";
  domElement.style.bottom = "40px";

  this.domElement.appendChild(domElement);
  domElement.innerHTML =
    "<b>markersAreaEnabled</b> :" + arAnchor.parameters.markersAreaEnabled;

  //////////////////////////////////////////////////////////////////////////////
  //		toggle-marker-helper
  //////////////////////////////////////////////////////////////////////////////

  if (arAnchor.parameters.markersAreaEnabled) {
    var domElement = document.createElement("button");
    domElement.style.display = "block";
    this.domElement.style.padding = "0.5em";
    this.domElement.style.position = "fixed";
    this.domElement.style.textAlign = "left";
    this.domElement.appendChild(domElement);

    domElement.id = "buttonToggleMarkerHelpers";
    domElement.innerHTML = "toggle-marker-helper";
    domElement.href = "javascript:void(0)";

    var subMarkerHelpersVisible = false;
    domElement.addEventListener("click", function () {
      subMarkerHelpersVisible = subMarkerHelpersVisible ? false : true;
      arAnchor.markersArea.setSubMarkersVisibility(subMarkerHelpersVisible);
    });
  }

  //////////////////////////////////////////////////////////////////////////////
  //		Learn-new-marker-area
  //////////////////////////////////////////////////////////////////////////////

  if (arAnchor.parameters.markersAreaEnabled) {
    var domElement = document.createElement("button");
    domElement.style.display = "block";
    this.domElement.appendChild(domElement);

    domElement.id = "buttonMarkersAreaLearner";
    domElement.innerHTML = "Learn-new-marker-area";
    domElement.href = "javascript:void(0)";

    domElement.addEventListener("click", function () {
      if (AnchorDebugUI.MarkersAreaLearnerURL !== null) {
        var learnerURL = AnchorDebugUI.MarkersAreaLearnerURL;
      } else {
        var learnerURL =
          _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL + "examples/multi-markers/examples/learner.html";
      }
      _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_0__["default"].navigateToLearnerPage(learnerURL, trackingBackend);
    });
  }

  //////////////////////////////////////////////////////////////////////////////
  //		Reset-marker-area
  //////////////////////////////////////////////////////////////////////////////

  if (arAnchor.parameters.markersAreaEnabled) {
    var domElement = document.createElement("button");
    domElement.style.display = "block";
    this.domElement.appendChild(domElement);

    domElement.id = "buttonMarkersAreaReset";
    domElement.innerHTML = "Reset-marker-area";
    domElement.href = "javascript:void(0)";

    domElement.addEventListener("click", function () {
      _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_0__["default"].storeDefaultMultiMarkerFile(trackingBackend);
      location.reload();
    });
  }
};

/**
 * url for the markers-area learner. if not set, take the default one
 * @type {String}
 */
AnchorDebugUI.MarkersAreaLearnerURL = null;




/***/ }),

/***/ "./three.js/src/new-api/arjs-hittesting.js":
/*!*************************************************!*\
  !*** ./three.js/src/new-api/arjs-hittesting.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _threex_threex_hittesting_plane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../threex/threex-hittesting-plane */ "./three.js/src/threex/threex-hittesting-plane.js");


/**
 * Create an anchor in the real world
 *
 * @param {ARjs.Session} arSession - the session on which we create the anchor
 * @param {Object} markerParameters - parameter of this anchor
 */
const HitTesting = function (arSession) {
  var _this = this;
  var arContext = arSession.arContext;
  var trackingBackend = arContext.parameters.trackingBackend;

  this.enabled = true;
  this._arSession = arSession;
  this._hitTestingPlane = null;
  _this._hitTestingPlane = new _threex_threex_hittesting_plane__WEBPACK_IMPORTED_MODULE_0__["default"](arSession.arSource.domElement);
};

//////////////////////////////////////////////////////////////////////////////
//		update function
//////////////////////////////////////////////////////////////////////////////
/**
 * update
 *
 * @param {THREE.Camera} camera   - the camera to use
 * @param {THREE.Object3D} object3d -
 */
HitTesting.prototype.update = function (camera, pickingRoot, changeMatrixMode) {
  // if it isnt enabled, do nothing
  if (this.enabled === false) return;

  if (this._hitTestingPlane !== null) {
    this._hitTestingPlane.update(camera, pickingRoot, changeMatrixMode);
  } else console.assert(false);
};

//////////////////////////////////////////////////////////////////////////////
//		actual hit testing
//////////////////////////////////////////////////////////////////////////////

/**
 * Test the real world for intersections directly from a DomEvent
 *
 * @param {Number} mouseX - position X of the hit [-1, +1]
 * @param {Number} mouseY - position Y of the hit [-1, +1]
 * @return {[HitTesting.Result]} - array of result
 */
HitTesting.prototype.testDomEvent = function (domEvent) {
  var trackingBackend = this._arSession.arContext.parameters.trackingBackend;
  var arSource = this._arSession.arSource;

  // if it isnt enabled, do nothing
  if (this.enabled === false) return [];
  var mouseX = domEvent.clientX / arSource.domElementWidth();
  var mouseY = domEvent.clientY / arSource.domElementHeight();

  return this.test(mouseX, mouseY);
};

/**
 * Test the real world for intersections.
 *
 * @param {Number} mouseX - position X of the hit [0, +1]
 * @param {Number} mouseY - position Y of the hit [0, +1]
 * @return {[HitTesting.Result]} - array of result
 */
HitTesting.prototype.test = function (mouseX, mouseY) {
  var arContext = this._arSession.arContext;
  var trackingBackend = arContext.parameters.trackingBackend;
  var hitTestResults = [];

  // if it isnt enabled, do nothing
  if (this.enabled === false) return [];

  var result = this._hitTestingPlane.test(mouseX, mouseY);

  // if no result is found, return now
  if (result === null) return hitTestResults;

  // build a HitTesting.Result
  var hitTestResult = new HitTesting.Result(
    result.position,
    result.quaternion,
    result.scale
  );
  hitTestResults.push(hitTestResult);

  return hitTestResults;
};

//////////////////////////////////////////////////////////////////////////////
//		HitTesting.Result
//////////////////////////////////////////////////////////////////////////////
/**
 * Contains the result of HitTesting.test()
 *
 * @param {THREE.Vector3} position - position to use
 * @param {THREE.Quaternion} quaternion - quaternion to use
 * @param {THREE.Vector3} scale - scale
 */
HitTesting.Result = function (position, quaternion, scale) {
  this.position = position;
  this.quaternion = quaternion;
  this.scale = scale;
};

/**
 * Apply to a controlled object3d
 *
 * @param {THREE.Object3D} object3d - the result to apply
 */
HitTesting.Result.prototype.apply = function (object3d) {
  object3d.position.copy(this.position);
  object3d.quaternion.copy(this.quaternion);
  object3d.scale.copy(this.scale);

  object3d.updateMatrix();
};

/**
 * Apply to a controlled object3d
 *
 * @param {THREE.Object3D} object3d - the result to apply
 */
HitTesting.Result.prototype.applyPosition = function (object3d) {
  object3d.position.copy(this.position);

  object3d.updateMatrix();

  return this;
};

/**
 * Apply to a controlled object3d
 *
 * @param {THREE.Object3D} object3d - the result to apply
 */
HitTesting.Result.prototype.applyQuaternion = function (object3d) {
  object3d.quaternion.copy(this.quaternion);

  object3d.updateMatrix();

  return this;
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HitTesting);


/***/ }),

/***/ "./three.js/src/new-api/arjs-session.js":
/*!**********************************************!*\
  !*** ./three.js/src/new-api/arjs-session.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_arjs_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../threex/arjs-source */ "./three.js/src/threex/arjs-source.js");
/* harmony import */ var _threex_arjs_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../threex/arjs-context */ "./three.js/src/threex/arjs-context.js");


 // TODO context build-dependent

/**
 *  * define a Session
 *
 * @param {Object} parameters - parameters for this session
 */
const Session = function (parameters) {
  var _this = this;
  // handle default parameters
  this.parameters = {
    renderer: null,
    camera: null,
    scene: null,
    sourceParameters: {},
    contextParameters: {},
  };

  //////////////////////////////////////////////////////////////////////////////
  //		setParameters
  //////////////////////////////////////////////////////////////////////////////
  setParameters(parameters);
  function setParameters(parameters) {
    if (parameters === undefined) return;
    for (var key in parameters) {
      var newValue = parameters[key];

      if (newValue === undefined) {
        console.warn("THREEx.Session: '" + key + "' parameter is undefined.");
        continue;
      }

      var currentValue = _this.parameters[key];

      if (currentValue === undefined) {
        console.warn(
          "THREEx.Session: '" + key + "' is not a property of this material."
        );
        continue;
      }

      _this.parameters[key] = newValue;
    }
  }
  // sanity check
  console.assert(this.parameters.renderer instanceof three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderer);
  console.assert(this.parameters.camera instanceof three__WEBPACK_IMPORTED_MODULE_0__.Camera);
  console.assert(this.parameters.scene instanceof three__WEBPACK_IMPORTED_MODULE_0__.Scene);

  // backward emulation
  Object.defineProperty(this, "renderer", {
    get: function () {
      console.warn("use .parameters.renderer renderer");
      return this.parameters.renderer;
    },
  });
  Object.defineProperty(this, "camera", {
    get: function () {
      console.warn("use .parameters.camera instead");
      return this.parameters.camera;
    },
  });
  Object.defineProperty(this, "scene", {
    get: function () {
      console.warn("use .parameters.scene instead");
      return this.parameters.scene;
    },
  });

  // log the version
  console.log(
    "AR.js",
    _threex_arjs_context__WEBPACK_IMPORTED_MODULE_2__["default"].REVISION,
    "- trackingBackend:",
    parameters.contextParameters.trackingBackend
  );

  //////////////////////////////////////////////////////////////////////////////
  //		init arSource
  //////////////////////////////////////////////////////////////////////////////
  var arSource = (_this.arSource = new _threex_arjs_source__WEBPACK_IMPORTED_MODULE_1__["default"](parameters.sourceParameters));

  arSource.init(function onReady() {
    arSource.onResize(
      arContext,
      _this.parameters.renderer,
      _this.parameters.camera
    );
  });

  // handle resize
  window.addEventListener("resize", function () {
    arSource.onResize(
      arContext,
      _this.parameters.renderer,
      _this.parameters.camera
    );
  });

  //////////////////////////////////////////////////////////////////////////////
  //		init arContext
  //////////////////////////////////////////////////////////////////////////////

  // create atToolkitContext
  var arContext = (_this.arContext = new _threex_arjs_context__WEBPACK_IMPORTED_MODULE_2__["default"](parameters.contextParameters));

  // initialize it
  window.addEventListener("arjs-video-loaded", function () {
    _this.arContext.init(() => {
      _this.arContext.arController.orientation = getSourceOrientation();
      _this.arContext.arController.options.orientation = getSourceOrientation();
    });
  });

  function getSourceOrientation() {
    if (!_this) {
      return null;
    }

    console.log(
      "actual source dimensions",
      arSource.domElement.clientWidth,
      arSource.domElement.clientHeight
    );

    if (arSource.domElement.clientWidth > arSource.domElement.clientHeight) {
      console.log("source orientation", "landscape");
      return "landscape";
    } else {
      console.log("source orientation", "portrait");
      return "portrait";
    }
  }

  arContext.addEventListener("initialized", function (event) {
    arSource.onResize(
      arContext,
      _this.parameters.renderer,
      _this.parameters.camera
    );
  });

  //////////////////////////////////////////////////////////////////////////////
  //		update function
  //////////////////////////////////////////////////////////////////////////////
  // update artoolkit on every frame
  this.update = function () {
    if (arSource.ready === false) return;

    arContext.update(arSource.domElement);
  };
};

Session.prototype.onResize = function () {
  this.arSource.onResize(
    this.arContext,
    this.parameters.renderer,
    this.parameters.camera
  );
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Session);


/***/ }),

/***/ "./three.js/src/new-api/arjs-utils.js":
/*!********************************************!*\
  !*** ./three.js/src/new-api/arjs-utils.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const Utils = {};

/**
 * Create a default rendering camera for this trackingBackend. They may be modified later. to fit physical camera parameters
 *
 * @param {string} trackingBackend - the tracking to user
 * @return {THREE.Camera} the created camera
 */
Utils.createDefaultCamera = function (trackingMethod) {
  var trackingBackend =
    this.parseTrackingMethod(trackingMethod).trackingBackend;
  // Create a camera
  if (trackingBackend === "artoolkit") {
    var camera = new three__WEBPACK_IMPORTED_MODULE_0__.Camera();
  } else console.assert(false, "unknown trackingBackend: " + trackingBackend);

  return camera;
};

/**
 * parse tracking method
 *
 * @param {String} trackingMethod - the tracking method to parse
 * @return {Object} - various field of the tracking method
 */
Utils.parseTrackingMethod = function (trackingMethod) {
  if (trackingMethod === "best") {
    trackingMethod = "area-artoolkit";
  }

  if (trackingMethod.startsWith("area-")) {
    return {
      trackingBackend: trackingMethod.replace("area-", ""),
      markersAreaEnabled: true,
    };
  } else {
    return {
      trackingBackend: trackingMethod,
      markersAreaEnabled: false,
    };
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Utils);


/***/ }),

/***/ "./three.js/src/threex/arjs-context.js":
/*!*********************************************!*\
  !*** ./three.js/src/threex/arjs-context.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _arjs_markercontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arjs-markercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jsartoolkit */ "./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jsartoolkit__WEBPACK_IMPORTED_MODULE_2__);


 // TODO comment explanation
const { ARController } = (jsartoolkit__WEBPACK_IMPORTED_MODULE_2___default());

const Context = function (parameters) {
  var _this = this;

  _this._updatedAt = null;

  // handle default parameters
  this.parameters = {
    // AR backend - ['artoolkit']
    trackingBackend: "artoolkit",
    // debug - true if one should display artoolkit debug canvas, false otherwise
    debug: false,
    // the mode of detection - ['color', 'color_and_matrix', 'mono', 'mono_and_matrix']
    detectionMode: "mono",
    // type of matrix code - valid iif detectionMode end with 'matrix' - [3x3, 3x3_HAMMING63, 3x3_PARITY65, 4x4, 4x4_BCH_13_9_3, 4x4_BCH_13_5_5]
    matrixCodeType: "3x3",

    // url of the camera parameters
    cameraParametersUrl: Context.baseURL + "../data/data/camera_para.dat",

    // tune the maximum rate of pose detection in the source image
    maxDetectionRate: 60,
    // resolution of at which we detect pose in the source image
    canvasWidth: 640,
    canvasHeight: 480,

    // the patternRatio inside the artoolkit marker - artoolkit only
    patternRatio: 0.5,

    // Labeling mode for markers - ['black_region', 'white_region']
    // black_region: Black bordered markers on a white background, white_region: White bordered markers on a black background
    labelingMode: "black_region",

    // enable image smoothing or not for canvas copy - default to true
    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled
    imageSmoothingEnabled: false,
  };
  // parameters sanity check
  console.assert(
    ["artoolkit"].indexOf(this.parameters.trackingBackend) !== -1,
    "invalid parameter trackingBackend",
    this.parameters.trackingBackend
  );
  console.assert(
    ["color", "color_and_matrix", "mono", "mono_and_matrix"].indexOf(
      this.parameters.detectionMode
    ) !== -1,
    "invalid parameter detectionMode",
    this.parameters.detectionMode
  );
  console.assert(
    ["black_region", "white_region"].indexOf(this.parameters.labelingMode) !==
      -1,
    "invalid parameter labelingMode",
    this.parameters.labelingMode
  );

  this.arController = null;

  _this.initialized = false;

  this._arMarkersControls = [];

  //////////////////////////////////////////////////////////////////////////////
  //		setParameters
  //////////////////////////////////////////////////////////////////////////////
  setParameters(parameters);
  function setParameters(parameters) {
    if (parameters === undefined) return;
    for (var key in parameters) {
      var newValue = parameters[key];

      if (newValue === undefined) {
        console.warn("Context: '" + key + "' parameter is undefined.");
        continue;
      }

      var currentValue = _this.parameters[key];

      if (currentValue === undefined) {
        console.warn(
          "Context: '" + key + "' is not a property of this material."
        );
        continue;
      }

      _this.parameters[key] = newValue;
    }
  }
};

Context.prototype.dispatchEvent = three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.dispatchEvent;
Context.prototype.addEventListener =
  three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.addEventListener;
Context.prototype.hasEventListener =
  three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.hasEventListener;
Context.prototype.removeEventListener =
  three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.removeEventListener;

// default to github page
Context.baseURL = "https://ar-js-org.github.io/AR.js/three.js/";
Context.REVISION = "3.4.0";
/**
 * Create a default camera for this trackingBackend
 * @param {string} trackingBackend - the tracking to user
 * @return {THREE.Camera} the created camera
 */
Context.createDefaultCamera = function (trackingBackend) {
  console.assert(false, "use ARjs.Utils.createDefaultCamera instead");
  // Create a camera
  if (trackingBackend === "artoolkit") {
    var camera = new three__WEBPACK_IMPORTED_MODULE_0__.Camera();
  } else console.assert(false);
  return camera;
};

//////////////////////////////////////////////////////////////////////////////
//		init functions
//////////////////////////////////////////////////////////////////////////////
Context.prototype.init = function (onCompleted) {
  var _this = this;
  if (this.parameters.trackingBackend === "artoolkit") {
    this._initArtoolkit(done);
  } else console.assert(false);
  return;

  function done() {
    // dispatch event
    _this.dispatchEvent({
      type: "initialized",
    });

    _this.initialized = true;

    onCompleted && onCompleted();
  }
};
////////////////////////////////////////////////////////////////////////////////
//          update function
////////////////////////////////////////////////////////////////////////////////
Context.prototype.update = function (srcElement) {
  // be sure arController is fully initialized
  if (
    this.parameters.trackingBackend === "artoolkit" &&
    this.arController === null
  )
    return false;

  // honor this.parameters.maxDetectionRate
  var present = performance.now();
  if (
    this._updatedAt !== null &&
    present - this._updatedAt < 1000 / this.parameters.maxDetectionRate
  ) {
    return false;
  }
  this._updatedAt = present;

  var prevVisibleMarkers = [];

  // mark all markers to invisible before processing this frame
  this._arMarkersControls.forEach(function (markerControls) {
    if (markerControls.object3d.visible) {
      prevVisibleMarkers.push(markerControls);
    }
    if (!markerControls.context.arController.showObject) {
      markerControls.object3d.visible = false;
    }
  });

  // process this frame
  if (this.parameters.trackingBackend === "artoolkit") {
    this._updateArtoolkit(srcElement);
  } else {
    console.assert(false);
  }

  // dispatch event
  this.dispatchEvent({
    type: "sourceProcessed",
  });

  // After frame is processed, check visibility of each marker to determine if it was found or lost
  this._arMarkersControls.forEach(function (markerControls) {
    var wasVisible = prevVisibleMarkers.includes(markerControls);
    var isVisible = markerControls.object3d.visible;

    if (isVisible === true && wasVisible === false) {
      window.dispatchEvent(
        new CustomEvent("markerFound", {
          detail: markerControls,
        })
      );
    } else if (isVisible === false && wasVisible === true) {
      window.dispatchEvent(
        new CustomEvent("markerLost", {
          detail: markerControls,
        })
      );
    }
  });

  // return true as we processed the frame
  return true;
};

////////////////////////////////////////////////////////////////////////////////
//          Add/Remove markerControls
////////////////////////////////////////////////////////////////////////////////
Context.prototype.addMarker = function (arMarkerControls) {
  console.assert(arMarkerControls instanceof _arjs_markercontrols__WEBPACK_IMPORTED_MODULE_1__["default"]);
  this._arMarkersControls.push(arMarkerControls);
};

Context.prototype.removeMarker = function (arMarkerControls) {
  console.assert(arMarkerControls instanceof _arjs_markercontrols__WEBPACK_IMPORTED_MODULE_1__["default"]);
  var index = this._arMarkersControls.indexOf(arMarkerControls);
  if (index < 0) {
    return;
  }
  this._arMarkersControls.splice(index, 1);
};

//////////////////////////////////////////////////////////////////////////////
//		artoolkit specific
//////////////////////////////////////////////////////////////////////////////
Context.prototype._initArtoolkit = function (onCompleted) {
  var _this = this;

  // set this._artoolkitProjectionAxisTransformMatrix to change artoolkit projection matrix axis to match usual webgl one
  this._artoolkitProjectionAxisTransformMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4();
  this._artoolkitProjectionAxisTransformMatrix.multiply(
    new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationY(Math.PI)
  );
  this._artoolkitProjectionAxisTransformMatrix.multiply(
    new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationZ(Math.PI)
  );

  // init controller
  ARController.initWithDimensions(
    _this.parameters.canvasWidth,
    _this.parameters.canvasHeight,
    _this.parameters.cameraParametersUrl
  ).then((arController) => {
    _this.arController = arController;

    // honor this.parameters.imageSmoothingEnabled
    arController.ctx.mozImageSmoothingEnabled =
      _this.parameters.imageSmoothingEnabled;
    arController.ctx.webkitImageSmoothingEnabled =
      _this.parameters.imageSmoothingEnabled;
    arController.ctx.msImageSmoothingEnabled =
      _this.parameters.imageSmoothingEnabled;
    arController.ctx.imageSmoothingEnabled =
      _this.parameters.imageSmoothingEnabled;

    // honor this.parameters.debug
    if (_this.parameters.debug === true) {
      arController.debugSetup();
      arController.canvas.style.position = "absolute";
      arController.canvas.style.top = "0px";
      arController.canvas.style.opacity = "0.6";
      arController.canvas.style.pointerEvents = "none";
      arController.canvas.style.zIndex = "-1";
    }

    // setPatternDetectionMode
    var detectionModes = {
      color: arController.artoolkit.AR_TEMPLATE_MATCHING_COLOR,
      color_and_matrix:
        arController.artoolkit.AR_TEMPLATE_MATCHING_COLOR_AND_MATRIX,
      mono: arController.artoolkit.AR_TEMPLATE_MATCHING_MONO,
      mono_and_matrix:
        arController.artoolkit.AR_TEMPLATE_MATCHING_MONO_AND_MATRIX,
    };
    var detectionMode = detectionModes[_this.parameters.detectionMode];
    console.assert(detectionMode !== undefined);
    arController.setPatternDetectionMode(detectionMode);

    // setMatrixCodeType
    var matrixCodeTypes = {
      "3x3": arController.artoolkit.AR_MATRIX_CODE_3x3,
      "3x3_HAMMING63": arController.artoolkit.AR_MATRIX_CODE_3x3_HAMMING63,
      "3x3_PARITY65": arController.artoolkit.AR_MATRIX_CODE_3x3_PARITY65,
      "4x4": arController.artoolkit.AR_MATRIX_CODE_4x4,
      "4x4_BCH_13_9_3": arController.artoolkit.AR_MATRIX_CODE_4x4_BCH_13_9_3,
      "4x4_BCH_13_5_5": arController.artoolkit.AR_MATRIX_CODE_4x4_BCH_13_5_5,
      "5x5": arController.artoolkit.AR_MATRIX_CODE_5x5,
      "6x6": arController.artoolkit.AR_MATRIX_CODE_6x6,
    };
    var matrixCodeType = matrixCodeTypes[_this.parameters.matrixCodeType];
    console.assert(matrixCodeType !== undefined);
    arController.setMatrixCodeType(matrixCodeType);

    // set the patternRatio for artoolkit
    arController.setPattRatio(_this.parameters.patternRatio);

    // set the labelingMode for artoolkit
    var labelingModeTypes = {
      black_region: arController.artoolkit.AR_LABELING_BLACK_REGION,
      white_region: arController.artoolkit.AR_LABELING_WHITE_REGION,
    };
    var labelingModeType = labelingModeTypes[_this.parameters.labelingMode];
    console.assert(labelingModeType !== undefined);
    arController.setLabelingMode(labelingModeType);

    // set thresholding in artoolkit
    // this seems to be the default
    // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_MANUAL)
    // adatative consume a LOT of cpu...
    // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_AUTO_ADAPTIVE)
    // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_AUTO_OTSU)

    // notify
    onCompleted();
  });
  return this;
};

/**
 * return the projection matrix
 */
Context.prototype.getProjectionMatrix = function () {
  // FIXME rename this function to say it is artoolkit specific - getArtoolkitProjectMatrix
  // keep a backward compatibility with a console.warn

  console.assert(this.parameters.trackingBackend === "artoolkit");
  console.assert(
    this.arController,
    "arController MUST be initialized to call this function"
  );

  // get projectionMatrixArr from artoolkit
  var projectionMatrixArr = this.arController.getCameraMatrix();
  var projectionMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(projectionMatrixArr);

  // projectionMatrix.multiply(this._artoolkitProjectionAxisTransformMatrix)
  // return the result
  return projectionMatrix;
};

Context.prototype._updateArtoolkit = function (srcElement) {
  this.arController.process(srcElement);
};

//////////////////////////////////////////////////////////////////////////////
//		dispose function
//////////////////////////////////////////////////////////////////////////////
Context.prototype.dispose = function () {
  this.initialized = false;

  // markers
  this._arMarkersControls.forEach(function (markerControls) {
    console.assert(markerControls instanceof _arjs_markercontrols__WEBPACK_IMPORTED_MODULE_1__["default"]);
    markerControls.dispose();
  });
  this._arMarkersControls = [];

  // cameraParam
  if (
    this.arController &&
    this.arController.cameraParam &&
    this.arController.cameraParam.dispose
  ) {
    this.arController.cameraParam.dispose();
  }

  // ARController
  if (this.arController && this.arController.dispose) {
    this.arController.dispose();
  }
  this.arController = null;

  // class properties
  this._artoolkitProjectionAxisTransformMatrix = null;

  // artoolkit
  // NOTE: since the instance of ARToolkit is created globally
  // we should probably do not call .teardown() ... ?
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Context);


/***/ }),

/***/ "./three.js/src/threex/arjs-markercontrols.js":
/*!****************************************************!*\
  !*** ./three.js/src/threex/arjs-markercontrols.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");
/* harmony import */ var _arjs_markercontrols_nft_worker_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./arjs-markercontrols-nft.worker.js */ "./three.js/src/threex/arjs-markercontrols-nft.worker.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jsartoolkit */ "./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jsartoolkit__WEBPACK_IMPORTED_MODULE_3__);



 // TODO comment explanation
const { ARToolkit } = (jsartoolkit__WEBPACK_IMPORTED_MODULE_3___default());

const MarkerControls = function (context, object3d, parameters) {
  var _this = this;

  _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__["default"].call(this, object3d);

  this.context = context;
  // handle default parameters
  this.parameters = {
    // size of the marker in meter
    size: 1,
    // type of marker - ['pattern', 'barcode', 'nft', 'unknown' ]
    type: "unknown",
    // url of the pattern - IIF type='pattern'
    patternUrl: null,
    // value of the barcode - IIF type='barcode'
    barcodeValue: null,
    // url of the descriptors of image - IIF type='nft'
    descriptorsUrl: null,
    // change matrix mode - [modelViewMatrix, cameraTransformMatrix]
    changeMatrixMode: "modelViewMatrix",
    // minimal confidence in the marke recognition - between [0, 1] - default to 1
    minConfidence: 0.6,
    // turn on/off camera smoothing
    smooth: false,
    // number of matrices to smooth tracking over, more = smoother but slower follow
    smoothCount: 5,
    // distance tolerance for smoothing, if smoothThreshold # of matrices are under tolerance, tracking will stay still
    smoothTolerance: 0.01,
    // threshold for smoothing, will keep still unless enough matrices are over tolerance
    smoothThreshold: 2,
  };

  // sanity check
  var possibleValues = ["pattern", "barcode", "nft", "unknown"];
  console.assert(
    possibleValues.indexOf(this.parameters.type) !== -1,
    "illegal value",
    this.parameters.type
  );
  var possibleValues = ["modelViewMatrix", "cameraTransformMatrix"];
  console.assert(
    possibleValues.indexOf(this.parameters.changeMatrixMode) !== -1,
    "illegal value",
    this.parameters.changeMatrixMode
  );

  // create the marker Root
  this.object3d = object3d;
  this.object3d.matrixAutoUpdate = false;
  this.object3d.visible = false;

  //////////////////////////////////////////////////////////////////////////////
  //		setParameters
  //////////////////////////////////////////////////////////////////////////////
  setParameters(parameters);
  function setParameters(parameters) {
    if (parameters === undefined) return;
    for (var key in parameters) {
      var newValue = parameters[key];

      if (newValue === undefined) {
        console.warn("ArMarkerControls: '" + key + "' parameter is undefined.");
        continue;
      }

      var currentValue = _this.parameters[key];

      if (currentValue === undefined) {
        console.warn(
          "ArMarkerControls: '" + key + "' is not a property of this material."
        );
        continue;
      }

      _this.parameters[key] = newValue;
    }
  }

  if (this.parameters.smooth) {
    this.smoothMatrices = []; // last DEBOUNCE_COUNT modelViewMatrix
  }

  //////////////////////////////////////////////////////////////////////////////
  //		Code Separator
  //////////////////////////////////////////////////////////////////////////////
  // add this marker to artoolkitsystem
  // TODO rename that .addMarkerControls
  context.addMarker(this);

  if (_this.context.parameters.trackingBackend === "artoolkit") {
    this._initArtoolkit();
  } else console.assert(false);
};

MarkerControls.prototype = Object.create(_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__["default"].prototype);
MarkerControls.prototype.constructor = MarkerControls;

//////////////////////////////////////////////////////////////////////////////
//		dispose instance
//////////////////////////////////////////////////////////////////////////////
MarkerControls.prototype.dispose = function () {
  if (this.context && this.context.arController) {
    this.context.arController.removeEventListener(
      "getMarker",
      this.onGetMarker
    );
  }

  this.context.removeMarker(this);

  this.object3d = null;
  this.smoothMatrices = [];
};

//////////////////////////////////////////////////////////////////////////////
//		update controls with new modelViewMatrix
//////////////////////////////////////////////////////////////////////////////

/**
 * When you actually got a new modelViewMatrix, you need to perfom a whole bunch
 * of things. it is done here.
 */
MarkerControls.prototype.updateWithModelViewMatrix = function (
  modelViewMatrix
) {
  var markerObject3D = this.object3d;

  // mark object as visible
  markerObject3D.visible = true;

  if (this.context.parameters.trackingBackend === "artoolkit") {
    // apply context._axisTransformMatrix - change artoolkit axis to match usual webgl one
    var tmpMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().copy(
      this.context._artoolkitProjectionAxisTransformMatrix
    );
    tmpMatrix.multiply(modelViewMatrix);

    modelViewMatrix.copy(tmpMatrix);
  } else {
    console.assert(false);
  }

  // change axis orientation on marker - artoolkit say Z is normal to the marker - ar.js say Y is normal to the marker
  var markerAxisTransformMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationX(
    Math.PI / 2
  );
  modelViewMatrix.multiply(markerAxisTransformMatrix);

  var renderReqd = false;

  // change markerObject3D.matrix based on parameters.changeMatrixMode
  if (this.parameters.changeMatrixMode === "modelViewMatrix") {
    if (this.parameters.smooth) {
      var sum,
        i,
        j,
        averages, // average values for matrix over last smoothCount
        exceedsAverageTolerance = 0;

      this.smoothMatrices.push(modelViewMatrix.elements.slice()); // add latest

      if (this.smoothMatrices.length < this.parameters.smoothCount + 1) {
        markerObject3D.matrix.copy(modelViewMatrix); // not enough for average
      } else {
        this.smoothMatrices.shift(); // remove oldest entry
        averages = [];

        for (i in modelViewMatrix.elements) {
          // loop over entries in matrix
          sum = 0;
          for (j in this.smoothMatrices) {
            // calculate average for this entry
            sum += this.smoothMatrices[j][i];
          }
          averages[i] = sum / this.parameters.smoothCount;
          // check how many elements vary from the average by at least AVERAGE_MATRIX_TOLERANCE
          if (
            Math.abs(averages[i] - modelViewMatrix.elements[i]) >=
            this.parameters.smoothTolerance
          ) {
            exceedsAverageTolerance++;
          }
        }

        // if moving (i.e. at least AVERAGE_MATRIX_THRESHOLD entries are over AVERAGE_MATRIX_TOLERANCE)
        if (exceedsAverageTolerance >= this.parameters.smoothThreshold) {
          // then update matrix values to average, otherwise, don't render to minimize jitter
          for (i in modelViewMatrix.elements) {
            modelViewMatrix.elements[i] = averages[i];
          }
          markerObject3D.matrix.copy(modelViewMatrix);
          renderReqd = true; // render required in animation loop
        }
      }
    } else {
      markerObject3D.matrix.copy(modelViewMatrix);
    }
  } else if (this.parameters.changeMatrixMode === "cameraTransformMatrix") {
    markerObject3D.matrix.copy(modelViewMatrix).invert();
  } else {
    console.assert(false);
  }

  // decompose - the matrix into .position, .quaternion, .scale

  markerObject3D.matrix.decompose(
    markerObject3D.position,
    markerObject3D.quaternion,
    markerObject3D.scale
  );

  // dispatchEvent
  this.dispatchEvent({ type: "markerFound" });

  return renderReqd;
};

//////////////////////////////////////////////////////////////////////////////
//		utility functions
//////////////////////////////////////////////////////////////////////////////

MarkerControls.prototype.name = function () {
  var name = "";
  name += this.parameters.type;

  if (this.parameters.type === "pattern") {
    var url = this.parameters.patternUrl;
    var basename = url.replace(/^.*\//g, "");
    name += " - " + basename;
  } else if (this.parameters.type === "barcode") {
    name += " - " + this.parameters.barcodeValue;
  } else if (this.parameters.type === "nft") {
    var url = this.parameters.descriptorsUrl;
    var basename = url.replace(/^.*\//g, "");
    name += " - " + basename;
  } else {
    console.assert(false, "no .name() implemented for this marker controls");
  }

  return name;
};

//////////////////////////////////////////////////////////////////////////////
//		init for Artoolkit
//////////////////////////////////////////////////////////////////////////////
MarkerControls.prototype._initArtoolkit = function () {
  var _this = this;

  var artoolkitMarkerId = null;

  var delayedInitTimerId = setInterval(() => {
    // check if arController is init
    var arController = _this.context.arController;
    if (arController === null) return;
    // stop looping if it is init
    clearInterval(delayedInitTimerId);
    delayedInitTimerId = null;
    // launch the _postInitArtoolkit
    postInit();
  }, 1000 / 50);

  return;

  function postInit() {
    // check if arController is init
    var arController = _this.context.arController;
    console.assert(arController !== null);

    // start tracking this pattern
    if (_this.parameters.type === "pattern") {
      arController
        .loadMarker(_this.parameters.patternUrl)
        .then(function (markerId) {
          artoolkitMarkerId = markerId;
          arController.trackPatternMarkerId(
            artoolkitMarkerId,
            _this.parameters.size
          );
        });
    } else if (_this.parameters.type === "barcode") {
      artoolkitMarkerId = _this.parameters.barcodeValue;
      arController.trackBarcodeMarkerId(
        artoolkitMarkerId,
        _this.parameters.size
      );
    } else if (_this.parameters.type === "nft") {
      // use workers as default
      handleNFT(_this.parameters.descriptorsUrl, arController);
    } else if (_this.parameters.type === "unknown") {
      artoolkitMarkerId = null;
    } else {
      console.log(false, "invalid marker type", _this.parameters.type);
    }

    // listen to the event
    arController.addEventListener("getMarker", function (event) {
      if (
        event.data.type === ARToolkit.PATTERN_MARKER &&
        _this.parameters.type === "pattern"
      ) {
        if (artoolkitMarkerId === null) return;
        if (event.data.marker.idPatt === artoolkitMarkerId)
          onMarkerFound(event);
      } else if (
        event.data.type === ARToolkit.BARCODE_MARKER &&
        _this.parameters.type === "barcode"
      ) {
        if (artoolkitMarkerId === null) return;
        if (event.data.marker.idMatrix === artoolkitMarkerId)
          onMarkerFound(event);
      } else if (
        event.data.type === ARToolkit.UNKNOWN_MARKER &&
        _this.parameters.type === "unknown"
      ) {
        onMarkerFound(event);
      }
    });
  }

  function setMatrix(matrix, value) {
    var array = [];
    for (var key in value) {
      array[key] = value[key];
    }
    if (typeof matrix.elements.set === "function") {
      matrix.elements.set(array);
    } else {
      matrix.elements = [].slice.call(array);
    }
  }

  function handleNFT(descriptorsUrl, arController) {
    var worker = new _arjs_markercontrols_nft_worker_js__WEBPACK_IMPORTED_MODULE_2__["default"]();

    window.addEventListener("arjs-video-loaded", function (ev) {
      var video = ev.detail.component;
      var vw = video.clientWidth;
      var vh = video.clientHeight;

      var pscale = 320 / Math.max(vw, (vh / 3) * 4);

      const w = vw * pscale;
      const h = vh * pscale;
      const pw = Math.max(w, (h / 3) * 4);
      const ph = Math.max(h, (w / 4) * 3);
      const ox = (pw - w) / 2;
      const oy = (ph - h) / 2;

      arController.canvas.style.clientWidth = pw + "px";
      arController.canvas.style.clientHeight = ph + "px";
      arController.canvas.width = pw;
      arController.canvas.height = ph;

      var context_process = arController.canvas.getContext("2d");

      function process() {
        context_process.fillStyle = "black";
        context_process.fillRect(0, 0, pw, ph);
        context_process.drawImage(video, 0, 0, vw, vh, ox, oy, w, h);

        var imageData = context_process.getImageData(0, 0, pw, ph);
        worker.postMessage({ type: "process", imagedata: imageData }, [
          imageData.data.buffer,
        ]);
      }

      // initialize the worker
      worker.postMessage({
        type: "init",
        pw: pw,
        ph: ph,
        marker: descriptorsUrl,
        param: arController.cameraParam,
      });

      worker.onmessage = function (ev) {
        if (ev && ev.data && ev.data.type === "endLoading") {
          var loader = document.querySelector(".arjs-loader");
          if (loader) {
            loader.remove();
          }
          var endLoadingEvent = new Event("arjs-nft-loaded");
          window.dispatchEvent(endLoadingEvent);
        }

        if (ev && ev.data && ev.data.type === "loaded") {
          var proj = JSON.parse(ev.data.proj);
          var ratioW = pw / w;
          var ratioH = ph / h;
          proj[0] *= ratioW;
          proj[4] *= ratioW;
          proj[8] *= ratioW;
          proj[12] *= ratioW;
          proj[1] *= ratioH;
          proj[5] *= ratioH;
          proj[9] *= ratioH;
          proj[13] *= ratioH;

          setMatrix(_this.object3d.matrix, proj);
        }

        if (ev && ev.data && ev.data.type === "found") {
          var matrix = JSON.parse(ev.data.matrix);

          onMarkerFound({
            data: {
              type: ARToolkit.NFT_MARKER,
              matrix: matrix,
              msg: ev.data.type,
            },
          });

          _this.context.arController.showObject = true;
        } else {
          _this.context.arController.showObject = false;
        }

        process();
      };
    });
  }

  function onMarkerFound(event) {
    if (
      event.data.type === ARToolkit.PATTERN_MARKER &&
      event.data.marker.cfPatt < _this.parameters.minConfidence
    )
      return;
    if (
      event.data.type === ARToolkit.BARCODE_MARKER &&
      event.data.marker.cfMatrix < _this.parameters.minConfidence
    )
      return;

    var modelViewMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(event.data.matrix);
    _this.updateWithModelViewMatrix(modelViewMatrix);
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkerControls);


/***/ }),

/***/ "./three.js/src/threex/arjs-profile.js":
/*!*********************************************!*\
  !*** ./three.js/src/threex/arjs-profile.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _new_api_arjs_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../new-api/arjs-utils */ "./three.js/src/new-api/arjs-utils.js");
/* harmony import */ var _arjs_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arjs-context */ "./three.js/src/threex/arjs-context.js");

 // TODO context build-dependent

/**
 * ArToolkitProfile helps you build parameters for artoolkit
 * - it is fully independent of the rest of the code
 * - all the other classes are still expecting normal parameters
 * - you can use this class to understand how to tune your specific usecase
 * - it is made to help people to build parameters without understanding all the underlying details.
 */
const Profile = function () {
  this.reset();

  this.performance("default");
};

Profile.prototype._guessPerformanceLabel = function () {
  var isMobile =
    navigator.userAgent.match(/Android/i) ||
    navigator.userAgent.match(/webOS/i) ||
    navigator.userAgent.match(/iPhone/i) ||
    navigator.userAgent.match(/iPad/i) ||
    navigator.userAgent.match(/iPod/i) ||
    navigator.userAgent.match(/BlackBerry/i) ||
    navigator.userAgent.match(/Windows Phone/i)
      ? true
      : false;
  if (isMobile === true) {
    return "phone-normal";
  }
  return "desktop-normal";
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

/**
 * reset all parameters
 */
Profile.prototype.reset = function () {
  this.sourceParameters = {
    // to read from the webcam
    sourceType: "webcam",
  };

  this.contextParameters = {
    cameraParametersUrl:
      _arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL + "../data/data/camera_para.dat", // TODO dependent of build?
    detectionMode: "mono",
  };
  this.defaultMarkerParameters = {
    type: "pattern",
    patternUrl: _arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL + "../data/data/patt.hiro", // TODO dependent of build?
    changeMatrixMode: "modelViewMatrix",
  };
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		Performance
//////////////////////////////////////////////////////////////////////////////

Profile.prototype.performance = function (label) {
  if (label === "default") {
    label = this._guessPerformanceLabel();
  }

  if (label === "desktop-fast") {
    this.contextParameters.canvasWidth = 640 * 3;
    this.contextParameters.canvasHeight = 480 * 3;

    this.contextParameters.maxDetectionRate = 30;
  } else if (label === "desktop-normal") {
    this.contextParameters.canvasWidth = 640;
    this.contextParameters.canvasHeight = 480;

    this.contextParameters.maxDetectionRate = 60;
  } else if (label === "phone-normal") {
    this.contextParameters.canvasWidth = 80 * 4;
    this.contextParameters.canvasHeight = 60 * 4;

    this.contextParameters.maxDetectionRate = 30;
  } else if (label === "phone-slow") {
    this.contextParameters.canvasWidth = 80 * 3;
    this.contextParameters.canvasHeight = 60 * 3;

    this.contextParameters.maxDetectionRate = 30;
  } else {
    console.assert(false, "unknonwn label " + label);
  }
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		Marker
//////////////////////////////////////////////////////////////////////////////

Profile.prototype.defaultMarker = function (trackingBackend) {
  trackingBackend = trackingBackend || this.contextParameters.trackingBackend;

  if (trackingBackend === "artoolkit") {
    this.contextParameters.detectionMode = "mono";
    this.defaultMarkerParameters.type = "pattern";
    this.defaultMarkerParameters.patternUrl =
      _arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL + "../data/data/patt.hiro"; // TODO dependent of build?
  } else console.assert(false);

  return this;
};
//////////////////////////////////////////////////////////////////////////////
//		Source
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.sourceWebcam = function () {
  this.sourceParameters.sourceType = "webcam";
  delete this.sourceParameters.sourceUrl;
  return this;
};

Profile.prototype.sourceVideo = function (url) {
  this.sourceParameters.sourceType = "video";
  this.sourceParameters.sourceUrl = url;
  return this;
};

Profile.prototype.sourceImage = function (url) {
  this.sourceParameters.sourceType = "image";
  this.sourceParameters.sourceUrl = url;
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.trackingBackend = function (trackingBackend) {
  console.warn(
    "stop profile.trackingBackend() obsolete function. use .trackingMethod instead"
  );
  this.contextParameters.trackingBackend = trackingBackend;
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.changeMatrixMode = function (changeMatrixMode) {
  this.defaultMarkerParameters.changeMatrixMode = changeMatrixMode;
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.trackingMethod = function (trackingMethod) {
  var data = _new_api_arjs_utils__WEBPACK_IMPORTED_MODULE_0__["default"].parseTrackingMethod(trackingMethod);
  this.defaultMarkerParameters.markersAreaEnabled = data.markersAreaEnabled;
  this.contextParameters.trackingBackend = data.trackingBackend;
  return this;
};

/**
 * check if the profile is valid. Throw an exception is not valid
 */
Profile.prototype.checkIfValid = function () {
  return this;
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Profile);


/***/ }),

/***/ "./three.js/src/threex/arjs-source.js":
/*!********************************************!*\
  !*** ./three.js/src/threex/arjs-source.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const Source = function (parameters) {
  var _this = this;

  this.ready = false;
  this.domElement = null;

  // handle default parameters
  this.parameters = {
    // type of source - ['webcam', 'image', 'video']
    sourceType: "webcam",
    // url of the source - valid if sourceType = image|video
    sourceUrl: null,

    // Device id of the camera to use (optional)
    deviceId: null,

    // resolution of at which we initialize in the source image
    sourceWidth: 640,
    sourceHeight: 480,
    // resolution displayed for the source
    displayWidth: 640,
    displayHeight: 480,
  };
  //////////////////////////////////////////////////////////////////////////////
  //		setParameters
  //////////////////////////////////////////////////////////////////////////////
  setParameters(parameters);
  function setParameters(parameters) {
    if (parameters === undefined) return;
    for (var key in parameters) {
      var newValue = parameters[key];

      if (newValue === undefined) {
        console.warn("ArToolkitSource: '" + key + "' parameter is undefined.");
        continue;
      }

      var currentValue = _this.parameters[key];

      if (currentValue === undefined) {
        console.warn(
          "ArToolkitSource: '" + key + "' is not a property of this material."
        );
        continue;
      }

      _this.parameters[key] = newValue;
    }
  }

  this.onInitialClick = function () {
    if (this.domElement && this.domElement.play) {
      this.domElement.play().then(() => {});
    }
  };
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////
Source.prototype.init = function (onReady, onError) {
  var _this = this;

  if (this.parameters.sourceType === "image") {
    var domElement = this._initSourceImage(onSourceReady, onError);
  } else if (this.parameters.sourceType === "video") {
    var domElement = this._initSourceVideo(onSourceReady, onError);
  } else if (this.parameters.sourceType === "webcam") {
    // var domElement = this._initSourceWebcamOld(onSourceReady)
    var domElement = this._initSourceWebcam(onSourceReady, onError);
  } else {
    console.assert(false);
  }

  // attach
  this.domElement = domElement;
  this.domElement.style.position = "absolute";
  this.domElement.style.top = "0px";
  this.domElement.style.left = "0px";
  this.domElement.style.zIndex = "-2";
  this.domElement.setAttribute("id", "arjs-video");

  return this;
  function onSourceReady() {
    if (!_this.domElement) {
      return;
    }

    document.body.appendChild(_this.domElement);
    window.dispatchEvent(
      new CustomEvent("arjs-video-loaded", {
        detail: {
          component: document.querySelector("#arjs-video"),
        },
      })
    );

    _this.ready = true;

    onReady && onReady();
  }
};

////////////////////////////////////////////////////////////////////////////////
//          init image source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._initSourceImage = function (onReady) {
  // TODO make it static
  var domElement = document.createElement("img");
  domElement.src = this.parameters.sourceUrl;

  domElement.width = this.parameters.sourceWidth;
  domElement.height = this.parameters.sourceHeight;
  domElement.style.width = this.parameters.displayWidth + "px";
  domElement.style.height = this.parameters.displayHeight + "px";

  domElement.onload = onReady;
  return domElement;
};

////////////////////////////////////////////////////////////////////////////////
//          init video source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._initSourceVideo = function (onReady) {
  // TODO make it static
  var domElement = document.createElement("video");
  domElement.src = this.parameters.sourceUrl;

  domElement.style.objectFit = "initial";

  domElement.autoplay = true;
  domElement.webkitPlaysinline = true;
  domElement.controls = false;
  domElement.loop = true;
  domElement.muted = true;

  // start the video on first click if not started automatically
  document.body.addEventListener("click", this.onInitialClick, { once: true });

  domElement.width = this.parameters.sourceWidth;
  domElement.height = this.parameters.sourceHeight;
  domElement.style.width = this.parameters.displayWidth + "px";
  domElement.style.height = this.parameters.displayHeight + "px";

  domElement.onloadeddata = onReady;
  return domElement;
};

////////////////////////////////////////////////////////////////////////////////
//          init webcam source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._initSourceWebcam = function (onReady, onError) {
  var _this = this;

  // init default value
  onError =
    onError ||
    function (error) {
      var event = new CustomEvent("camera-error", { error: error });
      window.dispatchEvent(event);

      setTimeout(() => {
        if (!document.getElementById("error-popup")) {
          var errorPopup = document.createElement("div");
          errorPopup.innerHTML =
            "Webcam Error\nName: " + error.name + "\nMessage: " + error.message;
          errorPopup.setAttribute("id", "error-popup");
          document.body.appendChild(errorPopup);
        }
      }, 1000);
    };

  var domElement = document.createElement("video");
  domElement.setAttribute("autoplay", "");
  domElement.setAttribute("muted", "");
  domElement.setAttribute("playsinline", "");
  domElement.style.width = this.parameters.displayWidth + "px";
  domElement.style.height = this.parameters.displayHeight + "px";

  // check API is available
  if (
    navigator.mediaDevices === undefined ||
    navigator.mediaDevices.enumerateDevices === undefined ||
    navigator.mediaDevices.getUserMedia === undefined
  ) {
    if (navigator.mediaDevices === undefined)
      var fctName = "navigator.mediaDevices";
    else if (navigator.mediaDevices.enumerateDevices === undefined)
      var fctName = "navigator.mediaDevices.enumerateDevices";
    else if (navigator.mediaDevices.getUserMedia === undefined)
      var fctName = "navigator.mediaDevices.getUserMedia";
    else console.assert(false);
    onError({
      name: "",
      message: "WebRTC issue-! " + fctName + " not present in your browser",
    });
    return null;
  }

  // get available devices
  navigator.mediaDevices
    .enumerateDevices()
    .then(function (devices) {
      var userMediaConstraints = {
        audio: false,
        video: {
          facingMode: "environment",
          width: {
            ideal: _this.parameters.sourceWidth,
            // min: 1024,
            // max: 1920
          },
          height: {
            ideal: _this.parameters.sourceHeight,
            // min: 776,
            // max: 1080
          },
        },
      };

      if (null !== _this.parameters.deviceId) {
        userMediaConstraints.video.deviceId = {
          exact: _this.parameters.deviceId,
        };
      }

      // get a device which satisfy the constraints
      navigator.mediaDevices
        .getUserMedia(userMediaConstraints)
        .then(function success(stream) {
          // set the .src of the domElement
          domElement.srcObject = stream;

          var event = new CustomEvent("camera-init", { stream: stream });
          window.dispatchEvent(event);

          // start the video on first click if not started automatically
          document.body.addEventListener("click", _this.onInitialClick, {
            once: true,
          });

          onReady();
        })
        .catch(function (error) {
          onError({
            name: error.name,
            message: error.message,
          });
        });
    })
    .catch(function (error) {
      onError({
        message: error.message,
      });
    });

  return domElement;
};

////////////////////////////////////////////////////////////////////////////////
//          dispose source
////////////////////////////////////////////////////////////////////////////////

Source.prototype.dispose = function () {
  this.ready = false;

  switch (this.parameters.sourceType) {
    case "image":
      this._disposeSourceImage();
      break;

    case "video":
      this._disposeSourceVideo();
      break;

    case "webcam":
      this._disposeSourceWebcam();
      break;
  }

  this.domElement = null;

  document.body.removeEventListener("click", this.onInitialClick, {
    once: true,
  });
};

////////////////////////////////////////////////////////////////////////////////
//          dispose image source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._disposeSourceImage = function () {
  var domElement = document.querySelector("#arjs-video");

  if (!domElement) {
    return;
  }

  domElement.remove();
};

////////////////////////////////////////////////////////////////////////////////
//          dispose video source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._disposeSourceVideo = function () {
  var domElement = document.querySelector("#arjs-video");

  if (!domElement) {
    return;
  }

  // https://html.spec.whatwg.org/multipage/media.html#best-practices-for-authors-using-media-elements
  domElement.pause();
  domElement.removeAttribute("src");
  domElement.load();

  domElement.remove();
};

////////////////////////////////////////////////////////////////////////////////
//          dispose webcam source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._disposeSourceWebcam = function () {
  var domElement = document.querySelector("#arjs-video");

  if (!domElement) {
    return;
  }

  // https://stackoverflow.com/a/12436772
  if (domElement.srcObject && domElement.srcObject.getTracks) {
    domElement.srcObject.getTracks().map((track) => track.stop());
  }

  domElement.remove();
};

//////////////////////////////////////////////////////////////////////////////
//		Handle Mobile Torch
//////////////////////////////////////////////////////////////////////////////
Source.prototype.hasMobileTorch = function () {
  var stream = arToolkitSource.domElement.srcObject;
  if (stream instanceof MediaStream === false) return false;

  if (this._currentTorchStatus === undefined) {
    this._currentTorchStatus = false;
  }

  var videoTrack = stream.getVideoTracks()[0];

  // if videoTrack.getCapabilities() doesnt exist, return false now
  if (videoTrack.getCapabilities === undefined) return false;

  var capabilities = videoTrack.getCapabilities();

  return capabilities.torch ? true : false;
};

/**
 * toggle the flash/torch of the mobile fun if applicable.
 * Great post about it https://www.oberhofer.co/mediastreamtrack-and-its-capabilities/
 */
Source.prototype.toggleMobileTorch = function () {
  // sanity check
  console.assert(this.hasMobileTorch() === true);

  var stream = arToolkitSource.domElement.srcObject;
  if (stream instanceof MediaStream === false) {
    if (!document.getElementById("error-popup")) {
      var errorPopup = document.createElement("div");
      errorPopup.innerHTML =
        "enabling mobile torch is available only on webcam";
      errorPopup.setAttribute("id", "error-popup");
      document.body.appendChild(errorPopup);
    }
    return;
  }

  if (this._currentTorchStatus === undefined) {
    this._currentTorchStatus = false;
  }

  var videoTrack = stream.getVideoTracks()[0];
  var capabilities = videoTrack.getCapabilities();

  if (!capabilities.torch) {
    if (!document.getElementById("error-popup")) {
      var errorPopup = document.createElement("div");
      errorPopup.innerHTML = "no mobile torch is available on your camera";
      errorPopup.setAttribute("id", "error-popup");
      document.body.appendChild(errorPopup);
    }
    return;
  }

  this._currentTorchStatus = this._currentTorchStatus === false ? true : false;
  videoTrack
    .applyConstraints({
      advanced: [
        {
          torch: this._currentTorchStatus,
        },
      ],
    })
    .catch(function (error) {
      console.log(error);
    });
};

Source.prototype.domElementWidth = function () {
  return parseInt(this.domElement.style.width);
};
Source.prototype.domElementHeight = function () {
  return parseInt(this.domElement.style.height);
};

////////////////////////////////////////////////////////////////////////////////
//          handle resize
////////////////////////////////////////////////////////////////////////////////

Source.prototype.onResizeElement = function () {
  var _this = this;
  var screenWidth = window.innerWidth;
  var screenHeight = window.innerHeight;

  // sanity check
  console.assert(arguments.length === 0);

  // compute sourceWidth, sourceHeight
  if (this.domElement.nodeName === "IMG") {
    var sourceWidth = this.domElement.naturalWidth;
    var sourceHeight = this.domElement.naturalHeight;
  } else if (this.domElement.nodeName === "VIDEO") {
    var sourceWidth = this.domElement.videoWidth;
    var sourceHeight = this.domElement.videoHeight;
  } else {
    console.assert(false);
  }

  // compute sourceAspect
  var sourceAspect = sourceWidth / sourceHeight;
  // compute screenAspect
  var screenAspect = screenWidth / screenHeight;

  // if screenAspect < sourceAspect, then change the width, else change the height
  if (screenAspect < sourceAspect) {
    // compute newWidth and set .width/.marginLeft
    var newWidth = sourceAspect * screenHeight;
    this.domElement.style.width = newWidth + "px";
    this.domElement.style.marginLeft = -(newWidth - screenWidth) / 2 + "px";

    // init style.height/.marginTop to normal value
    this.domElement.style.height = screenHeight + "px";
    this.domElement.style.marginTop = "0px";
  } else {
    // compute newHeight and set .height/.marginTop
    var newHeight = 1 / (sourceAspect / screenWidth);
    this.domElement.style.height = newHeight + "px";
    this.domElement.style.marginTop = -(newHeight - screenHeight) / 2 + "px";

    // init style.width/.marginLeft to normal value
    this.domElement.style.width = screenWidth + "px";
    this.domElement.style.marginLeft = "0px";
  }
};
/*
Source.prototype.copyElementSizeTo = function(otherElement){
	otherElement.style.width = this.domElement.style.width
	otherElement.style.height = this.domElement.style.height
	otherElement.style.marginLeft = this.domElement.style.marginLeft
	otherElement.style.marginTop = this.domElement.style.marginTop
}
*/

Source.prototype.copyElementSizeTo = function (otherElement) {
  if (window.innerWidth > window.innerHeight) {
    //landscape
    otherElement.style.width = this.domElement.style.width;
    otherElement.style.height = this.domElement.style.height;
    otherElement.style.marginLeft = this.domElement.style.marginLeft;
    otherElement.style.marginTop = this.domElement.style.marginTop;
  } else {
    //portrait
    otherElement.style.height = this.domElement.style.height;
    otherElement.style.width =
      (parseInt(otherElement.style.height) * 4) / 3 + "px";
    otherElement.style.marginLeft =
      (window.innerWidth - parseInt(otherElement.style.width)) / 2 + "px";
    otherElement.style.marginTop = 0;
  }
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

Source.prototype.copySizeTo = function () {
  console.warn(
    "obsolete function arToolkitSource.copySizeTo. Use arToolkitSource.copyElementSizeTo"
  );
  this.copyElementSizeTo.apply(this, arguments);
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

Source.prototype.onResize = function (arToolkitContext, renderer, camera) {
  if (arguments.length !== 3) {
    console.warn(
      "obsolete function arToolkitSource.onResize. Use arToolkitSource.onResizeElement"
    );
    return this.onResizeElement.apply(this, arguments);
  }

  var trackingBackend = arToolkitContext.parameters.trackingBackend;

  // RESIZE DOMELEMENT
  if (trackingBackend === "artoolkit") {
    this.onResizeElement();

    var isAframe = renderer.domElement.dataset.aframeCanvas ? true : false;
    if (isAframe === false) {
      this.copyElementSizeTo(renderer.domElement);
    } else {
    }

    if (arToolkitContext.arController !== null) {
      this.copyElementSizeTo(arToolkitContext.arController.canvas);
    }
  } else console.assert(false, "unhandled trackingBackend " + trackingBackend);

  // UPDATE CAMERA
  if (trackingBackend === "artoolkit") {
    if (arToolkitContext.arController !== null) {
      camera.projectionMatrix.copy(arToolkitContext.getProjectionMatrix());
    }
  } else console.assert(false, "unhandled trackingBackend " + trackingBackend);
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Source);


/***/ }),

/***/ "./three.js/src/threex/threex-arbasecontrols.js":
/*!******************************************************!*\
  !*** ./three.js/src/threex/threex-arbasecontrols.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const ArBaseControls = function (object3d) {
  this.id = ArBaseControls.id++;

  this.object3d = object3d;
  this.object3d.matrixAutoUpdate = false;
  this.object3d.visible = false;

  // Events to honor
  // this.dispatchEvent({ type: 'becameVisible' })
  // this.dispatchEvent({ type: 'markerVisible' })	// replace markerFound
  // this.dispatchEvent({ type: 'becameUnVisible' })
};

ArBaseControls.id = 0;

ArBaseControls.prototype = Object.create(three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype);

//////////////////////////////////////////////////////////////////////////////
//		Functions
//////////////////////////////////////////////////////////////////////////////
/**
 * error catching function for update()
 */
ArBaseControls.prototype.update = function () {
  console.assert(false, "you need to implement your own update");
};

/**
 * error catching function for name()
 */
ArBaseControls.prototype.name = function () {
  console.assert(false, "you need to implement your own .name()");
  return "Not yet implemented - name()";
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArBaseControls);


/***/ }),

/***/ "./three.js/src/threex/threex-armarkerhelper.js":
/*!******************************************************!*\
  !*** ./three.js/src/threex/threex-armarkerhelper.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const ArMarkerHelper = function (markerControls) {
  this.object3d = new three__WEBPACK_IMPORTED_MODULE_0__.Group();

  var mesh = new three__WEBPACK_IMPORTED_MODULE_0__.AxesHelper();
  this.object3d.add(mesh);

  var text = markerControls.id;
  // debugger
  // var text = markerControls.parameters.patternUrl.slice(-1).toUpperCase();

  var canvas = document.createElement("canvas");
  canvas.width = 64;
  canvas.height = 64;

  var context = canvas.getContext("2d");
  var texture = new three__WEBPACK_IMPORTED_MODULE_0__.CanvasTexture(canvas);

  // put the text in the sprite
  context.font = "48px monospace";
  context.fillStyle = "rgba(192,192,255, 0.5)";
  context.fillRect(0, 0, canvas.width, canvas.height);
  context.fillStyle = "darkblue";
  context.fillText(text, canvas.width / 4, (3 * canvas.height) / 4);
  texture.needsUpdate = true;

  // var geometry = new THREE.CubeGeometry(1, 1, 1)
  var geometry = new three__WEBPACK_IMPORTED_MODULE_0__.PlaneGeometry(1, 1);
  var material = new three__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial({
    map: texture,
    transparent: true,
  });
  var mesh = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(geometry, material);
  mesh.rotation.x = -Math.PI / 2;

  this.object3d.add(mesh);
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArMarkerHelper);


/***/ }),

/***/ "./three.js/src/threex/threex-arsmoothedcontrols.js":
/*!**********************************************************!*\
  !*** ./three.js/src/threex/threex-arsmoothedcontrols.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");


/**
 * - lerp position/quaternino/scale
 * - minDelayDetected
 * - minDelayUndetected
 * @param {[type]} object3d   [description]
 * @param {[type]} parameters [description]
 */
const ArSmoothedControls = function (object3d, parameters) {
  var _this = this;

  _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, object3d);

  // copy parameters
  this.object3d.visible = false;

  this._lastLerpStepAt = null;
  this._visibleStartedAt = null;
  this._unvisibleStartedAt = null;

  // handle default parameters
  parameters = parameters || {};
  this.parameters = {
    // lerp coeficient for the position - between [0,1] - default to 1
    lerpPosition: 0.8,
    // lerp coeficient for the quaternion - between [0,1] - default to 1
    lerpQuaternion: 0.2,
    // lerp coeficient for the scale - between [0,1] - default to 1
    lerpScale: 0.7,
    // delay for lerp fixed steps - in seconds - default to 1/120
    lerpStepDelay: 1 / 60,
    // minimum delay the sub-control must be visible before this controls become visible - default to 0 seconds
    minVisibleDelay: 0.0,
    // minimum delay the sub-control must be unvisible before this controls become unvisible - default to 0 seconds
    minUnvisibleDelay: 0.2,
  };

  //////////////////////////////////////////////////////////////////////////////
  //		setParameters
  //////////////////////////////////////////////////////////////////////////////
  setParameters(parameters);
  function setParameters(parameters) {
    if (parameters === undefined) return;
    for (var key in parameters) {
      var newValue = parameters[key];

      if (newValue === undefined) {
        console.warn(
          "ArSmoothedControls: '" + key + "' parameter is undefined."
        );
        continue;
      }

      var currentValue = _this.parameters[key];

      if (currentValue === undefined) {
        console.warn(
          "ArSmoothedControls: '" +
            key +
            "' is not a property of this material."
        );
        continue;
      }

      _this.parameters[key] = newValue;
    }
  }
};

ArSmoothedControls.prototype = Object.create(_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__["default"].prototype);
ArSmoothedControls.prototype.constructor = ArSmoothedControls;

//////////////////////////////////////////////////////////////////////////////
//		update function
//////////////////////////////////////////////////////////////////////////////

ArSmoothedControls.prototype.update = function (targetObject3d) {
  var object3d = this.object3d;
  var parameters = this.parameters;
  var wasVisible = object3d.visible;
  var present = performance.now() / 1000;

  //////////////////////////////////////////////////////////////////////////////
  //		handle object3d.visible with minVisibleDelay/minUnvisibleDelay
  //////////////////////////////////////////////////////////////////////////////
  if (targetObject3d.visible === false) this._visibleStartedAt = null;
  if (targetObject3d.visible === true) this._unvisibleStartedAt = null;

  if (targetObject3d.visible === true && this._visibleStartedAt === null)
    this._visibleStartedAt = present;
  if (targetObject3d.visible === false && this._unvisibleStartedAt === null)
    this._unvisibleStartedAt = present;

  if (wasVisible === false && targetObject3d.visible === true) {
    var visibleFor = present - this._visibleStartedAt;
    if (visibleFor >= this.parameters.minVisibleDelay) {
      object3d.visible = true;
      snapDirectlyToTarget();
    }
    // console.log('visibleFor', visibleFor)
  }

  if (wasVisible === true && targetObject3d.visible === false) {
    var unvisibleFor = present - this._unvisibleStartedAt;
    if (unvisibleFor >= this.parameters.minUnvisibleDelay) {
      object3d.visible = false;
    }
  }

  //////////////////////////////////////////////////////////////////////////////
  //		apply lerp on positon/quaternion/scale
  //////////////////////////////////////////////////////////////////////////////

  // apply lerp steps - require fix time steps to behave the same no matter the fps
  if (this._lastLerpStepAt === null) {
    applyOneSlerpStep();
    this._lastLerpStepAt = present;
  } else {
    var nStepsToDo = Math.floor(
      (present - this._lastLerpStepAt) / this.parameters.lerpStepDelay
    );
    for (var i = 0; i < nStepsToDo; i++) {
      applyOneSlerpStep();
      this._lastLerpStepAt += this.parameters.lerpStepDelay;
    }
  }

  // disable the lerp by directly copying targetObject3d position/quaternion/scale
  if (false) {}

  // update the matrix
  this.object3d.updateMatrix();

  //////////////////////////////////////////////////////////////////////////////
  //		honor becameVisible/becameUnVisible event
  //////////////////////////////////////////////////////////////////////////////
  // honor becameVisible event
  if (wasVisible === false && object3d.visible === true) {
    this.dispatchEvent({ type: "becameVisible" });
  }
  // honor becameUnVisible event
  if (wasVisible === true && object3d.visible === false) {
    this.dispatchEvent({ type: "becameUnVisible" });
  }
  return;

  function snapDirectlyToTarget() {
    object3d.position.copy(targetObject3d.position);
    object3d.quaternion.copy(targetObject3d.quaternion);
    object3d.scale.copy(targetObject3d.scale);
  }

  function applyOneSlerpStep() {
    object3d.position.lerp(targetObject3d.position, parameters.lerpPosition);
    object3d.quaternion.slerp(
      targetObject3d.quaternion,
      parameters.lerpQuaternion
    );
    object3d.scale.lerp(targetObject3d.scale, parameters.lerpScale);
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArSmoothedControls);


/***/ }),

/***/ "./three.js/src/threex/threex-hittesting-plane.js":
/*!********************************************************!*\
  !*** ./three.js/src/threex/threex-hittesting-plane.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


// TODO this is useless - prefere arjs-HitTesting.js

/**
 * - maybe support .onClickFcts in each object3d
 * - seems an easy light layer for clickable object
 * - up to
 */
const HitTestingPlane = function (sourceElement) {
  this._sourceElement = sourceElement;

  // create _pickingScene
  this._pickingScene = new three__WEBPACK_IMPORTED_MODULE_0__.Scene();

  // create _pickingPlane
  var geometry = new three__WEBPACK_IMPORTED_MODULE_0__.PlaneGeometry(20, 20, 19, 19).rotateX(-Math.PI / 2);
  // var geometry = new THREE.PlaneGeometry(20,20).rotateX(-Math.PI/2)
  var material = new three__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial({
    // opacity: 0.5,
    // transparent: true,
    wireframe: true,
  });
  // material.visible = false
  this._pickingPlane = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(geometry, material);
  this._pickingScene.add(this._pickingPlane);

  // Create pickingCamera
  var fullWidth = parseInt(sourceElement.style.width);
  var fullHeight = parseInt(sourceElement.style.height);
  // TODO hardcoded fov - couch
  this._pickingCamera = new three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera(
    42,
    fullWidth / fullHeight,
    0.1,
    30
  );
};

//////////////////////////////////////////////////////////////////////////////
//		update function
//////////////////////////////////////////////////////////////////////////////

HitTestingPlane.prototype.update = function (
  camera,
  pickingRoot,
  changeMatrixMode
) {
  this.onResize();

  if (changeMatrixMode === "modelViewMatrix") {
    // set pickingPlane position
    var pickingPlane = this._pickingPlane;
    pickingRoot.parent.updateMatrixWorld();
    pickingPlane.matrix.copy(pickingRoot.parent.matrixWorld);
    // set position/quaternion/scale from pickingPlane.matrix
    pickingPlane.matrix.decompose(
      pickingPlane.position,
      pickingPlane.quaternion,
      pickingPlane.scale
    );
  } else if (changeMatrixMode === "cameraTransformMatrix") {
    // set pickingPlane position
    var pickingCamera = this._pickingCamera;
    camera.updateMatrixWorld();
    pickingCamera.matrix.copy(camera.matrixWorld);
    // set position/quaternion/scale from pickingCamera.matrix
    pickingCamera.matrix.decompose(
      pickingCamera.position,
      pickingCamera.quaternion,
      pickingCamera.scale
    );
  } else console.assert(false);

  // var position = this._pickingPlane.position
  // console.log('pickingPlane position', position.x.toFixed(2), position.y.toFixed(2), position.z.toFixed(2))
  // var position = this._pickingCamera.position
  // console.log('his._pickingCamera position', position.x.toFixed(2), position.y.toFixed(2), position.z.toFixed(2))
};

//////////////////////////////////////////////////////////////////////////////
//		resize camera
//////////////////////////////////////////////////////////////////////////////

HitTestingPlane.prototype.onResize = function () {
  var sourceElement = this._sourceElement;
  var pickingCamera = this._pickingCamera;

  // FIXME why using css here ??? not even computed style
  // should get the size of the elment directly independantly
  var fullWidth = parseInt(sourceElement.style.width);
  var fullHeight = parseInt(sourceElement.style.height);
  pickingCamera.aspect = fullWidth / fullHeight;

  pickingCamera.updateProjectionMatrix();
};

//////////////////////////////////////////////////////////////////////////////
//		Perform test
//////////////////////////////////////////////////////////////////////////////
HitTestingPlane.prototype.test = function (mouseX, mouseY) {
  // convert mouseX, mouseY to [-1, +1]
  mouseX = (mouseX - 0.5) * 2;
  mouseY = -(mouseY - 0.5) * 2;

  this._pickingScene.updateMatrixWorld(true);

  // compute intersections between mouseVector3 and pickingPlane
  var raycaster = new three__WEBPACK_IMPORTED_MODULE_0__.Raycaster();
  var mouseVector3 = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(mouseX, mouseY, 1);
  raycaster.setFromCamera(mouseVector3, this._pickingCamera);
  var intersects = raycaster.intersectObjects([this._pickingPlane]);

  if (intersects.length === 0) return null;

  // set new demoRoot position
  var position = this._pickingPlane.worldToLocal(intersects[0].point.clone());
  // TODO here do a look at the camera ?
  var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();
  var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(1, 1, 1); //.multiplyScalar(1)

  return {
    position: position,
    quaternion: quaternion,
    scale: scale,
  };
};

//////////////////////////////////////////////////////////////////////////////
//		render the pickingPlane for debug
//////////////////////////////////////////////////////////////////////////////

HitTestingPlane.prototype.renderDebug = function (renderer) {
  // render sceneOrtho
  renderer.render(this._pickingScene, this._pickingCamera);
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HitTestingPlane);


/***/ }),

/***/ "three":
/*!**************************************************************************************!*\
  !*** external {"commonjs":"three","commonjs2":"three","amd":"three","root":"THREE"} ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_three__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!************************************!*\
  !*** ./three.js/src/index-arjs.js ***!
  \************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Anchor": () => (/* reexport safe */ _new_api_arjs_anchor__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   "AnchorDebugUI": () => (/* reexport safe */ _new_api_arjs_debugui__WEBPACK_IMPORTED_MODULE_2__.AnchorDebugUI),
/* harmony export */   "Context": () => (/* reexport safe */ _threex_arjs_context__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   "HitTesting": () => (/* reexport safe */ _new_api_arjs_hittesting__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   "Profile": () => (/* reexport safe */ _threex_arjs_profile__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   "Session": () => (/* reexport safe */ _new_api_arjs_session__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   "SessionDebugUI": () => (/* reexport safe */ _new_api_arjs_debugui__WEBPACK_IMPORTED_MODULE_2__.SessionDebugUI),
/* harmony export */   "Source": () => (/* reexport safe */ _threex_arjs_source__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   "Utils": () => (/* reexport safe */ _new_api_arjs_utils__WEBPACK_IMPORTED_MODULE_4__["default"])
/* harmony export */ });
/* harmony import */ var _new_api_arjs_anchor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./new-api/arjs-anchor */ "./three.js/src/new-api/arjs-anchor.js");
/* harmony import */ var _new_api_arjs_hittesting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./new-api/arjs-hittesting */ "./three.js/src/new-api/arjs-hittesting.js");
/* harmony import */ var _new_api_arjs_debugui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./new-api/arjs-debugui */ "./three.js/src/new-api/arjs-debugui.js");
/* harmony import */ var _new_api_arjs_session__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./new-api/arjs-session */ "./three.js/src/new-api/arjs-session.js");
/* harmony import */ var _new_api_arjs_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./new-api/arjs-utils */ "./three.js/src/new-api/arjs-utils.js");
/* harmony import */ var _threex_arjs_context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./threex/arjs-context */ "./three.js/src/threex/arjs-context.js");
/* harmony import */ var _threex_arjs_profile__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./threex/arjs-profile */ "./three.js/src/threex/arjs-profile.js");
/* harmony import */ var _threex_arjs_source__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./threex/arjs-source */ "./three.js/src/threex/arjs-source.js");











})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,