(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("three"));
	else if(typeof define === 'function' && define.amd)
		define(["three"], factory);
	else if(typeof exports === 'object')
		exports["THREEx"] = factory(require("three"));
	else
		root["THREEx"] = factory(root["THREE"]);
})(this, (__WEBPACK_EXTERNAL_MODULE_three__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js ***!
  \*****************************************************************/
/***/ (function(module) {

/*! For license information please see ARToolkit.js.LICENSE.txt */
!function(A,I){ true?module.exports=I():0}("undefined"!=typeof self?self:this,(()=>(()=>{var A={230:A=>{A.exports="object"==typeof self?self.FormData:window.FormData},654:()=>{},231:()=>{},703:()=>{},61:(A,I,g)=>{var B=g(698).default;function C(){"use strict";A.exports=C=function(){return I},A.exports.__esModule=!0,A.exports.default=A.exports;var I={},g=Object.prototype,Q=g.hasOwnProperty,E="function"==typeof Symbol?Symbol:{},i=E.iterator||"@@iterator",o=E.asyncIterator||"@@asyncIterator",D=E.toStringTag||"@@toStringTag";function a(A,I,g){return Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}),A[I]}try{a({},"")}catch(A){a=function(A,I,g){return A[I]=g}}function w(A,I,g,B){var C=I&&I.prototype instanceof t?I:t,Q=Object.create(C.prototype),E=new c(B||[]);return Q._invoke=function(A,I,g){var B="suspendedStart";return function(C,Q){if("executing"===B)throw new Error("Generator is already running");if("completed"===B){if("throw"===C)throw Q;return{value:void 0,done:!0}}for(g.method=C,g.arg=Q;;){var E=g.delegate;if(E){var i=e(E,g);if(i){if(i===G)continue;return i}}if("next"===g.method)g.sent=g._sent=g.arg;else if("throw"===g.method){if("suspendedStart"===B)throw B="completed",g.arg;g.dispatchException(g.arg)}else"return"===g.method&&g.abrupt("return",g.arg);B="executing";var o=s(A,I,g);if("normal"===o.type){if(B=g.done?"completed":"suspendedYield",o.arg===G)continue;return{value:o.arg,done:g.done}}"throw"===o.type&&(B="completed",g.method="throw",g.arg=o.arg)}}}(A,g,E),Q}function s(A,I,g){try{return{type:"normal",arg:A.call(I,g)}}catch(A){return{type:"throw",arg:A}}}I.wrap=w;var G={};function t(){}function h(){}function R(){}var F={};a(F,i,(function(){return this}));var y=Object.getPrototypeOf,r=y&&y(y(J([])));r&&r!==g&&Q.call(r,i)&&(F=r);var n=R.prototype=t.prototype=Object.create(F);function S(A){["next","throw","return"].forEach((function(I){a(A,I,(function(A){return this._invoke(I,A)}))}))}function M(A,I){function g(C,E,i,o){var D=s(A[C],A,E);if("throw"!==D.type){var a=D.arg,w=a.value;return w&&"object"==B(w)&&Q.call(w,"__await")?I.resolve(w.__await).then((function(A){g("next",A,i,o)}),(function(A){g("throw",A,i,o)})):I.resolve(w).then((function(A){a.value=A,i(a)}),(function(A){return g("throw",A,i,o)}))}o(D.arg)}var C;this._invoke=function(A,B){function Q(){return new I((function(I,C){g(A,B,I,C)}))}return C=C?C.then(Q,Q):Q()}}function e(A,I){var g=A.iterator[I.method];if(void 0===g){if(I.delegate=null,"throw"===I.method){if(A.iterator.return&&(I.method="return",I.arg=void 0,e(A,I),"throw"===I.method))return G;I.method="throw",I.arg=new TypeError("The iterator does not provide a 'throw' method")}return G}var B=s(g,A.iterator,I.arg);if("throw"===B.type)return I.method="throw",I.arg=B.arg,I.delegate=null,G;var C=B.arg;return C?C.done?(I[A.resultName]=C.value,I.next=A.nextLoc,"return"!==I.method&&(I.method="next",I.arg=void 0),I.delegate=null,G):C:(I.method="throw",I.arg=new TypeError("iterator result is not an object"),I.delegate=null,G)}function N(A){var I={tryLoc:A[0]};1 in A&&(I.catchLoc=A[1]),2 in A&&(I.finallyLoc=A[2],I.afterLoc=A[3]),this.tryEntries.push(I)}function k(A){var I=A.completion||{};I.type="normal",delete I.arg,A.completion=I}function c(A){this.tryEntries=[{tryLoc:"root"}],A.forEach(N,this),this.reset(!0)}function J(A){if(A){var I=A[i];if(I)return I.call(A);if("function"==typeof A.next)return A;if(!isNaN(A.length)){var g=-1,B=function I(){for(;++g<A.length;)if(Q.call(A,g))return I.value=A[g],I.done=!1,I;return I.value=void 0,I.done=!0,I};return B.next=B}}return{next:U}}function U(){return{value:void 0,done:!0}}return h.prototype=R,a(n,"constructor",R),a(R,"constructor",h),h.displayName=a(R,D,"GeneratorFunction"),I.isGeneratorFunction=function(A){var I="function"==typeof A&&A.constructor;return!!I&&(I===h||"GeneratorFunction"===(I.displayName||I.name))},I.mark=function(A){return Object.setPrototypeOf?Object.setPrototypeOf(A,R):(A.__proto__=R,a(A,D,"GeneratorFunction")),A.prototype=Object.create(n),A},I.awrap=function(A){return{__await:A}},S(M.prototype),a(M.prototype,o,(function(){return this})),I.AsyncIterator=M,I.async=function(A,g,B,C,Q){void 0===Q&&(Q=Promise);var E=new M(w(A,g,B,C),Q);return I.isGeneratorFunction(g)?E:E.next().then((function(A){return A.done?A.value:E.next()}))},S(n),a(n,D,"Generator"),a(n,i,(function(){return this})),a(n,"toString",(function(){return"[object Generator]"})),I.keys=function(A){var I=[];for(var g in A)I.push(g);return I.reverse(),function g(){for(;I.length;){var B=I.pop();if(B in A)return g.value=B,g.done=!1,g}return g.done=!0,g}},I.values=J,c.prototype={constructor:c,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(k),!A)for(var I in this)"t"===I.charAt(0)&&Q.call(this,I)&&!isNaN(+I.slice(1))&&(this[I]=void 0)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if("throw"===A.type)throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var I=this;function g(g,B){return E.type="throw",E.arg=A,I.next=g,B&&(I.method="next",I.arg=void 0),!!B}for(var B=this.tryEntries.length-1;B>=0;--B){var C=this.tryEntries[B],E=C.completion;if("root"===C.tryLoc)return g("end");if(C.tryLoc<=this.prev){var i=Q.call(C,"catchLoc"),o=Q.call(C,"finallyLoc");if(i&&o){if(this.prev<C.catchLoc)return g(C.catchLoc,!0);if(this.prev<C.finallyLoc)return g(C.finallyLoc)}else if(i){if(this.prev<C.catchLoc)return g(C.catchLoc,!0)}else{if(!o)throw new Error("try statement without catch or finally");if(this.prev<C.finallyLoc)return g(C.finallyLoc)}}}},abrupt:function(A,I){for(var g=this.tryEntries.length-1;g>=0;--g){var B=this.tryEntries[g];if(B.tryLoc<=this.prev&&Q.call(B,"finallyLoc")&&this.prev<B.finallyLoc){var C=B;break}}C&&("break"===A||"continue"===A)&&C.tryLoc<=I&&I<=C.finallyLoc&&(C=null);var E=C?C.completion:{};return E.type=A,E.arg=I,C?(this.method="next",this.next=C.finallyLoc,G):this.complete(E)},complete:function(A,I){if("throw"===A.type)throw A.arg;return"break"===A.type||"continue"===A.type?this.next=A.arg:"return"===A.type?(this.rval=this.arg=A.arg,this.method="return",this.next="end"):"normal"===A.type&&I&&(this.next=I),G},finish:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.finallyLoc===A)return this.complete(g.completion,g.afterLoc),k(g),G}},catch:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.tryLoc===A){var B=g.completion;if("throw"===B.type){var C=B.arg;k(g)}return C}}throw new Error("illegal catch attempt")},delegateYield:function(A,I,g){return this.delegate={iterator:J(A),resultName:I,nextLoc:g},"next"===this.method&&(this.arg=void 0),G}},I}A.exports=C,A.exports.__esModule=!0,A.exports.default=A.exports},698:A=>{function I(g){return A.exports=I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},A.exports.__esModule=!0,A.exports.default=A.exports,I(g)}A.exports=I,A.exports.__esModule=!0,A.exports.default=A.exports},687:(A,I,g)=>{var B=g(61)();A.exports=B;try{regeneratorRuntime=B}catch(A){"object"==typeof globalThis?globalThis.regeneratorRuntime=B:Function("r","regeneratorRuntime = r")(B)}}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B](Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var B={};return(()=>{"use strict";function A(A,I,g,B,C,Q,E){try{var i=A[Q](E),o=i.value}catch(A){return void g(A)}i.done?I(o):Promise.resolve(o).then(B,C)}function I(I){return function(){var g=this,B=arguments;return new Promise((function(C,Q){var E=I.apply(g,B);function i(I){A(E,C,Q,i,o,"next",I)}function o(I){A(E,C,Q,i,o,"throw",I)}i(void 0)}))}}function C(A,I){if(!(A instanceof I))throw new TypeError("Cannot call a class as a function")}function Q(A,I){for(var g=0;g<I.length;g++){var B=I[g];B.enumerable=B.enumerable||!1,B.configurable=!0,"value"in B&&(B.writable=!0),Object.defineProperty(A,B.key,B)}}function E(A,I,g){return I&&Q(A.prototype,I),g&&Q(A,g),Object.defineProperty(A,"prototype",{writable:!1}),A}g.d(B,{default:()=>wI});var i=g(687),o=g.n(i);function D(A){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},D(A)}var a,w=(a=(a="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(A){var I,B;(A=void 0!==(A=A||{})?A:{}).ready=new Promise((function(A,g){I=A,B=g}));var C,Q,E,i,o,w,s=Object.assign({},A),G=[],t="./this.program",h=function(A,I){throw I},R="object"==("undefined"==typeof window?"undefined":D(window)),F="function"==typeof importScripts,y="object"==("undefined"==typeof process?"undefined":D(process))&&"object"==D(process.versions)&&"string"==typeof process.versions.node,r="";y?(r=F?g(703).dirname(r)+"/":"//",w=function(){o||(i=g(231),o=g(703))},C=function(A,I){var g=DI(A);return g?I?g:g.toString():(w(),A=o.normalize(A),i.readFileSync(A,I?void 0:"utf8"))},E=function(A){var I=C(A,!0);return I.buffer||(I=new Uint8Array(I)),I},Q=function(A,I,g){var B=DI(A);B&&I(B),w(),A=o.normalize(A),i.readFile(A,(function(A,B){A?g(A):I(B.buffer)}))},process.argv.length>1&&(t=process.argv[1].replace(/\\/g,"/")),G=process.argv.slice(2),process.on("uncaughtException",(function(A){if(!(A instanceof oA))throw A})),process.on("unhandledRejection",(function(A){throw A})),h=function(A,I){if(T())throw process.exitCode=A,I;var g;(g=I)instanceof oA||M("exiting due to exception: "+g),process.exit(A)},A.inspect=function(){return"[Emscripten Module object]"}):(R||F)&&(F?r=self.location.href:"undefined"!=typeof document&&document.currentScript&&(r=document.currentScript.src),a&&(r=a),r=0!==r.indexOf("blob:")?r.substr(0,r.replace(/[?#].*/,"").lastIndexOf("/")+1):"",C=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=DI(A);if(g)return function(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(iI&&c(!1,"Character code "+B+" ("+String.fromCharCode(B)+")  at offset "+g+" not in 0x00-0xFF."),B&=255),I.push(String.fromCharCode(B))}return I.join("")}(g);throw I}},F&&(E=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}catch(I){var g=DI(A);if(g)return g;throw I}}),Q=function(A,I,g){var B=new XMLHttpRequest;B.open("GET",A,!0),B.responseType="arraybuffer",B.onload=function(){if(200==B.status||0==B.status&&B.response)I(B.response);else{var C=DI(A);C?I(C.buffer):g()}},B.onerror=g,B.send(null)});var n,S=A.print||console.log.bind(console),M=A.printErr||console.warn.bind(console);Object.assign(A,s),s=null,A.arguments&&(G=A.arguments),A.thisProgram&&(t=A.thisProgram),A.quit&&(h=A.quit),A.wasmBinary&&(n=A.wasmBinary);var e,N=A.noExitRuntime||!0;"object"!=("undefined"==typeof WebAssembly?"undefined":D(WebAssembly))&&_("no native wasm support detected");var k=!1;function c(A,I){A||_(I)}var J,U,K,L,Y,d,q,H,l,f="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function u(A,I,g){for(var B=I+g,C=I;A[C]&&!(C>=B);)++C;if(C-I>16&&A.buffer&&f)return f.decode(A.subarray(I,C));for(var Q="";I<C;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)Q+=String.fromCharCode(E);else{var D=E-65536;Q+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else Q+=String.fromCharCode((31&E)<<6|i)}else Q+=String.fromCharCode(E)}return Q}function W(A,I){return A?u(K,A,I):""}function m(A,I,g,B){if(!(B>0))return 0;for(var C=g,Q=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=Q)break;I[g++]=i}else if(i<=2047){if(g+1>=Q)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=Q)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=Q)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-C}function b(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}function p(I){J=I,A.HEAP8=U=new Int8Array(I),A.HEAP16=L=new Int16Array(I),A.HEAP32=d=new Int32Array(I),A.HEAPU8=K=new Uint8Array(I),A.HEAPU16=Y=new Uint16Array(I),A.HEAPU32=q=new Uint32Array(I),A.HEAPF32=H=new Float32Array(I),A.HEAPF64=l=new Float64Array(I)}A.INITIAL_MEMORY;var Z,x=[],V=[],X=[];function T(){return N}var O=0,v=null,j=null;function P(I){O++,A.monitorRunDependencies&&A.monitorRunDependencies(O)}function z(I){if(O--,A.monitorRunDependencies&&A.monitorRunDependencies(O),0==O&&(null!==v&&(clearInterval(v),v=null),j)){var g=j;j=null,g()}}function _(I){A.onAbort&&A.onAbort(I),M(I="Aborted("+I+")"),k=!0,I+=". Build with -sASSERTIONS for more info.";var g=new WebAssembly.RuntimeError(I);throw B(g),g}var $,AA,IA,gA,BA="data:application/octet-stream;base64,";function CA(A){return A.startsWith(BA)}function QA(A){return A.startsWith("file://")}function EA(A){try{if(A==$&&n)return new Uint8Array(n);var I=DI(A);if(I)return I;if(E)return E(A);throw"both async and sync fetching of the wasm failed"}catch(A){_(A)}}CA($="data:application/octet-stream;base64,")||(AA=$,$=A.locateFile?A.locateFile(AA,r):r+AA);var iA={64328:function(){var A=arguments,I=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkit.NFTMarkerInfo;g.id=A[I++],g.error=A[I++],g.found=1,g.pose[0]=A[I++],g.pose[1]=A[I++],g.pose[2]=A[I++],g.pose[3]=A[I++],g.pose[4]=A[I++],g.pose[5]=A[I++],g.pose[6]=A[I++],g.pose[7]=A[I++],g.pose[8]=A[I++],g.pose[9]=A[I++],g.pose[10]=A[I++],g.pose[11]=A[I++]},65025:function(){var A=arguments,I=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkit.NFTMarkerInfo;g.id=A[I++],g.error=-1,g.found=0,g.pose[0]=0,g.pose[1]=0,g.pose[2]=0,g.pose[3]=0,g.pose[4]=0,g.pose[5]=0,g.pose[6]=0,g.pose[7]=0,g.pose[8]=0,g.pose[9]=0,g.pose[10]=0,g.pose[11]=0},65645:function(A,I,g,B){artoolkit.multiEachMarkerInfo||(artoolkit.multiEachMarkerInfo={});var C=artoolkit.multiEachMarkerInfo;C.visible=A,C.pattId=I,C.pattType=g,C.width=B},65919:function(A,I,g,B,C,Q,E,i,o,D,a,w){var s=arguments,G=12;artoolkit.markerInfo||(artoolkit.markerInfo={pos:[0,0],line:[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],vertex:[[0,0],[0,0],[0,0],[0,0]]});var t=artoolkit.markerInfo;t.area=A,t.id=I,t.idPatt=g,t.idMatrix=B,t.dir=C,t.dirPatt=Q,t.dirMatrix=E,t.cf=i,t.cfPatt=o,t.cfMatrix=D,t.pos[0]=a,t.pos[1]=w,t.line[0][0]=s[G++],t.line[0][1]=s[G++],t.line[0][2]=s[G++],t.line[1][0]=s[G++],t.line[1][1]=s[G++],t.line[1][2]=s[G++],t.line[2][0]=s[G++],t.line[2][1]=s[G++],t.line[2][2]=s[G++],t.line[3][0]=s[G++],t.line[3][1]=s[G++],t.line[3][2]=s[G++],t.vertex[0][0]=s[G++],t.vertex[0][1]=s[G++],t.vertex[1][0]=s[G++],t.vertex[1][1]=s[G++],t.vertex[2][0]=s[G++],t.vertex[2][1]=s[G++],t.vertex[3][0]=s[G++],t.vertex[3][1]=s[G++],t.errorCorrected=s[G++]},67254:function(A,I,g,B,C,Q){artoolkit.frameMalloc||(artoolkit.frameMalloc={});var E=artoolkit.frameMalloc;E.framepointer=I,E.framesize=g,E.camera=B,E.transform=C,E.videoLumaPointer=Q}};function oA(A){this.name="ExitStatus",this.message="Program terminated with exit("+A+")",this.status=A}function DA(I){for(;I.length>0;)I.shift()(A)}function aA(A){this.excPtr=A,this.ptr=A-24,this.set_type=function(A){q[this.ptr+4>>2]=A},this.get_type=function(){return q[this.ptr+4>>2]},this.set_destructor=function(A){q[this.ptr+8>>2]=A},this.get_destructor=function(){return q[this.ptr+8>>2]},this.set_refcount=function(A){d[this.ptr>>2]=A},this.set_caught=function(A){A=A?1:0,U[this.ptr+12>>0]=A},this.get_caught=function(){return 0!=U[this.ptr+12>>0]},this.set_rethrown=function(A){A=A?1:0,U[this.ptr+13>>0]=A},this.get_rethrown=function(){return 0!=U[this.ptr+13>>0]},this.init=function(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var A=d[this.ptr>>2];d[this.ptr>>2]=A+1},this.release_ref=function(){var A=d[this.ptr>>2];return d[this.ptr>>2]=A-1,1===A},this.set_adjusted_ptr=function(A){q[this.ptr+16>>2]=A},this.get_adjusted_ptr=function(){return q[this.ptr+16>>2]},this.get_exception_ptr=function(){if(rI(this.get_type()))return q[this.excPtr>>2];var A=this.get_adjusted_ptr();return 0!==A?A:this.excPtr}}var wA={isAbs:function(A){return"/"===A.charAt(0)},splitPath:function(A){return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(A).slice(1)},normalizeArray:function(A,I){for(var g=0,B=A.length-1;B>=0;B--){var C=A[B];"."===C?A.splice(B,1):".."===C?(A.splice(B,1),g++):g&&(A.splice(B,1),g--)}if(I)for(;g;g--)A.unshift("..");return A},normalize:function(A){var I=wA.isAbs(A),g="/"===A.substr(-1);return(A=wA.normalizeArray(A.split("/").filter((function(A){return!!A})),!I).join("/"))||I||(A="."),A&&g&&(A+="/"),(I?"/":"")+A},dirname:function(A){var I=wA.splitPath(A),g=I[0],B=I[1];return g||B?(B&&(B=B.substr(0,B.length-1)),g+B):"."},basename:function(A){if("/"===A)return"/";var I=(A=(A=wA.normalize(A)).replace(/\/$/,"")).lastIndexOf("/");return-1===I?A:A.substr(I+1)},join:function(){var A=Array.prototype.slice.call(arguments);return wA.normalize(A.join("/"))},join2:function(A,I){return wA.normalize(A+"/"+I)}},sA={resolve:function(){for(var A="",I=!1,g=arguments.length-1;g>=-1&&!I;g--){var B=g>=0?arguments[g]:FA.cwd();if("string"!=typeof B)throw new TypeError("Arguments to path.resolve must be strings");if(!B)return"";A=B+"/"+A,I=wA.isAbs(B)}return(I?"/":"")+(A=wA.normalizeArray(A.split("/").filter((function(A){return!!A})),!I).join("/"))||"."},relative:function(A,I){function g(A){for(var I=0;I<A.length&&""===A[I];I++);for(var g=A.length-1;g>=0&&""===A[g];g--);return I>g?[]:A.slice(I,g-I+1)}A=sA.resolve(A).substr(1),I=sA.resolve(I).substr(1);for(var B=g(A.split("/")),C=g(I.split("/")),Q=Math.min(B.length,C.length),E=Q,i=0;i<Q;i++)if(B[i]!==C[i]){E=i;break}var o=[];for(i=E;i<B.length;i++)o.push("..");return(o=o.concat(C.slice(E))).join("/")}};function GA(A,I,g){var B=g>0?g:b(A)+1,C=new Array(B),Q=m(A,C,0,C.length);return I&&(C.length=Q),C}var tA={ttys:[],init:function(){},shutdown:function(){},register:function(A,I){tA.ttys[A]={input:[],output:[],ops:I},FA.registerDevice(A,tA.stream_ops)},stream_ops:{open:function(A){var I=tA.ttys[A.node.rdev];if(!I)throw new FA.ErrnoError(43);A.tty=I,A.seekable=!1},close:function(A){A.tty.ops.fsync(A.tty)},fsync:function(A){A.tty.ops.fsync(A.tty)},read:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.get_char)throw new FA.ErrnoError(60);for(var Q=0,E=0;E<B;E++){var i;try{i=A.tty.ops.get_char(A.tty)}catch(A){throw new FA.ErrnoError(29)}if(void 0===i&&0===Q)throw new FA.ErrnoError(6);if(null==i)break;Q++,I[g+E]=i}return Q&&(A.node.timestamp=Date.now()),Q},write:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.put_char)throw new FA.ErrnoError(60);try{for(var Q=0;Q<B;Q++)A.tty.ops.put_char(A.tty,I[g+Q])}catch(A){throw new FA.ErrnoError(29)}return B&&(A.node.timestamp=Date.now()),Q}},default_tty_ops:{get_char:function(A){if(!A.input.length){var I=null;if(y){var g=Buffer.alloc(256),B=0;try{B=i.readSync(process.stdin.fd,g,0,256,-1)}catch(A){if(!A.toString().includes("EOF"))throw A;B=0}I=B>0?g.slice(0,B).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(I=window.prompt("Input: "))&&(I+="\n"):"function"==typeof readline&&null!==(I=readline())&&(I+="\n");if(!I)return null;A.input=GA(I,!0)}return A.input.shift()},put_char:function(A,I){null===I||10===I?(S(u(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(S(u(A.output,0)),A.output=[])}},default_tty1_ops:{put_char:function(A,I){null===I||10===I?(M(u(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(M(u(A.output,0)),A.output=[])}}};function hA(A){_()}var RA={ops_table:null,mount:function(A){return RA.createNode(null,"/",16895,0)},createNode:function(A,I,g,B){if(FA.isBlkdev(g)||FA.isFIFO(g))throw new FA.ErrnoError(63);RA.ops_table||(RA.ops_table={dir:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr,lookup:RA.node_ops.lookup,mknod:RA.node_ops.mknod,rename:RA.node_ops.rename,unlink:RA.node_ops.unlink,rmdir:RA.node_ops.rmdir,readdir:RA.node_ops.readdir,symlink:RA.node_ops.symlink},stream:{llseek:RA.stream_ops.llseek}},file:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr},stream:{llseek:RA.stream_ops.llseek,read:RA.stream_ops.read,write:RA.stream_ops.write,allocate:RA.stream_ops.allocate,mmap:RA.stream_ops.mmap,msync:RA.stream_ops.msync}},link:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr,readlink:RA.node_ops.readlink},stream:{}},chrdev:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr},stream:FA.chrdev_stream_ops}});var C=FA.createNode(A,I,g,B);return FA.isDir(C.mode)?(C.node_ops=RA.ops_table.dir.node,C.stream_ops=RA.ops_table.dir.stream,C.contents={}):FA.isFile(C.mode)?(C.node_ops=RA.ops_table.file.node,C.stream_ops=RA.ops_table.file.stream,C.usedBytes=0,C.contents=null):FA.isLink(C.mode)?(C.node_ops=RA.ops_table.link.node,C.stream_ops=RA.ops_table.link.stream):FA.isChrdev(C.mode)&&(C.node_ops=RA.ops_table.chrdev.node,C.stream_ops=RA.ops_table.chrdev.stream),C.timestamp=Date.now(),A&&(A.contents[I]=C,A.timestamp=C.timestamp),C},getFileDataAsTypedArray:function(A){return A.contents?A.contents.subarray?A.contents.subarray(0,A.usedBytes):new Uint8Array(A.contents):new Uint8Array(0)},expandFileStorage:function(A,I){var g=A.contents?A.contents.length:0;if(!(g>=I)){I=Math.max(I,g*(g<1048576?2:1.125)>>>0),0!=g&&(I=Math.max(I,256));var B=A.contents;A.contents=new Uint8Array(I),A.usedBytes>0&&A.contents.set(B.subarray(0,A.usedBytes),0)}},resizeFileStorage:function(A,I){if(A.usedBytes!=I)if(0==I)A.contents=null,A.usedBytes=0;else{var g=A.contents;A.contents=new Uint8Array(I),g&&A.contents.set(g.subarray(0,Math.min(I,A.usedBytes))),A.usedBytes=I}},node_ops:{getattr:function(A){var I={};return I.dev=FA.isChrdev(A.mode)?A.id:1,I.ino=A.id,I.mode=A.mode,I.nlink=1,I.uid=0,I.gid=0,I.rdev=A.rdev,FA.isDir(A.mode)?I.size=4096:FA.isFile(A.mode)?I.size=A.usedBytes:FA.isLink(A.mode)?I.size=A.link.length:I.size=0,I.atime=new Date(A.timestamp),I.mtime=new Date(A.timestamp),I.ctime=new Date(A.timestamp),I.blksize=4096,I.blocks=Math.ceil(I.size/I.blksize),I},setattr:function(A,I){void 0!==I.mode&&(A.mode=I.mode),void 0!==I.timestamp&&(A.timestamp=I.timestamp),void 0!==I.size&&RA.resizeFileStorage(A,I.size)},lookup:function(A,I){throw FA.genericErrors[44]},mknod:function(A,I,g,B){return RA.createNode(A,I,g,B)},rename:function(A,I,g){if(FA.isDir(A.mode)){var B;try{B=FA.lookupNode(I,g)}catch(A){}if(B)for(var C in B.contents)throw new FA.ErrnoError(55)}delete A.parent.contents[A.name],A.parent.timestamp=Date.now(),A.name=g,I.contents[g]=A,I.timestamp=A.parent.timestamp,A.parent=I},unlink:function(A,I){delete A.contents[I],A.timestamp=Date.now()},rmdir:function(A,I){var g=FA.lookupNode(A,I);for(var B in g.contents)throw new FA.ErrnoError(55);delete A.contents[I],A.timestamp=Date.now()},readdir:function(A){var I=[".",".."];for(var g in A.contents)A.contents.hasOwnProperty(g)&&I.push(g);return I},symlink:function(A,I,g){var B=RA.createNode(A,I,41471,0);return B.link=g,B},readlink:function(A){if(!FA.isLink(A.mode))throw new FA.ErrnoError(28);return A.link}},stream_ops:{read:function(A,I,g,B,C){var Q=A.node.contents;if(C>=A.node.usedBytes)return 0;var E=Math.min(A.node.usedBytes-C,B);if(E>8&&Q.subarray)I.set(Q.subarray(C,C+E),g);else for(var i=0;i<E;i++)I[g+i]=Q[C+i];return E},write:function(A,I,g,B,C,Q){if(I.buffer===U.buffer&&(Q=!1),!B)return 0;var E=A.node;if(E.timestamp=Date.now(),I.subarray&&(!E.contents||E.contents.subarray)){if(Q)return E.contents=I.subarray(g,g+B),E.usedBytes=B,B;if(0===E.usedBytes&&0===C)return E.contents=I.slice(g,g+B),E.usedBytes=B,B;if(C+B<=E.usedBytes)return E.contents.set(I.subarray(g,g+B),C),B}if(RA.expandFileStorage(E,C+B),E.contents.subarray&&I.subarray)E.contents.set(I.subarray(g,g+B),C);else for(var i=0;i<B;i++)E.contents[C+i]=I[g+i];return E.usedBytes=Math.max(E.usedBytes,C+B),B},llseek:function(A,I,g){var B=I;if(1===g?B+=A.position:2===g&&FA.isFile(A.node.mode)&&(B+=A.node.usedBytes),B<0)throw new FA.ErrnoError(28);return B},allocate:function(A,I,g){RA.expandFileStorage(A.node,I+g),A.node.usedBytes=Math.max(A.node.usedBytes,I+g)},mmap:function(A,I,g,B,C){if(!FA.isFile(A.node.mode))throw new FA.ErrnoError(43);var Q,E,i=A.node.contents;if(2&C||i.buffer!==J){if((g>0||g+I<i.length)&&(i=i.subarray?i.subarray(g,g+I):Array.prototype.slice.call(i,g,g+I)),E=!0,!(Q=hA()))throw new FA.ErrnoError(48);U.set(i,Q)}else E=!1,Q=i.byteOffset;return{ptr:Q,allocated:E}},msync:function(A,I,g,B,C){if(!FA.isFile(A.node.mode))throw new FA.ErrnoError(43);return 2&C||RA.stream_ops.write(A,I,0,B,g,!1),0}}},FA={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(A){var I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(A=sA.resolve(FA.cwd(),A)))return{path:"",node:null};var g={follow_mount:!0,recurse_count:0};if((I=Object.assign(g,I)).recurse_count>8)throw new FA.ErrnoError(32);for(var B=wA.normalizeArray(A.split("/").filter((function(A){return!!A})),!1),C=FA.root,Q="/",E=0;E<B.length;E++){var i=E===B.length-1;if(i&&I.parent)break;if(C=FA.lookupNode(C,B[E]),Q=wA.join2(Q,B[E]),FA.isMountpoint(C)&&(!i||i&&I.follow_mount)&&(C=C.mounted.root),!i||I.follow)for(var o=0;FA.isLink(C.mode);){var D=FA.readlink(Q);Q=sA.resolve(wA.dirname(Q),D);var a=FA.lookupPath(Q,{recurse_count:I.recurse_count+1});if(C=a.node,o++>40)throw new FA.ErrnoError(32)}}return{path:Q,node:C}},getPath:function(A){for(var I;;){if(FA.isRoot(A)){var g=A.mount.mountpoint;return I?"/"!==g[g.length-1]?g+"/"+I:g+I:g}I=I?A.name+"/"+I:A.name,A=A.parent}},hashName:function(A,I){for(var g=0,B=0;B<I.length;B++)g=(g<<5)-g+I.charCodeAt(B)|0;return(A+g>>>0)%FA.nameTable.length},hashAddNode:function(A){var I=FA.hashName(A.parent.id,A.name);A.name_next=FA.nameTable[I],FA.nameTable[I]=A},hashRemoveNode:function(A){var I=FA.hashName(A.parent.id,A.name);if(FA.nameTable[I]===A)FA.nameTable[I]=A.name_next;else for(var g=FA.nameTable[I];g;){if(g.name_next===A){g.name_next=A.name_next;break}g=g.name_next}},lookupNode:function(A,I){var g=FA.mayLookup(A);if(g)throw new FA.ErrnoError(g,A);for(var B=FA.hashName(A.id,I),C=FA.nameTable[B];C;C=C.name_next){var Q=C.name;if(C.parent.id===A.id&&Q===I)return C}return FA.lookup(A,I)},createNode:function(A,I,g,B){var C=new FA.FSNode(A,I,g,B);return FA.hashAddNode(C),C},destroyNode:function(A){FA.hashRemoveNode(A)},isRoot:function(A){return A===A.parent},isMountpoint:function(A){return!!A.mounted},isFile:function(A){return 32768==(61440&A)},isDir:function(A){return 16384==(61440&A)},isLink:function(A){return 40960==(61440&A)},isChrdev:function(A){return 8192==(61440&A)},isBlkdev:function(A){return 24576==(61440&A)},isFIFO:function(A){return 4096==(61440&A)},isSocket:function(A){return 49152==(49152&A)},flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:function(A){var I=FA.flagModes[A];if(void 0===I)throw new Error("Unknown file open mode: "+A);return I},flagsToPermissionString:function(A){var I=["r","w","rw"][3&A];return 512&A&&(I+="w"),I},nodePermissions:function(A,I){return FA.ignorePermissions||(!I.includes("r")||292&A.mode)&&(!I.includes("w")||146&A.mode)&&(!I.includes("x")||73&A.mode)?0:2},mayLookup:function(A){return FA.nodePermissions(A,"x")||(A.node_ops.lookup?0:2)},mayCreate:function(A,I){try{return FA.lookupNode(A,I),20}catch(A){}return FA.nodePermissions(A,"wx")},mayDelete:function(A,I,g){var B;try{B=FA.lookupNode(A,I)}catch(A){return A.errno}var C=FA.nodePermissions(A,"wx");if(C)return C;if(g){if(!FA.isDir(B.mode))return 54;if(FA.isRoot(B)||FA.getPath(B)===FA.cwd())return 10}else if(FA.isDir(B.mode))return 31;return 0},mayOpen:function(A,I){return A?FA.isLink(A.mode)?32:FA.isDir(A.mode)&&("r"!==FA.flagsToPermissionString(I)||512&I)?31:FA.nodePermissions(A,FA.flagsToPermissionString(I)):44},MAX_OPEN_FDS:4096,nextfd:function(){for(var A=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:FA.MAX_OPEN_FDS,g=A;g<=I;g++)if(!FA.streams[g])return g;throw new FA.ErrnoError(33)},getStream:function(A){return FA.streams[A]},createStream:function(A,I,g){FA.FSStream||(FA.FSStream=function(){this.shared={}},FA.FSStream.prototype={},Object.defineProperties(FA.FSStream.prototype,{object:{get:function(){return this.node},set:function(A){this.node=A}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(A){this.shared.flags=A}},position:{get:function(){return this.shared.position},set:function(A){this.shared.position=A}}})),A=Object.assign(new FA.FSStream,A);var B=FA.nextfd(I,g);return A.fd=B,FA.streams[B]=A,A},closeStream:function(A){FA.streams[A]=null},chrdev_stream_ops:{open:function(A){var I=FA.getDevice(A.node.rdev);A.stream_ops=I.stream_ops,A.stream_ops.open&&A.stream_ops.open(A)},llseek:function(){throw new FA.ErrnoError(70)}},major:function(A){return A>>8},minor:function(A){return 255&A},makedev:function(A,I){return A<<8|I},registerDevice:function(A,I){FA.devices[A]={stream_ops:I}},getDevice:function(A){return FA.devices[A]},getMounts:function(A){for(var I=[],g=[A];g.length;){var B=g.pop();I.push(B),g.push.apply(g,B.mounts)}return I},syncfs:function(A,I){"function"==typeof A&&(I=A,A=!1),FA.syncFSRequests++,FA.syncFSRequests>1&&M("warning: "+FA.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var g=FA.getMounts(FA.root.mount),B=0;function C(A){return FA.syncFSRequests--,I(A)}function Q(A){if(A)return Q.errored?void 0:(Q.errored=!0,C(A));++B>=g.length&&C(null)}g.forEach((function(I){if(!I.type.syncfs)return Q(null);I.type.syncfs(I,A,Q)}))},mount:function(A,I,g){var B,C="/"===g,Q=!g;if(C&&FA.root)throw new FA.ErrnoError(10);if(!C&&!Q){var E=FA.lookupPath(g,{follow_mount:!1});if(g=E.path,B=E.node,FA.isMountpoint(B))throw new FA.ErrnoError(10);if(!FA.isDir(B.mode))throw new FA.ErrnoError(54)}var i={type:A,opts:I,mountpoint:g,mounts:[]},o=A.mount(i);return o.mount=i,i.root=o,C?FA.root=o:B&&(B.mounted=i,B.mount&&B.mount.mounts.push(i)),o},unmount:function(A){var I=FA.lookupPath(A,{follow_mount:!1});if(!FA.isMountpoint(I.node))throw new FA.ErrnoError(28);var g=I.node,B=g.mounted,C=FA.getMounts(B);Object.keys(FA.nameTable).forEach((function(A){for(var I=FA.nameTable[A];I;){var g=I.name_next;C.includes(I.mount)&&FA.destroyNode(I),I=g}})),g.mounted=null;var Q=g.mount.mounts.indexOf(B);g.mount.mounts.splice(Q,1)},lookup:function(A,I){return A.node_ops.lookup(A,I)},mknod:function(A,I,g){var B=FA.lookupPath(A,{parent:!0}).node,C=wA.basename(A);if(!C||"."===C||".."===C)throw new FA.ErrnoError(28);var Q=FA.mayCreate(B,C);if(Q)throw new FA.ErrnoError(Q);if(!B.node_ops.mknod)throw new FA.ErrnoError(63);return B.node_ops.mknod(B,C,I,g)},create:function(A,I){return I=void 0!==I?I:438,I&=4095,I|=32768,FA.mknod(A,I,0)},mkdir:function(A,I){return I=void 0!==I?I:511,I&=1023,I|=16384,FA.mknod(A,I,0)},mkdirTree:function(A,I){for(var g=A.split("/"),B="",C=0;C<g.length;++C)if(g[C]){B+="/"+g[C];try{FA.mkdir(B,I)}catch(A){if(20!=A.errno)throw A}}},mkdev:function(A,I,g){return void 0===g&&(g=I,I=438),I|=8192,FA.mknod(A,I,g)},symlink:function(A,I){if(!sA.resolve(A))throw new FA.ErrnoError(44);var g=FA.lookupPath(I,{parent:!0}).node;if(!g)throw new FA.ErrnoError(44);var B=wA.basename(I),C=FA.mayCreate(g,B);if(C)throw new FA.ErrnoError(C);if(!g.node_ops.symlink)throw new FA.ErrnoError(63);return g.node_ops.symlink(g,B,A)},rename:function(A,I){var g,B,C=wA.dirname(A),Q=wA.dirname(I),E=wA.basename(A),i=wA.basename(I);if(g=FA.lookupPath(A,{parent:!0}).node,B=FA.lookupPath(I,{parent:!0}).node,!g||!B)throw new FA.ErrnoError(44);if(g.mount!==B.mount)throw new FA.ErrnoError(75);var o,D=FA.lookupNode(g,E),a=sA.relative(A,Q);if("."!==a.charAt(0))throw new FA.ErrnoError(28);if("."!==(a=sA.relative(I,C)).charAt(0))throw new FA.ErrnoError(55);try{o=FA.lookupNode(B,i)}catch(A){}if(D!==o){var w=FA.isDir(D.mode),s=FA.mayDelete(g,E,w);if(s)throw new FA.ErrnoError(s);if(s=o?FA.mayDelete(B,i,w):FA.mayCreate(B,i))throw new FA.ErrnoError(s);if(!g.node_ops.rename)throw new FA.ErrnoError(63);if(FA.isMountpoint(D)||o&&FA.isMountpoint(o))throw new FA.ErrnoError(10);if(B!==g&&(s=FA.nodePermissions(g,"w")))throw new FA.ErrnoError(s);FA.hashRemoveNode(D);try{g.node_ops.rename(D,B,i)}catch(A){throw A}finally{FA.hashAddNode(D)}}},rmdir:function(A){var I=FA.lookupPath(A,{parent:!0}).node,g=wA.basename(A),B=FA.lookupNode(I,g),C=FA.mayDelete(I,g,!0);if(C)throw new FA.ErrnoError(C);if(!I.node_ops.rmdir)throw new FA.ErrnoError(63);if(FA.isMountpoint(B))throw new FA.ErrnoError(10);I.node_ops.rmdir(I,g),FA.destroyNode(B)},readdir:function(A){var I=FA.lookupPath(A,{follow:!0}).node;if(!I.node_ops.readdir)throw new FA.ErrnoError(54);return I.node_ops.readdir(I)},unlink:function(A){var I=FA.lookupPath(A,{parent:!0}).node;if(!I)throw new FA.ErrnoError(44);var g=wA.basename(A),B=FA.lookupNode(I,g),C=FA.mayDelete(I,g,!1);if(C)throw new FA.ErrnoError(C);if(!I.node_ops.unlink)throw new FA.ErrnoError(63);if(FA.isMountpoint(B))throw new FA.ErrnoError(10);I.node_ops.unlink(I,g),FA.destroyNode(B)},readlink:function(A){var I=FA.lookupPath(A).node;if(!I)throw new FA.ErrnoError(44);if(!I.node_ops.readlink)throw new FA.ErrnoError(28);return sA.resolve(FA.getPath(I.parent),I.node_ops.readlink(I))},stat:function(A,I){var g=FA.lookupPath(A,{follow:!I}).node;if(!g)throw new FA.ErrnoError(44);if(!g.node_ops.getattr)throw new FA.ErrnoError(63);return g.node_ops.getattr(g)},lstat:function(A){return FA.stat(A,!0)},chmod:function(A,I,g){var B;if(!(B="string"==typeof A?FA.lookupPath(A,{follow:!g}).node:A).node_ops.setattr)throw new FA.ErrnoError(63);B.node_ops.setattr(B,{mode:4095&I|-4096&B.mode,timestamp:Date.now()})},lchmod:function(A,I){FA.chmod(A,I,!0)},fchmod:function(A,I){var g=FA.getStream(A);if(!g)throw new FA.ErrnoError(8);FA.chmod(g.node,I)},chown:function(A,I,g,B){var C;if(!(C="string"==typeof A?FA.lookupPath(A,{follow:!B}).node:A).node_ops.setattr)throw new FA.ErrnoError(63);C.node_ops.setattr(C,{timestamp:Date.now()})},lchown:function(A,I,g){FA.chown(A,I,g,!0)},fchown:function(A,I,g){var B=FA.getStream(A);if(!B)throw new FA.ErrnoError(8);FA.chown(B.node,I,g)},truncate:function(A,I){if(I<0)throw new FA.ErrnoError(28);var g;if(!(g="string"==typeof A?FA.lookupPath(A,{follow:!0}).node:A).node_ops.setattr)throw new FA.ErrnoError(63);if(FA.isDir(g.mode))throw new FA.ErrnoError(31);if(!FA.isFile(g.mode))throw new FA.ErrnoError(28);var B=FA.nodePermissions(g,"w");if(B)throw new FA.ErrnoError(B);g.node_ops.setattr(g,{size:I,timestamp:Date.now()})},ftruncate:function(A,I){var g=FA.getStream(A);if(!g)throw new FA.ErrnoError(8);if(0==(2097155&g.flags))throw new FA.ErrnoError(28);FA.truncate(g.node,I)},utime:function(A,I,g){var B=FA.lookupPath(A,{follow:!0}).node;B.node_ops.setattr(B,{timestamp:Math.max(I,g)})},open:function(I,g,B){if(""===I)throw new FA.ErrnoError(44);var C;if(B=void 0===B?438:B,B=64&(g="string"==typeof g?FA.modeStringToFlags(g):g)?4095&B|32768:0,"object"==D(I))C=I;else{I=wA.normalize(I);try{C=FA.lookupPath(I,{follow:!(131072&g)}).node}catch(A){}}var Q=!1;if(64&g)if(C){if(128&g)throw new FA.ErrnoError(20)}else C=FA.mknod(I,B,0),Q=!0;if(!C)throw new FA.ErrnoError(44);if(FA.isChrdev(C.mode)&&(g&=-513),65536&g&&!FA.isDir(C.mode))throw new FA.ErrnoError(54);if(!Q){var E=FA.mayOpen(C,g);if(E)throw new FA.ErrnoError(E)}512&g&&!Q&&FA.truncate(C,0),g&=-131713;var i=FA.createStream({node:C,path:FA.getPath(C),flags:g,seekable:!0,position:0,stream_ops:C.stream_ops,ungotten:[],error:!1});return i.stream_ops.open&&i.stream_ops.open(i),!A.logReadFiles||1&g||(FA.readFiles||(FA.readFiles={}),I in FA.readFiles||(FA.readFiles[I]=1)),i},close:function(A){if(FA.isClosed(A))throw new FA.ErrnoError(8);A.getdents&&(A.getdents=null);try{A.stream_ops.close&&A.stream_ops.close(A)}catch(A){throw A}finally{FA.closeStream(A.fd)}A.fd=null},isClosed:function(A){return null===A.fd},llseek:function(A,I,g){if(FA.isClosed(A))throw new FA.ErrnoError(8);if(!A.seekable||!A.stream_ops.llseek)throw new FA.ErrnoError(70);if(0!=g&&1!=g&&2!=g)throw new FA.ErrnoError(28);return A.position=A.stream_ops.llseek(A,I,g),A.ungotten=[],A.position},read:function(A,I,g,B,C){if(B<0||C<0)throw new FA.ErrnoError(28);if(FA.isClosed(A))throw new FA.ErrnoError(8);if(1==(2097155&A.flags))throw new FA.ErrnoError(8);if(FA.isDir(A.node.mode))throw new FA.ErrnoError(31);if(!A.stream_ops.read)throw new FA.ErrnoError(28);var Q=void 0!==C;if(Q){if(!A.seekable)throw new FA.ErrnoError(70)}else C=A.position;var E=A.stream_ops.read(A,I,g,B,C);return Q||(A.position+=E),E},write:function(A,I,g,B,C,Q){if(B<0||C<0)throw new FA.ErrnoError(28);if(FA.isClosed(A))throw new FA.ErrnoError(8);if(0==(2097155&A.flags))throw new FA.ErrnoError(8);if(FA.isDir(A.node.mode))throw new FA.ErrnoError(31);if(!A.stream_ops.write)throw new FA.ErrnoError(28);A.seekable&&1024&A.flags&&FA.llseek(A,0,2);var E=void 0!==C;if(E){if(!A.seekable)throw new FA.ErrnoError(70)}else C=A.position;var i=A.stream_ops.write(A,I,g,B,C,Q);return E||(A.position+=i),i},allocate:function(A,I,g){if(FA.isClosed(A))throw new FA.ErrnoError(8);if(I<0||g<=0)throw new FA.ErrnoError(28);if(0==(2097155&A.flags))throw new FA.ErrnoError(8);if(!FA.isFile(A.node.mode)&&!FA.isDir(A.node.mode))throw new FA.ErrnoError(43);if(!A.stream_ops.allocate)throw new FA.ErrnoError(138);A.stream_ops.allocate(A,I,g)},mmap:function(A,I,g,B,C){if(0!=(2&B)&&0==(2&C)&&2!=(2097155&A.flags))throw new FA.ErrnoError(2);if(1==(2097155&A.flags))throw new FA.ErrnoError(2);if(!A.stream_ops.mmap)throw new FA.ErrnoError(43);return A.stream_ops.mmap(A,I,g,B,C)},msync:function(A,I,g,B,C){return A&&A.stream_ops.msync?A.stream_ops.msync(A,I,g,B,C):0},munmap:function(A){return 0},ioctl:function(A,I,g){if(!A.stream_ops.ioctl)throw new FA.ErrnoError(59);return A.stream_ops.ioctl(A,I,g)},readFile:function(A){var I,g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(g.flags=g.flags||0,g.encoding=g.encoding||"binary","utf8"!==g.encoding&&"binary"!==g.encoding)throw new Error('Invalid encoding type "'+g.encoding+'"');var B=FA.open(A,g.flags),C=FA.stat(A),Q=C.size,E=new Uint8Array(Q);return FA.read(B,E,0,Q,0),"utf8"===g.encoding?I=u(E,0):"binary"===g.encoding&&(I=E),FA.close(B),I},writeFile:function(A,I){var g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};g.flags=g.flags||577;var B=FA.open(A,g.flags,g.mode);if("string"==typeof I){var C=new Uint8Array(b(I)+1),Q=m(I,C,0,C.length);FA.write(B,C,0,Q,void 0,g.canOwn)}else{if(!ArrayBuffer.isView(I))throw new Error("Unsupported data type");FA.write(B,I,0,I.byteLength,void 0,g.canOwn)}FA.close(B)},cwd:function(){return FA.currentPath},chdir:function(A){var I=FA.lookupPath(A,{follow:!0});if(null===I.node)throw new FA.ErrnoError(44);if(!FA.isDir(I.node.mode))throw new FA.ErrnoError(54);var g=FA.nodePermissions(I.node,"x");if(g)throw new FA.ErrnoError(g);FA.currentPath=I.path},createDefaultDirectories:function(){FA.mkdir("/tmp"),FA.mkdir("/home"),FA.mkdir("/home/web_user")},createDefaultDevices:function(){FA.mkdir("/dev"),FA.registerDevice(FA.makedev(1,3),{read:function(){return 0},write:function(A,I,g,B,C){return B}}),FA.mkdev("/dev/null",FA.makedev(1,3)),tA.register(FA.makedev(5,0),tA.default_tty_ops),tA.register(FA.makedev(6,0),tA.default_tty1_ops),FA.mkdev("/dev/tty",FA.makedev(5,0)),FA.mkdev("/dev/tty1",FA.makedev(6,0));var A=function(){if("object"==("undefined"==typeof crypto?"undefined":D(crypto))&&"function"==typeof crypto.getRandomValues){var A=new Uint8Array(1);return function(){return crypto.getRandomValues(A),A[0]}}if(y)try{var I=g(654);return function(){return I.randomBytes(1)[0]}}catch(A){}return function(){return _("randomDevice")}}();FA.createDevice("/dev","random",A),FA.createDevice("/dev","urandom",A),FA.mkdir("/dev/shm"),FA.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){FA.mkdir("/proc");var A=FA.mkdir("/proc/self");FA.mkdir("/proc/self/fd"),FA.mount({mount:function(){var I=FA.createNode(A,"fd",16895,73);return I.node_ops={lookup:function(A,I){var g=+I,B=FA.getStream(g);if(!B)throw new FA.ErrnoError(8);var C={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return B.path}}};return C.parent=C,C}},I}},{},"/proc/self/fd")},createStandardStreams:function(){A.stdin?FA.createDevice("/dev","stdin",A.stdin):FA.symlink("/dev/tty","/dev/stdin"),A.stdout?FA.createDevice("/dev","stdout",null,A.stdout):FA.symlink("/dev/tty","/dev/stdout"),A.stderr?FA.createDevice("/dev","stderr",null,A.stderr):FA.symlink("/dev/tty1","/dev/stderr"),FA.open("/dev/stdin",0),FA.open("/dev/stdout",1),FA.open("/dev/stderr",1)},ensureErrnoError:function(){FA.ErrnoError||(FA.ErrnoError=function(A,I){this.node=I,this.setErrno=function(A){this.errno=A},this.setErrno(A),this.message="FS error"},FA.ErrnoError.prototype=new Error,FA.ErrnoError.prototype.constructor=FA.ErrnoError,[44].forEach((function(A){FA.genericErrors[A]=new FA.ErrnoError(A),FA.genericErrors[A].stack="<generic error, no stack>"})))},staticInit:function(){FA.ensureErrnoError(),FA.nameTable=new Array(4096),FA.mount(RA,{},"/"),FA.createDefaultDirectories(),FA.createDefaultDevices(),FA.createSpecialDirectories(),FA.filesystems={MEMFS:RA}},init:function(I,g,B){FA.init.initialized=!0,FA.ensureErrnoError(),A.stdin=I||A.stdin,A.stdout=g||A.stdout,A.stderr=B||A.stderr,FA.createStandardStreams()},quit:function(){FA.init.initialized=!1;for(var A=0;A<FA.streams.length;A++){var I=FA.streams[A];I&&FA.close(I)}},getMode:function(A,I){var g=0;return A&&(g|=365),I&&(g|=146),g},findObject:function(A,I){var g=FA.analyzePath(A,I);return g.exists?g.object:null},analyzePath:function(A,I){try{A=(B=FA.lookupPath(A,{follow:!I})).path}catch(A){}var g={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var B=FA.lookupPath(A,{parent:!0});g.parentExists=!0,g.parentPath=B.path,g.parentObject=B.node,g.name=wA.basename(A),B=FA.lookupPath(A,{follow:!I}),g.exists=!0,g.path=B.path,g.object=B.node,g.name=B.node.name,g.isRoot="/"===B.path}catch(A){g.error=A.errno}return g},createPath:function(A,I,g,B){A="string"==typeof A?A:FA.getPath(A);for(var C=I.split("/").reverse();C.length;){var Q=C.pop();if(Q){var E=wA.join2(A,Q);try{FA.mkdir(E)}catch(A){}A=E}}return E},createFile:function(A,I,g,B,C){var Q=wA.join2("string"==typeof A?A:FA.getPath(A),I),E=FA.getMode(B,C);return FA.create(Q,E)},createDataFile:function(A,I,g,B,C,Q){var E=I;A&&(A="string"==typeof A?A:FA.getPath(A),E=I?wA.join2(A,I):A);var i=FA.getMode(B,C),o=FA.create(E,i);if(g){if("string"==typeof g){for(var D=new Array(g.length),a=0,w=g.length;a<w;++a)D[a]=g.charCodeAt(a);g=D}FA.chmod(o,146|i);var s=FA.open(o,577);FA.write(s,g,0,g.length,0,Q),FA.close(s),FA.chmod(o,i)}return o},createDevice:function(A,I,g,B){var C=wA.join2("string"==typeof A?A:FA.getPath(A),I),Q=FA.getMode(!!g,!!B);FA.createDevice.major||(FA.createDevice.major=64);var E=FA.makedev(FA.createDevice.major++,0);return FA.registerDevice(E,{open:function(A){A.seekable=!1},close:function(A){B&&B.buffer&&B.buffer.length&&B(10)},read:function(A,I,B,C,Q){for(var E=0,i=0;i<C;i++){var o;try{o=g()}catch(A){throw new FA.ErrnoError(29)}if(void 0===o&&0===E)throw new FA.ErrnoError(6);if(null==o)break;E++,I[B+i]=o}return E&&(A.node.timestamp=Date.now()),E},write:function(A,I,g,C,Q){for(var E=0;E<C;E++)try{B(I[g+E])}catch(A){throw new FA.ErrnoError(29)}return C&&(A.node.timestamp=Date.now()),E}}),FA.mkdev(C,Q,E)},forceLoadFile:function(A){if(A.isDevice||A.isFolder||A.link||A.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!C)throw new Error("Cannot load without read() or XMLHttpRequest.");try{A.contents=GA(C(A.url),!0),A.usedBytes=A.contents.length}catch(A){throw new FA.ErrnoError(29)}},createLazyFile:function(A,I,g,B,C){function Q(){this.lengthKnown=!1,this.chunks=[]}if(Q.prototype.get=function(A){if(!(A>this.length-1||A<0)){var I=A%this.chunkSize,g=A/this.chunkSize|0;return this.getter(g)[I]}},Q.prototype.setDataGetter=function(A){this.getter=A},Q.prototype.cacheLength=function(){var A=new XMLHttpRequest;if(A.open("HEAD",g,!1),A.send(null),!(A.status>=200&&A.status<300||304===A.status))throw new Error("Couldn't load "+g+". Status: "+A.status);var I,B=Number(A.getResponseHeader("Content-length")),C=(I=A.getResponseHeader("Accept-Ranges"))&&"bytes"===I,Q=(I=A.getResponseHeader("Content-Encoding"))&&"gzip"===I,E=1048576;C||(E=B);var i=this;i.setDataGetter((function(A){var I=A*E,C=(A+1)*E-1;if(C=Math.min(C,B-1),void 0===i.chunks[A]&&(i.chunks[A]=function(A,I){if(A>I)throw new Error("invalid range ("+A+", "+I+") or no bytes requested!");if(I>B-1)throw new Error("only "+B+" bytes available! programmer error!");var C=new XMLHttpRequest;if(C.open("GET",g,!1),B!==E&&C.setRequestHeader("Range","bytes="+A+"-"+I),C.responseType="arraybuffer",C.overrideMimeType&&C.overrideMimeType("text/plain; charset=x-user-defined"),C.send(null),!(C.status>=200&&C.status<300||304===C.status))throw new Error("Couldn't load "+g+". Status: "+C.status);return void 0!==C.response?new Uint8Array(C.response||[]):GA(C.responseText||"",!0)}(I,C)),void 0===i.chunks[A])throw new Error("doXHR failed!");return i.chunks[A]})),!Q&&B||(E=B=1,B=this.getter(0).length,E=B,S("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=B,this._chunkSize=E,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!F)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var E=new Q;Object.defineProperties(E,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var i={isDevice:!1,contents:E}}else i={isDevice:!1,url:g};var o=FA.createFile(A,I,i,B,C);i.contents?o.contents=i.contents:i.url&&(o.contents=null,o.url=i.url),Object.defineProperties(o,{usedBytes:{get:function(){return this.contents.length}}});var D={};function a(A,I,g,B,C){var Q=A.node.contents;if(C>=Q.length)return 0;var E=Math.min(Q.length-C,B);if(Q.slice)for(var i=0;i<E;i++)I[g+i]=Q[C+i];else for(i=0;i<E;i++)I[g+i]=Q.get(C+i);return E}return Object.keys(o.stream_ops).forEach((function(A){var I=o.stream_ops[A];D[A]=function(){return FA.forceLoadFile(o),I.apply(null,arguments)}})),D.read=function(A,I,g,B,C){return FA.forceLoadFile(o),a(A,I,g,B,C)},D.mmap=function(A,I,g,B,C){FA.forceLoadFile(o);var Q=hA();if(!Q)throw new FA.ErrnoError(48);return a(A,U,Q,I,g),{ptr:Q,allocated:!0}},o.stream_ops=D,o},createPreloadedFile:function(A,I,g,B,C,E,i,o,D,a){var w=I?sA.resolve(wA.join2(A,I)):A;function s(g){function Q(g){a&&a(),o||FA.createDataFile(A,I,g,B,C,D),E&&E(),z()}Browser.handledByPreloadPlugin(g,w,Q,(function(){i&&i(),z()}))||Q(g)}P(),"string"==typeof g?function(A,I,g,B){var C="al "+A;Q(A,(function(I){c(I,'Loading data file "'+A+'" failed (no arrayBuffer).'),s(new Uint8Array(I)),C&&z()}),(function(I){if(!g)throw'Loading data file "'+A+'" failed.';g()})),C&&P()}(g,0,i):s(g)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=FA.indexedDB();try{var C=B.open(FA.DB_NAME(),FA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=function(){S("creating db"),C.result.createObjectStore(FA.DB_STORE_NAME)},C.onsuccess=function(){var B=C.result.transaction([FA.DB_STORE_NAME],"readwrite"),Q=B.objectStore(FA.DB_STORE_NAME),E=0,i=0,o=A.length;function D(){0==i?I():g()}A.forEach((function(A){var I=Q.put(FA.analyzePath(A).object.contents,A);I.onsuccess=function(){++E+i==o&&D()},I.onerror=function(){i++,E+i==o&&D()}})),B.onerror=g},C.onerror=g},loadFilesFromDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=FA.indexedDB();try{var C=B.open(FA.DB_NAME(),FA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=g,C.onsuccess=function(){var B=C.result;try{var Q=B.transaction([FA.DB_STORE_NAME],"readonly")}catch(A){return void g(A)}var E=Q.objectStore(FA.DB_STORE_NAME),i=0,o=0,D=A.length;function a(){0==o?I():g()}A.forEach((function(A){var I=E.get(A);I.onsuccess=function(){FA.analyzePath(A).exists&&FA.unlink(A),FA.createDataFile(wA.dirname(A),wA.basename(A),I.result,!0,!0,!0),++i+o==D&&a()},I.onerror=function(){o++,i+o==D&&a()}})),Q.onerror=g},C.onerror=g}},yA={DEFAULT_POLLMASK:5,calculateAt:function(A,I,g){if(wA.isAbs(I))return I;var B;if(B=-100===A?FA.cwd():yA.getStreamFromFD(A).path,0==I.length){if(!g)throw new FA.ErrnoError(44);return B}return wA.join2(B,I)},doStat:function(A,I,g){try{var B=A(I)}catch(A){if(A&&A.node&&wA.normalize(I)!==wA.normalize(FA.getPath(A.node)))return-54;throw A}return d[g>>2]=B.dev,d[g+8>>2]=B.ino,d[g+12>>2]=B.mode,q[g+16>>2]=B.nlink,d[g+20>>2]=B.uid,d[g+24>>2]=B.gid,d[g+28>>2]=B.rdev,gA=[B.size>>>0,(IA=B.size,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+40>>2]=gA[0],d[g+44>>2]=gA[1],d[g+48>>2]=4096,d[g+52>>2]=B.blocks,gA=[Math.floor(B.atime.getTime()/1e3)>>>0,(IA=Math.floor(B.atime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+56>>2]=gA[0],d[g+60>>2]=gA[1],q[g+64>>2]=0,gA=[Math.floor(B.mtime.getTime()/1e3)>>>0,(IA=Math.floor(B.mtime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+72>>2]=gA[0],d[g+76>>2]=gA[1],q[g+80>>2]=0,gA=[Math.floor(B.ctime.getTime()/1e3)>>>0,(IA=Math.floor(B.ctime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+88>>2]=gA[0],d[g+92>>2]=gA[1],q[g+96>>2]=0,gA=[B.ino>>>0,(IA=B.ino,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+104>>2]=gA[0],d[g+108>>2]=gA[1],0},doMsync:function(A,I,g,B,C){var Q=K.slice(A,A+g);FA.msync(I,Q,C,g,B)},varargs:void 0,get:function(){return yA.varargs+=4,d[yA.varargs-4>>2]},getStr:function(A){return W(A)},getStreamFromFD:function(A){var I=FA.getStream(A);if(!I)throw new FA.ErrnoError(8);return I}};function rA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+A)}}var nA=void 0;function SA(A){for(var I="",g=A;K[g];)I+=nA[K[g++]];return I}var MA={},eA={},NA={};function kA(A){if(void 0===A)return"_unknown";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return I>=48&&I<=57?"_"+A:A}function cA(A,I){return A=kA(A),new Function("body","return function "+A+'() {\n    "use strict";    return body.apply(this, arguments);\n};\n')(I)}function JA(A,I){var g=cA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+"\n"+g.replace(/^Error(:[^\n]*)?\n/,""))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},g}var UA=void 0;function KA(A){throw new UA(A)}var LA=void 0;function YA(A){throw new LA(A)}function dA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&YA("Mismatched type converter count");for(var C=0;C<A.length;++C)qA(A[C],B[C])}A.forEach((function(A){NA[A]=I}));var C=new Array(I.length),Q=[],E=0;I.forEach((function(A,I){eA.hasOwnProperty(A)?C[I]=eA[A]:(Q.push(A),MA.hasOwnProperty(A)||(MA[A]=[]),MA[A].push((function(){C[I]=eA[A],++E===Q.length&&B(C)})))})),0===Q.length&&B(C)}function qA(A,I){var g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!("argPackAdvance"in I))throw new TypeError("registerType registeredInstance requires argPackAdvance");var B=I.name;if(A||KA('type "'+B+'" must have a positive integer typeid pointer'),eA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;KA("Cannot register type '"+B+"' twice")}if(eA[A]=I,delete NA[A],MA.hasOwnProperty(A)){var C=MA[A];delete MA[A],C.forEach((function(A){return A()}))}}var HA=[],lA=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function fA(A){return this.fromWireType(d[A>>2])}function uA(A,I){switch(I){case 2:return function(A){return this.fromWireType(H[A>>2])};case 3:return function(A){return this.fromWireType(l[A>>3])};default:throw new TypeError("Unknown float type: "+A)}}function WA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function mA(A){return Z.get(A)}function bA(I,g,B){return I.includes("j")?function(I,g,B){var C=A["dynCall_"+I];return B&&B.length?C.apply(null,[g].concat(B)):C.call(null,g)}(I,g,B):mA(g).apply(null,B)}var pA=void 0;function ZA(A){var I=hI(A),g=SA(I);return GI(I),g}function xA(A,I,g){switch(I){case 0:return g?function(A){return U[A]}:function(A){return K[A]};case 1:return g?function(A){return L[A>>1]}:function(A){return Y[A>>1]};case 2:return g?function(A){return d[A>>2]}:function(A){return q[A>>2]};default:throw new TypeError("Unknown integer type: "+A)}}var VA="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function XA(A,I){for(var g=A,B=g>>1,C=B+I/2;!(B>=C)&&Y[B];)++B;if((g=B<<1)-A>32&&VA)return VA.decode(K.subarray(A,g));for(var Q="",E=0;!(E>=I/2);++E){var i=L[A+2*E>>1];if(0==i)break;Q+=String.fromCharCode(i)}return Q}function TA(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,C=(g-=2)<2*A.length?g/2:A.length,Q=0;Q<C;++Q){var E=A.charCodeAt(Q);L[I>>1]=E,I+=2}return L[I>>1]=0,I-B}function OA(A){return 2*A.length}function vA(A,I){for(var g=0,B="";!(g>=I/4);){var C=d[A+4*g>>2];if(0==C)break;if(++g,C>=65536){var Q=C-65536;B+=String.fromCharCode(55296|Q>>10,56320|1023&Q)}else B+=String.fromCharCode(C)}return B}function jA(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,C=B+g-4,Q=0;Q<A.length;++Q){var E=A.charCodeAt(Q);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++Q)),d[I>>2]=E,(I+=4)+4>C)break}return d[I>>2]=0,I-B}function PA(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}function zA(A){var I=b(A)+1,g=sI(I);return g&&m(A,U,g,I),g}var _A=[];function $A(A){try{return e.grow(A-J.byteLength+65535>>>16),p(e.buffer),1}catch(A){}}var AI={};function II(){if(!II.strings){var A={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==("undefined"==typeof navigator?"undefined":D(navigator))&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:t||"./this.program"};for(var I in AI)void 0===AI[I]?delete A[I]:A[I]=AI[I];var g=[];for(var I in A)g.push(I+"="+A[I]);II.strings=g}return II.strings}function gI(A){return A%4==0&&(A%100!=0||A%400==0)}var BI=[31,29,31,30,31,30,31,31,30,31,30,31],CI=[31,28,31,30,31,30,31,31,30,31,30,31];function QI(A,I,g,B){var C=d[B+40>>2],Q={tm_sec:d[B>>2],tm_min:d[B+4>>2],tm_hour:d[B+8>>2],tm_mday:d[B+12>>2],tm_mon:d[B+16>>2],tm_year:d[B+20>>2],tm_wday:d[B+24>>2],tm_yday:d[B+28>>2],tm_isdst:d[B+32>>2],tm_gmtoff:d[B+36>>2],tm_zone:C?W(C):""},E=W(g),i={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var o in i)E=E.replace(new RegExp(o,"g"),i[o]);var D=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],a=["January","February","March","April","May","June","July","August","September","October","November","December"];function w(A,I,g){for(var B="number"==typeof A?A.toString():A||"";B.length<I;)B=g[0]+B;return B}function s(A,I){return w(A,I,"0")}function G(A,I){function g(A){return A<0?-1:A>0?1:0}var B;return 0===(B=g(A.getFullYear()-I.getFullYear()))&&0===(B=g(A.getMonth()-I.getMonth()))&&(B=g(A.getDate()-I.getDate())),B}function t(A){switch(A.getDay()){case 0:return new Date(A.getFullYear()-1,11,29);case 1:return A;case 2:return new Date(A.getFullYear(),0,3);case 3:return new Date(A.getFullYear(),0,2);case 4:return new Date(A.getFullYear(),0,1);case 5:return new Date(A.getFullYear()-1,11,31);case 6:return new Date(A.getFullYear()-1,11,30)}}function h(A){var I=function(A,I){for(var g=new Date(A.getTime());I>0;){var B=gI(g.getFullYear()),C=g.getMonth(),Q=(B?BI:CI)[C];if(!(I>Q-g.getDate()))return g.setDate(g.getDate()+I),g;I-=Q-g.getDate()+1,g.setDate(1),C<11?g.setMonth(C+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1))}return g}(new Date(A.tm_year+1900,0,1),A.tm_yday),g=new Date(I.getFullYear(),0,4),B=new Date(I.getFullYear()+1,0,4),C=t(g),Q=t(B);return G(C,I)<=0?G(Q,I)<=0?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}var R={"%a":function(A){return D[A.tm_wday].substring(0,3)},"%A":function(A){return D[A.tm_wday]},"%b":function(A){return a[A.tm_mon].substring(0,3)},"%B":function(A){return a[A.tm_mon]},"%C":function(A){return s((A.tm_year+1900)/100|0,2)},"%d":function(A){return s(A.tm_mday,2)},"%e":function(A){return w(A.tm_mday,2," ")},"%g":function(A){return h(A).toString().substring(2)},"%G":function(A){return h(A)},"%H":function(A){return s(A.tm_hour,2)},"%I":function(A){var I=A.tm_hour;return 0==I?I=12:I>12&&(I-=12),s(I,2)},"%j":function(A){return s(A.tm_mday+function(A,I){for(var g=0,B=0;B<=I;g+=A[B++]);return g}(gI(A.tm_year+1900)?BI:CI,A.tm_mon-1),3)},"%m":function(A){return s(A.tm_mon+1,2)},"%M":function(A){return s(A.tm_min,2)},"%n":function(){return"\n"},"%p":function(A){return A.tm_hour>=0&&A.tm_hour<12?"AM":"PM"},"%S":function(A){return s(A.tm_sec,2)},"%t":function(){return"\t"},"%u":function(A){return A.tm_wday||7},"%U":function(A){var I=A.tm_yday+7-A.tm_wday;return s(Math.floor(I/7),2)},"%V":function(A){var I=Math.floor((A.tm_yday+7-(A.tm_wday+6)%7)/7);if((A.tm_wday+371-A.tm_yday-2)%7<=2&&I++,I){if(53==I){var g=(A.tm_wday+371-A.tm_yday)%7;4==g||3==g&&gI(A.tm_year)||(I=1)}}else{I=52;var B=(A.tm_wday+7-A.tm_yday-1)%7;(4==B||5==B&&gI(A.tm_year%400-1))&&I++}return s(I,2)},"%w":function(A){return A.tm_wday},"%W":function(A){var I=A.tm_yday+7-(A.tm_wday+6)%7;return s(Math.floor(I/7),2)},"%y":function(A){return(A.tm_year+1900).toString().substring(2)},"%Y":function(A){return A.tm_year+1900},"%z":function(A){var I=A.tm_gmtoff,g=I>=0;return I=(I=Math.abs(I)/60)/60*100+I%60,(g?"+":"-")+String("0000"+I).slice(-4)},"%Z":function(A){return A.tm_zone},"%%":function(){return"%"}};for(var o in E=E.replace(/%%/g,"\0\0"),R)E.includes(o)&&(E=E.replace(new RegExp(o,"g"),R[o](Q)));var F=GA(E=E.replace(/\0\0/g,"%"),!1);return F.length>I?0:(function(A,I){U.set(A,I)}(F,A),F.length-1)}var EI=function(A,I,g,B){A||(A=this),this.parent=A,this.mount=A.mount,this.mounted=null,this.id=FA.nextInode++,this.name=I,this.mode=g,this.node_ops={},this.stream_ops={},this.rdev=B};Object.defineProperties(EI.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(A){A?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(A){A?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return FA.isDir(this.mode)}},isDevice:{get:function(){return FA.isChrdev(this.mode)}}}),FA.FSNode=EI,FA.staticInit(),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);nA=A}(),UA=A.BindingError=JA(Error,"BindingError"),LA=A.InternalError=JA(Error,"InternalError"),A.count_emval_handles=function(){for(var A=0,I=5;I<lA.length;++I)void 0!==lA[I]&&++A;return A},A.get_first_emval=function(){for(var A=5;A<lA.length;++A)if(void 0!==lA[A])return lA[A];return null},pA=A.UnboundTypeError=JA(Error,"UnboundTypeError");var iI=!1,oI="function"==typeof atob?atob:function(A){var I,g,B,C,Q,E,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="",D=0;A=A.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{I=i.indexOf(A.charAt(D++))<<2|(C=i.indexOf(A.charAt(D++)))>>4,g=(15&C)<<4|(Q=i.indexOf(A.charAt(D++)))>>2,B=(3&Q)<<6|(E=i.indexOf(A.charAt(D++))),o+=String.fromCharCode(I),64!==Q&&(o+=String.fromCharCode(g)),64!==E&&(o+=String.fromCharCode(B))}while(D<A.length);return o};function DI(A){if(CA(A))return function(A){if("boolean"==typeof y&&y){var I=Buffer.from(A,"base64");return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=oI(A),B=new Uint8Array(g.length),C=0;C<g.length;++C)B[C]=g.charCodeAt(C);return B}catch(A){throw new Error("Converting base64 string to bytes failed.")}}(A.slice(BA.length))}var aI,wI={g:function(A){return sI(A+24)+24},f:function(A,I,g){throw new aA(A).init(I,g),A},n:function(A,I,g){yA.varargs=g;try{var B=yA.getStreamFromFD(A);switch(I){case 0:return(C=yA.get())<0?-28:FA.createStream(B,C).fd;case 1:case 2:case 6:case 7:return 0;case 3:return B.flags;case 4:var C=yA.get();return B.flags|=C,0;case 5:return C=yA.get(),L[C+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return 28,d[tI()>>2]=28,-1}}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return-A.errno}},F:function(A,I,g){yA.varargs=g;try{var B=yA.getStreamFromFD(A);switch(I){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return B.tty?0:-59;case 21519:if(!B.tty)return-59;var C=yA.get();return d[C>>2]=0,0;case 21520:return B.tty?-28:-59;case 21531:return C=yA.get(),FA.ioctl(B,I,C);default:return-28}}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return-A.errno}},G:function(A,I,g,B){yA.varargs=B;try{I=yA.getStr(I),I=yA.calculateAt(A,I);var C=B?yA.get():0;return FA.open(I,g,C).fd}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return-A.errno}},y:function(A,I,g,B,C){},K:function(A,I,g,B,C){var Q=rA(g);qA(A,{name:I=SA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:C},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=U;else if(2===g)B=L;else{if(4!==g)throw new TypeError("Unknown boolean type size: "+I);B=d}return this.fromWireType(B[A>>Q])},destructorFunction:null})},r:function(I,g,B){I=SA(I),dA([],[g],(function(g){return g=g[0],A[I]=g.fromWireType(B),[]}))},J:function(A,I){qA(A,{name:I=SA(I),fromWireType:function(A){var I=function(A){return A||KA("Cannot use deleted val. handle = "+A),lA[A].value}(A);return function(A){A>4&&0==--lA[A].refcount&&(lA[A]=void 0,HA.push(A))}(A),I},toWireType:function(A,I){return function(A){switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=HA.length?HA.pop():lA.length;return lA[I]={refcount:1,value:A},I}}(I)},argPackAdvance:8,readValueFromPointer:fA,destructorFunction:null})},q:function(A,I,g){var B=rA(g);qA(A,{name:I=SA(I),fromWireType:function(A){return A},toWireType:function(A,I){return I},argPackAdvance:8,readValueFromPointer:uA(I,B),destructorFunction:null})},d:function(I,g,B,C,Q,E){var i=function(A,I){for(var g=[],B=0;B<A;B++)g.push(q[I+4*B>>2]);return g}(g,B);I=SA(I),Q=function(A,I){var g,B,C,Q=(A=SA(A)).includes("j")?(g=A,B=I,C=[],function(){return C.length=0,Object.assign(C,arguments),bA(g,B,C)}):mA(I);return"function"!=typeof Q&&KA("unknown function pointer with signature "+A+": "+I),Q}(C,Q),function(I,g,B){A.hasOwnProperty(I)?((void 0===B||void 0!==A[I].overloadTable&&void 0!==A[I].overloadTable[B])&&KA("Cannot register public name '"+I+"' twice"),function(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||KA("Function '"+g+"' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+A[I].overloadTable+")!"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}(A,I,I),A.hasOwnProperty(B)&&KA("Cannot register multiple overloads of a function with the same number of arguments ("+B+")!"),A[I].overloadTable[B]=g):(A[I]=g,void 0!==B&&(A[I].numArguments=B))}(I,(function(){!function(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||eA[I]||(NA[I]?NA[I].forEach(A):(g.push(I),B[I]=!0))})),new pA(A+": "+g.map(ZA).join([", "]))}("Cannot call "+I+" due to unbound types",i)}),g-1),dA([],i,(function(B){var C=[B[0],null].concat(B.slice(1));return function(I,g,B){A.hasOwnProperty(I)||YA("Replacing nonexistant public symbol"),void 0!==A[I].overloadTable&&void 0!==B?A[I].overloadTable[B]=g:(A[I]=g,A[I].argCount=B)}(I,function(A,I,g,B,C){var Q=I.length;Q<2&&KA("argTypes array size mismatch! Must at least get return value and 'this' types!");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var a="void"!==I[0].name,w="",s="";for(o=0;o<Q-2;++o)w+=(0!==o?", ":"")+"arg"+o,s+=(0!==o?", ":"")+"arg"+o+"Wired";var G="return function "+kA(A)+"("+w+") {\nif (arguments.length !== "+(Q-2)+") {\nthrowBindingError('function "+A+" called with ' + arguments.length + ' arguments, expected "+(Q-2)+" args!');\n}\n";i&&(G+="var destructors = [];\n");var t=i?"destructors":"null",h=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],R=[KA,B,C,WA,I[0],I[1]];for(E&&(G+="var thisWired = classParam.toWireType("+t+", this);\n"),o=0;o<Q-2;++o)G+="var arg"+o+"Wired = argType"+o+".toWireType("+t+", arg"+o+"); // "+I[o+2].name+"\n",h.push("argType"+o),R.push(I[o+2]);if(E&&(s="thisWired"+(s.length>0?", ":"")+s),G+=(a?"var rv = ":"")+"invoker(fn"+(s.length>0?", ":"")+s+");\n",i)G+="runDestructors(destructors);\n";else for(o=E?1:2;o<I.length;++o){var F=1===o?"thisWired":"arg"+(o-2)+"Wired";null!==I[o].destructorFunction&&(G+=F+"_dtor("+F+"); // "+I[o].name+"\n",h.push(F+"_dtor"),R.push(I[o].destructorFunction))}return a&&(G+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),G+="}\n",h.push(G),function(A,I){if(!(A instanceof Function))throw new TypeError("new_ called with constructor type "+D(A)+" which is not a function");var g=cA(A.name||"unknownFunctionName",(function(){}));g.prototype=A.prototype;var B=new g,C=A.apply(B,I);return C instanceof Object?C:B}(Function,h).apply(null,R)}(I,C,null,Q,E),g-1),[]}))},e:function(A,I,g,B,C){I=SA(I),-1===C&&(C=4294967295);var Q=rA(g),E=function(A){return A};if(0===B){var i=32-8*g;E=function(A){return A<<i>>>i}}var o=I.includes("unsigned");qA(A,{name:I,fromWireType:E,toWireType:o?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:xA(I,Q,0!==B),destructorFunction:null})},c:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function C(A){var I=q,g=I[A>>=2],C=I[A+1];return new B(J,C,g)}qA(A,{name:g=SA(g),fromWireType:C,argPackAdvance:8,readValueFromPointer:C},{ignoreDuplicateRegistrations:!0})},p:function(A,I){var g="std::string"===(I=SA(I));qA(A,{name:I,fromWireType:function(A){var I,B=q[A>>2],C=A+4;if(g)for(var Q=C,E=0;E<=B;++E){var i=C+E;if(E==B||0==K[i]){var o=W(Q,i-Q);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),Q=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(K[C+E]);I=D.join("")}return GI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var C="string"==typeof I;C||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||KA("Cannot pass non-string to std::string"),B=g&&C?b(I):I.length;var Q=sI(4+B+1),E=Q+4;if(q[Q>>2]=B,g&&C)m(I,K,E,B+1);else if(C)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(GI(E),KA("String has UTF-16 code units that do not fit in 8 bits")),K[E+i]=o}else for(i=0;i<B;++i)K[E+i]=I[i];return null!==A&&A.push(GI,Q),Q},argPackAdvance:8,readValueFromPointer:fA,destructorFunction:function(A){GI(A)}})},k:function(A,I,g){var B,C,Q,E,i;g=SA(g),2===I?(B=XA,C=TA,E=OA,Q=function(){return Y},i=1):4===I&&(B=vA,C=jA,E=PA,Q=function(){return q},i=2),qA(A,{name:g,fromWireType:function(A){for(var g,C=q[A>>2],E=Q(),o=A+4,D=0;D<=C;++D){var a=A+4+D*I;if(D==C||0==E[a>>i]){var w=B(o,a-o);void 0===g?g=w:(g+=String.fromCharCode(0),g+=w),o=a+I}}return GI(A),g},toWireType:function(A,B){"string"!=typeof B&&KA("Cannot pass non-string to C++ string type "+g);var Q=E(B),o=sI(4+Q+I);return q[o>>2]=Q>>i,C(B,o+4,Q+I),null!==A&&A.push(GI,o),o},argPackAdvance:8,readValueFromPointer:fA,destructorFunction:function(A){GI(A)}})},L:function(A,I){qA(A,{isVoid:!0,name:I=SA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},o:function(){return Date.now()},A:function(){throw 1/0},H:function(A,I){var g,B=new Date(1e3*(q[(g=A)>>2]+4294967296*d[g+4>>2]));d[I>>2]=B.getSeconds(),d[I+4>>2]=B.getMinutes(),d[I+8>>2]=B.getHours(),d[I+12>>2]=B.getDate(),d[I+16>>2]=B.getMonth(),d[I+20>>2]=B.getFullYear()-1900,d[I+24>>2]=B.getDay();var C=new Date(B.getFullYear(),0,1),Q=(B.getTime()-C.getTime())/864e5|0;d[I+28>>2]=Q,d[I+36>>2]=-60*B.getTimezoneOffset();var E=new Date(B.getFullYear(),6,1).getTimezoneOffset(),i=C.getTimezoneOffset(),o=0|(E!=i&&B.getTimezoneOffset()==Math.min(i,E));d[I+32>>2]=o},I:function A(I,g,B){A.called||(A.called=!0,function(A,I,g){var B=(new Date).getFullYear(),C=new Date(B,0,1),Q=new Date(B,6,1),E=C.getTimezoneOffset(),i=Q.getTimezoneOffset(),o=Math.max(E,i);function D(A){var I=A.toTimeString().match(/\(([A-Za-z ]+)\)$/);return I?I[1]:"GMT"}d[A>>2]=60*o,d[I>>2]=Number(E!=i);var a=D(C),w=D(Q),s=zA(a),G=zA(w);i<E?(q[g>>2]=s,q[g+4>>2]=G):(q[g>>2]=G,q[g+4>>2]=s)}(I,g,B))},a:function(){_("")},h:function(A,I,g){var B=function(A,I){var g;for(_A.length=0,I>>=2;g=K[A++];)I+=105!=g&I,_A.push(105==g?d[I]:l[I++>>1]),++I;return _A}(I,g);return iA[A].apply(null,B)},B:function(A){var I=K.length,g=2147483648;if((A>>>=0)>g)return!1;for(var B,C=1;C<=4;C*=2){var Q=I*(1+.2/C);if(Q=Math.min(Q,A+100663296),$A(Math.min(g,(B=Math.max(A,Q))+(65536-B%65536)%65536)))return!0}return!1},C:function(A,I){var g=0;return II().forEach((function(B,C){var Q=I+g;q[A+4*C>>2]=Q,function(A,I,g){for(var B=0;B<A.length;++B)U[I++>>0]=A.charCodeAt(B);U[I>>0]=0}(B,Q),g+=B.length+1})),0},D:function(A,I){var g=II();q[A>>2]=g.length;var B=0;return g.forEach((function(A){B+=A.length+1})),q[I>>2]=B,0},b:function(I,g){var B;B=I,T()||(A.onExit&&A.onExit(B),k=!0),h(B,new oA(B))},l:function(A){try{var I=yA.getStreamFromFD(A);return FA.close(I),0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}},E:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=q[I>>2],i=q[I+4>>2];I+=8;var o=FA.read(A,U,E,i,undefined);if(o<0)return-1;if(C+=o,o<i)break}return C}(yA.getStreamFromFD(A),I,g);return q[B>>2]=C,0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}},x:function(A,I,g,B,C){try{var Q=(o=g)+2097152>>>0<4194305-!!(i=I)?(i>>>0)+4294967296*o:NaN;if(isNaN(Q))return 61;var E=yA.getStreamFromFD(A);return FA.llseek(E,Q,B),gA=[E.position>>>0,(IA=E.position,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[C>>2]=gA[0],d[C+4>>2]=gA[1],E.getdents&&0===Q&&0===B&&(E.getdents=null),0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}var i,o},m:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=q[I>>2],i=q[I+4>>2];I+=8;var o=FA.write(A,U,E,i,undefined);if(o<0)return-1;C+=o}return C}(yA.getStreamFromFD(A),I,g);return q[B>>2]=C,0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}},s:function(A,I){var g=FI();try{return mA(A)(I)}catch(A){if(yI(g),A!==A+0)throw A;RI(1,0)}},u:function(A,I,g){var B=FI();try{return mA(A)(I,g)}catch(A){if(yI(B),A!==A+0)throw A;RI(1,0)}},t:function(A,I,g,B){var C=FI();try{return mA(A)(I,g,B)}catch(A){if(yI(C),A!==A+0)throw A;RI(1,0)}},i:function(A,I){var g=FI();try{mA(A)(I)}catch(A){if(yI(g),A!==A+0)throw A;RI(1,0)}},v:function(A,I,g){var B=FI();try{mA(A)(I,g)}catch(A){if(yI(B),A!==A+0)throw A;RI(1,0)}},w:function(A,I,g,B){var C=FI();try{mA(A)(I,g,B)}catch(A){if(yI(C),A!==A+0)throw A;RI(1,0)}},j:function(A,I,g,B,C){var Q=FI();try{mA(A)(I,g,B,C)}catch(A){if(yI(Q),A!==A+0)throw A;RI(1,0)}},M:QI,z:function(A,I,g,B){return QI(A,I,g,B)}},sI=(function(){var I={a:wI};function g(I,g){var B,C=I.exports;A.asm=C,p((e=A.asm.N).buffer),Z=A.asm.S,B=A.asm.O,V.unshift(B),z()}function C(A){g(A.instance)}function E(A){return function(){if(!n&&(R||F)){if("function"==typeof fetch&&!QA($))return fetch($,{credentials:"same-origin"}).then((function(A){if(!A.ok)throw"failed to load wasm binary file at '"+$+"'";return A.arrayBuffer()})).catch((function(){return EA($)}));if(Q)return new Promise((function(A,I){Q($,(function(I){A(new Uint8Array(I))}),I)}))}return Promise.resolve().then((function(){return EA($)}))}().then((function(A){return WebAssembly.instantiate(A,I)})).then((function(A){return A})).then(A,(function(A){M("failed to asynchronously prepare wasm: "+A),_(A)}))}if(P(),A.instantiateWasm)try{return A.instantiateWasm(I,g)}catch(A){return M("Module.instantiateWasm callback failed with error: "+A),!1}(n||"function"!=typeof WebAssembly.instantiateStreaming||CA($)||QA($)||y||"function"!=typeof fetch?E(C):fetch($,{credentials:"same-origin"}).then((function(A){return WebAssembly.instantiateStreaming(A,I).then(C,(function(A){return M("wasm streaming compile failed: "+A),M("falling back to ArrayBuffer instantiation"),E(C)}))}))).catch(B)}(),A.___wasm_call_ctors=function(){return(A.___wasm_call_ctors=A.asm.O).apply(null,arguments)},A._malloc=function(){return(sI=A._malloc=A.asm.P).apply(null,arguments)}),GI=A._free=function(){return(GI=A._free=A.asm.Q).apply(null,arguments)},tI=A.___errno_location=function(){return(tI=A.___errno_location=A.asm.R).apply(null,arguments)},hI=A.___getTypeName=function(){return(hI=A.___getTypeName=A.asm.T).apply(null,arguments)},RI=(A.__embind_initialize_bindings=function(){return(A.__embind_initialize_bindings=A.asm.U).apply(null,arguments)},A._setThrew=function(){return(RI=A._setThrew=A.asm.V).apply(null,arguments)}),FI=A.stackSave=function(){return(FI=A.stackSave=A.asm.W).apply(null,arguments)},yI=A.stackRestore=function(){return(yI=A.stackRestore=A.asm.X).apply(null,arguments)},rI=A.___cxa_is_pointer_type=function(){return(rI=A.___cxa_is_pointer_type=A.asm.Y).apply(null,arguments)};function nI(g){function B(){aI||(aI=!0,A.calledRun=!0,k||(A.noFSInit||FA.init.initialized||FA.init(),FA.ignorePermissions=!1,tA.init(),DA(V),I(A),A.onRuntimeInitialized&&A.onRuntimeInitialized(),function(){if(A.postRun)for("function"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)I=A.postRun.shift(),X.unshift(I);var I;DA(X)}()))}g=g||G,O>0||(function(){if(A.preRun)for("function"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)I=A.preRun.shift(),x.unshift(I);var I;DA(x)}(),O>0||(A.setStatus?(A.setStatus("Running..."),setTimeout((function(){setTimeout((function(){A.setStatus("")}),1),B()}),1)):B()))}if(A.dynCall_jiji=function(){return(A.dynCall_jiji=A.asm.Z).apply(null,arguments)},A.dynCall_viijii=function(){return(A.dynCall_viijii=A.asm._).apply(null,arguments)},A.dynCall_iiiiij=function(){return(A.dynCall_iiiiij=A.asm.$).apply(null,arguments)},A.dynCall_iiiiijj=function(){return(A.dynCall_iiiiijj=A.asm.aa).apply(null,arguments)},A.dynCall_iiiiiijj=function(){return(A.dynCall_iiiiiijj=A.asm.ba).apply(null,arguments)},A.FS=FA,j=function A(){aI||nI(),aI||(j=A)},A.preInit)for("function"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return nI(),A.ready});const s=w,G=function(){return new Promise((function(A){s({onRuntimeInitialized:function(){A({instance:this})}})}))};function t(A,I){return function(){return A.apply(I,arguments)}}const{toString:h}=Object.prototype,{getPrototypeOf:R}=Object,F=(y=Object.create(null),A=>{const I=h.call(A);return y[I]||(y[I]=I.slice(8,-1).toLowerCase())});var y;const r=A=>(A=A.toLowerCase(),I=>F(I)===A),n=A=>I=>typeof I===A,{isArray:S}=Array,M=n("undefined"),e=r("ArrayBuffer"),N=n("string"),k=n("function"),c=n("number"),J=A=>null!==A&&"object"==typeof A,U=A=>{if("object"!==F(A))return!1;const I=R(A);return!(null!==I&&I!==Object.prototype&&null!==Object.getPrototypeOf(I)||Symbol.toStringTag in A||Symbol.iterator in A)},K=r("Date"),L=r("File"),Y=r("Blob"),d=r("FileList"),q=r("URLSearchParams");function H(A,I,{allOwnKeys:g=!1}={}){if(null==A)return;let B,C;if("object"!=typeof A&&(A=[A]),S(A))for(B=0,C=A.length;B<C;B++)I.call(null,A[B],B,A);else{const C=g?Object.getOwnPropertyNames(A):Object.keys(A),Q=C.length;let E;for(B=0;B<Q;B++)E=C[B],I.call(null,A[E],E,A)}}const l=(f="undefined"!=typeof Uint8Array&&R(Uint8Array),A=>f&&A instanceof f);var f;const u=r("HTMLFormElement"),W=(({hasOwnProperty:A})=>(I,g)=>A.call(I,g))(Object.prototype),m=r("RegExp"),b=(A,I)=>{const g=Object.getOwnPropertyDescriptors(A),B={};H(g,((g,C)=>{!1!==I(g,C,A)&&(B[C]=g)})),Object.defineProperties(A,B)},p={isArray:S,isArrayBuffer:e,isBuffer:function(A){return null!==A&&!M(A)&&null!==A.constructor&&!M(A.constructor)&&k(A.constructor.isBuffer)&&A.constructor.isBuffer(A)},isFormData:A=>{const I="[object FormData]";return A&&("function"==typeof FormData&&A instanceof FormData||h.call(A)===I||k(A.toString)&&A.toString()===I)},isArrayBufferView:function(A){let I;return I="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(A):A&&A.buffer&&e(A.buffer),I},isString:N,isNumber:c,isBoolean:A=>!0===A||!1===A,isObject:J,isPlainObject:U,isUndefined:M,isDate:K,isFile:L,isBlob:Y,isRegExp:m,isFunction:k,isStream:A=>J(A)&&k(A.pipe),isURLSearchParams:q,isTypedArray:l,isFileList:d,forEach:H,merge:function A(){const I={},g=(g,B)=>{U(I[B])&&U(g)?I[B]=A(I[B],g):U(g)?I[B]=A({},g):S(g)?I[B]=g.slice():I[B]=g};for(let A=0,I=arguments.length;A<I;A++)arguments[A]&&H(arguments[A],g);return I},extend:(A,I,g,{allOwnKeys:B}={})=>(H(I,((I,B)=>{g&&k(I)?A[B]=t(I,g):A[B]=I}),{allOwnKeys:B}),A),trim:A=>A.trim?A.trim():A.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),stripBOM:A=>(65279===A.charCodeAt(0)&&(A=A.slice(1)),A),inherits:(A,I,g,B)=>{A.prototype=Object.create(I.prototype,B),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:I.prototype}),g&&Object.assign(A.prototype,g)},toFlatObject:(A,I,g,B)=>{let C,Q,E;const i={};if(I=I||{},null==A)return I;do{for(C=Object.getOwnPropertyNames(A),Q=C.length;Q-- >0;)E=C[Q],B&&!B(E,A,I)||i[E]||(I[E]=A[E],i[E]=!0);A=!1!==g&&R(A)}while(A&&(!g||g(A,I))&&A!==Object.prototype);return I},kindOf:F,kindOfTest:r,endsWith:(A,I,g)=>{A=String(A),(void 0===g||g>A.length)&&(g=A.length),g-=I.length;const B=A.indexOf(I,g);return-1!==B&&B===g},toArray:A=>{if(!A)return null;if(S(A))return A;let I=A.length;if(!c(I))return null;const g=new Array(I);for(;I-- >0;)g[I]=A[I];return g},forEachEntry:(A,I)=>{const g=(A&&A[Symbol.iterator]).call(A);let B;for(;(B=g.next())&&!B.done;){const g=B.value;I.call(A,g[0],g[1])}},matchAll:(A,I)=>{let g;const B=[];for(;null!==(g=A.exec(I));)B.push(g);return B},isHTMLForm:u,hasOwnProperty:W,hasOwnProp:W,reduceDescriptors:b,freezeMethods:A=>{b(A,((I,g)=>{const B=A[g];k(B)&&(I.enumerable=!1,"writable"in I?I.writable=!1:I.set||(I.set=()=>{throw Error("Can not read-only method '"+g+"'")}))}))},toObjectSet:(A,I)=>{const g={},B=A=>{A.forEach((A=>{g[A]=!0}))};return S(A)?B(A):B(String(A).split(I)),g},toCamelCase:A=>A.toLowerCase().replace(/[_-\s]([a-z\d])(\w*)/g,(function(A,I,g){return I.toUpperCase()+g})),noop:()=>{},toFiniteNumber:(A,I)=>(A=+A,Number.isFinite(A)?A:I)};function Z(A,I,g,B,C){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=A,this.name="AxiosError",I&&(this.code=I),g&&(this.config=g),B&&(this.request=B),C&&(this.response=C)}p.inherits(Z,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const x=Z.prototype,V={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((A=>{V[A]={value:A}})),Object.defineProperties(Z,V),Object.defineProperty(x,"isAxiosError",{value:!0}),Z.from=(A,I,g,B,C,Q)=>{const E=Object.create(x);return p.toFlatObject(A,E,(function(A){return A!==Error.prototype}),(A=>"isAxiosError"!==A)),Z.call(E,A.message,I,g,B,C),E.cause=A,E.name=A.name,Q&&Object.assign(E,Q),E};const X=Z,T=g(230);function O(A){return p.isPlainObject(A)||p.isArray(A)}function v(A){return p.endsWith(A,"[]")?A.slice(0,-2):A}function j(A,I,g){return A?A.concat(I).map((function(A,I){return A=v(A),!g&&I?"["+A+"]":A})).join(g?".":""):I}const P=p.toFlatObject(p,{},null,(function(A){return/^is[A-Z]/.test(A)})),z=function(A,I,g){if(!p.isObject(A))throw new TypeError("target must be an object");I=I||new(T||FormData);const B=(g=p.toFlatObject(g,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(A,I){return!p.isUndefined(I[A])}))).metaTokens,C=g.visitor||a,Q=g.dots,E=g.indexes,i=(g.Blob||"undefined"!=typeof Blob&&Blob)&&(o=I)&&p.isFunction(o.append)&&"FormData"===o[Symbol.toStringTag]&&o[Symbol.iterator];var o;if(!p.isFunction(C))throw new TypeError("visitor must be a function");function D(A){if(null===A)return"";if(p.isDate(A))return A.toISOString();if(!i&&p.isBlob(A))throw new X("Blob is not supported. Use a Buffer instead.");return p.isArrayBuffer(A)||p.isTypedArray(A)?i&&"function"==typeof Blob?new Blob([A]):Buffer.from(A):A}function a(A,g,C){let i=A;if(A&&!C&&"object"==typeof A)if(p.endsWith(g,"{}"))g=B?g:g.slice(0,-2),A=JSON.stringify(A);else if(p.isArray(A)&&function(A){return p.isArray(A)&&!A.some(O)}(A)||p.isFileList(A)||p.endsWith(g,"[]")&&(i=p.toArray(A)))return g=v(g),i.forEach((function(A,B){!p.isUndefined(A)&&null!==A&&I.append(!0===E?j([g],B,Q):null===E?g:g+"[]",D(A))})),!1;return!!O(A)||(I.append(j(C,g,Q),D(A)),!1)}const w=[],s=Object.assign(P,{defaultVisitor:a,convertValue:D,isVisitable:O});if(!p.isObject(A))throw new TypeError("data must be an object");return function A(g,B){if(!p.isUndefined(g)){if(-1!==w.indexOf(g))throw Error("Circular reference detected in "+B.join("."));w.push(g),p.forEach(g,(function(g,Q){!0===(!(p.isUndefined(g)||null===g)&&C.call(I,g,p.isString(Q)?Q.trim():Q,B,s))&&A(g,B?B.concat(Q):[Q])})),w.pop()}}(A),I};function _(A){const I={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,(function(A){return I[A]}))}function $(A,I){this._pairs=[],A&&z(A,this,I)}const AA=$.prototype;AA.append=function(A,I){this._pairs.push([A,I])},AA.toString=function(A){const I=A?function(I){return A.call(this,I,_)}:_;return this._pairs.map((function(A){return I(A[0])+"="+I(A[1])}),"").join("&")};const IA=$;function gA(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function BA(A,I,g){if(!I)return A;const B=g&&g.encode||gA,C=g&&g.serialize;let Q;if(Q=C?C(I,g):p.isURLSearchParams(I)?I.toString():new IA(I,g).toString(B),Q){const I=A.indexOf("#");-1!==I&&(A=A.slice(0,I)),A+=(-1===A.indexOf("?")?"?":"&")+Q}return A}const CA=class{constructor(){this.handlers=[]}use(A,I,g){return this.handlers.push({fulfilled:A,rejected:I,synchronous:!!g&&g.synchronous,runWhen:g?g.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){p.forEach(this.handlers,(function(I){null!==I&&A(I)}))}},QA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},EA="undefined"!=typeof URLSearchParams?URLSearchParams:IA,iA=FormData,oA=(()=>{let A;return("undefined"==typeof navigator||"ReactNative"!==(A=navigator.product)&&"NativeScript"!==A&&"NS"!==A)&&"undefined"!=typeof window&&"undefined"!=typeof document})(),DA={isBrowser:!0,classes:{URLSearchParams:EA,FormData:iA,Blob},isStandardBrowserEnv:oA,protocols:["http","https","file","blob","url","data"]},aA=function(A){function I(A,g,B,C){let Q=A[C++];const E=Number.isFinite(+Q),i=C>=A.length;return Q=!Q&&p.isArray(B)?B.length:Q,i?(p.hasOwnProp(B,Q)?B[Q]=[B[Q],g]:B[Q]=g,!E):(B[Q]&&p.isObject(B[Q])||(B[Q]=[]),I(A,g,B[Q],C)&&p.isArray(B[Q])&&(B[Q]=function(A){const I={},g=Object.keys(A);let B;const C=g.length;let Q;for(B=0;B<C;B++)Q=g[B],I[Q]=A[Q];return I}(B[Q])),!E)}if(p.isFormData(A)&&p.isFunction(A.entries)){const g={};return p.forEachEntry(A,((A,B)=>{I(function(A){return p.matchAll(/\w+|\[(\w*)]/g,A).map((A=>"[]"===A[0]?"":A[1]||A[0]))}(A),B,g,0)})),g}return null},wA=DA.isStandardBrowserEnv?{write:function(A,I,g,B,C,Q){const E=[];E.push(A+"="+encodeURIComponent(I)),p.isNumber(g)&&E.push("expires="+new Date(g).toGMTString()),p.isString(B)&&E.push("path="+B),p.isString(C)&&E.push("domain="+C),!0===Q&&E.push("secure"),document.cookie=E.join("; ")},read:function(A){const I=document.cookie.match(new RegExp("(^|;\\s*)("+A+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove:function(A){this.write(A,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}};function sA(A,I){return A&&!/^([a-z][a-z\d+\-.]*:)?\/\//i.test(I)?function(A,I){return I?A.replace(/\/+$/,"")+"/"+I.replace(/^\/+/,""):A}(A,I):I}const GA=DA.isStandardBrowserEnv?function(){const A=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement("a");let g;function B(g){let B=g;return A&&(I.setAttribute("href",B),B=I.href),I.setAttribute("href",B),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,""):"",host:I.host,search:I.search?I.search.replace(/^\?/,""):"",hash:I.hash?I.hash.replace(/^#/,""):"",hostname:I.hostname,port:I.port,pathname:"/"===I.pathname.charAt(0)?I.pathname:"/"+I.pathname}}return g=B(window.location.href),function(A){const I=p.isString(A)?B(A):A;return I.protocol===g.protocol&&I.host===g.host}}():function(){return!0};function tA(A,I,g){X.call(this,null==A?"canceled":A,X.ERR_CANCELED,I,g),this.name="CanceledError"}p.inherits(tA,X,{__CANCEL__:!0});const hA=tA,RA=p.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),FA=Symbol("internals"),yA=Symbol("defaults");function rA(A){return A&&String(A).trim().toLowerCase()}function nA(A){return!1===A||null==A?A:p.isArray(A)?A.map(nA):String(A)}function SA(A,I,g,B){return p.isFunction(B)?B.call(this,I,g):p.isString(I)?p.isString(B)?-1!==I.indexOf(B):p.isRegExp(B)?B.test(I):void 0:void 0}function MA(A,I){I=I.toLowerCase();const g=Object.keys(A);let B,C=g.length;for(;C-- >0;)if(B=g[C],I===B.toLowerCase())return B;return null}function eA(A,I){A&&this.set(A),this[yA]=I||null}Object.assign(eA.prototype,{set:function(A,I,g){const B=this;function C(A,I,g){const C=rA(I);if(!C)throw new Error("header name must be a non-empty string");const Q=MA(B,C);(!Q||!0===g||!1!==B[Q]&&!1!==g)&&(B[Q||I]=nA(A))}return p.isPlainObject(A)?p.forEach(A,((A,g)=>{C(A,g,I)})):C(I,A,g),this},get:function(A,I){if(!(A=rA(A)))return;const g=MA(this,A);if(g){const A=this[g];if(!I)return A;if(!0===I)return function(A){const I=Object.create(null),g=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let B;for(;B=g.exec(A);)I[B[1]]=B[2];return I}(A);if(p.isFunction(I))return I.call(this,A,g);if(p.isRegExp(I))return I.exec(A);throw new TypeError("parser must be boolean|regexp|function")}},has:function(A,I){if(A=rA(A)){const g=MA(this,A);return!(!g||I&&!SA(0,this[g],g,I))}return!1},delete:function(A,I){const g=this;let B=!1;function C(A){if(A=rA(A)){const C=MA(g,A);!C||I&&!SA(0,g[C],C,I)||(delete g[C],B=!0)}}return p.isArray(A)?A.forEach(C):C(A),B},clear:function(){return Object.keys(this).forEach(this.delete.bind(this))},normalize:function(A){const I=this,g={};return p.forEach(this,((B,C)=>{const Q=MA(g,C);if(Q)return I[Q]=nA(B),void delete I[C];const E=A?function(A){return A.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,((A,I,g)=>I.toUpperCase()+g))}(C):String(C).trim();E!==C&&delete I[C],I[E]=nA(B),g[E]=!0})),this},toJSON:function(A){const I=Object.create(null);return p.forEach(Object.assign({},this[yA]||null,this),((g,B)=>{null!=g&&!1!==g&&(I[B]=A&&p.isArray(g)?g.join(", "):g)})),I}}),Object.assign(eA,{from:function(A){return p.isString(A)?new this((A=>{const I={};let g,B,C;return A&&A.split("\n").forEach((function(A){C=A.indexOf(":"),g=A.substring(0,C).trim().toLowerCase(),B=A.substring(C+1).trim(),!g||I[g]&&RA[g]||("set-cookie"===g?I[g]?I[g].push(B):I[g]=[B]:I[g]=I[g]?I[g]+", "+B:B)})),I})(A)):A instanceof this?A:new this(A)},accessor:function(A){const I=(this[FA]=this[FA]={accessors:{}}).accessors,g=this.prototype;function B(A){const B=rA(A);I[B]||(function(A,I){const g=p.toCamelCase(" "+I);["get","set","has"].forEach((B=>{Object.defineProperty(A,B+g,{value:function(A,g,C){return this[B].call(this,I,A,g,C)},configurable:!0})}))}(g,A),I[B]=!0)}return p.isArray(A)?A.forEach(B):B(A),this}}),eA.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent"]),p.freezeMethods(eA.prototype),p.freezeMethods(eA);const NA=eA;function kA(A,I){let g=0;const B=function(A,I){A=A||10;const g=new Array(A),B=new Array(A);let C,Q=0,E=0;return I=void 0!==I?I:1e3,function(i){const o=Date.now(),D=B[E];C||(C=o),g[Q]=i,B[Q]=o;let a=E,w=0;for(;a!==Q;)w+=g[a++],a%=A;if(Q=(Q+1)%A,Q===E&&(E=(E+1)%A),o-C<I)return;const s=D&&o-D;return s?Math.round(1e3*w/s):void 0}}(50,250);return C=>{const Q=C.loaded,E=C.lengthComputable?C.total:void 0,i=Q-g,o=B(i);g=Q;const D={loaded:Q,total:E,progress:E?Q/E:void 0,bytes:i,rate:o||void 0,estimated:o&&E&&Q<=E?(E-Q)/o:void 0};D[I?"download":"upload"]=!0,A(D)}}function cA(A){return new Promise((function(I,g){let B=A.data;const C=NA.from(A.headers).normalize(),Q=A.responseType;let E;function i(){A.cancelToken&&A.cancelToken.unsubscribe(E),A.signal&&A.signal.removeEventListener("abort",E)}p.isFormData(B)&&DA.isStandardBrowserEnv&&C.setContentType(!1);let o=new XMLHttpRequest;if(A.auth){const I=A.auth.username||"",g=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";C.set("Authorization","Basic "+btoa(I+":"+g))}const D=sA(A.baseURL,A.url);function a(){if(!o)return;const B=NA.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders());!function(A,I,g){const B=g.config.validateStatus;g.status&&B&&!B(g.status)?I(new X("Request failed with status code "+g.status,[X.ERR_BAD_REQUEST,X.ERR_BAD_RESPONSE][Math.floor(g.status/100)-4],g.config,g.request,g)):A(g)}((function(A){I(A),i()}),(function(A){g(A),i()}),{data:Q&&"text"!==Q&&"json"!==Q?o.response:o.responseText,status:o.status,statusText:o.statusText,headers:B,config:A,request:o}),o=null}if(o.open(A.method.toUpperCase(),BA(D,A.params,A.paramsSerializer),!0),o.timeout=A.timeout,"onloadend"in o?o.onloadend=a:o.onreadystatechange=function(){o&&4===o.readyState&&(0!==o.status||o.responseURL&&0===o.responseURL.indexOf("file:"))&&setTimeout(a)},o.onabort=function(){o&&(g(new X("Request aborted",X.ECONNABORTED,A,o)),o=null)},o.onerror=function(){g(new X("Network Error",X.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let I=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded";const B=A.transitional||QA;A.timeoutErrorMessage&&(I=A.timeoutErrorMessage),g(new X(I,B.clarifyTimeoutError?X.ETIMEDOUT:X.ECONNABORTED,A,o)),o=null},DA.isStandardBrowserEnv){const I=(A.withCredentials||GA(D))&&A.xsrfCookieName&&wA.read(A.xsrfCookieName);I&&C.set(A.xsrfHeaderName,I)}void 0===B&&C.setContentType(null),"setRequestHeader"in o&&p.forEach(C.toJSON(),(function(A,I){o.setRequestHeader(I,A)})),p.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),Q&&"json"!==Q&&(o.responseType=A.responseType),"function"==typeof A.onDownloadProgress&&o.addEventListener("progress",kA(A.onDownloadProgress,!0)),"function"==typeof A.onUploadProgress&&o.upload&&o.upload.addEventListener("progress",kA(A.onUploadProgress)),(A.cancelToken||A.signal)&&(E=I=>{o&&(g(!I||I.type?new hA(null,A,o):I),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(E),A.signal&&(A.signal.aborted?E():A.signal.addEventListener("abort",E)));const w=function(A){const I=/^([-+\w]{1,25})(:?\/\/|:)/.exec(A);return I&&I[1]||""}(D);w&&-1===DA.protocols.indexOf(w)?g(new X("Unsupported protocol "+w+":",X.ERR_BAD_REQUEST,A)):o.send(B||null)}))}const JA={http:cA,xhr:cA},UA=A=>{if(p.isString(A)){const I=JA[A];if(!A)throw Error(p.hasOwnProp(A)?`Adapter '${A}' is not available in the build`:`Can not resolve adapter '${A}'`);return I}if(!p.isFunction(A))throw new TypeError("adapter is not a function");return A},KA={"Content-Type":"application/x-www-form-urlencoded"},LA={transitional:QA,adapter:function(){let A;return"undefined"!=typeof XMLHttpRequest?A=UA("xhr"):"undefined"!=typeof process&&"process"===p.kindOf(process)&&(A=UA("http")),A}(),transformRequest:[function(A,I){const g=I.getContentType()||"",B=g.indexOf("application/json")>-1,C=p.isObject(A);if(C&&p.isHTMLForm(A)&&(A=new FormData(A)),p.isFormData(A))return B&&B?JSON.stringify(aA(A)):A;if(p.isArrayBuffer(A)||p.isBuffer(A)||p.isStream(A)||p.isFile(A)||p.isBlob(A))return A;if(p.isArrayBufferView(A))return A.buffer;if(p.isURLSearchParams(A))return I.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),A.toString();let Q;if(C){if(g.indexOf("application/x-www-form-urlencoded")>-1)return function(A,I){return z(A,new DA.classes.URLSearchParams,Object.assign({visitor:function(A,I,g,B){return DA.isNode&&p.isBuffer(A)?(this.append(I,A.toString("base64")),!1):B.defaultVisitor.apply(this,arguments)}},I))}(A,this.formSerializer).toString();if((Q=p.isFileList(A))||g.indexOf("multipart/form-data")>-1){const I=this.env&&this.env.FormData;return z(Q?{"files[]":A}:A,I&&new I,this.formSerializer)}}return C||B?(I.setContentType("application/json",!1),function(A,I,g){if(p.isString(A))try{return(0,JSON.parse)(A),p.trim(A)}catch(A){if("SyntaxError"!==A.name)throw A}return(0,JSON.stringify)(A)}(A)):A}],transformResponse:[function(A){const I=this.transitional||LA.transitional,g=I&&I.forcedJSONParsing,B="json"===this.responseType;if(A&&p.isString(A)&&(g&&!this.responseType||B)){const g=!(I&&I.silentJSONParsing)&&B;try{return JSON.parse(A)}catch(A){if(g){if("SyntaxError"===A.name)throw X.from(A,X.ERR_BAD_RESPONSE,this,null,this.response);throw A}}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:DA.classes.FormData,Blob:DA.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};p.forEach(["delete","get","head"],(function(A){LA.headers[A]={}})),p.forEach(["post","put","patch"],(function(A){LA.headers[A]=p.merge(KA)}));const YA=LA;function dA(A,I){const g=this||YA,B=I||g,C=NA.from(B.headers);let Q=B.data;return p.forEach(A,(function(A){Q=A.call(g,Q,C.normalize(),I?I.status:void 0)})),C.normalize(),Q}function qA(A){return!(!A||!A.__CANCEL__)}function HA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new hA}function lA(A){return HA(A),A.headers=NA.from(A.headers),A.data=dA.call(A,A.transformRequest),(A.adapter||YA.adapter)(A).then((function(I){return HA(A),I.data=dA.call(A,A.transformResponse,I),I.headers=NA.from(I.headers),I}),(function(I){return qA(I)||(HA(A),I&&I.response&&(I.response.data=dA.call(A,A.transformResponse,I.response),I.response.headers=NA.from(I.response.headers))),Promise.reject(I)}))}function fA(A,I){I=I||{};const g={};function B(A,I){return p.isPlainObject(A)&&p.isPlainObject(I)?p.merge(A,I):p.isPlainObject(I)?p.merge({},I):p.isArray(I)?I.slice():I}function C(g){return p.isUndefined(I[g])?p.isUndefined(A[g])?void 0:B(void 0,A[g]):B(A[g],I[g])}function Q(A){if(!p.isUndefined(I[A]))return B(void 0,I[A])}function E(g){return p.isUndefined(I[g])?p.isUndefined(A[g])?void 0:B(void 0,A[g]):B(void 0,I[g])}function i(g){return g in I?B(A[g],I[g]):g in A?B(void 0,A[g]):void 0}const o={url:Q,method:Q,data:Q,baseURL:E,transformRequest:E,transformResponse:E,paramsSerializer:E,timeout:E,timeoutMessage:E,withCredentials:E,adapter:E,responseType:E,xsrfCookieName:E,xsrfHeaderName:E,onUploadProgress:E,onDownloadProgress:E,decompress:E,maxContentLength:E,maxBodyLength:E,beforeRedirect:E,transport:E,httpAgent:E,httpsAgent:E,cancelToken:E,socketPath:E,responseEncoding:E,validateStatus:i};return p.forEach(Object.keys(A).concat(Object.keys(I)),(function(A){const I=o[A]||C,B=I(A);p.isUndefined(B)&&I!==i||(g[A]=B)})),g}const uA={};["object","boolean","number","function","string","symbol"].forEach(((A,I)=>{uA[A]=function(g){return typeof g===A||"a"+(I<1?"n ":" ")+A}}));const WA={};uA.transitional=function(A,I,g){function B(A,I){return"[Axios v1.1.3] Transitional option '"+A+"'"+I+(g?". "+g:"")}return(g,C,Q)=>{if(!1===A)throw new X(B(C," has been removed"+(I?" in "+I:"")),X.ERR_DEPRECATED);return I&&!WA[C]&&(WA[C]=!0,console.warn(B(C," has been deprecated since v"+I+" and will be removed in the near future"))),!A||A(g,C,Q)}};const mA={assertOptions:function(A,I,g){if("object"!=typeof A)throw new X("options must be an object",X.ERR_BAD_OPTION_VALUE);const B=Object.keys(A);let C=B.length;for(;C-- >0;){const Q=B[C],E=I[Q];if(E){const I=A[Q],g=void 0===I||E(I,Q,A);if(!0!==g)throw new X("option "+Q+" must be "+g,X.ERR_BAD_OPTION_VALUE)}else if(!0!==g)throw new X("Unknown option "+Q,X.ERR_BAD_OPTION)}},validators:uA},bA=mA.validators;class pA{constructor(A){this.defaults=A,this.interceptors={request:new CA,response:new CA}}request(A,I){"string"==typeof A?(I=I||{}).url=A:I=A||{},I=fA(this.defaults,I);const{transitional:g,paramsSerializer:B}=I;void 0!==g&&mA.assertOptions(g,{silentJSONParsing:bA.transitional(bA.boolean),forcedJSONParsing:bA.transitional(bA.boolean),clarifyTimeoutError:bA.transitional(bA.boolean)},!1),void 0!==B&&mA.assertOptions(B,{encode:bA.function,serialize:bA.function},!0),I.method=(I.method||this.defaults.method||"get").toLowerCase();const C=I.headers&&p.merge(I.headers.common,I.headers[I.method]);C&&p.forEach(["delete","get","head","post","put","patch","common"],(function(A){delete I.headers[A]})),I.headers=new NA(I.headers,C);const Q=[];let E=!0;this.interceptors.request.forEach((function(A){"function"==typeof A.runWhen&&!1===A.runWhen(I)||(E=E&&A.synchronous,Q.unshift(A.fulfilled,A.rejected))}));const i=[];let o;this.interceptors.response.forEach((function(A){i.push(A.fulfilled,A.rejected)}));let D,a=0;if(!E){const A=[lA.bind(this),void 0];for(A.unshift.apply(A,Q),A.push.apply(A,i),D=A.length,o=Promise.resolve(I);a<D;)o=o.then(A[a++],A[a++]);return o}D=Q.length;let w=I;for(a=0;a<D;){const A=Q[a++],I=Q[a++];try{w=A(w)}catch(A){I.call(this,A);break}}try{o=lA.call(this,w)}catch(A){return Promise.reject(A)}for(a=0,D=i.length;a<D;)o=o.then(i[a++],i[a++]);return o}getUri(A){return BA(sA((A=fA(this.defaults,A)).baseURL,A.url),A.params,A.paramsSerializer)}}p.forEach(["delete","get","head","options"],(function(A){pA.prototype[A]=function(I,g){return this.request(fA(g||{},{method:A,url:I,data:(g||{}).data}))}})),p.forEach(["post","put","patch"],(function(A){function I(I){return function(g,B,C){return this.request(fA(C||{},{method:A,headers:I?{"Content-Type":"multipart/form-data"}:{},url:g,data:B}))}}pA.prototype[A]=I(),pA.prototype[A+"Form"]=I(!0)}));const ZA=pA;class xA{constructor(A){if("function"!=typeof A)throw new TypeError("executor must be a function.");let I;this.promise=new Promise((function(A){I=A}));const g=this;this.promise.then((A=>{if(!g._listeners)return;let I=g._listeners.length;for(;I-- >0;)g._listeners[I](A);g._listeners=null})),this.promise.then=A=>{let I;const B=new Promise((A=>{g.subscribe(A),I=A})).then(A);return B.cancel=function(){g.unsubscribe(I)},B},A((function(A,B,C){g.reason||(g.reason=new hA(A,B,C),I(g.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){this.reason?A(this.reason):this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;const I=this._listeners.indexOf(A);-1!==I&&this._listeners.splice(I,1)}static source(){let A;return{token:new xA((function(I){A=I})),cancel:A}}}const VA=xA,XA=function A(I){const g=new ZA(I),B=t(ZA.prototype.request,g);return p.extend(B,ZA.prototype,g,{allOwnKeys:!0}),p.extend(B,g,null,{allOwnKeys:!0}),B.create=function(g){return A(fA(I,g))},B}(YA);XA.Axios=ZA,XA.CanceledError=hA,XA.CancelToken=VA,XA.isCancel=qA,XA.VERSION="1.1.3",XA.toFormData=z,XA.AxiosError=X,XA.Cancel=XA.CanceledError,XA.all=function(A){return Promise.all(A)},XA.spread=function(A){return function(I){return A.apply(null,I)}},XA.isAxiosError=function(A){return p.isObject(A)&&!0===A.isAxiosError},XA.formToJSON=A=>aA(p.isHTMLForm(A)?new FormData(A):A);const TA=XA,{Axios:OA,AxiosError:vA,CanceledError:jA,isCancel:PA,CancelToken:zA,VERSION:_A,all:$A,Cancel:AI,isAxiosError:II,spread:gI,toFormData:BI}=TA,CI=TA;var QI=function(){function A(){C(this,A)}var g;return E(A,null,[{key:"fetchRemoteData",value:(g=I(o().mark((function A(I){var g;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,CI.get(I,{responseType:"arraybuffer"});case 3:return g=A.sent,A.abrupt("return",new Uint8Array(g.data));case 7:throw A.prev=7,A.t0=A.catch(0),A.t0;case 10:case"end":return A.stop()}}),A,null,[[0,7]])}))),function(A){return g.apply(this,arguments)})},{key:"string2Uint8Data",value:function(A){for(var I=new Uint8Array(A.length),g=0;g<I.length;g++)I[g]=255&A.charCodeAt(g);return I}},{key:"uint8Data2String",value:function(A){return String.fromCharCode.apply(String,A)}},{key:"parseMultiFile",value:function(I){var g=A.uint8Data2String(I).split("\n"),B=[],C=0;return g.forEach((function(A){if((A=A.trim())&&!A.startsWith("#"))switch(C){case 0:return void(C=1);case 1:A.match(/^\d+$/)||B.push(A);case 2:case 3:case 4:return void C++;case 5:return void(C=1)}})),B}}]),A}(),EI=function(){function A(){C(this,A),this.instance,this.markerCount=0,this.multiMarkerCount=0,this.cameraCount=0,this.version="0.1.3",console.info("ARToolkit ",this.version)}var B,Q,i,D,a;return E(A,[{key:"init",value:(a=I(o().mark((function A(){var I;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,G();case 2:return I=A.sent,this.instance=I.instance,this._decorate(),("undefined"!=typeof window?window:g.g).artoolkit=this,A.abrupt("return",this);case 8:case"end":return A.stop()}}),A,this)}))),function(){return a.apply(this,arguments)})},{key:"_decorate",value:function(){var A=this;for(var I in["setup","teardown","setupAR2","setLogLevel","getLogLevel","setDebugMode","getDebugMode","getProcessingImage","setMarkerInfoDir","setMarkerInfoVertex","getTransMatSquare","getTransMatSquareCont","getTransMatMultiSquare","getTransMatMultiSquareRobust","getMultiMarkerNum","getMultiMarkerCount","detectMarker","getMarkerNum","detectNFTMarker","getNFTMarker","getMarker","getMultiEachMarker","setProjectionNearPlane","getProjectionNearPlane","setProjectionFarPlane","getProjectionFarPlane","setThresholdMode","getThresholdMode","setThreshold","getThreshold","setPatternDetectionMode","getPatternDetectionMode","setMatrixCodeType","getMatrixCodeType","setLabelingMode","getLabelingMode","setPattRatio","getPattRatio","setImageProcMode","getImageProcMode"].forEach((function(I){A[I]=A.instance[I]})),this.instance)I.match(/^AR/)&&(this[I]=this.instance[I])}},{key:"loadCamera",value:(D=I(o().mark((function A(I){var g,B;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(g="/camera_param_"+this.cameraCount++,!(I instanceof Uint8Array)){A.next=5;break}B=I,A.next=14;break;case 5:return A.prev=5,A.next=8,QI.fetchRemoteData(I);case 8:B=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(B,g),A.abrupt("return",this.instance._loadCamera(g));case 16:case"end":return A.stop()}}),A,this,[[5,11]])}))),function(A){return D.apply(this,arguments)})},{key:"addMarker",value:(i=I(o().mark((function A(I,g){var B,C;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(B="/marker_"+this.markerCount++,-1===g.indexOf("\n")){A.next=5;break}C=QI.string2Uint8Data(g),A.next=14;break;case 5:return A.prev=5,A.next=8,QI.fetchRemoteData(g);case 8:C=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(C,B),A.abrupt("return",this.instance._addMarker(I,B));case 16:case"end":return A.stop()}}),A,this,[[5,11]])}))),function(A,I){return i.apply(this,arguments)})},{key:"addMultiMarker",value:(Q=I(o().mark((function A(g,B){var C,Q,E,i,D,a,w;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return C="/multi_marker_"+this.multiMarkerCount++,A.next=3,QI.fetchRemoteData(B);case 3:return Q=A.sent,E=QI.parseMultiFile(Q),i=function(){var A=I(o().mark((function A(I){var g,C;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return g=new URL(I,B).toString(),A.next=3,QI.fetchRemoteData(g);case 3:C=A.sent,this._storeDataFile(C,I);case 5:case"end":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),D=E.map(i,this),A.next=9,Promise.all(D);case 9:return a=this.instance._addMultiMarker(g,C),w=this.instance.getMultiMarkerNum(g,a),A.abrupt("return",[a,w]);case 12:case"end":return A.stop()}}),A,this)}))),function(A,I){return Q.apply(this,arguments)})},{key:"addNFTMarker",value:(B=I(o().mark((function A(g,B){var C,Q,E,i;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return C="/markerNFT_"+this.markerCount++,Q=["fset","iset","fset3"],E=function(){var A=I(o().mark((function A(I){var g,Q,E;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return g=B+"."+I,Q=C+"."+I,A.next=4,QI.fetchRemoteData(g);case 4:E=A.sent,this._storeDataFile(E,Q);case 6:case"end":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),i=Q.map(E,this),A.next=6,Promise.all(i);case 6:return A.abrupt("return",this.instance._addNFTMarker(g,C));case 7:case"end":return A.stop()}}),A,this)}))),function(A,I){return B.apply(this,arguments)})},{key:"_storeDataFile",value:function(A,I){this.instance.FS.writeFile(I,A,{encoding:"binary"})}}],[{key:"UNKNOWN_MARKER",get:function(){return-1}},{key:"PATTERN_MARKER",get:function(){return 0}},{key:"BARCODE_MARKER",get:function(){return 1}},{key:"NFT_MARKER",get:function(){return 2}}]),A}();function iI(A,I,g){return I in A?Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}):A[I]=g,A}function oI(A,I){var g=Object.keys(A);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(A);I&&(B=B.filter((function(I){return Object.getOwnPropertyDescriptor(A,I).enumerable}))),g.push.apply(g,B)}return g}function DI(A){for(var I=1;I<arguments.length;I++){var g=null!=arguments[I]?arguments[I]:{};I%2?oI(Object(g),!0).forEach((function(I){iI(A,I,g[I])})):Object.getOwnPropertyDescriptors?Object.defineProperties(A,Object.getOwnPropertyDescriptors(g)):oI(Object(g)).forEach((function(I){Object.defineProperty(A,I,Object.getOwnPropertyDescriptor(g,I))}))}return A}var aI=function(){function A(I,g,B,Q){C(this,A),this.options=DI(DI({},{canvas:null,orientation:"landscape"}),Q),this.id=-1,this.width=I,this.height=g,this.image,this.orientation=this.options.orientation,this.cameraParam=B,this.cameraId=-1,this.cameraLoaded=!1,this.artoolkit,this.listeners={},this.defaultMarkerWidth=1,this.patternMarkers={},this.barcodeMarkers={},this.nftMarkers={},this.transform_mat=new Float32Array(16),this.transformGL_RH=new Float64Array(16),this.videoWidth=I,this.videoHeight=g,this.videoSize=this.videoWidth*this.videoHeight,this.framepointer=null,this.framesize=null,this.dataHeap=null,this.videoLuma=null,this.camera_mat=null,this.marker_transform_mat=null,this.videoLumaPointer=null,this.options.canvas?this.canvas=this.options.canvas:"undefined"!=typeof document&&(this.canvas=document.createElement("canvas")),this.canvas?(this.canvas.width=I,this.canvas.height=g,this.ctx=this.canvas.getContext("2d")):console.warn("No canvas available"),this.nftMarkerFound=!1,this.nftMarkerFoundTime=!1,this.nftMarkerCount=0,this._bwpointer=!1}var g,B,Q,i,D,a;return E(A,[{key:"dispose",value:function(){for(var A in this.cameraId=-1,this.cameraParam="",this.cameraLoaded=!1,this.id>-1&&this.artoolkit.teardown(this.id),this.image&&this.image.srcObject,this)this[A]=null}},{key:"process",value:function(A){var I=this.detectMarker(A);0!=I&&console.error("[ARController]","detectMarker error:",I);var g,B,C=this.getMarkerNum();for(g in this.patternMarkers)(B=this.patternMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(g in this.barcodeMarkers)(B=this.barcodeMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(g in this.nftMarkers)(B=this.nftMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(var Q=0;Q<C;Q++){var E=this.getMarker(Q),i=EI.UNKNOWN_MARKER,o=this.trackPatternMarkerId(-1);E.idPatt>-1&&(E.id===E.idPatt||-1===E.idMatrix)?(o=this.trackPatternMarkerId(E.idPatt),i=EI.PATTERN_MARKER,E.dir!==E.dirPatt&&this.setMarkerInfoDir(Q,E.dirPatt)):E.idMatrix>-1&&(o=this.trackBarcodeMarkerId(E.idMatrix),i=EI.BARCODE_MARKER,E.dir!==E.dirMatrix&&this.setMarkerInfoDir(Q,E.dirMatrix)),i!==EI.UNKNOWN_MARKER&&o.inPrevious?this.getTransMatSquareCont(Q,o.markerWidth,o.matrix,o.matrix):this.getTransMatSquare(Q,o.markerWidth,o.matrix),o.inCurrent=!0,this.transMatToGLMat(o.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getMarker",target:this,data:{index:Q,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}var D=this.nftMarkerCount;this.detectNFTMarker();for(var a=0;a<D;a++){var w=this.getNFTMarker(a),s=EI.NFT_MARKER;if(w.found){this.nftMarkerFound=a,this.nftMarkerFoundTime=Date.now();var G=this.trackNFTMarkerId(a);G.matrix.set(w.pose),G.inCurrent=!0,this.transMatToGLMat(G.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getNFTMarker",target:this,data:{index:a,type:s,marker:w,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}else self.nftMarkerFound===a&&Date.now()-this.nftMarkerFoundTime>200&&(this.nftMarkerFound=!1,this.dispatchEvent({name:"lostNFTMarker",target:this,data:{index:a,type:s,marker:w,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}}))}for(var t=this.getMultiMarkerCount(),h=0;h<t;h++){var R=this.getMultiMarkerPatternCount(h),F=!1;this.artoolkit.getTransMatMultiSquareRobust(this.id,h),this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat);for(var y=0;y<R;y++)if((n=this.getMultiEachMarker(h,y)).visible>=0){F=!0,this.dispatchEvent({name:"getMultiMarker",target:this,data:{multiMarkerId:h,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}});break}if(F)for(var r=0;r<R;r++){var n=this.getMultiEachMarker(h,r);this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getMultiMarkerSub",target:this,data:{multiMarkerId:h,markerIndex:r,marker:n,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}}this._bwpointer&&this.debugDraw()}},{key:"detectNFTMarker",value:function(){this.artoolkit.detectNFTMarker(this.id)}},{key:"trackPatternMarkerId",value:function(A,I){var g=this.patternMarkers[A];return g||(this.patternMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"trackBarcodeMarkerId",value:function(A,I){var g=this.barcodeMarkers[A];return g||(this.barcodeMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"trackNFTMarkerId",value:function(A,I){var g=this.nftMarkers[A];return g||(this.nftMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"getMultiMarkerCount",value:function(){return this.artoolkit.getMultiMarkerCount(this.id)}},{key:"getMultiMarkerPatternCount",value:function(A){return this.artoolkit.getMultiMarkerNum(this.id,A)}},{key:"addEventListener",value:function(A,I){this.listeners[A]||(this.listeners[A]=[]),this.listeners[A].push(I)}},{key:"removeEventListener",value:function(A,I){if(this.listeners[A]){var g=this.listeners[A].indexOf(I);g>-1&&this.listeners[A].splice(g,1)}}},{key:"dispatchEvent",value:function(A){var I=this.listeners[A.name];if(I)for(var g=0;g<I.length;g++)I[g].call(this,A)}},{key:"debugSetup",value:function(){"undefined"!=typeof document?(document.body.appendChild(this.canvas),this.setDebugMode(!0),this._bwpointer=this.getProcessingImage()):console.log("debugSetup() currently only supports Browser environments")}},{key:"debugDraw",value:function(){for(var A=new Uint8ClampedArray(this.artoolkit.instance.HEAPU8.buffer,this._bwpointer,this.framesize),I=new ImageData(new Uint8ClampedArray(this.canvas.width*this.canvas.height*4),this.canvas.width,this.canvas.height),g=0,B=0;g<A.length;g++,B+=4){var C=A[g];I.data[B+0]=C,I.data[B+1]=C,I.data[B+2]=C,I.data[B+3]=255}this.ctx.putImageData(I,0,0);for(var Q=this.getMarkerNum(),E=0;E<Q;E++)this.drawDebugMarker(this.getMarker(E))}},{key:"drawDebugMarker",value:function(A){var I=A.vertex,g=A.pos,B=this.ctx;B.lineWidth=5,B.strokeStyle="red",B.beginPath(),B.moveTo(I[0][0],I[0][1]),B.lineTo(I[1][0],I[1][1]),B.stroke(),B.beginPath(),B.moveTo(I[2][0],I[2][1]),B.lineTo(I[3][0],I[3][1]),B.stroke(),B.strokeStyle="green",B.beginPath(),B.lineTo(I[1][0],I[1][1]),B.lineTo(I[2][0],I[2][1]),B.stroke(),B.beginPath(),B.moveTo(I[3][0],I[3][1]),B.lineTo(I[0][0],I[0][1]),B.stroke(),B.beginPath(),B.arc(g[0],g[1],8,0,2*Math.PI),B.fillStyle="red",B.fill()}},{key:"loadMarker",value:(a=I(o().mark((function A(I){return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMarker(this.id,I);case 2:return A.abrupt("return",A.sent);case 3:case"end":return A.stop()}}),A,this)}))),function(A){return a.apply(this,arguments)})},{key:"loadMultiMarker",value:(D=I(o().mark((function A(I){return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMultiMarker(this.id,I);case 2:return A.abrupt("return",A.sent);case 3:case"end":return A.stop()}}),A,this)}))),function(A){return D.apply(this,arguments)})},{key:"loadNFTMarker",value:(i=I(o().mark((function A(I){var g;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addNFTMarker(this.id,I);case 2:return g=A.sent,this.nftMarkerCount=g+1,A.abrupt("return",g);case 5:case"end":return A.stop()}}),A,this)}))),function(A){return i.apply(this,arguments)})},{key:"getTransMatSquare",value:function(A,I,g){return this.artoolkit.getTransMatSquare(this.id,A,I),g.set(this.marker_transform_mat),g}},{key:"getTransMatSquareCont",value:function(A,I,g,B){return this.marker_transform_mat.set(g),this.artoolkit.getTransMatSquareCont(this.id,A,I),B.set(this.marker_transform_mat),B}},{key:"getTransMatMultiSquare",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:"getTransMatMultiSquareRobust",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:"transMatToGLMat",value:function(A,I,g){return null==I&&(I=new Float64Array(16)),I[0]=A[0],I[4]=A[1],I[8]=A[2],I[12]=A[3],I[1]=A[4],I[5]=A[5],I[9]=A[6],I[13]=A[7],I[2]=A[8],I[6]=A[9],I[10]=A[10],I[14]=A[11],I[3]=0,I[7]=0,I[11]=0,I[15]=1,null!=g&&0!==g&&(I[12]*=g,I[13]*=g,I[14]*=g),I}},{key:"arglCameraViewRHf",value:function(A,I,g){var B;return(B=null==I?new Float64Array(16):I)[0]=A[0],B[4]=A[4],B[8]=A[8],B[12]=A[12],B[1]=-A[1],B[5]=-A[5],B[9]=-A[9],B[13]=-A[13],B[2]=-A[2],B[6]=-A[6],B[10]=-A[10],B[14]=-A[14],B[3]=0,B[7]=0,B[11]=0,B[15]=1,null!=g&&0!==g&&(B[12]*=g,B[13]*=g,B[14]*=g),B}},{key:"detectMarker",value:function(A){return this._copyImageToHeap(A)?this.artoolkit.detectMarker(this.id):-99}},{key:"getMarkerNum",value:function(){return this.artoolkit.getMarkerNum(this.id)}},{key:"getMarker",value:function(A){if(0===this.artoolkit.getMarker(this.id,A))return this.artoolkit.markerInfo}},{key:"getNFTMarker",value:function(A){if(0===this.artoolkit.getNFTMarker(this.id,A))return this.artoolkit.NFTMarkerInfo}},{key:"setMarkerInfoVertex",value:function(A,I){for(var g=0;g<I.length;g++)this.marker_transform_mat[2*g+0]=I[g][0],this.marker_transform_mat[2*g+1]=I[g][1];return this.artoolkit.setMarkerInfoVertex(this.id,A)}},{key:"cloneMarkerInfo",value:function(A){return JSON.parse(JSON.stringify(A))}},{key:"getMultiEachMarker",value:function(A,I){if(0===this.artoolkit.getMultiEachMarker(this.id,A,I))return this.artoolkit.multiEachMarkerInfo}},{key:"getTransformationMatrix",value:function(){return this.transform_mat}},{key:"getCameraMatrix",value:function(){return this.camera_mat}},{key:"getMarkerTransformationMatrix",value:function(){return this.marker_transform_mat}},{key:"setDebugMode",value:function(A){return this.artoolkit.setDebugMode(this.id,A)}},{key:"getDebugMode",value:function(){return this.artoolkit.getDebugMode(this.id)}},{key:"getProcessingImage",value:function(){return this.artoolkit.getProcessingImage(this.id)}},{key:"setLogLevel",value:function(A){return this.artoolkit.setLogLevel(A)}},{key:"getLogLevel",value:function(){return this.artoolkit.getLogLevel()}},{key:"setMarkerInfoDir",value:function(A,I){return this.artoolkit.setMarkerInfoDir(this.id,A,I)}},{key:"setProjectionNearPlane",value:function(A){return this.artoolkit.setProjectionNearPlane(this.id,A)}},{key:"getProjectionNearPlane",value:function(){return this.artoolkit.getProjectionNearPlane(this.id)}},{key:"setProjectionFarPlane",value:function(A){return this.artoolkit.setProjectionFarPlane(this.id,A)}},{key:"getProjectionFarPlane",value:function(){return this.artoolkit.getProjectionFarPlane(this.id)}},{key:"setThresholdMode",value:function(A){return this.artoolkit.setThresholdMode(this.id,A)}},{key:"getThresholdMode",value:function(){return this.artoolkit.getThresholdMode(this.id)}},{key:"setThreshold",value:function(A){return this.artoolkit.setThreshold(this.id,A)}},{key:"getThreshold",value:function(){return this.artoolkit.getThreshold(this.id)}},{key:"setPatternDetectionMode",value:function(A){return this.artoolkit.setPatternDetectionMode(this.id,A)}},{key:"getPatternDetectionMode",value:function(){return this.artoolkit.getPatternDetectionMode(this.id)}},{key:"setMatrixCodeType",value:function(A){return this.artoolkit.setMatrixCodeType(this.id,A)}},{key:"getMatrixCodeType",value:function(){return this.artoolkit.getMatrixCodeType(this.id)}},{key:"setLabelingMode",value:function(A){return this.artoolkit.setLabelingMode(this.id,A)}},{key:"getLabelingMode",value:function(){return this.artoolkit.getLabelingMode(this.id)}},{key:"setPattRatio",value:function(A){return this.artoolkit.setPattRatio(this.id,A)}},{key:"getPattRatio",value:function(){return this.artoolkit.getPattRatio(this.id)}},{key:"setImageProcMode",value:function(A){return this.artoolkit.setImageProcMode(this.id,A)}},{key:"getImageProcMode",value:function(){return this.artoolkit.getImageProcMode(this.id)}},{key:"_initialize",value:(Q=I(o().mark((function A(){var I,g=this;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,(new EI).init();case 2:return this.artoolkit=A.sent,console.log("[ARController]","ARToolkit initialized"),A.next=6,this.artoolkit.loadCamera(this.cameraParam);case 6:return this.cameraId=A.sent,console.log("[ARController]","Camera params loaded with ID",this.cameraId),this.id=this.artoolkit.setup(this.width,this.height,this.cameraId),console.log("[ARController]","Got ID from setup",this.id),this._initNFT(),I=artoolkit.frameMalloc,this.framepointer=I.framepointer,this.framesize=I.framesize,this.videoLumaPointer=I.videoLumaPointer,this.dataHeap=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.framepointer,this.framesize),this.videoLuma=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.videoLumaPointer,this.framesize/4),this.camera_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.camera,16),this.marker_transform_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.transform,12),this.setProjectionNearPlane(.1),this.setProjectionFarPlane(1e3),setTimeout((function(){g.dispatchEvent({name:"load",target:g})}),1),A.abrupt("return",this);case 23:case"end":return A.stop()}}),A,this)}))),function(){return Q.apply(this,arguments)})},{key:"_initNFT",value:function(){this.artoolkit.setupAR2(this.id)}},{key:"_copyImageToHeap",value:function(A){var I;if(A||(A=this.image),A.data)I=A.data;else{if(this.ctx.save(),"portrait"===this.orientation){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);var g=this.canvas.height/this.canvas.width,B=this.canvas.width*g,C=this.canvas.height*g,Q=(this.canvas.width-C)/2;this.ctx.drawImage(A,Q,0,C,B)}else this.ctx.drawImage(A,0,0,this.canvas.width,this.canvas.height);this.ctx.restore(),I=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height).data}if(this.videoLuma)for(var E=0,i=0;i<this.videoSize;i++){var o=I[E+0],D=I[E+1],a=I[E+2];this.videoLuma[i]=o+o+o+a+D+D+D+D>>3,E+=4}return!!this.dataHeap&&(this.dataHeap.set(I),!0)}}],[{key:"initWithDimensions",value:(B=I(o().mark((function I(g,B,C,Q){var E;return o().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return E=new A(g,B,C,Q),I.next=3,E._initialize();case 3:return I.abrupt("return",I.sent);case 4:case"end":return I.stop()}}),I)}))),function(A,I,g,C){return B.apply(this,arguments)})},{key:"initWithImage",value:(g=I(o().mark((function I(g,B,C){var Q,E,i;return o().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return Q=g.videoWidth||g.width,E=g.videoHeight||g.height,I.next=4,A.initWithDimensions(Q,E,B,C);case 4:return(i=I.sent).image=g,I.abrupt("return",i);case 7:case"end":return I.stop()}}),I)}))),function(A,I,B){return g.apply(this,arguments)})}]),A}();const wI={ARToolkit:EI,ARController:aI}})(),B.default})()));

/***/ }),

/***/ "./three.js/src/threex/arjs-markercontrols-nft.worker.js":
/*!***************************************************************!*\
  !*** ./three.js/src/threex/arjs-markercontrols-nft.worker.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Worker_fn)
/* harmony export */ });
/* harmony import */ var _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !!../../../node_modules/worker-loader/dist/runtime/inline.js */ "./node_modules/worker-loader/dist/runtime/inline.js");
/* harmony import */ var _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0__);



function Worker_fn() {
  return _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0___default()("/******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js ***!\n  \\*****************************************************************/\n/***/ (function(module) {\n\n/*! For license information please see ARToolkit.js.LICENSE.txt */\n!function(A,I){ true?module.exports=I():0}(\"undefined\"!=typeof self?self:this,(()=>(()=>{var A={230:A=>{A.exports=\"object\"==typeof self?self.FormData:window.FormData},654:()=>{},231:()=>{},703:()=>{},61:(A,I,g)=>{var B=g(698).default;function C(){\"use strict\";A.exports=C=function(){return I},A.exports.__esModule=!0,A.exports.default=A.exports;var I={},g=Object.prototype,Q=g.hasOwnProperty,E=\"function\"==typeof Symbol?Symbol:{},i=E.iterator||\"@@iterator\",o=E.asyncIterator||\"@@asyncIterator\",D=E.toStringTag||\"@@toStringTag\";function a(A,I,g){return Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}),A[I]}try{a({},\"\")}catch(A){a=function(A,I,g){return A[I]=g}}function w(A,I,g,B){var C=I&&I.prototype instanceof t?I:t,Q=Object.create(C.prototype),E=new c(B||[]);return Q._invoke=function(A,I,g){var B=\"suspendedStart\";return function(C,Q){if(\"executing\"===B)throw new Error(\"Generator is already running\");if(\"completed\"===B){if(\"throw\"===C)throw Q;return{value:void 0,done:!0}}for(g.method=C,g.arg=Q;;){var E=g.delegate;if(E){var i=e(E,g);if(i){if(i===G)continue;return i}}if(\"next\"===g.method)g.sent=g._sent=g.arg;else if(\"throw\"===g.method){if(\"suspendedStart\"===B)throw B=\"completed\",g.arg;g.dispatchException(g.arg)}else\"return\"===g.method&&g.abrupt(\"return\",g.arg);B=\"executing\";var o=s(A,I,g);if(\"normal\"===o.type){if(B=g.done?\"completed\":\"suspendedYield\",o.arg===G)continue;return{value:o.arg,done:g.done}}\"throw\"===o.type&&(B=\"completed\",g.method=\"throw\",g.arg=o.arg)}}}(A,g,E),Q}function s(A,I,g){try{return{type:\"normal\",arg:A.call(I,g)}}catch(A){return{type:\"throw\",arg:A}}}I.wrap=w;var G={};function t(){}function h(){}function R(){}var F={};a(F,i,(function(){return this}));var y=Object.getPrototypeOf,r=y&&y(y(J([])));r&&r!==g&&Q.call(r,i)&&(F=r);var n=R.prototype=t.prototype=Object.create(F);function S(A){[\"next\",\"throw\",\"return\"].forEach((function(I){a(A,I,(function(A){return this._invoke(I,A)}))}))}function M(A,I){function g(C,E,i,o){var D=s(A[C],A,E);if(\"throw\"!==D.type){var a=D.arg,w=a.value;return w&&\"object\"==B(w)&&Q.call(w,\"__await\")?I.resolve(w.__await).then((function(A){g(\"next\",A,i,o)}),(function(A){g(\"throw\",A,i,o)})):I.resolve(w).then((function(A){a.value=A,i(a)}),(function(A){return g(\"throw\",A,i,o)}))}o(D.arg)}var C;this._invoke=function(A,B){function Q(){return new I((function(I,C){g(A,B,I,C)}))}return C=C?C.then(Q,Q):Q()}}function e(A,I){var g=A.iterator[I.method];if(void 0===g){if(I.delegate=null,\"throw\"===I.method){if(A.iterator.return&&(I.method=\"return\",I.arg=void 0,e(A,I),\"throw\"===I.method))return G;I.method=\"throw\",I.arg=new TypeError(\"The iterator does not provide a 'throw' method\")}return G}var B=s(g,A.iterator,I.arg);if(\"throw\"===B.type)return I.method=\"throw\",I.arg=B.arg,I.delegate=null,G;var C=B.arg;return C?C.done?(I[A.resultName]=C.value,I.next=A.nextLoc,\"return\"!==I.method&&(I.method=\"next\",I.arg=void 0),I.delegate=null,G):C:(I.method=\"throw\",I.arg=new TypeError(\"iterator result is not an object\"),I.delegate=null,G)}function N(A){var I={tryLoc:A[0]};1 in A&&(I.catchLoc=A[1]),2 in A&&(I.finallyLoc=A[2],I.afterLoc=A[3]),this.tryEntries.push(I)}function k(A){var I=A.completion||{};I.type=\"normal\",delete I.arg,A.completion=I}function c(A){this.tryEntries=[{tryLoc:\"root\"}],A.forEach(N,this),this.reset(!0)}function J(A){if(A){var I=A[i];if(I)return I.call(A);if(\"function\"==typeof A.next)return A;if(!isNaN(A.length)){var g=-1,B=function I(){for(;++g<A.length;)if(Q.call(A,g))return I.value=A[g],I.done=!1,I;return I.value=void 0,I.done=!0,I};return B.next=B}}return{next:U}}function U(){return{value:void 0,done:!0}}return h.prototype=R,a(n,\"constructor\",R),a(R,\"constructor\",h),h.displayName=a(R,D,\"GeneratorFunction\"),I.isGeneratorFunction=function(A){var I=\"function\"==typeof A&&A.constructor;return!!I&&(I===h||\"GeneratorFunction\"===(I.displayName||I.name))},I.mark=function(A){return Object.setPrototypeOf?Object.setPrototypeOf(A,R):(A.__proto__=R,a(A,D,\"GeneratorFunction\")),A.prototype=Object.create(n),A},I.awrap=function(A){return{__await:A}},S(M.prototype),a(M.prototype,o,(function(){return this})),I.AsyncIterator=M,I.async=function(A,g,B,C,Q){void 0===Q&&(Q=Promise);var E=new M(w(A,g,B,C),Q);return I.isGeneratorFunction(g)?E:E.next().then((function(A){return A.done?A.value:E.next()}))},S(n),a(n,D,\"Generator\"),a(n,i,(function(){return this})),a(n,\"toString\",(function(){return\"[object Generator]\"})),I.keys=function(A){var I=[];for(var g in A)I.push(g);return I.reverse(),function g(){for(;I.length;){var B=I.pop();if(B in A)return g.value=B,g.done=!1,g}return g.done=!0,g}},I.values=J,c.prototype={constructor:c,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=void 0,this.tryEntries.forEach(k),!A)for(var I in this)\"t\"===I.charAt(0)&&Q.call(this,I)&&!isNaN(+I.slice(1))&&(this[I]=void 0)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if(\"throw\"===A.type)throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var I=this;function g(g,B){return E.type=\"throw\",E.arg=A,I.next=g,B&&(I.method=\"next\",I.arg=void 0),!!B}for(var B=this.tryEntries.length-1;B>=0;--B){var C=this.tryEntries[B],E=C.completion;if(\"root\"===C.tryLoc)return g(\"end\");if(C.tryLoc<=this.prev){var i=Q.call(C,\"catchLoc\"),o=Q.call(C,\"finallyLoc\");if(i&&o){if(this.prev<C.catchLoc)return g(C.catchLoc,!0);if(this.prev<C.finallyLoc)return g(C.finallyLoc)}else if(i){if(this.prev<C.catchLoc)return g(C.catchLoc,!0)}else{if(!o)throw new Error(\"try statement without catch or finally\");if(this.prev<C.finallyLoc)return g(C.finallyLoc)}}}},abrupt:function(A,I){for(var g=this.tryEntries.length-1;g>=0;--g){var B=this.tryEntries[g];if(B.tryLoc<=this.prev&&Q.call(B,\"finallyLoc\")&&this.prev<B.finallyLoc){var C=B;break}}C&&(\"break\"===A||\"continue\"===A)&&C.tryLoc<=I&&I<=C.finallyLoc&&(C=null);var E=C?C.completion:{};return E.type=A,E.arg=I,C?(this.method=\"next\",this.next=C.finallyLoc,G):this.complete(E)},complete:function(A,I){if(\"throw\"===A.type)throw A.arg;return\"break\"===A.type||\"continue\"===A.type?this.next=A.arg:\"return\"===A.type?(this.rval=this.arg=A.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===A.type&&I&&(this.next=I),G},finish:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.finallyLoc===A)return this.complete(g.completion,g.afterLoc),k(g),G}},catch:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.tryLoc===A){var B=g.completion;if(\"throw\"===B.type){var C=B.arg;k(g)}return C}}throw new Error(\"illegal catch attempt\")},delegateYield:function(A,I,g){return this.delegate={iterator:J(A),resultName:I,nextLoc:g},\"next\"===this.method&&(this.arg=void 0),G}},I}A.exports=C,A.exports.__esModule=!0,A.exports.default=A.exports},698:A=>{function I(g){return A.exports=I=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&\"function\"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?\"symbol\":typeof A},A.exports.__esModule=!0,A.exports.default=A.exports,I(g)}A.exports=I,A.exports.__esModule=!0,A.exports.default=A.exports},687:(A,I,g)=>{var B=g(61)();A.exports=B;try{regeneratorRuntime=B}catch(A){\"object\"==typeof globalThis?globalThis.regeneratorRuntime=B:Function(\"r\",\"regeneratorRuntime = r\")(B)}}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B](Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(A){if(\"object\"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var B={};return(()=>{\"use strict\";function A(A,I,g,B,C,Q,E){try{var i=A[Q](E),o=i.value}catch(A){return void g(A)}i.done?I(o):Promise.resolve(o).then(B,C)}function I(I){return function(){var g=this,B=arguments;return new Promise((function(C,Q){var E=I.apply(g,B);function i(I){A(E,C,Q,i,o,\"next\",I)}function o(I){A(E,C,Q,i,o,\"throw\",I)}i(void 0)}))}}function C(A,I){if(!(A instanceof I))throw new TypeError(\"Cannot call a class as a function\")}function Q(A,I){for(var g=0;g<I.length;g++){var B=I[g];B.enumerable=B.enumerable||!1,B.configurable=!0,\"value\"in B&&(B.writable=!0),Object.defineProperty(A,B.key,B)}}function E(A,I,g){return I&&Q(A.prototype,I),g&&Q(A,g),Object.defineProperty(A,\"prototype\",{writable:!1}),A}g.d(B,{default:()=>wI});var i=g(687),o=g.n(i);function D(A){return D=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&\"function\"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?\"symbol\":typeof A},D(A)}var a,w=(a=(a=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\"/index.js\",function(A){var I,B;(A=void 0!==(A=A||{})?A:{}).ready=new Promise((function(A,g){I=A,B=g}));var C,Q,E,i,o,w,s=Object.assign({},A),G=[],t=\"./this.program\",h=function(A,I){throw I},R=\"object\"==(\"undefined\"==typeof window?\"undefined\":D(window)),F=\"function\"==typeof importScripts,y=\"object\"==(\"undefined\"==typeof process?\"undefined\":D(process))&&\"object\"==D(process.versions)&&\"string\"==typeof process.versions.node,r=\"\";y?(r=F?g(703).dirname(r)+\"/\":\"//\",w=function(){o||(i=g(231),o=g(703))},C=function(A,I){var g=DI(A);return g?I?g:g.toString():(w(),A=o.normalize(A),i.readFileSync(A,I?void 0:\"utf8\"))},E=function(A){var I=C(A,!0);return I.buffer||(I=new Uint8Array(I)),I},Q=function(A,I,g){var B=DI(A);B&&I(B),w(),A=o.normalize(A),i.readFile(A,(function(A,B){A?g(A):I(B.buffer)}))},process.argv.length>1&&(t=process.argv[1].replace(/\\\\/g,\"/\")),G=process.argv.slice(2),process.on(\"uncaughtException\",(function(A){if(!(A instanceof oA))throw A})),process.on(\"unhandledRejection\",(function(A){throw A})),h=function(A,I){if(T())throw process.exitCode=A,I;var g;(g=I)instanceof oA||M(\"exiting due to exception: \"+g),process.exit(A)},A.inspect=function(){return\"[Emscripten Module object]\"}):(R||F)&&(F?r=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(r=document.currentScript.src),a&&(r=a),r=0!==r.indexOf(\"blob:\")?r.substr(0,r.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",C=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.send(null),I.responseText}catch(I){var g=DI(A);if(g)return function(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(iI&&c(!1,\"Character code \"+B+\" (\"+String.fromCharCode(B)+\")  at offset \"+g+\" not in 0x00-0xFF.\"),B&=255),I.push(String.fromCharCode(B))}return I.join(\"\")}(g);throw I}},F&&(E=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.responseType=\"arraybuffer\",I.send(null),new Uint8Array(I.response)}catch(I){var g=DI(A);if(g)return g;throw I}}),Q=function(A,I,g){var B=new XMLHttpRequest;B.open(\"GET\",A,!0),B.responseType=\"arraybuffer\",B.onload=function(){if(200==B.status||0==B.status&&B.response)I(B.response);else{var C=DI(A);C?I(C.buffer):g()}},B.onerror=g,B.send(null)});var n,S=A.print||console.log.bind(console),M=A.printErr||console.warn.bind(console);Object.assign(A,s),s=null,A.arguments&&(G=A.arguments),A.thisProgram&&(t=A.thisProgram),A.quit&&(h=A.quit),A.wasmBinary&&(n=A.wasmBinary);var e,N=A.noExitRuntime||!0;\"object\"!=(\"undefined\"==typeof WebAssembly?\"undefined\":D(WebAssembly))&&_(\"no native wasm support detected\");var k=!1;function c(A,I){A||_(I)}var J,U,K,L,Y,d,q,H,l,f=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function u(A,I,g){for(var B=I+g,C=I;A[C]&&!(C>=B);)++C;if(C-I>16&&A.buffer&&f)return f.decode(A.subarray(I,C));for(var Q=\"\";I<C;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)Q+=String.fromCharCode(E);else{var D=E-65536;Q+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else Q+=String.fromCharCode((31&E)<<6|i)}else Q+=String.fromCharCode(E)}return Q}function W(A,I){return A?u(K,A,I):\"\"}function m(A,I,g,B){if(!(B>0))return 0;for(var C=g,Q=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=Q)break;I[g++]=i}else if(i<=2047){if(g+1>=Q)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=Q)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=Q)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-C}function b(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}function p(I){J=I,A.HEAP8=U=new Int8Array(I),A.HEAP16=L=new Int16Array(I),A.HEAP32=d=new Int32Array(I),A.HEAPU8=K=new Uint8Array(I),A.HEAPU16=Y=new Uint16Array(I),A.HEAPU32=q=new Uint32Array(I),A.HEAPF32=H=new Float32Array(I),A.HEAPF64=l=new Float64Array(I)}A.INITIAL_MEMORY;var Z,x=[],V=[],X=[];function T(){return N}var O=0,v=null,j=null;function P(I){O++,A.monitorRunDependencies&&A.monitorRunDependencies(O)}function z(I){if(O--,A.monitorRunDependencies&&A.monitorRunDependencies(O),0==O&&(null!==v&&(clearInterval(v),v=null),j)){var g=j;j=null,g()}}function _(I){A.onAbort&&A.onAbort(I),M(I=\"Aborted(\"+I+\")\"),k=!0,I+=\". Build with -sASSERTIONS for more info.\";var g=new WebAssembly.RuntimeError(I);throw B(g),g}var $,AA,IA,gA,BA=\"data:application/octet-stream;base64,\";function CA(A){return A.startsWith(BA)}function QA(A){return A.startsWith(\"file://\")}function EA(A){try{if(A==$&&n)return new Uint8Array(n);var I=DI(A);if(I)return I;if(E)return E(A);throw\"both async and sync fetching of the wasm failed\"}catch(A){_(A)}}CA($=\"data:application/octet-stream;base64,\")||(AA=$,$=A.locateFile?A.locateFile(AA,r):r+AA);var iA={64328:function(){var A=arguments,I=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkit.NFTMarkerInfo;g.id=A[I++],g.error=A[I++],g.found=1,g.pose[0]=A[I++],g.pose[1]=A[I++],g.pose[2]=A[I++],g.pose[3]=A[I++],g.pose[4]=A[I++],g.pose[5]=A[I++],g.pose[6]=A[I++],g.pose[7]=A[I++],g.pose[8]=A[I++],g.pose[9]=A[I++],g.pose[10]=A[I++],g.pose[11]=A[I++]},65025:function(){var A=arguments,I=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkit.NFTMarkerInfo;g.id=A[I++],g.error=-1,g.found=0,g.pose[0]=0,g.pose[1]=0,g.pose[2]=0,g.pose[3]=0,g.pose[4]=0,g.pose[5]=0,g.pose[6]=0,g.pose[7]=0,g.pose[8]=0,g.pose[9]=0,g.pose[10]=0,g.pose[11]=0},65645:function(A,I,g,B){artoolkit.multiEachMarkerInfo||(artoolkit.multiEachMarkerInfo={});var C=artoolkit.multiEachMarkerInfo;C.visible=A,C.pattId=I,C.pattType=g,C.width=B},65919:function(A,I,g,B,C,Q,E,i,o,D,a,w){var s=arguments,G=12;artoolkit.markerInfo||(artoolkit.markerInfo={pos:[0,0],line:[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],vertex:[[0,0],[0,0],[0,0],[0,0]]});var t=artoolkit.markerInfo;t.area=A,t.id=I,t.idPatt=g,t.idMatrix=B,t.dir=C,t.dirPatt=Q,t.dirMatrix=E,t.cf=i,t.cfPatt=o,t.cfMatrix=D,t.pos[0]=a,t.pos[1]=w,t.line[0][0]=s[G++],t.line[0][1]=s[G++],t.line[0][2]=s[G++],t.line[1][0]=s[G++],t.line[1][1]=s[G++],t.line[1][2]=s[G++],t.line[2][0]=s[G++],t.line[2][1]=s[G++],t.line[2][2]=s[G++],t.line[3][0]=s[G++],t.line[3][1]=s[G++],t.line[3][2]=s[G++],t.vertex[0][0]=s[G++],t.vertex[0][1]=s[G++],t.vertex[1][0]=s[G++],t.vertex[1][1]=s[G++],t.vertex[2][0]=s[G++],t.vertex[2][1]=s[G++],t.vertex[3][0]=s[G++],t.vertex[3][1]=s[G++],t.errorCorrected=s[G++]},67254:function(A,I,g,B,C,Q){artoolkit.frameMalloc||(artoolkit.frameMalloc={});var E=artoolkit.frameMalloc;E.framepointer=I,E.framesize=g,E.camera=B,E.transform=C,E.videoLumaPointer=Q}};function oA(A){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+A+\")\",this.status=A}function DA(I){for(;I.length>0;)I.shift()(A)}function aA(A){this.excPtr=A,this.ptr=A-24,this.set_type=function(A){q[this.ptr+4>>2]=A},this.get_type=function(){return q[this.ptr+4>>2]},this.set_destructor=function(A){q[this.ptr+8>>2]=A},this.get_destructor=function(){return q[this.ptr+8>>2]},this.set_refcount=function(A){d[this.ptr>>2]=A},this.set_caught=function(A){A=A?1:0,U[this.ptr+12>>0]=A},this.get_caught=function(){return 0!=U[this.ptr+12>>0]},this.set_rethrown=function(A){A=A?1:0,U[this.ptr+13>>0]=A},this.get_rethrown=function(){return 0!=U[this.ptr+13>>0]},this.init=function(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var A=d[this.ptr>>2];d[this.ptr>>2]=A+1},this.release_ref=function(){var A=d[this.ptr>>2];return d[this.ptr>>2]=A-1,1===A},this.set_adjusted_ptr=function(A){q[this.ptr+16>>2]=A},this.get_adjusted_ptr=function(){return q[this.ptr+16>>2]},this.get_exception_ptr=function(){if(rI(this.get_type()))return q[this.excPtr>>2];var A=this.get_adjusted_ptr();return 0!==A?A:this.excPtr}}var wA={isAbs:function(A){return\"/\"===A.charAt(0)},splitPath:function(A){return/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/.exec(A).slice(1)},normalizeArray:function(A,I){for(var g=0,B=A.length-1;B>=0;B--){var C=A[B];\".\"===C?A.splice(B,1):\"..\"===C?(A.splice(B,1),g++):g&&(A.splice(B,1),g--)}if(I)for(;g;g--)A.unshift(\"..\");return A},normalize:function(A){var I=wA.isAbs(A),g=\"/\"===A.substr(-1);return(A=wA.normalizeArray(A.split(\"/\").filter((function(A){return!!A})),!I).join(\"/\"))||I||(A=\".\"),A&&g&&(A+=\"/\"),(I?\"/\":\"\")+A},dirname:function(A){var I=wA.splitPath(A),g=I[0],B=I[1];return g||B?(B&&(B=B.substr(0,B.length-1)),g+B):\".\"},basename:function(A){if(\"/\"===A)return\"/\";var I=(A=(A=wA.normalize(A)).replace(/\\/$/,\"\")).lastIndexOf(\"/\");return-1===I?A:A.substr(I+1)},join:function(){var A=Array.prototype.slice.call(arguments);return wA.normalize(A.join(\"/\"))},join2:function(A,I){return wA.normalize(A+\"/\"+I)}},sA={resolve:function(){for(var A=\"\",I=!1,g=arguments.length-1;g>=-1&&!I;g--){var B=g>=0?arguments[g]:FA.cwd();if(\"string\"!=typeof B)throw new TypeError(\"Arguments to path.resolve must be strings\");if(!B)return\"\";A=B+\"/\"+A,I=wA.isAbs(B)}return(I?\"/\":\"\")+(A=wA.normalizeArray(A.split(\"/\").filter((function(A){return!!A})),!I).join(\"/\"))||\".\"},relative:function(A,I){function g(A){for(var I=0;I<A.length&&\"\"===A[I];I++);for(var g=A.length-1;g>=0&&\"\"===A[g];g--);return I>g?[]:A.slice(I,g-I+1)}A=sA.resolve(A).substr(1),I=sA.resolve(I).substr(1);for(var B=g(A.split(\"/\")),C=g(I.split(\"/\")),Q=Math.min(B.length,C.length),E=Q,i=0;i<Q;i++)if(B[i]!==C[i]){E=i;break}var o=[];for(i=E;i<B.length;i++)o.push(\"..\");return(o=o.concat(C.slice(E))).join(\"/\")}};function GA(A,I,g){var B=g>0?g:b(A)+1,C=new Array(B),Q=m(A,C,0,C.length);return I&&(C.length=Q),C}var tA={ttys:[],init:function(){},shutdown:function(){},register:function(A,I){tA.ttys[A]={input:[],output:[],ops:I},FA.registerDevice(A,tA.stream_ops)},stream_ops:{open:function(A){var I=tA.ttys[A.node.rdev];if(!I)throw new FA.ErrnoError(43);A.tty=I,A.seekable=!1},close:function(A){A.tty.ops.fsync(A.tty)},fsync:function(A){A.tty.ops.fsync(A.tty)},read:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.get_char)throw new FA.ErrnoError(60);for(var Q=0,E=0;E<B;E++){var i;try{i=A.tty.ops.get_char(A.tty)}catch(A){throw new FA.ErrnoError(29)}if(void 0===i&&0===Q)throw new FA.ErrnoError(6);if(null==i)break;Q++,I[g+E]=i}return Q&&(A.node.timestamp=Date.now()),Q},write:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.put_char)throw new FA.ErrnoError(60);try{for(var Q=0;Q<B;Q++)A.tty.ops.put_char(A.tty,I[g+Q])}catch(A){throw new FA.ErrnoError(29)}return B&&(A.node.timestamp=Date.now()),Q}},default_tty_ops:{get_char:function(A){if(!A.input.length){var I=null;if(y){var g=Buffer.alloc(256),B=0;try{B=i.readSync(process.stdin.fd,g,0,256,-1)}catch(A){if(!A.toString().includes(\"EOF\"))throw A;B=0}I=B>0?g.slice(0,B).toString(\"utf-8\"):null}else\"undefined\"!=typeof window&&\"function\"==typeof window.prompt?null!==(I=window.prompt(\"Input: \"))&&(I+=\"\\n\"):\"function\"==typeof readline&&null!==(I=readline())&&(I+=\"\\n\");if(!I)return null;A.input=GA(I,!0)}return A.input.shift()},put_char:function(A,I){null===I||10===I?(S(u(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(S(u(A.output,0)),A.output=[])}},default_tty1_ops:{put_char:function(A,I){null===I||10===I?(M(u(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(M(u(A.output,0)),A.output=[])}}};function hA(A){_()}var RA={ops_table:null,mount:function(A){return RA.createNode(null,\"/\",16895,0)},createNode:function(A,I,g,B){if(FA.isBlkdev(g)||FA.isFIFO(g))throw new FA.ErrnoError(63);RA.ops_table||(RA.ops_table={dir:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr,lookup:RA.node_ops.lookup,mknod:RA.node_ops.mknod,rename:RA.node_ops.rename,unlink:RA.node_ops.unlink,rmdir:RA.node_ops.rmdir,readdir:RA.node_ops.readdir,symlink:RA.node_ops.symlink},stream:{llseek:RA.stream_ops.llseek}},file:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr},stream:{llseek:RA.stream_ops.llseek,read:RA.stream_ops.read,write:RA.stream_ops.write,allocate:RA.stream_ops.allocate,mmap:RA.stream_ops.mmap,msync:RA.stream_ops.msync}},link:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr,readlink:RA.node_ops.readlink},stream:{}},chrdev:{node:{getattr:RA.node_ops.getattr,setattr:RA.node_ops.setattr},stream:FA.chrdev_stream_ops}});var C=FA.createNode(A,I,g,B);return FA.isDir(C.mode)?(C.node_ops=RA.ops_table.dir.node,C.stream_ops=RA.ops_table.dir.stream,C.contents={}):FA.isFile(C.mode)?(C.node_ops=RA.ops_table.file.node,C.stream_ops=RA.ops_table.file.stream,C.usedBytes=0,C.contents=null):FA.isLink(C.mode)?(C.node_ops=RA.ops_table.link.node,C.stream_ops=RA.ops_table.link.stream):FA.isChrdev(C.mode)&&(C.node_ops=RA.ops_table.chrdev.node,C.stream_ops=RA.ops_table.chrdev.stream),C.timestamp=Date.now(),A&&(A.contents[I]=C,A.timestamp=C.timestamp),C},getFileDataAsTypedArray:function(A){return A.contents?A.contents.subarray?A.contents.subarray(0,A.usedBytes):new Uint8Array(A.contents):new Uint8Array(0)},expandFileStorage:function(A,I){var g=A.contents?A.contents.length:0;if(!(g>=I)){I=Math.max(I,g*(g<1048576?2:1.125)>>>0),0!=g&&(I=Math.max(I,256));var B=A.contents;A.contents=new Uint8Array(I),A.usedBytes>0&&A.contents.set(B.subarray(0,A.usedBytes),0)}},resizeFileStorage:function(A,I){if(A.usedBytes!=I)if(0==I)A.contents=null,A.usedBytes=0;else{var g=A.contents;A.contents=new Uint8Array(I),g&&A.contents.set(g.subarray(0,Math.min(I,A.usedBytes))),A.usedBytes=I}},node_ops:{getattr:function(A){var I={};return I.dev=FA.isChrdev(A.mode)?A.id:1,I.ino=A.id,I.mode=A.mode,I.nlink=1,I.uid=0,I.gid=0,I.rdev=A.rdev,FA.isDir(A.mode)?I.size=4096:FA.isFile(A.mode)?I.size=A.usedBytes:FA.isLink(A.mode)?I.size=A.link.length:I.size=0,I.atime=new Date(A.timestamp),I.mtime=new Date(A.timestamp),I.ctime=new Date(A.timestamp),I.blksize=4096,I.blocks=Math.ceil(I.size/I.blksize),I},setattr:function(A,I){void 0!==I.mode&&(A.mode=I.mode),void 0!==I.timestamp&&(A.timestamp=I.timestamp),void 0!==I.size&&RA.resizeFileStorage(A,I.size)},lookup:function(A,I){throw FA.genericErrors[44]},mknod:function(A,I,g,B){return RA.createNode(A,I,g,B)},rename:function(A,I,g){if(FA.isDir(A.mode)){var B;try{B=FA.lookupNode(I,g)}catch(A){}if(B)for(var C in B.contents)throw new FA.ErrnoError(55)}delete A.parent.contents[A.name],A.parent.timestamp=Date.now(),A.name=g,I.contents[g]=A,I.timestamp=A.parent.timestamp,A.parent=I},unlink:function(A,I){delete A.contents[I],A.timestamp=Date.now()},rmdir:function(A,I){var g=FA.lookupNode(A,I);for(var B in g.contents)throw new FA.ErrnoError(55);delete A.contents[I],A.timestamp=Date.now()},readdir:function(A){var I=[\".\",\"..\"];for(var g in A.contents)A.contents.hasOwnProperty(g)&&I.push(g);return I},symlink:function(A,I,g){var B=RA.createNode(A,I,41471,0);return B.link=g,B},readlink:function(A){if(!FA.isLink(A.mode))throw new FA.ErrnoError(28);return A.link}},stream_ops:{read:function(A,I,g,B,C){var Q=A.node.contents;if(C>=A.node.usedBytes)return 0;var E=Math.min(A.node.usedBytes-C,B);if(E>8&&Q.subarray)I.set(Q.subarray(C,C+E),g);else for(var i=0;i<E;i++)I[g+i]=Q[C+i];return E},write:function(A,I,g,B,C,Q){if(I.buffer===U.buffer&&(Q=!1),!B)return 0;var E=A.node;if(E.timestamp=Date.now(),I.subarray&&(!E.contents||E.contents.subarray)){if(Q)return E.contents=I.subarray(g,g+B),E.usedBytes=B,B;if(0===E.usedBytes&&0===C)return E.contents=I.slice(g,g+B),E.usedBytes=B,B;if(C+B<=E.usedBytes)return E.contents.set(I.subarray(g,g+B),C),B}if(RA.expandFileStorage(E,C+B),E.contents.subarray&&I.subarray)E.contents.set(I.subarray(g,g+B),C);else for(var i=0;i<B;i++)E.contents[C+i]=I[g+i];return E.usedBytes=Math.max(E.usedBytes,C+B),B},llseek:function(A,I,g){var B=I;if(1===g?B+=A.position:2===g&&FA.isFile(A.node.mode)&&(B+=A.node.usedBytes),B<0)throw new FA.ErrnoError(28);return B},allocate:function(A,I,g){RA.expandFileStorage(A.node,I+g),A.node.usedBytes=Math.max(A.node.usedBytes,I+g)},mmap:function(A,I,g,B,C){if(!FA.isFile(A.node.mode))throw new FA.ErrnoError(43);var Q,E,i=A.node.contents;if(2&C||i.buffer!==J){if((g>0||g+I<i.length)&&(i=i.subarray?i.subarray(g,g+I):Array.prototype.slice.call(i,g,g+I)),E=!0,!(Q=hA()))throw new FA.ErrnoError(48);U.set(i,Q)}else E=!1,Q=i.byteOffset;return{ptr:Q,allocated:E}},msync:function(A,I,g,B,C){if(!FA.isFile(A.node.mode))throw new FA.ErrnoError(43);return 2&C||RA.stream_ops.write(A,I,0,B,g,!1),0}}},FA={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(A){var I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(A=sA.resolve(FA.cwd(),A)))return{path:\"\",node:null};var g={follow_mount:!0,recurse_count:0};if((I=Object.assign(g,I)).recurse_count>8)throw new FA.ErrnoError(32);for(var B=wA.normalizeArray(A.split(\"/\").filter((function(A){return!!A})),!1),C=FA.root,Q=\"/\",E=0;E<B.length;E++){var i=E===B.length-1;if(i&&I.parent)break;if(C=FA.lookupNode(C,B[E]),Q=wA.join2(Q,B[E]),FA.isMountpoint(C)&&(!i||i&&I.follow_mount)&&(C=C.mounted.root),!i||I.follow)for(var o=0;FA.isLink(C.mode);){var D=FA.readlink(Q);Q=sA.resolve(wA.dirname(Q),D);var a=FA.lookupPath(Q,{recurse_count:I.recurse_count+1});if(C=a.node,o++>40)throw new FA.ErrnoError(32)}}return{path:Q,node:C}},getPath:function(A){for(var I;;){if(FA.isRoot(A)){var g=A.mount.mountpoint;return I?\"/\"!==g[g.length-1]?g+\"/\"+I:g+I:g}I=I?A.name+\"/\"+I:A.name,A=A.parent}},hashName:function(A,I){for(var g=0,B=0;B<I.length;B++)g=(g<<5)-g+I.charCodeAt(B)|0;return(A+g>>>0)%FA.nameTable.length},hashAddNode:function(A){var I=FA.hashName(A.parent.id,A.name);A.name_next=FA.nameTable[I],FA.nameTable[I]=A},hashRemoveNode:function(A){var I=FA.hashName(A.parent.id,A.name);if(FA.nameTable[I]===A)FA.nameTable[I]=A.name_next;else for(var g=FA.nameTable[I];g;){if(g.name_next===A){g.name_next=A.name_next;break}g=g.name_next}},lookupNode:function(A,I){var g=FA.mayLookup(A);if(g)throw new FA.ErrnoError(g,A);for(var B=FA.hashName(A.id,I),C=FA.nameTable[B];C;C=C.name_next){var Q=C.name;if(C.parent.id===A.id&&Q===I)return C}return FA.lookup(A,I)},createNode:function(A,I,g,B){var C=new FA.FSNode(A,I,g,B);return FA.hashAddNode(C),C},destroyNode:function(A){FA.hashRemoveNode(A)},isRoot:function(A){return A===A.parent},isMountpoint:function(A){return!!A.mounted},isFile:function(A){return 32768==(61440&A)},isDir:function(A){return 16384==(61440&A)},isLink:function(A){return 40960==(61440&A)},isChrdev:function(A){return 8192==(61440&A)},isBlkdev:function(A){return 24576==(61440&A)},isFIFO:function(A){return 4096==(61440&A)},isSocket:function(A){return 49152==(49152&A)},flagModes:{r:0,\"r+\":2,w:577,\"w+\":578,a:1089,\"a+\":1090},modeStringToFlags:function(A){var I=FA.flagModes[A];if(void 0===I)throw new Error(\"Unknown file open mode: \"+A);return I},flagsToPermissionString:function(A){var I=[\"r\",\"w\",\"rw\"][3&A];return 512&A&&(I+=\"w\"),I},nodePermissions:function(A,I){return FA.ignorePermissions||(!I.includes(\"r\")||292&A.mode)&&(!I.includes(\"w\")||146&A.mode)&&(!I.includes(\"x\")||73&A.mode)?0:2},mayLookup:function(A){return FA.nodePermissions(A,\"x\")||(A.node_ops.lookup?0:2)},mayCreate:function(A,I){try{return FA.lookupNode(A,I),20}catch(A){}return FA.nodePermissions(A,\"wx\")},mayDelete:function(A,I,g){var B;try{B=FA.lookupNode(A,I)}catch(A){return A.errno}var C=FA.nodePermissions(A,\"wx\");if(C)return C;if(g){if(!FA.isDir(B.mode))return 54;if(FA.isRoot(B)||FA.getPath(B)===FA.cwd())return 10}else if(FA.isDir(B.mode))return 31;return 0},mayOpen:function(A,I){return A?FA.isLink(A.mode)?32:FA.isDir(A.mode)&&(\"r\"!==FA.flagsToPermissionString(I)||512&I)?31:FA.nodePermissions(A,FA.flagsToPermissionString(I)):44},MAX_OPEN_FDS:4096,nextfd:function(){for(var A=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:FA.MAX_OPEN_FDS,g=A;g<=I;g++)if(!FA.streams[g])return g;throw new FA.ErrnoError(33)},getStream:function(A){return FA.streams[A]},createStream:function(A,I,g){FA.FSStream||(FA.FSStream=function(){this.shared={}},FA.FSStream.prototype={},Object.defineProperties(FA.FSStream.prototype,{object:{get:function(){return this.node},set:function(A){this.node=A}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(A){this.shared.flags=A}},position:{get:function(){return this.shared.position},set:function(A){this.shared.position=A}}})),A=Object.assign(new FA.FSStream,A);var B=FA.nextfd(I,g);return A.fd=B,FA.streams[B]=A,A},closeStream:function(A){FA.streams[A]=null},chrdev_stream_ops:{open:function(A){var I=FA.getDevice(A.node.rdev);A.stream_ops=I.stream_ops,A.stream_ops.open&&A.stream_ops.open(A)},llseek:function(){throw new FA.ErrnoError(70)}},major:function(A){return A>>8},minor:function(A){return 255&A},makedev:function(A,I){return A<<8|I},registerDevice:function(A,I){FA.devices[A]={stream_ops:I}},getDevice:function(A){return FA.devices[A]},getMounts:function(A){for(var I=[],g=[A];g.length;){var B=g.pop();I.push(B),g.push.apply(g,B.mounts)}return I},syncfs:function(A,I){\"function\"==typeof A&&(I=A,A=!1),FA.syncFSRequests++,FA.syncFSRequests>1&&M(\"warning: \"+FA.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\");var g=FA.getMounts(FA.root.mount),B=0;function C(A){return FA.syncFSRequests--,I(A)}function Q(A){if(A)return Q.errored?void 0:(Q.errored=!0,C(A));++B>=g.length&&C(null)}g.forEach((function(I){if(!I.type.syncfs)return Q(null);I.type.syncfs(I,A,Q)}))},mount:function(A,I,g){var B,C=\"/\"===g,Q=!g;if(C&&FA.root)throw new FA.ErrnoError(10);if(!C&&!Q){var E=FA.lookupPath(g,{follow_mount:!1});if(g=E.path,B=E.node,FA.isMountpoint(B))throw new FA.ErrnoError(10);if(!FA.isDir(B.mode))throw new FA.ErrnoError(54)}var i={type:A,opts:I,mountpoint:g,mounts:[]},o=A.mount(i);return o.mount=i,i.root=o,C?FA.root=o:B&&(B.mounted=i,B.mount&&B.mount.mounts.push(i)),o},unmount:function(A){var I=FA.lookupPath(A,{follow_mount:!1});if(!FA.isMountpoint(I.node))throw new FA.ErrnoError(28);var g=I.node,B=g.mounted,C=FA.getMounts(B);Object.keys(FA.nameTable).forEach((function(A){for(var I=FA.nameTable[A];I;){var g=I.name_next;C.includes(I.mount)&&FA.destroyNode(I),I=g}})),g.mounted=null;var Q=g.mount.mounts.indexOf(B);g.mount.mounts.splice(Q,1)},lookup:function(A,I){return A.node_ops.lookup(A,I)},mknod:function(A,I,g){var B=FA.lookupPath(A,{parent:!0}).node,C=wA.basename(A);if(!C||\".\"===C||\"..\"===C)throw new FA.ErrnoError(28);var Q=FA.mayCreate(B,C);if(Q)throw new FA.ErrnoError(Q);if(!B.node_ops.mknod)throw new FA.ErrnoError(63);return B.node_ops.mknod(B,C,I,g)},create:function(A,I){return I=void 0!==I?I:438,I&=4095,I|=32768,FA.mknod(A,I,0)},mkdir:function(A,I){return I=void 0!==I?I:511,I&=1023,I|=16384,FA.mknod(A,I,0)},mkdirTree:function(A,I){for(var g=A.split(\"/\"),B=\"\",C=0;C<g.length;++C)if(g[C]){B+=\"/\"+g[C];try{FA.mkdir(B,I)}catch(A){if(20!=A.errno)throw A}}},mkdev:function(A,I,g){return void 0===g&&(g=I,I=438),I|=8192,FA.mknod(A,I,g)},symlink:function(A,I){if(!sA.resolve(A))throw new FA.ErrnoError(44);var g=FA.lookupPath(I,{parent:!0}).node;if(!g)throw new FA.ErrnoError(44);var B=wA.basename(I),C=FA.mayCreate(g,B);if(C)throw new FA.ErrnoError(C);if(!g.node_ops.symlink)throw new FA.ErrnoError(63);return g.node_ops.symlink(g,B,A)},rename:function(A,I){var g,B,C=wA.dirname(A),Q=wA.dirname(I),E=wA.basename(A),i=wA.basename(I);if(g=FA.lookupPath(A,{parent:!0}).node,B=FA.lookupPath(I,{parent:!0}).node,!g||!B)throw new FA.ErrnoError(44);if(g.mount!==B.mount)throw new FA.ErrnoError(75);var o,D=FA.lookupNode(g,E),a=sA.relative(A,Q);if(\".\"!==a.charAt(0))throw new FA.ErrnoError(28);if(\".\"!==(a=sA.relative(I,C)).charAt(0))throw new FA.ErrnoError(55);try{o=FA.lookupNode(B,i)}catch(A){}if(D!==o){var w=FA.isDir(D.mode),s=FA.mayDelete(g,E,w);if(s)throw new FA.ErrnoError(s);if(s=o?FA.mayDelete(B,i,w):FA.mayCreate(B,i))throw new FA.ErrnoError(s);if(!g.node_ops.rename)throw new FA.ErrnoError(63);if(FA.isMountpoint(D)||o&&FA.isMountpoint(o))throw new FA.ErrnoError(10);if(B!==g&&(s=FA.nodePermissions(g,\"w\")))throw new FA.ErrnoError(s);FA.hashRemoveNode(D);try{g.node_ops.rename(D,B,i)}catch(A){throw A}finally{FA.hashAddNode(D)}}},rmdir:function(A){var I=FA.lookupPath(A,{parent:!0}).node,g=wA.basename(A),B=FA.lookupNode(I,g),C=FA.mayDelete(I,g,!0);if(C)throw new FA.ErrnoError(C);if(!I.node_ops.rmdir)throw new FA.ErrnoError(63);if(FA.isMountpoint(B))throw new FA.ErrnoError(10);I.node_ops.rmdir(I,g),FA.destroyNode(B)},readdir:function(A){var I=FA.lookupPath(A,{follow:!0}).node;if(!I.node_ops.readdir)throw new FA.ErrnoError(54);return I.node_ops.readdir(I)},unlink:function(A){var I=FA.lookupPath(A,{parent:!0}).node;if(!I)throw new FA.ErrnoError(44);var g=wA.basename(A),B=FA.lookupNode(I,g),C=FA.mayDelete(I,g,!1);if(C)throw new FA.ErrnoError(C);if(!I.node_ops.unlink)throw new FA.ErrnoError(63);if(FA.isMountpoint(B))throw new FA.ErrnoError(10);I.node_ops.unlink(I,g),FA.destroyNode(B)},readlink:function(A){var I=FA.lookupPath(A).node;if(!I)throw new FA.ErrnoError(44);if(!I.node_ops.readlink)throw new FA.ErrnoError(28);return sA.resolve(FA.getPath(I.parent),I.node_ops.readlink(I))},stat:function(A,I){var g=FA.lookupPath(A,{follow:!I}).node;if(!g)throw new FA.ErrnoError(44);if(!g.node_ops.getattr)throw new FA.ErrnoError(63);return g.node_ops.getattr(g)},lstat:function(A){return FA.stat(A,!0)},chmod:function(A,I,g){var B;if(!(B=\"string\"==typeof A?FA.lookupPath(A,{follow:!g}).node:A).node_ops.setattr)throw new FA.ErrnoError(63);B.node_ops.setattr(B,{mode:4095&I|-4096&B.mode,timestamp:Date.now()})},lchmod:function(A,I){FA.chmod(A,I,!0)},fchmod:function(A,I){var g=FA.getStream(A);if(!g)throw new FA.ErrnoError(8);FA.chmod(g.node,I)},chown:function(A,I,g,B){var C;if(!(C=\"string\"==typeof A?FA.lookupPath(A,{follow:!B}).node:A).node_ops.setattr)throw new FA.ErrnoError(63);C.node_ops.setattr(C,{timestamp:Date.now()})},lchown:function(A,I,g){FA.chown(A,I,g,!0)},fchown:function(A,I,g){var B=FA.getStream(A);if(!B)throw new FA.ErrnoError(8);FA.chown(B.node,I,g)},truncate:function(A,I){if(I<0)throw new FA.ErrnoError(28);var g;if(!(g=\"string\"==typeof A?FA.lookupPath(A,{follow:!0}).node:A).node_ops.setattr)throw new FA.ErrnoError(63);if(FA.isDir(g.mode))throw new FA.ErrnoError(31);if(!FA.isFile(g.mode))throw new FA.ErrnoError(28);var B=FA.nodePermissions(g,\"w\");if(B)throw new FA.ErrnoError(B);g.node_ops.setattr(g,{size:I,timestamp:Date.now()})},ftruncate:function(A,I){var g=FA.getStream(A);if(!g)throw new FA.ErrnoError(8);if(0==(2097155&g.flags))throw new FA.ErrnoError(28);FA.truncate(g.node,I)},utime:function(A,I,g){var B=FA.lookupPath(A,{follow:!0}).node;B.node_ops.setattr(B,{timestamp:Math.max(I,g)})},open:function(I,g,B){if(\"\"===I)throw new FA.ErrnoError(44);var C;if(B=void 0===B?438:B,B=64&(g=\"string\"==typeof g?FA.modeStringToFlags(g):g)?4095&B|32768:0,\"object\"==D(I))C=I;else{I=wA.normalize(I);try{C=FA.lookupPath(I,{follow:!(131072&g)}).node}catch(A){}}var Q=!1;if(64&g)if(C){if(128&g)throw new FA.ErrnoError(20)}else C=FA.mknod(I,B,0),Q=!0;if(!C)throw new FA.ErrnoError(44);if(FA.isChrdev(C.mode)&&(g&=-513),65536&g&&!FA.isDir(C.mode))throw new FA.ErrnoError(54);if(!Q){var E=FA.mayOpen(C,g);if(E)throw new FA.ErrnoError(E)}512&g&&!Q&&FA.truncate(C,0),g&=-131713;var i=FA.createStream({node:C,path:FA.getPath(C),flags:g,seekable:!0,position:0,stream_ops:C.stream_ops,ungotten:[],error:!1});return i.stream_ops.open&&i.stream_ops.open(i),!A.logReadFiles||1&g||(FA.readFiles||(FA.readFiles={}),I in FA.readFiles||(FA.readFiles[I]=1)),i},close:function(A){if(FA.isClosed(A))throw new FA.ErrnoError(8);A.getdents&&(A.getdents=null);try{A.stream_ops.close&&A.stream_ops.close(A)}catch(A){throw A}finally{FA.closeStream(A.fd)}A.fd=null},isClosed:function(A){return null===A.fd},llseek:function(A,I,g){if(FA.isClosed(A))throw new FA.ErrnoError(8);if(!A.seekable||!A.stream_ops.llseek)throw new FA.ErrnoError(70);if(0!=g&&1!=g&&2!=g)throw new FA.ErrnoError(28);return A.position=A.stream_ops.llseek(A,I,g),A.ungotten=[],A.position},read:function(A,I,g,B,C){if(B<0||C<0)throw new FA.ErrnoError(28);if(FA.isClosed(A))throw new FA.ErrnoError(8);if(1==(2097155&A.flags))throw new FA.ErrnoError(8);if(FA.isDir(A.node.mode))throw new FA.ErrnoError(31);if(!A.stream_ops.read)throw new FA.ErrnoError(28);var Q=void 0!==C;if(Q){if(!A.seekable)throw new FA.ErrnoError(70)}else C=A.position;var E=A.stream_ops.read(A,I,g,B,C);return Q||(A.position+=E),E},write:function(A,I,g,B,C,Q){if(B<0||C<0)throw new FA.ErrnoError(28);if(FA.isClosed(A))throw new FA.ErrnoError(8);if(0==(2097155&A.flags))throw new FA.ErrnoError(8);if(FA.isDir(A.node.mode))throw new FA.ErrnoError(31);if(!A.stream_ops.write)throw new FA.ErrnoError(28);A.seekable&&1024&A.flags&&FA.llseek(A,0,2);var E=void 0!==C;if(E){if(!A.seekable)throw new FA.ErrnoError(70)}else C=A.position;var i=A.stream_ops.write(A,I,g,B,C,Q);return E||(A.position+=i),i},allocate:function(A,I,g){if(FA.isClosed(A))throw new FA.ErrnoError(8);if(I<0||g<=0)throw new FA.ErrnoError(28);if(0==(2097155&A.flags))throw new FA.ErrnoError(8);if(!FA.isFile(A.node.mode)&&!FA.isDir(A.node.mode))throw new FA.ErrnoError(43);if(!A.stream_ops.allocate)throw new FA.ErrnoError(138);A.stream_ops.allocate(A,I,g)},mmap:function(A,I,g,B,C){if(0!=(2&B)&&0==(2&C)&&2!=(2097155&A.flags))throw new FA.ErrnoError(2);if(1==(2097155&A.flags))throw new FA.ErrnoError(2);if(!A.stream_ops.mmap)throw new FA.ErrnoError(43);return A.stream_ops.mmap(A,I,g,B,C)},msync:function(A,I,g,B,C){return A&&A.stream_ops.msync?A.stream_ops.msync(A,I,g,B,C):0},munmap:function(A){return 0},ioctl:function(A,I,g){if(!A.stream_ops.ioctl)throw new FA.ErrnoError(59);return A.stream_ops.ioctl(A,I,g)},readFile:function(A){var I,g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(g.flags=g.flags||0,g.encoding=g.encoding||\"binary\",\"utf8\"!==g.encoding&&\"binary\"!==g.encoding)throw new Error('Invalid encoding type \"'+g.encoding+'\"');var B=FA.open(A,g.flags),C=FA.stat(A),Q=C.size,E=new Uint8Array(Q);return FA.read(B,E,0,Q,0),\"utf8\"===g.encoding?I=u(E,0):\"binary\"===g.encoding&&(I=E),FA.close(B),I},writeFile:function(A,I){var g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};g.flags=g.flags||577;var B=FA.open(A,g.flags,g.mode);if(\"string\"==typeof I){var C=new Uint8Array(b(I)+1),Q=m(I,C,0,C.length);FA.write(B,C,0,Q,void 0,g.canOwn)}else{if(!ArrayBuffer.isView(I))throw new Error(\"Unsupported data type\");FA.write(B,I,0,I.byteLength,void 0,g.canOwn)}FA.close(B)},cwd:function(){return FA.currentPath},chdir:function(A){var I=FA.lookupPath(A,{follow:!0});if(null===I.node)throw new FA.ErrnoError(44);if(!FA.isDir(I.node.mode))throw new FA.ErrnoError(54);var g=FA.nodePermissions(I.node,\"x\");if(g)throw new FA.ErrnoError(g);FA.currentPath=I.path},createDefaultDirectories:function(){FA.mkdir(\"/tmp\"),FA.mkdir(\"/home\"),FA.mkdir(\"/home/web_user\")},createDefaultDevices:function(){FA.mkdir(\"/dev\"),FA.registerDevice(FA.makedev(1,3),{read:function(){return 0},write:function(A,I,g,B,C){return B}}),FA.mkdev(\"/dev/null\",FA.makedev(1,3)),tA.register(FA.makedev(5,0),tA.default_tty_ops),tA.register(FA.makedev(6,0),tA.default_tty1_ops),FA.mkdev(\"/dev/tty\",FA.makedev(5,0)),FA.mkdev(\"/dev/tty1\",FA.makedev(6,0));var A=function(){if(\"object\"==(\"undefined\"==typeof crypto?\"undefined\":D(crypto))&&\"function\"==typeof crypto.getRandomValues){var A=new Uint8Array(1);return function(){return crypto.getRandomValues(A),A[0]}}if(y)try{var I=g(654);return function(){return I.randomBytes(1)[0]}}catch(A){}return function(){return _(\"randomDevice\")}}();FA.createDevice(\"/dev\",\"random\",A),FA.createDevice(\"/dev\",\"urandom\",A),FA.mkdir(\"/dev/shm\"),FA.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:function(){FA.mkdir(\"/proc\");var A=FA.mkdir(\"/proc/self\");FA.mkdir(\"/proc/self/fd\"),FA.mount({mount:function(){var I=FA.createNode(A,\"fd\",16895,73);return I.node_ops={lookup:function(A,I){var g=+I,B=FA.getStream(g);if(!B)throw new FA.ErrnoError(8);var C={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:function(){return B.path}}};return C.parent=C,C}},I}},{},\"/proc/self/fd\")},createStandardStreams:function(){A.stdin?FA.createDevice(\"/dev\",\"stdin\",A.stdin):FA.symlink(\"/dev/tty\",\"/dev/stdin\"),A.stdout?FA.createDevice(\"/dev\",\"stdout\",null,A.stdout):FA.symlink(\"/dev/tty\",\"/dev/stdout\"),A.stderr?FA.createDevice(\"/dev\",\"stderr\",null,A.stderr):FA.symlink(\"/dev/tty1\",\"/dev/stderr\"),FA.open(\"/dev/stdin\",0),FA.open(\"/dev/stdout\",1),FA.open(\"/dev/stderr\",1)},ensureErrnoError:function(){FA.ErrnoError||(FA.ErrnoError=function(A,I){this.node=I,this.setErrno=function(A){this.errno=A},this.setErrno(A),this.message=\"FS error\"},FA.ErrnoError.prototype=new Error,FA.ErrnoError.prototype.constructor=FA.ErrnoError,[44].forEach((function(A){FA.genericErrors[A]=new FA.ErrnoError(A),FA.genericErrors[A].stack=\"<generic error, no stack>\"})))},staticInit:function(){FA.ensureErrnoError(),FA.nameTable=new Array(4096),FA.mount(RA,{},\"/\"),FA.createDefaultDirectories(),FA.createDefaultDevices(),FA.createSpecialDirectories(),FA.filesystems={MEMFS:RA}},init:function(I,g,B){FA.init.initialized=!0,FA.ensureErrnoError(),A.stdin=I||A.stdin,A.stdout=g||A.stdout,A.stderr=B||A.stderr,FA.createStandardStreams()},quit:function(){FA.init.initialized=!1;for(var A=0;A<FA.streams.length;A++){var I=FA.streams[A];I&&FA.close(I)}},getMode:function(A,I){var g=0;return A&&(g|=365),I&&(g|=146),g},findObject:function(A,I){var g=FA.analyzePath(A,I);return g.exists?g.object:null},analyzePath:function(A,I){try{A=(B=FA.lookupPath(A,{follow:!I})).path}catch(A){}var g={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var B=FA.lookupPath(A,{parent:!0});g.parentExists=!0,g.parentPath=B.path,g.parentObject=B.node,g.name=wA.basename(A),B=FA.lookupPath(A,{follow:!I}),g.exists=!0,g.path=B.path,g.object=B.node,g.name=B.node.name,g.isRoot=\"/\"===B.path}catch(A){g.error=A.errno}return g},createPath:function(A,I,g,B){A=\"string\"==typeof A?A:FA.getPath(A);for(var C=I.split(\"/\").reverse();C.length;){var Q=C.pop();if(Q){var E=wA.join2(A,Q);try{FA.mkdir(E)}catch(A){}A=E}}return E},createFile:function(A,I,g,B,C){var Q=wA.join2(\"string\"==typeof A?A:FA.getPath(A),I),E=FA.getMode(B,C);return FA.create(Q,E)},createDataFile:function(A,I,g,B,C,Q){var E=I;A&&(A=\"string\"==typeof A?A:FA.getPath(A),E=I?wA.join2(A,I):A);var i=FA.getMode(B,C),o=FA.create(E,i);if(g){if(\"string\"==typeof g){for(var D=new Array(g.length),a=0,w=g.length;a<w;++a)D[a]=g.charCodeAt(a);g=D}FA.chmod(o,146|i);var s=FA.open(o,577);FA.write(s,g,0,g.length,0,Q),FA.close(s),FA.chmod(o,i)}return o},createDevice:function(A,I,g,B){var C=wA.join2(\"string\"==typeof A?A:FA.getPath(A),I),Q=FA.getMode(!!g,!!B);FA.createDevice.major||(FA.createDevice.major=64);var E=FA.makedev(FA.createDevice.major++,0);return FA.registerDevice(E,{open:function(A){A.seekable=!1},close:function(A){B&&B.buffer&&B.buffer.length&&B(10)},read:function(A,I,B,C,Q){for(var E=0,i=0;i<C;i++){var o;try{o=g()}catch(A){throw new FA.ErrnoError(29)}if(void 0===o&&0===E)throw new FA.ErrnoError(6);if(null==o)break;E++,I[B+i]=o}return E&&(A.node.timestamp=Date.now()),E},write:function(A,I,g,C,Q){for(var E=0;E<C;E++)try{B(I[g+E])}catch(A){throw new FA.ErrnoError(29)}return C&&(A.node.timestamp=Date.now()),E}}),FA.mkdev(C,Q,E)},forceLoadFile:function(A){if(A.isDevice||A.isFolder||A.link||A.contents)return!0;if(\"undefined\"!=typeof XMLHttpRequest)throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");if(!C)throw new Error(\"Cannot load without read() or XMLHttpRequest.\");try{A.contents=GA(C(A.url),!0),A.usedBytes=A.contents.length}catch(A){throw new FA.ErrnoError(29)}},createLazyFile:function(A,I,g,B,C){function Q(){this.lengthKnown=!1,this.chunks=[]}if(Q.prototype.get=function(A){if(!(A>this.length-1||A<0)){var I=A%this.chunkSize,g=A/this.chunkSize|0;return this.getter(g)[I]}},Q.prototype.setDataGetter=function(A){this.getter=A},Q.prototype.cacheLength=function(){var A=new XMLHttpRequest;if(A.open(\"HEAD\",g,!1),A.send(null),!(A.status>=200&&A.status<300||304===A.status))throw new Error(\"Couldn't load \"+g+\". Status: \"+A.status);var I,B=Number(A.getResponseHeader(\"Content-length\")),C=(I=A.getResponseHeader(\"Accept-Ranges\"))&&\"bytes\"===I,Q=(I=A.getResponseHeader(\"Content-Encoding\"))&&\"gzip\"===I,E=1048576;C||(E=B);var i=this;i.setDataGetter((function(A){var I=A*E,C=(A+1)*E-1;if(C=Math.min(C,B-1),void 0===i.chunks[A]&&(i.chunks[A]=function(A,I){if(A>I)throw new Error(\"invalid range (\"+A+\", \"+I+\") or no bytes requested!\");if(I>B-1)throw new Error(\"only \"+B+\" bytes available! programmer error!\");var C=new XMLHttpRequest;if(C.open(\"GET\",g,!1),B!==E&&C.setRequestHeader(\"Range\",\"bytes=\"+A+\"-\"+I),C.responseType=\"arraybuffer\",C.overrideMimeType&&C.overrideMimeType(\"text/plain; charset=x-user-defined\"),C.send(null),!(C.status>=200&&C.status<300||304===C.status))throw new Error(\"Couldn't load \"+g+\". Status: \"+C.status);return void 0!==C.response?new Uint8Array(C.response||[]):GA(C.responseText||\"\",!0)}(I,C)),void 0===i.chunks[A])throw new Error(\"doXHR failed!\");return i.chunks[A]})),!Q&&B||(E=B=1,B=this.getter(0).length,E=B,S(\"LazyFiles on gzip forces download of the whole file when length is accessed\")),this._length=B,this._chunkSize=E,this.lengthKnown=!0},\"undefined\"!=typeof XMLHttpRequest){if(!F)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var E=new Q;Object.defineProperties(E,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var i={isDevice:!1,contents:E}}else i={isDevice:!1,url:g};var o=FA.createFile(A,I,i,B,C);i.contents?o.contents=i.contents:i.url&&(o.contents=null,o.url=i.url),Object.defineProperties(o,{usedBytes:{get:function(){return this.contents.length}}});var D={};function a(A,I,g,B,C){var Q=A.node.contents;if(C>=Q.length)return 0;var E=Math.min(Q.length-C,B);if(Q.slice)for(var i=0;i<E;i++)I[g+i]=Q[C+i];else for(i=0;i<E;i++)I[g+i]=Q.get(C+i);return E}return Object.keys(o.stream_ops).forEach((function(A){var I=o.stream_ops[A];D[A]=function(){return FA.forceLoadFile(o),I.apply(null,arguments)}})),D.read=function(A,I,g,B,C){return FA.forceLoadFile(o),a(A,I,g,B,C)},D.mmap=function(A,I,g,B,C){FA.forceLoadFile(o);var Q=hA();if(!Q)throw new FA.ErrnoError(48);return a(A,U,Q,I,g),{ptr:Q,allocated:!0}},o.stream_ops=D,o},createPreloadedFile:function(A,I,g,B,C,E,i,o,D,a){var w=I?sA.resolve(wA.join2(A,I)):A;function s(g){function Q(g){a&&a(),o||FA.createDataFile(A,I,g,B,C,D),E&&E(),z()}Browser.handledByPreloadPlugin(g,w,Q,(function(){i&&i(),z()}))||Q(g)}P(),\"string\"==typeof g?function(A,I,g,B){var C=\"al \"+A;Q(A,(function(I){c(I,'Loading data file \"'+A+'\" failed (no arrayBuffer).'),s(new Uint8Array(I)),C&&z()}),(function(I){if(!g)throw'Loading data file \"'+A+'\" failed.';g()})),C&&P()}(g,0,i):s(g)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=FA.indexedDB();try{var C=B.open(FA.DB_NAME(),FA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=function(){S(\"creating db\"),C.result.createObjectStore(FA.DB_STORE_NAME)},C.onsuccess=function(){var B=C.result.transaction([FA.DB_STORE_NAME],\"readwrite\"),Q=B.objectStore(FA.DB_STORE_NAME),E=0,i=0,o=A.length;function D(){0==i?I():g()}A.forEach((function(A){var I=Q.put(FA.analyzePath(A).object.contents,A);I.onsuccess=function(){++E+i==o&&D()},I.onerror=function(){i++,E+i==o&&D()}})),B.onerror=g},C.onerror=g},loadFilesFromDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=FA.indexedDB();try{var C=B.open(FA.DB_NAME(),FA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=g,C.onsuccess=function(){var B=C.result;try{var Q=B.transaction([FA.DB_STORE_NAME],\"readonly\")}catch(A){return void g(A)}var E=Q.objectStore(FA.DB_STORE_NAME),i=0,o=0,D=A.length;function a(){0==o?I():g()}A.forEach((function(A){var I=E.get(A);I.onsuccess=function(){FA.analyzePath(A).exists&&FA.unlink(A),FA.createDataFile(wA.dirname(A),wA.basename(A),I.result,!0,!0,!0),++i+o==D&&a()},I.onerror=function(){o++,i+o==D&&a()}})),Q.onerror=g},C.onerror=g}},yA={DEFAULT_POLLMASK:5,calculateAt:function(A,I,g){if(wA.isAbs(I))return I;var B;if(B=-100===A?FA.cwd():yA.getStreamFromFD(A).path,0==I.length){if(!g)throw new FA.ErrnoError(44);return B}return wA.join2(B,I)},doStat:function(A,I,g){try{var B=A(I)}catch(A){if(A&&A.node&&wA.normalize(I)!==wA.normalize(FA.getPath(A.node)))return-54;throw A}return d[g>>2]=B.dev,d[g+8>>2]=B.ino,d[g+12>>2]=B.mode,q[g+16>>2]=B.nlink,d[g+20>>2]=B.uid,d[g+24>>2]=B.gid,d[g+28>>2]=B.rdev,gA=[B.size>>>0,(IA=B.size,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+40>>2]=gA[0],d[g+44>>2]=gA[1],d[g+48>>2]=4096,d[g+52>>2]=B.blocks,gA=[Math.floor(B.atime.getTime()/1e3)>>>0,(IA=Math.floor(B.atime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+56>>2]=gA[0],d[g+60>>2]=gA[1],q[g+64>>2]=0,gA=[Math.floor(B.mtime.getTime()/1e3)>>>0,(IA=Math.floor(B.mtime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+72>>2]=gA[0],d[g+76>>2]=gA[1],q[g+80>>2]=0,gA=[Math.floor(B.ctime.getTime()/1e3)>>>0,(IA=Math.floor(B.ctime.getTime()/1e3),+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+88>>2]=gA[0],d[g+92>>2]=gA[1],q[g+96>>2]=0,gA=[B.ino>>>0,(IA=B.ino,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[g+104>>2]=gA[0],d[g+108>>2]=gA[1],0},doMsync:function(A,I,g,B,C){var Q=K.slice(A,A+g);FA.msync(I,Q,C,g,B)},varargs:void 0,get:function(){return yA.varargs+=4,d[yA.varargs-4>>2]},getStr:function(A){return W(A)},getStreamFromFD:function(A){var I=FA.getStream(A);if(!I)throw new FA.ErrnoError(8);return I}};function rA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+A)}}var nA=void 0;function SA(A){for(var I=\"\",g=A;K[g];)I+=nA[K[g++]];return I}var MA={},eA={},NA={};function kA(A){if(void 0===A)return\"_unknown\";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,\"$\")).charCodeAt(0);return I>=48&&I<=57?\"_\"+A:A}function cA(A,I){return A=kA(A),new Function(\"body\",\"return function \"+A+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(I)}function JA(A,I){var g=cA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+\"\\n\"+g.replace(/^Error(:[^\\n]*)?\\n/,\"\"))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message},g}var UA=void 0;function KA(A){throw new UA(A)}var LA=void 0;function YA(A){throw new LA(A)}function dA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&YA(\"Mismatched type converter count\");for(var C=0;C<A.length;++C)qA(A[C],B[C])}A.forEach((function(A){NA[A]=I}));var C=new Array(I.length),Q=[],E=0;I.forEach((function(A,I){eA.hasOwnProperty(A)?C[I]=eA[A]:(Q.push(A),MA.hasOwnProperty(A)||(MA[A]=[]),MA[A].push((function(){C[I]=eA[A],++E===Q.length&&B(C)})))})),0===Q.length&&B(C)}function qA(A,I){var g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!(\"argPackAdvance\"in I))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var B=I.name;if(A||KA('type \"'+B+'\" must have a positive integer typeid pointer'),eA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;KA(\"Cannot register type '\"+B+\"' twice\")}if(eA[A]=I,delete NA[A],MA.hasOwnProperty(A)){var C=MA[A];delete MA[A],C.forEach((function(A){return A()}))}}var HA=[],lA=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function fA(A){return this.fromWireType(d[A>>2])}function uA(A,I){switch(I){case 2:return function(A){return this.fromWireType(H[A>>2])};case 3:return function(A){return this.fromWireType(l[A>>3])};default:throw new TypeError(\"Unknown float type: \"+A)}}function WA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function mA(A){return Z.get(A)}function bA(I,g,B){return I.includes(\"j\")?function(I,g,B){var C=A[\"dynCall_\"+I];return B&&B.length?C.apply(null,[g].concat(B)):C.call(null,g)}(I,g,B):mA(g).apply(null,B)}var pA=void 0;function ZA(A){var I=hI(A),g=SA(I);return GI(I),g}function xA(A,I,g){switch(I){case 0:return g?function(A){return U[A]}:function(A){return K[A]};case 1:return g?function(A){return L[A>>1]}:function(A){return Y[A>>1]};case 2:return g?function(A){return d[A>>2]}:function(A){return q[A>>2]};default:throw new TypeError(\"Unknown integer type: \"+A)}}var VA=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;function XA(A,I){for(var g=A,B=g>>1,C=B+I/2;!(B>=C)&&Y[B];)++B;if((g=B<<1)-A>32&&VA)return VA.decode(K.subarray(A,g));for(var Q=\"\",E=0;!(E>=I/2);++E){var i=L[A+2*E>>1];if(0==i)break;Q+=String.fromCharCode(i)}return Q}function TA(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,C=(g-=2)<2*A.length?g/2:A.length,Q=0;Q<C;++Q){var E=A.charCodeAt(Q);L[I>>1]=E,I+=2}return L[I>>1]=0,I-B}function OA(A){return 2*A.length}function vA(A,I){for(var g=0,B=\"\";!(g>=I/4);){var C=d[A+4*g>>2];if(0==C)break;if(++g,C>=65536){var Q=C-65536;B+=String.fromCharCode(55296|Q>>10,56320|1023&Q)}else B+=String.fromCharCode(C)}return B}function jA(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,C=B+g-4,Q=0;Q<A.length;++Q){var E=A.charCodeAt(Q);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++Q)),d[I>>2]=E,(I+=4)+4>C)break}return d[I>>2]=0,I-B}function PA(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}function zA(A){var I=b(A)+1,g=sI(I);return g&&m(A,U,g,I),g}var _A=[];function $A(A){try{return e.grow(A-J.byteLength+65535>>>16),p(e.buffer),1}catch(A){}}var AI={};function II(){if(!II.strings){var A={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==(\"undefined\"==typeof navigator?\"undefined\":D(navigator))&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:t||\"./this.program\"};for(var I in AI)void 0===AI[I]?delete A[I]:A[I]=AI[I];var g=[];for(var I in A)g.push(I+\"=\"+A[I]);II.strings=g}return II.strings}function gI(A){return A%4==0&&(A%100!=0||A%400==0)}var BI=[31,29,31,30,31,30,31,31,30,31,30,31],CI=[31,28,31,30,31,30,31,31,30,31,30,31];function QI(A,I,g,B){var C=d[B+40>>2],Q={tm_sec:d[B>>2],tm_min:d[B+4>>2],tm_hour:d[B+8>>2],tm_mday:d[B+12>>2],tm_mon:d[B+16>>2],tm_year:d[B+20>>2],tm_wday:d[B+24>>2],tm_yday:d[B+28>>2],tm_isdst:d[B+32>>2],tm_gmtoff:d[B+36>>2],tm_zone:C?W(C):\"\"},E=W(g),i={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var o in i)E=E.replace(new RegExp(o,\"g\"),i[o]);var D=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],a=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function w(A,I,g){for(var B=\"number\"==typeof A?A.toString():A||\"\";B.length<I;)B=g[0]+B;return B}function s(A,I){return w(A,I,\"0\")}function G(A,I){function g(A){return A<0?-1:A>0?1:0}var B;return 0===(B=g(A.getFullYear()-I.getFullYear()))&&0===(B=g(A.getMonth()-I.getMonth()))&&(B=g(A.getDate()-I.getDate())),B}function t(A){switch(A.getDay()){case 0:return new Date(A.getFullYear()-1,11,29);case 1:return A;case 2:return new Date(A.getFullYear(),0,3);case 3:return new Date(A.getFullYear(),0,2);case 4:return new Date(A.getFullYear(),0,1);case 5:return new Date(A.getFullYear()-1,11,31);case 6:return new Date(A.getFullYear()-1,11,30)}}function h(A){var I=function(A,I){for(var g=new Date(A.getTime());I>0;){var B=gI(g.getFullYear()),C=g.getMonth(),Q=(B?BI:CI)[C];if(!(I>Q-g.getDate()))return g.setDate(g.getDate()+I),g;I-=Q-g.getDate()+1,g.setDate(1),C<11?g.setMonth(C+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1))}return g}(new Date(A.tm_year+1900,0,1),A.tm_yday),g=new Date(I.getFullYear(),0,4),B=new Date(I.getFullYear()+1,0,4),C=t(g),Q=t(B);return G(C,I)<=0?G(Q,I)<=0?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}var R={\"%a\":function(A){return D[A.tm_wday].substring(0,3)},\"%A\":function(A){return D[A.tm_wday]},\"%b\":function(A){return a[A.tm_mon].substring(0,3)},\"%B\":function(A){return a[A.tm_mon]},\"%C\":function(A){return s((A.tm_year+1900)/100|0,2)},\"%d\":function(A){return s(A.tm_mday,2)},\"%e\":function(A){return w(A.tm_mday,2,\" \")},\"%g\":function(A){return h(A).toString().substring(2)},\"%G\":function(A){return h(A)},\"%H\":function(A){return s(A.tm_hour,2)},\"%I\":function(A){var I=A.tm_hour;return 0==I?I=12:I>12&&(I-=12),s(I,2)},\"%j\":function(A){return s(A.tm_mday+function(A,I){for(var g=0,B=0;B<=I;g+=A[B++]);return g}(gI(A.tm_year+1900)?BI:CI,A.tm_mon-1),3)},\"%m\":function(A){return s(A.tm_mon+1,2)},\"%M\":function(A){return s(A.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(A){return A.tm_hour>=0&&A.tm_hour<12?\"AM\":\"PM\"},\"%S\":function(A){return s(A.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(A){return A.tm_wday||7},\"%U\":function(A){var I=A.tm_yday+7-A.tm_wday;return s(Math.floor(I/7),2)},\"%V\":function(A){var I=Math.floor((A.tm_yday+7-(A.tm_wday+6)%7)/7);if((A.tm_wday+371-A.tm_yday-2)%7<=2&&I++,I){if(53==I){var g=(A.tm_wday+371-A.tm_yday)%7;4==g||3==g&&gI(A.tm_year)||(I=1)}}else{I=52;var B=(A.tm_wday+7-A.tm_yday-1)%7;(4==B||5==B&&gI(A.tm_year%400-1))&&I++}return s(I,2)},\"%w\":function(A){return A.tm_wday},\"%W\":function(A){var I=A.tm_yday+7-(A.tm_wday+6)%7;return s(Math.floor(I/7),2)},\"%y\":function(A){return(A.tm_year+1900).toString().substring(2)},\"%Y\":function(A){return A.tm_year+1900},\"%z\":function(A){var I=A.tm_gmtoff,g=I>=0;return I=(I=Math.abs(I)/60)/60*100+I%60,(g?\"+\":\"-\")+String(\"0000\"+I).slice(-4)},\"%Z\":function(A){return A.tm_zone},\"%%\":function(){return\"%\"}};for(var o in E=E.replace(/%%/g,\"\\0\\0\"),R)E.includes(o)&&(E=E.replace(new RegExp(o,\"g\"),R[o](Q)));var F=GA(E=E.replace(/\\0\\0/g,\"%\"),!1);return F.length>I?0:(function(A,I){U.set(A,I)}(F,A),F.length-1)}var EI=function(A,I,g,B){A||(A=this),this.parent=A,this.mount=A.mount,this.mounted=null,this.id=FA.nextInode++,this.name=I,this.mode=g,this.node_ops={},this.stream_ops={},this.rdev=B};Object.defineProperties(EI.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(A){A?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(A){A?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return FA.isDir(this.mode)}},isDevice:{get:function(){return FA.isChrdev(this.mode)}}}),FA.FSNode=EI,FA.staticInit(),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);nA=A}(),UA=A.BindingError=JA(Error,\"BindingError\"),LA=A.InternalError=JA(Error,\"InternalError\"),A.count_emval_handles=function(){for(var A=0,I=5;I<lA.length;++I)void 0!==lA[I]&&++A;return A},A.get_first_emval=function(){for(var A=5;A<lA.length;++A)if(void 0!==lA[A])return lA[A];return null},pA=A.UnboundTypeError=JA(Error,\"UnboundTypeError\");var iI=!1,oI=\"function\"==typeof atob?atob:function(A){var I,g,B,C,Q,E,i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",o=\"\",D=0;A=A.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{I=i.indexOf(A.charAt(D++))<<2|(C=i.indexOf(A.charAt(D++)))>>4,g=(15&C)<<4|(Q=i.indexOf(A.charAt(D++)))>>2,B=(3&Q)<<6|(E=i.indexOf(A.charAt(D++))),o+=String.fromCharCode(I),64!==Q&&(o+=String.fromCharCode(g)),64!==E&&(o+=String.fromCharCode(B))}while(D<A.length);return o};function DI(A){if(CA(A))return function(A){if(\"boolean\"==typeof y&&y){var I=Buffer.from(A,\"base64\");return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=oI(A),B=new Uint8Array(g.length),C=0;C<g.length;++C)B[C]=g.charCodeAt(C);return B}catch(A){throw new Error(\"Converting base64 string to bytes failed.\")}}(A.slice(BA.length))}var aI,wI={g:function(A){return sI(A+24)+24},f:function(A,I,g){throw new aA(A).init(I,g),A},n:function(A,I,g){yA.varargs=g;try{var B=yA.getStreamFromFD(A);switch(I){case 0:return(C=yA.get())<0?-28:FA.createStream(B,C).fd;case 1:case 2:case 6:case 7:return 0;case 3:return B.flags;case 4:var C=yA.get();return B.flags|=C,0;case 5:return C=yA.get(),L[C+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return 28,d[tI()>>2]=28,-1}}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return-A.errno}},F:function(A,I,g){yA.varargs=g;try{var B=yA.getStreamFromFD(A);switch(I){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return B.tty?0:-59;case 21519:if(!B.tty)return-59;var C=yA.get();return d[C>>2]=0,0;case 21520:return B.tty?-28:-59;case 21531:return C=yA.get(),FA.ioctl(B,I,C);default:return-28}}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return-A.errno}},G:function(A,I,g,B){yA.varargs=B;try{I=yA.getStr(I),I=yA.calculateAt(A,I);var C=B?yA.get():0;return FA.open(I,g,C).fd}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return-A.errno}},y:function(A,I,g,B,C){},K:function(A,I,g,B,C){var Q=rA(g);qA(A,{name:I=SA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:C},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=U;else if(2===g)B=L;else{if(4!==g)throw new TypeError(\"Unknown boolean type size: \"+I);B=d}return this.fromWireType(B[A>>Q])},destructorFunction:null})},r:function(I,g,B){I=SA(I),dA([],[g],(function(g){return g=g[0],A[I]=g.fromWireType(B),[]}))},J:function(A,I){qA(A,{name:I=SA(I),fromWireType:function(A){var I=function(A){return A||KA(\"Cannot use deleted val. handle = \"+A),lA[A].value}(A);return function(A){A>4&&0==--lA[A].refcount&&(lA[A]=void 0,HA.push(A))}(A),I},toWireType:function(A,I){return function(A){switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=HA.length?HA.pop():lA.length;return lA[I]={refcount:1,value:A},I}}(I)},argPackAdvance:8,readValueFromPointer:fA,destructorFunction:null})},q:function(A,I,g){var B=rA(g);qA(A,{name:I=SA(I),fromWireType:function(A){return A},toWireType:function(A,I){return I},argPackAdvance:8,readValueFromPointer:uA(I,B),destructorFunction:null})},d:function(I,g,B,C,Q,E){var i=function(A,I){for(var g=[],B=0;B<A;B++)g.push(q[I+4*B>>2]);return g}(g,B);I=SA(I),Q=function(A,I){var g,B,C,Q=(A=SA(A)).includes(\"j\")?(g=A,B=I,C=[],function(){return C.length=0,Object.assign(C,arguments),bA(g,B,C)}):mA(I);return\"function\"!=typeof Q&&KA(\"unknown function pointer with signature \"+A+\": \"+I),Q}(C,Q),function(I,g,B){A.hasOwnProperty(I)?((void 0===B||void 0!==A[I].overloadTable&&void 0!==A[I].overloadTable[B])&&KA(\"Cannot register public name '\"+I+\"' twice\"),function(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||KA(\"Function '\"+g+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+A[I].overloadTable+\")!\"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}(A,I,I),A.hasOwnProperty(B)&&KA(\"Cannot register multiple overloads of a function with the same number of arguments (\"+B+\")!\"),A[I].overloadTable[B]=g):(A[I]=g,void 0!==B&&(A[I].numArguments=B))}(I,(function(){!function(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||eA[I]||(NA[I]?NA[I].forEach(A):(g.push(I),B[I]=!0))})),new pA(A+\": \"+g.map(ZA).join([\", \"]))}(\"Cannot call \"+I+\" due to unbound types\",i)}),g-1),dA([],i,(function(B){var C=[B[0],null].concat(B.slice(1));return function(I,g,B){A.hasOwnProperty(I)||YA(\"Replacing nonexistant public symbol\"),void 0!==A[I].overloadTable&&void 0!==B?A[I].overloadTable[B]=g:(A[I]=g,A[I].argCount=B)}(I,function(A,I,g,B,C){var Q=I.length;Q<2&&KA(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var a=\"void\"!==I[0].name,w=\"\",s=\"\";for(o=0;o<Q-2;++o)w+=(0!==o?\", \":\"\")+\"arg\"+o,s+=(0!==o?\", \":\"\")+\"arg\"+o+\"Wired\";var G=\"return function \"+kA(A)+\"(\"+w+\") {\\nif (arguments.length !== \"+(Q-2)+\") {\\nthrowBindingError('function \"+A+\" called with ' + arguments.length + ' arguments, expected \"+(Q-2)+\" args!');\\n}\\n\";i&&(G+=\"var destructors = [];\\n\");var t=i?\"destructors\":\"null\",h=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"],R=[KA,B,C,WA,I[0],I[1]];for(E&&(G+=\"var thisWired = classParam.toWireType(\"+t+\", this);\\n\"),o=0;o<Q-2;++o)G+=\"var arg\"+o+\"Wired = argType\"+o+\".toWireType(\"+t+\", arg\"+o+\"); // \"+I[o+2].name+\"\\n\",h.push(\"argType\"+o),R.push(I[o+2]);if(E&&(s=\"thisWired\"+(s.length>0?\", \":\"\")+s),G+=(a?\"var rv = \":\"\")+\"invoker(fn\"+(s.length>0?\", \":\"\")+s+\");\\n\",i)G+=\"runDestructors(destructors);\\n\";else for(o=E?1:2;o<I.length;++o){var F=1===o?\"thisWired\":\"arg\"+(o-2)+\"Wired\";null!==I[o].destructorFunction&&(G+=F+\"_dtor(\"+F+\"); // \"+I[o].name+\"\\n\",h.push(F+\"_dtor\"),R.push(I[o].destructorFunction))}return a&&(G+=\"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\"),G+=\"}\\n\",h.push(G),function(A,I){if(!(A instanceof Function))throw new TypeError(\"new_ called with constructor type \"+D(A)+\" which is not a function\");var g=cA(A.name||\"unknownFunctionName\",(function(){}));g.prototype=A.prototype;var B=new g,C=A.apply(B,I);return C instanceof Object?C:B}(Function,h).apply(null,R)}(I,C,null,Q,E),g-1),[]}))},e:function(A,I,g,B,C){I=SA(I),-1===C&&(C=4294967295);var Q=rA(g),E=function(A){return A};if(0===B){var i=32-8*g;E=function(A){return A<<i>>>i}}var o=I.includes(\"unsigned\");qA(A,{name:I,fromWireType:E,toWireType:o?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:xA(I,Q,0!==B),destructorFunction:null})},c:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function C(A){var I=q,g=I[A>>=2],C=I[A+1];return new B(J,C,g)}qA(A,{name:g=SA(g),fromWireType:C,argPackAdvance:8,readValueFromPointer:C},{ignoreDuplicateRegistrations:!0})},p:function(A,I){var g=\"std::string\"===(I=SA(I));qA(A,{name:I,fromWireType:function(A){var I,B=q[A>>2],C=A+4;if(g)for(var Q=C,E=0;E<=B;++E){var i=C+E;if(E==B||0==K[i]){var o=W(Q,i-Q);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),Q=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(K[C+E]);I=D.join(\"\")}return GI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var C=\"string\"==typeof I;C||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||KA(\"Cannot pass non-string to std::string\"),B=g&&C?b(I):I.length;var Q=sI(4+B+1),E=Q+4;if(q[Q>>2]=B,g&&C)m(I,K,E,B+1);else if(C)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(GI(E),KA(\"String has UTF-16 code units that do not fit in 8 bits\")),K[E+i]=o}else for(i=0;i<B;++i)K[E+i]=I[i];return null!==A&&A.push(GI,Q),Q},argPackAdvance:8,readValueFromPointer:fA,destructorFunction:function(A){GI(A)}})},k:function(A,I,g){var B,C,Q,E,i;g=SA(g),2===I?(B=XA,C=TA,E=OA,Q=function(){return Y},i=1):4===I&&(B=vA,C=jA,E=PA,Q=function(){return q},i=2),qA(A,{name:g,fromWireType:function(A){for(var g,C=q[A>>2],E=Q(),o=A+4,D=0;D<=C;++D){var a=A+4+D*I;if(D==C||0==E[a>>i]){var w=B(o,a-o);void 0===g?g=w:(g+=String.fromCharCode(0),g+=w),o=a+I}}return GI(A),g},toWireType:function(A,B){\"string\"!=typeof B&&KA(\"Cannot pass non-string to C++ string type \"+g);var Q=E(B),o=sI(4+Q+I);return q[o>>2]=Q>>i,C(B,o+4,Q+I),null!==A&&A.push(GI,o),o},argPackAdvance:8,readValueFromPointer:fA,destructorFunction:function(A){GI(A)}})},L:function(A,I){qA(A,{isVoid:!0,name:I=SA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},o:function(){return Date.now()},A:function(){throw 1/0},H:function(A,I){var g,B=new Date(1e3*(q[(g=A)>>2]+4294967296*d[g+4>>2]));d[I>>2]=B.getSeconds(),d[I+4>>2]=B.getMinutes(),d[I+8>>2]=B.getHours(),d[I+12>>2]=B.getDate(),d[I+16>>2]=B.getMonth(),d[I+20>>2]=B.getFullYear()-1900,d[I+24>>2]=B.getDay();var C=new Date(B.getFullYear(),0,1),Q=(B.getTime()-C.getTime())/864e5|0;d[I+28>>2]=Q,d[I+36>>2]=-60*B.getTimezoneOffset();var E=new Date(B.getFullYear(),6,1).getTimezoneOffset(),i=C.getTimezoneOffset(),o=0|(E!=i&&B.getTimezoneOffset()==Math.min(i,E));d[I+32>>2]=o},I:function A(I,g,B){A.called||(A.called=!0,function(A,I,g){var B=(new Date).getFullYear(),C=new Date(B,0,1),Q=new Date(B,6,1),E=C.getTimezoneOffset(),i=Q.getTimezoneOffset(),o=Math.max(E,i);function D(A){var I=A.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return I?I[1]:\"GMT\"}d[A>>2]=60*o,d[I>>2]=Number(E!=i);var a=D(C),w=D(Q),s=zA(a),G=zA(w);i<E?(q[g>>2]=s,q[g+4>>2]=G):(q[g>>2]=G,q[g+4>>2]=s)}(I,g,B))},a:function(){_(\"\")},h:function(A,I,g){var B=function(A,I){var g;for(_A.length=0,I>>=2;g=K[A++];)I+=105!=g&I,_A.push(105==g?d[I]:l[I++>>1]),++I;return _A}(I,g);return iA[A].apply(null,B)},B:function(A){var I=K.length,g=2147483648;if((A>>>=0)>g)return!1;for(var B,C=1;C<=4;C*=2){var Q=I*(1+.2/C);if(Q=Math.min(Q,A+100663296),$A(Math.min(g,(B=Math.max(A,Q))+(65536-B%65536)%65536)))return!0}return!1},C:function(A,I){var g=0;return II().forEach((function(B,C){var Q=I+g;q[A+4*C>>2]=Q,function(A,I,g){for(var B=0;B<A.length;++B)U[I++>>0]=A.charCodeAt(B);U[I>>0]=0}(B,Q),g+=B.length+1})),0},D:function(A,I){var g=II();q[A>>2]=g.length;var B=0;return g.forEach((function(A){B+=A.length+1})),q[I>>2]=B,0},b:function(I,g){var B;B=I,T()||(A.onExit&&A.onExit(B),k=!0),h(B,new oA(B))},l:function(A){try{var I=yA.getStreamFromFD(A);return FA.close(I),0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}},E:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=q[I>>2],i=q[I+4>>2];I+=8;var o=FA.read(A,U,E,i,undefined);if(o<0)return-1;if(C+=o,o<i)break}return C}(yA.getStreamFromFD(A),I,g);return q[B>>2]=C,0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}},x:function(A,I,g,B,C){try{var Q=(o=g)+2097152>>>0<4194305-!!(i=I)?(i>>>0)+4294967296*o:NaN;if(isNaN(Q))return 61;var E=yA.getStreamFromFD(A);return FA.llseek(E,Q,B),gA=[E.position>>>0,(IA=E.position,+Math.abs(IA)>=1?IA>0?(0|Math.min(+Math.floor(IA/4294967296),4294967295))>>>0:~~+Math.ceil((IA-+(~~IA>>>0))/4294967296)>>>0:0)],d[C>>2]=gA[0],d[C+4>>2]=gA[1],E.getdents&&0===Q&&0===B&&(E.getdents=null),0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}var i,o},m:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=q[I>>2],i=q[I+4>>2];I+=8;var o=FA.write(A,U,E,i,undefined);if(o<0)return-1;C+=o}return C}(yA.getStreamFromFD(A),I,g);return q[B>>2]=C,0}catch(A){if(void 0===FA||!(A instanceof FA.ErrnoError))throw A;return A.errno}},s:function(A,I){var g=FI();try{return mA(A)(I)}catch(A){if(yI(g),A!==A+0)throw A;RI(1,0)}},u:function(A,I,g){var B=FI();try{return mA(A)(I,g)}catch(A){if(yI(B),A!==A+0)throw A;RI(1,0)}},t:function(A,I,g,B){var C=FI();try{return mA(A)(I,g,B)}catch(A){if(yI(C),A!==A+0)throw A;RI(1,0)}},i:function(A,I){var g=FI();try{mA(A)(I)}catch(A){if(yI(g),A!==A+0)throw A;RI(1,0)}},v:function(A,I,g){var B=FI();try{mA(A)(I,g)}catch(A){if(yI(B),A!==A+0)throw A;RI(1,0)}},w:function(A,I,g,B){var C=FI();try{mA(A)(I,g,B)}catch(A){if(yI(C),A!==A+0)throw A;RI(1,0)}},j:function(A,I,g,B,C){var Q=FI();try{mA(A)(I,g,B,C)}catch(A){if(yI(Q),A!==A+0)throw A;RI(1,0)}},M:QI,z:function(A,I,g,B){return QI(A,I,g,B)}},sI=(function(){var I={a:wI};function g(I,g){var B,C=I.exports;A.asm=C,p((e=A.asm.N).buffer),Z=A.asm.S,B=A.asm.O,V.unshift(B),z()}function C(A){g(A.instance)}function E(A){return function(){if(!n&&(R||F)){if(\"function\"==typeof fetch&&!QA($))return fetch($,{credentials:\"same-origin\"}).then((function(A){if(!A.ok)throw\"failed to load wasm binary file at '\"+$+\"'\";return A.arrayBuffer()})).catch((function(){return EA($)}));if(Q)return new Promise((function(A,I){Q($,(function(I){A(new Uint8Array(I))}),I)}))}return Promise.resolve().then((function(){return EA($)}))}().then((function(A){return WebAssembly.instantiate(A,I)})).then((function(A){return A})).then(A,(function(A){M(\"failed to asynchronously prepare wasm: \"+A),_(A)}))}if(P(),A.instantiateWasm)try{return A.instantiateWasm(I,g)}catch(A){return M(\"Module.instantiateWasm callback failed with error: \"+A),!1}(n||\"function\"!=typeof WebAssembly.instantiateStreaming||CA($)||QA($)||y||\"function\"!=typeof fetch?E(C):fetch($,{credentials:\"same-origin\"}).then((function(A){return WebAssembly.instantiateStreaming(A,I).then(C,(function(A){return M(\"wasm streaming compile failed: \"+A),M(\"falling back to ArrayBuffer instantiation\"),E(C)}))}))).catch(B)}(),A.___wasm_call_ctors=function(){return(A.___wasm_call_ctors=A.asm.O).apply(null,arguments)},A._malloc=function(){return(sI=A._malloc=A.asm.P).apply(null,arguments)}),GI=A._free=function(){return(GI=A._free=A.asm.Q).apply(null,arguments)},tI=A.___errno_location=function(){return(tI=A.___errno_location=A.asm.R).apply(null,arguments)},hI=A.___getTypeName=function(){return(hI=A.___getTypeName=A.asm.T).apply(null,arguments)},RI=(A.__embind_initialize_bindings=function(){return(A.__embind_initialize_bindings=A.asm.U).apply(null,arguments)},A._setThrew=function(){return(RI=A._setThrew=A.asm.V).apply(null,arguments)}),FI=A.stackSave=function(){return(FI=A.stackSave=A.asm.W).apply(null,arguments)},yI=A.stackRestore=function(){return(yI=A.stackRestore=A.asm.X).apply(null,arguments)},rI=A.___cxa_is_pointer_type=function(){return(rI=A.___cxa_is_pointer_type=A.asm.Y).apply(null,arguments)};function nI(g){function B(){aI||(aI=!0,A.calledRun=!0,k||(A.noFSInit||FA.init.initialized||FA.init(),FA.ignorePermissions=!1,tA.init(),DA(V),I(A),A.onRuntimeInitialized&&A.onRuntimeInitialized(),function(){if(A.postRun)for(\"function\"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)I=A.postRun.shift(),X.unshift(I);var I;DA(X)}()))}g=g||G,O>0||(function(){if(A.preRun)for(\"function\"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)I=A.preRun.shift(),x.unshift(I);var I;DA(x)}(),O>0||(A.setStatus?(A.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){A.setStatus(\"\")}),1),B()}),1)):B()))}if(A.dynCall_jiji=function(){return(A.dynCall_jiji=A.asm.Z).apply(null,arguments)},A.dynCall_viijii=function(){return(A.dynCall_viijii=A.asm._).apply(null,arguments)},A.dynCall_iiiiij=function(){return(A.dynCall_iiiiij=A.asm.$).apply(null,arguments)},A.dynCall_iiiiijj=function(){return(A.dynCall_iiiiijj=A.asm.aa).apply(null,arguments)},A.dynCall_iiiiiijj=function(){return(A.dynCall_iiiiiijj=A.asm.ba).apply(null,arguments)},A.FS=FA,j=function A(){aI||nI(),aI||(j=A)},A.preInit)for(\"function\"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return nI(),A.ready});const s=w,G=function(){return new Promise((function(A){s({onRuntimeInitialized:function(){A({instance:this})}})}))};function t(A,I){return function(){return A.apply(I,arguments)}}const{toString:h}=Object.prototype,{getPrototypeOf:R}=Object,F=(y=Object.create(null),A=>{const I=h.call(A);return y[I]||(y[I]=I.slice(8,-1).toLowerCase())});var y;const r=A=>(A=A.toLowerCase(),I=>F(I)===A),n=A=>I=>typeof I===A,{isArray:S}=Array,M=n(\"undefined\"),e=r(\"ArrayBuffer\"),N=n(\"string\"),k=n(\"function\"),c=n(\"number\"),J=A=>null!==A&&\"object\"==typeof A,U=A=>{if(\"object\"!==F(A))return!1;const I=R(A);return!(null!==I&&I!==Object.prototype&&null!==Object.getPrototypeOf(I)||Symbol.toStringTag in A||Symbol.iterator in A)},K=r(\"Date\"),L=r(\"File\"),Y=r(\"Blob\"),d=r(\"FileList\"),q=r(\"URLSearchParams\");function H(A,I,{allOwnKeys:g=!1}={}){if(null==A)return;let B,C;if(\"object\"!=typeof A&&(A=[A]),S(A))for(B=0,C=A.length;B<C;B++)I.call(null,A[B],B,A);else{const C=g?Object.getOwnPropertyNames(A):Object.keys(A),Q=C.length;let E;for(B=0;B<Q;B++)E=C[B],I.call(null,A[E],E,A)}}const l=(f=\"undefined\"!=typeof Uint8Array&&R(Uint8Array),A=>f&&A instanceof f);var f;const u=r(\"HTMLFormElement\"),W=(({hasOwnProperty:A})=>(I,g)=>A.call(I,g))(Object.prototype),m=r(\"RegExp\"),b=(A,I)=>{const g=Object.getOwnPropertyDescriptors(A),B={};H(g,((g,C)=>{!1!==I(g,C,A)&&(B[C]=g)})),Object.defineProperties(A,B)},p={isArray:S,isArrayBuffer:e,isBuffer:function(A){return null!==A&&!M(A)&&null!==A.constructor&&!M(A.constructor)&&k(A.constructor.isBuffer)&&A.constructor.isBuffer(A)},isFormData:A=>{const I=\"[object FormData]\";return A&&(\"function\"==typeof FormData&&A instanceof FormData||h.call(A)===I||k(A.toString)&&A.toString()===I)},isArrayBufferView:function(A){let I;return I=\"undefined\"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(A):A&&A.buffer&&e(A.buffer),I},isString:N,isNumber:c,isBoolean:A=>!0===A||!1===A,isObject:J,isPlainObject:U,isUndefined:M,isDate:K,isFile:L,isBlob:Y,isRegExp:m,isFunction:k,isStream:A=>J(A)&&k(A.pipe),isURLSearchParams:q,isTypedArray:l,isFileList:d,forEach:H,merge:function A(){const I={},g=(g,B)=>{U(I[B])&&U(g)?I[B]=A(I[B],g):U(g)?I[B]=A({},g):S(g)?I[B]=g.slice():I[B]=g};for(let A=0,I=arguments.length;A<I;A++)arguments[A]&&H(arguments[A],g);return I},extend:(A,I,g,{allOwnKeys:B}={})=>(H(I,((I,B)=>{g&&k(I)?A[B]=t(I,g):A[B]=I}),{allOwnKeys:B}),A),trim:A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\"\"),stripBOM:A=>(65279===A.charCodeAt(0)&&(A=A.slice(1)),A),inherits:(A,I,g,B)=>{A.prototype=Object.create(I.prototype,B),A.prototype.constructor=A,Object.defineProperty(A,\"super\",{value:I.prototype}),g&&Object.assign(A.prototype,g)},toFlatObject:(A,I,g,B)=>{let C,Q,E;const i={};if(I=I||{},null==A)return I;do{for(C=Object.getOwnPropertyNames(A),Q=C.length;Q-- >0;)E=C[Q],B&&!B(E,A,I)||i[E]||(I[E]=A[E],i[E]=!0);A=!1!==g&&R(A)}while(A&&(!g||g(A,I))&&A!==Object.prototype);return I},kindOf:F,kindOfTest:r,endsWith:(A,I,g)=>{A=String(A),(void 0===g||g>A.length)&&(g=A.length),g-=I.length;const B=A.indexOf(I,g);return-1!==B&&B===g},toArray:A=>{if(!A)return null;if(S(A))return A;let I=A.length;if(!c(I))return null;const g=new Array(I);for(;I-- >0;)g[I]=A[I];return g},forEachEntry:(A,I)=>{const g=(A&&A[Symbol.iterator]).call(A);let B;for(;(B=g.next())&&!B.done;){const g=B.value;I.call(A,g[0],g[1])}},matchAll:(A,I)=>{let g;const B=[];for(;null!==(g=A.exec(I));)B.push(g);return B},isHTMLForm:u,hasOwnProperty:W,hasOwnProp:W,reduceDescriptors:b,freezeMethods:A=>{b(A,((I,g)=>{const B=A[g];k(B)&&(I.enumerable=!1,\"writable\"in I?I.writable=!1:I.set||(I.set=()=>{throw Error(\"Can not read-only method '\"+g+\"'\")}))}))},toObjectSet:(A,I)=>{const g={},B=A=>{A.forEach((A=>{g[A]=!0}))};return S(A)?B(A):B(String(A).split(I)),g},toCamelCase:A=>A.toLowerCase().replace(/[_-\\s]([a-z\\d])(\\w*)/g,(function(A,I,g){return I.toUpperCase()+g})),noop:()=>{},toFiniteNumber:(A,I)=>(A=+A,Number.isFinite(A)?A:I)};function Z(A,I,g,B,C){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=A,this.name=\"AxiosError\",I&&(this.code=I),g&&(this.config=g),B&&(this.request=B),C&&(this.response=C)}p.inherits(Z,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const x=Z.prototype,V={};[\"ERR_BAD_OPTION_VALUE\",\"ERR_BAD_OPTION\",\"ECONNABORTED\",\"ETIMEDOUT\",\"ERR_NETWORK\",\"ERR_FR_TOO_MANY_REDIRECTS\",\"ERR_DEPRECATED\",\"ERR_BAD_RESPONSE\",\"ERR_BAD_REQUEST\",\"ERR_CANCELED\",\"ERR_NOT_SUPPORT\",\"ERR_INVALID_URL\"].forEach((A=>{V[A]={value:A}})),Object.defineProperties(Z,V),Object.defineProperty(x,\"isAxiosError\",{value:!0}),Z.from=(A,I,g,B,C,Q)=>{const E=Object.create(x);return p.toFlatObject(A,E,(function(A){return A!==Error.prototype}),(A=>\"isAxiosError\"!==A)),Z.call(E,A.message,I,g,B,C),E.cause=A,E.name=A.name,Q&&Object.assign(E,Q),E};const X=Z,T=g(230);function O(A){return p.isPlainObject(A)||p.isArray(A)}function v(A){return p.endsWith(A,\"[]\")?A.slice(0,-2):A}function j(A,I,g){return A?A.concat(I).map((function(A,I){return A=v(A),!g&&I?\"[\"+A+\"]\":A})).join(g?\".\":\"\"):I}const P=p.toFlatObject(p,{},null,(function(A){return/^is[A-Z]/.test(A)})),z=function(A,I,g){if(!p.isObject(A))throw new TypeError(\"target must be an object\");I=I||new(T||FormData);const B=(g=p.toFlatObject(g,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(A,I){return!p.isUndefined(I[A])}))).metaTokens,C=g.visitor||a,Q=g.dots,E=g.indexes,i=(g.Blob||\"undefined\"!=typeof Blob&&Blob)&&(o=I)&&p.isFunction(o.append)&&\"FormData\"===o[Symbol.toStringTag]&&o[Symbol.iterator];var o;if(!p.isFunction(C))throw new TypeError(\"visitor must be a function\");function D(A){if(null===A)return\"\";if(p.isDate(A))return A.toISOString();if(!i&&p.isBlob(A))throw new X(\"Blob is not supported. Use a Buffer instead.\");return p.isArrayBuffer(A)||p.isTypedArray(A)?i&&\"function\"==typeof Blob?new Blob([A]):Buffer.from(A):A}function a(A,g,C){let i=A;if(A&&!C&&\"object\"==typeof A)if(p.endsWith(g,\"{}\"))g=B?g:g.slice(0,-2),A=JSON.stringify(A);else if(p.isArray(A)&&function(A){return p.isArray(A)&&!A.some(O)}(A)||p.isFileList(A)||p.endsWith(g,\"[]\")&&(i=p.toArray(A)))return g=v(g),i.forEach((function(A,B){!p.isUndefined(A)&&null!==A&&I.append(!0===E?j([g],B,Q):null===E?g:g+\"[]\",D(A))})),!1;return!!O(A)||(I.append(j(C,g,Q),D(A)),!1)}const w=[],s=Object.assign(P,{defaultVisitor:a,convertValue:D,isVisitable:O});if(!p.isObject(A))throw new TypeError(\"data must be an object\");return function A(g,B){if(!p.isUndefined(g)){if(-1!==w.indexOf(g))throw Error(\"Circular reference detected in \"+B.join(\".\"));w.push(g),p.forEach(g,(function(g,Q){!0===(!(p.isUndefined(g)||null===g)&&C.call(I,g,p.isString(Q)?Q.trim():Q,B,s))&&A(g,B?B.concat(Q):[Q])})),w.pop()}}(A),I};function _(A){const I={\"!\":\"%21\",\"'\":\"%27\",\"(\":\"%28\",\")\":\"%29\",\"~\":\"%7E\",\"%20\":\"+\",\"%00\":\"\\0\"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,(function(A){return I[A]}))}function $(A,I){this._pairs=[],A&&z(A,this,I)}const AA=$.prototype;AA.append=function(A,I){this._pairs.push([A,I])},AA.toString=function(A){const I=A?function(I){return A.call(this,I,_)}:_;return this._pairs.map((function(A){return I(A[0])+\"=\"+I(A[1])}),\"\").join(\"&\")};const IA=$;function gA(A){return encodeURIComponent(A).replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%20/g,\"+\").replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\")}function BA(A,I,g){if(!I)return A;const B=g&&g.encode||gA,C=g&&g.serialize;let Q;if(Q=C?C(I,g):p.isURLSearchParams(I)?I.toString():new IA(I,g).toString(B),Q){const I=A.indexOf(\"#\");-1!==I&&(A=A.slice(0,I)),A+=(-1===A.indexOf(\"?\")?\"?\":\"&\")+Q}return A}const CA=class{constructor(){this.handlers=[]}use(A,I,g){return this.handlers.push({fulfilled:A,rejected:I,synchronous:!!g&&g.synchronous,runWhen:g?g.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){p.forEach(this.handlers,(function(I){null!==I&&A(I)}))}},QA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},EA=\"undefined\"!=typeof URLSearchParams?URLSearchParams:IA,iA=FormData,oA=(()=>{let A;return(\"undefined\"==typeof navigator||\"ReactNative\"!==(A=navigator.product)&&\"NativeScript\"!==A&&\"NS\"!==A)&&\"undefined\"!=typeof window&&\"undefined\"!=typeof document})(),DA={isBrowser:!0,classes:{URLSearchParams:EA,FormData:iA,Blob},isStandardBrowserEnv:oA,protocols:[\"http\",\"https\",\"file\",\"blob\",\"url\",\"data\"]},aA=function(A){function I(A,g,B,C){let Q=A[C++];const E=Number.isFinite(+Q),i=C>=A.length;return Q=!Q&&p.isArray(B)?B.length:Q,i?(p.hasOwnProp(B,Q)?B[Q]=[B[Q],g]:B[Q]=g,!E):(B[Q]&&p.isObject(B[Q])||(B[Q]=[]),I(A,g,B[Q],C)&&p.isArray(B[Q])&&(B[Q]=function(A){const I={},g=Object.keys(A);let B;const C=g.length;let Q;for(B=0;B<C;B++)Q=g[B],I[Q]=A[Q];return I}(B[Q])),!E)}if(p.isFormData(A)&&p.isFunction(A.entries)){const g={};return p.forEachEntry(A,((A,B)=>{I(function(A){return p.matchAll(/\\w+|\\[(\\w*)]/g,A).map((A=>\"[]\"===A[0]?\"\":A[1]||A[0]))}(A),B,g,0)})),g}return null},wA=DA.isStandardBrowserEnv?{write:function(A,I,g,B,C,Q){const E=[];E.push(A+\"=\"+encodeURIComponent(I)),p.isNumber(g)&&E.push(\"expires=\"+new Date(g).toGMTString()),p.isString(B)&&E.push(\"path=\"+B),p.isString(C)&&E.push(\"domain=\"+C),!0===Q&&E.push(\"secure\"),document.cookie=E.join(\"; \")},read:function(A){const I=document.cookie.match(new RegExp(\"(^|;\\\\s*)(\"+A+\")=([^;]*)\"));return I?decodeURIComponent(I[3]):null},remove:function(A){this.write(A,\"\",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}};function sA(A,I){return A&&!/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(I)?function(A,I){return I?A.replace(/\\/+$/,\"\")+\"/\"+I.replace(/^\\/+/,\"\"):A}(A,I):I}const GA=DA.isStandardBrowserEnv?function(){const A=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement(\"a\");let g;function B(g){let B=g;return A&&(I.setAttribute(\"href\",B),B=I.href),I.setAttribute(\"href\",B),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,\"\"):\"\",host:I.host,search:I.search?I.search.replace(/^\\?/,\"\"):\"\",hash:I.hash?I.hash.replace(/^#/,\"\"):\"\",hostname:I.hostname,port:I.port,pathname:\"/\"===I.pathname.charAt(0)?I.pathname:\"/\"+I.pathname}}return g=B(window.location.href),function(A){const I=p.isString(A)?B(A):A;return I.protocol===g.protocol&&I.host===g.host}}():function(){return!0};function tA(A,I,g){X.call(this,null==A?\"canceled\":A,X.ERR_CANCELED,I,g),this.name=\"CanceledError\"}p.inherits(tA,X,{__CANCEL__:!0});const hA=tA,RA=p.toObjectSet([\"age\",\"authorization\",\"content-length\",\"content-type\",\"etag\",\"expires\",\"from\",\"host\",\"if-modified-since\",\"if-unmodified-since\",\"last-modified\",\"location\",\"max-forwards\",\"proxy-authorization\",\"referer\",\"retry-after\",\"user-agent\"]),FA=Symbol(\"internals\"),yA=Symbol(\"defaults\");function rA(A){return A&&String(A).trim().toLowerCase()}function nA(A){return!1===A||null==A?A:p.isArray(A)?A.map(nA):String(A)}function SA(A,I,g,B){return p.isFunction(B)?B.call(this,I,g):p.isString(I)?p.isString(B)?-1!==I.indexOf(B):p.isRegExp(B)?B.test(I):void 0:void 0}function MA(A,I){I=I.toLowerCase();const g=Object.keys(A);let B,C=g.length;for(;C-- >0;)if(B=g[C],I===B.toLowerCase())return B;return null}function eA(A,I){A&&this.set(A),this[yA]=I||null}Object.assign(eA.prototype,{set:function(A,I,g){const B=this;function C(A,I,g){const C=rA(I);if(!C)throw new Error(\"header name must be a non-empty string\");const Q=MA(B,C);(!Q||!0===g||!1!==B[Q]&&!1!==g)&&(B[Q||I]=nA(A))}return p.isPlainObject(A)?p.forEach(A,((A,g)=>{C(A,g,I)})):C(I,A,g),this},get:function(A,I){if(!(A=rA(A)))return;const g=MA(this,A);if(g){const A=this[g];if(!I)return A;if(!0===I)return function(A){const I=Object.create(null),g=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;let B;for(;B=g.exec(A);)I[B[1]]=B[2];return I}(A);if(p.isFunction(I))return I.call(this,A,g);if(p.isRegExp(I))return I.exec(A);throw new TypeError(\"parser must be boolean|regexp|function\")}},has:function(A,I){if(A=rA(A)){const g=MA(this,A);return!(!g||I&&!SA(0,this[g],g,I))}return!1},delete:function(A,I){const g=this;let B=!1;function C(A){if(A=rA(A)){const C=MA(g,A);!C||I&&!SA(0,g[C],C,I)||(delete g[C],B=!0)}}return p.isArray(A)?A.forEach(C):C(A),B},clear:function(){return Object.keys(this).forEach(this.delete.bind(this))},normalize:function(A){const I=this,g={};return p.forEach(this,((B,C)=>{const Q=MA(g,C);if(Q)return I[Q]=nA(B),void delete I[C];const E=A?function(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,((A,I,g)=>I.toUpperCase()+g))}(C):String(C).trim();E!==C&&delete I[C],I[E]=nA(B),g[E]=!0})),this},toJSON:function(A){const I=Object.create(null);return p.forEach(Object.assign({},this[yA]||null,this),((g,B)=>{null!=g&&!1!==g&&(I[B]=A&&p.isArray(g)?g.join(\", \"):g)})),I}}),Object.assign(eA,{from:function(A){return p.isString(A)?new this((A=>{const I={};let g,B,C;return A&&A.split(\"\\n\").forEach((function(A){C=A.indexOf(\":\"),g=A.substring(0,C).trim().toLowerCase(),B=A.substring(C+1).trim(),!g||I[g]&&RA[g]||(\"set-cookie\"===g?I[g]?I[g].push(B):I[g]=[B]:I[g]=I[g]?I[g]+\", \"+B:B)})),I})(A)):A instanceof this?A:new this(A)},accessor:function(A){const I=(this[FA]=this[FA]={accessors:{}}).accessors,g=this.prototype;function B(A){const B=rA(A);I[B]||(function(A,I){const g=p.toCamelCase(\" \"+I);[\"get\",\"set\",\"has\"].forEach((B=>{Object.defineProperty(A,B+g,{value:function(A,g,C){return this[B].call(this,I,A,g,C)},configurable:!0})}))}(g,A),I[B]=!0)}return p.isArray(A)?A.forEach(B):B(A),this}}),eA.accessor([\"Content-Type\",\"Content-Length\",\"Accept\",\"Accept-Encoding\",\"User-Agent\"]),p.freezeMethods(eA.prototype),p.freezeMethods(eA);const NA=eA;function kA(A,I){let g=0;const B=function(A,I){A=A||10;const g=new Array(A),B=new Array(A);let C,Q=0,E=0;return I=void 0!==I?I:1e3,function(i){const o=Date.now(),D=B[E];C||(C=o),g[Q]=i,B[Q]=o;let a=E,w=0;for(;a!==Q;)w+=g[a++],a%=A;if(Q=(Q+1)%A,Q===E&&(E=(E+1)%A),o-C<I)return;const s=D&&o-D;return s?Math.round(1e3*w/s):void 0}}(50,250);return C=>{const Q=C.loaded,E=C.lengthComputable?C.total:void 0,i=Q-g,o=B(i);g=Q;const D={loaded:Q,total:E,progress:E?Q/E:void 0,bytes:i,rate:o||void 0,estimated:o&&E&&Q<=E?(E-Q)/o:void 0};D[I?\"download\":\"upload\"]=!0,A(D)}}function cA(A){return new Promise((function(I,g){let B=A.data;const C=NA.from(A.headers).normalize(),Q=A.responseType;let E;function i(){A.cancelToken&&A.cancelToken.unsubscribe(E),A.signal&&A.signal.removeEventListener(\"abort\",E)}p.isFormData(B)&&DA.isStandardBrowserEnv&&C.setContentType(!1);let o=new XMLHttpRequest;if(A.auth){const I=A.auth.username||\"\",g=A.auth.password?unescape(encodeURIComponent(A.auth.password)):\"\";C.set(\"Authorization\",\"Basic \"+btoa(I+\":\"+g))}const D=sA(A.baseURL,A.url);function a(){if(!o)return;const B=NA.from(\"getAllResponseHeaders\"in o&&o.getAllResponseHeaders());!function(A,I,g){const B=g.config.validateStatus;g.status&&B&&!B(g.status)?I(new X(\"Request failed with status code \"+g.status,[X.ERR_BAD_REQUEST,X.ERR_BAD_RESPONSE][Math.floor(g.status/100)-4],g.config,g.request,g)):A(g)}((function(A){I(A),i()}),(function(A){g(A),i()}),{data:Q&&\"text\"!==Q&&\"json\"!==Q?o.response:o.responseText,status:o.status,statusText:o.statusText,headers:B,config:A,request:o}),o=null}if(o.open(A.method.toUpperCase(),BA(D,A.params,A.paramsSerializer),!0),o.timeout=A.timeout,\"onloadend\"in o?o.onloadend=a:o.onreadystatechange=function(){o&&4===o.readyState&&(0!==o.status||o.responseURL&&0===o.responseURL.indexOf(\"file:\"))&&setTimeout(a)},o.onabort=function(){o&&(g(new X(\"Request aborted\",X.ECONNABORTED,A,o)),o=null)},o.onerror=function(){g(new X(\"Network Error\",X.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let I=A.timeout?\"timeout of \"+A.timeout+\"ms exceeded\":\"timeout exceeded\";const B=A.transitional||QA;A.timeoutErrorMessage&&(I=A.timeoutErrorMessage),g(new X(I,B.clarifyTimeoutError?X.ETIMEDOUT:X.ECONNABORTED,A,o)),o=null},DA.isStandardBrowserEnv){const I=(A.withCredentials||GA(D))&&A.xsrfCookieName&&wA.read(A.xsrfCookieName);I&&C.set(A.xsrfHeaderName,I)}void 0===B&&C.setContentType(null),\"setRequestHeader\"in o&&p.forEach(C.toJSON(),(function(A,I){o.setRequestHeader(I,A)})),p.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),Q&&\"json\"!==Q&&(o.responseType=A.responseType),\"function\"==typeof A.onDownloadProgress&&o.addEventListener(\"progress\",kA(A.onDownloadProgress,!0)),\"function\"==typeof A.onUploadProgress&&o.upload&&o.upload.addEventListener(\"progress\",kA(A.onUploadProgress)),(A.cancelToken||A.signal)&&(E=I=>{o&&(g(!I||I.type?new hA(null,A,o):I),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(E),A.signal&&(A.signal.aborted?E():A.signal.addEventListener(\"abort\",E)));const w=function(A){const I=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return I&&I[1]||\"\"}(D);w&&-1===DA.protocols.indexOf(w)?g(new X(\"Unsupported protocol \"+w+\":\",X.ERR_BAD_REQUEST,A)):o.send(B||null)}))}const JA={http:cA,xhr:cA},UA=A=>{if(p.isString(A)){const I=JA[A];if(!A)throw Error(p.hasOwnProp(A)?`Adapter '${A}' is not available in the build`:`Can not resolve adapter '${A}'`);return I}if(!p.isFunction(A))throw new TypeError(\"adapter is not a function\");return A},KA={\"Content-Type\":\"application/x-www-form-urlencoded\"},LA={transitional:QA,adapter:function(){let A;return\"undefined\"!=typeof XMLHttpRequest?A=UA(\"xhr\"):\"undefined\"!=typeof process&&\"process\"===p.kindOf(process)&&(A=UA(\"http\")),A}(),transformRequest:[function(A,I){const g=I.getContentType()||\"\",B=g.indexOf(\"application/json\")>-1,C=p.isObject(A);if(C&&p.isHTMLForm(A)&&(A=new FormData(A)),p.isFormData(A))return B&&B?JSON.stringify(aA(A)):A;if(p.isArrayBuffer(A)||p.isBuffer(A)||p.isStream(A)||p.isFile(A)||p.isBlob(A))return A;if(p.isArrayBufferView(A))return A.buffer;if(p.isURLSearchParams(A))return I.setContentType(\"application/x-www-form-urlencoded;charset=utf-8\",!1),A.toString();let Q;if(C){if(g.indexOf(\"application/x-www-form-urlencoded\")>-1)return function(A,I){return z(A,new DA.classes.URLSearchParams,Object.assign({visitor:function(A,I,g,B){return DA.isNode&&p.isBuffer(A)?(this.append(I,A.toString(\"base64\")),!1):B.defaultVisitor.apply(this,arguments)}},I))}(A,this.formSerializer).toString();if((Q=p.isFileList(A))||g.indexOf(\"multipart/form-data\")>-1){const I=this.env&&this.env.FormData;return z(Q?{\"files[]\":A}:A,I&&new I,this.formSerializer)}}return C||B?(I.setContentType(\"application/json\",!1),function(A,I,g){if(p.isString(A))try{return(0,JSON.parse)(A),p.trim(A)}catch(A){if(\"SyntaxError\"!==A.name)throw A}return(0,JSON.stringify)(A)}(A)):A}],transformResponse:[function(A){const I=this.transitional||LA.transitional,g=I&&I.forcedJSONParsing,B=\"json\"===this.responseType;if(A&&p.isString(A)&&(g&&!this.responseType||B)){const g=!(I&&I.silentJSONParsing)&&B;try{return JSON.parse(A)}catch(A){if(g){if(\"SyntaxError\"===A.name)throw X.from(A,X.ERR_BAD_RESPONSE,this,null,this.response);throw A}}}return A}],timeout:0,xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",maxContentLength:-1,maxBodyLength:-1,env:{FormData:DA.classes.FormData,Blob:DA.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:\"application/json, text/plain, */*\"}}};p.forEach([\"delete\",\"get\",\"head\"],(function(A){LA.headers[A]={}})),p.forEach([\"post\",\"put\",\"patch\"],(function(A){LA.headers[A]=p.merge(KA)}));const YA=LA;function dA(A,I){const g=this||YA,B=I||g,C=NA.from(B.headers);let Q=B.data;return p.forEach(A,(function(A){Q=A.call(g,Q,C.normalize(),I?I.status:void 0)})),C.normalize(),Q}function qA(A){return!(!A||!A.__CANCEL__)}function HA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new hA}function lA(A){return HA(A),A.headers=NA.from(A.headers),A.data=dA.call(A,A.transformRequest),(A.adapter||YA.adapter)(A).then((function(I){return HA(A),I.data=dA.call(A,A.transformResponse,I),I.headers=NA.from(I.headers),I}),(function(I){return qA(I)||(HA(A),I&&I.response&&(I.response.data=dA.call(A,A.transformResponse,I.response),I.response.headers=NA.from(I.response.headers))),Promise.reject(I)}))}function fA(A,I){I=I||{};const g={};function B(A,I){return p.isPlainObject(A)&&p.isPlainObject(I)?p.merge(A,I):p.isPlainObject(I)?p.merge({},I):p.isArray(I)?I.slice():I}function C(g){return p.isUndefined(I[g])?p.isUndefined(A[g])?void 0:B(void 0,A[g]):B(A[g],I[g])}function Q(A){if(!p.isUndefined(I[A]))return B(void 0,I[A])}function E(g){return p.isUndefined(I[g])?p.isUndefined(A[g])?void 0:B(void 0,A[g]):B(void 0,I[g])}function i(g){return g in I?B(A[g],I[g]):g in A?B(void 0,A[g]):void 0}const o={url:Q,method:Q,data:Q,baseURL:E,transformRequest:E,transformResponse:E,paramsSerializer:E,timeout:E,timeoutMessage:E,withCredentials:E,adapter:E,responseType:E,xsrfCookieName:E,xsrfHeaderName:E,onUploadProgress:E,onDownloadProgress:E,decompress:E,maxContentLength:E,maxBodyLength:E,beforeRedirect:E,transport:E,httpAgent:E,httpsAgent:E,cancelToken:E,socketPath:E,responseEncoding:E,validateStatus:i};return p.forEach(Object.keys(A).concat(Object.keys(I)),(function(A){const I=o[A]||C,B=I(A);p.isUndefined(B)&&I!==i||(g[A]=B)})),g}const uA={};[\"object\",\"boolean\",\"number\",\"function\",\"string\",\"symbol\"].forEach(((A,I)=>{uA[A]=function(g){return typeof g===A||\"a\"+(I<1?\"n \":\" \")+A}}));const WA={};uA.transitional=function(A,I,g){function B(A,I){return\"[Axios v1.1.3] Transitional option '\"+A+\"'\"+I+(g?\". \"+g:\"\")}return(g,C,Q)=>{if(!1===A)throw new X(B(C,\" has been removed\"+(I?\" in \"+I:\"\")),X.ERR_DEPRECATED);return I&&!WA[C]&&(WA[C]=!0,console.warn(B(C,\" has been deprecated since v\"+I+\" and will be removed in the near future\"))),!A||A(g,C,Q)}};const mA={assertOptions:function(A,I,g){if(\"object\"!=typeof A)throw new X(\"options must be an object\",X.ERR_BAD_OPTION_VALUE);const B=Object.keys(A);let C=B.length;for(;C-- >0;){const Q=B[C],E=I[Q];if(E){const I=A[Q],g=void 0===I||E(I,Q,A);if(!0!==g)throw new X(\"option \"+Q+\" must be \"+g,X.ERR_BAD_OPTION_VALUE)}else if(!0!==g)throw new X(\"Unknown option \"+Q,X.ERR_BAD_OPTION)}},validators:uA},bA=mA.validators;class pA{constructor(A){this.defaults=A,this.interceptors={request:new CA,response:new CA}}request(A,I){\"string\"==typeof A?(I=I||{}).url=A:I=A||{},I=fA(this.defaults,I);const{transitional:g,paramsSerializer:B}=I;void 0!==g&&mA.assertOptions(g,{silentJSONParsing:bA.transitional(bA.boolean),forcedJSONParsing:bA.transitional(bA.boolean),clarifyTimeoutError:bA.transitional(bA.boolean)},!1),void 0!==B&&mA.assertOptions(B,{encode:bA.function,serialize:bA.function},!0),I.method=(I.method||this.defaults.method||\"get\").toLowerCase();const C=I.headers&&p.merge(I.headers.common,I.headers[I.method]);C&&p.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\",\"common\"],(function(A){delete I.headers[A]})),I.headers=new NA(I.headers,C);const Q=[];let E=!0;this.interceptors.request.forEach((function(A){\"function\"==typeof A.runWhen&&!1===A.runWhen(I)||(E=E&&A.synchronous,Q.unshift(A.fulfilled,A.rejected))}));const i=[];let o;this.interceptors.response.forEach((function(A){i.push(A.fulfilled,A.rejected)}));let D,a=0;if(!E){const A=[lA.bind(this),void 0];for(A.unshift.apply(A,Q),A.push.apply(A,i),D=A.length,o=Promise.resolve(I);a<D;)o=o.then(A[a++],A[a++]);return o}D=Q.length;let w=I;for(a=0;a<D;){const A=Q[a++],I=Q[a++];try{w=A(w)}catch(A){I.call(this,A);break}}try{o=lA.call(this,w)}catch(A){return Promise.reject(A)}for(a=0,D=i.length;a<D;)o=o.then(i[a++],i[a++]);return o}getUri(A){return BA(sA((A=fA(this.defaults,A)).baseURL,A.url),A.params,A.paramsSerializer)}}p.forEach([\"delete\",\"get\",\"head\",\"options\"],(function(A){pA.prototype[A]=function(I,g){return this.request(fA(g||{},{method:A,url:I,data:(g||{}).data}))}})),p.forEach([\"post\",\"put\",\"patch\"],(function(A){function I(I){return function(g,B,C){return this.request(fA(C||{},{method:A,headers:I?{\"Content-Type\":\"multipart/form-data\"}:{},url:g,data:B}))}}pA.prototype[A]=I(),pA.prototype[A+\"Form\"]=I(!0)}));const ZA=pA;class xA{constructor(A){if(\"function\"!=typeof A)throw new TypeError(\"executor must be a function.\");let I;this.promise=new Promise((function(A){I=A}));const g=this;this.promise.then((A=>{if(!g._listeners)return;let I=g._listeners.length;for(;I-- >0;)g._listeners[I](A);g._listeners=null})),this.promise.then=A=>{let I;const B=new Promise((A=>{g.subscribe(A),I=A})).then(A);return B.cancel=function(){g.unsubscribe(I)},B},A((function(A,B,C){g.reason||(g.reason=new hA(A,B,C),I(g.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){this.reason?A(this.reason):this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;const I=this._listeners.indexOf(A);-1!==I&&this._listeners.splice(I,1)}static source(){let A;return{token:new xA((function(I){A=I})),cancel:A}}}const VA=xA,XA=function A(I){const g=new ZA(I),B=t(ZA.prototype.request,g);return p.extend(B,ZA.prototype,g,{allOwnKeys:!0}),p.extend(B,g,null,{allOwnKeys:!0}),B.create=function(g){return A(fA(I,g))},B}(YA);XA.Axios=ZA,XA.CanceledError=hA,XA.CancelToken=VA,XA.isCancel=qA,XA.VERSION=\"1.1.3\",XA.toFormData=z,XA.AxiosError=X,XA.Cancel=XA.CanceledError,XA.all=function(A){return Promise.all(A)},XA.spread=function(A){return function(I){return A.apply(null,I)}},XA.isAxiosError=function(A){return p.isObject(A)&&!0===A.isAxiosError},XA.formToJSON=A=>aA(p.isHTMLForm(A)?new FormData(A):A);const TA=XA,{Axios:OA,AxiosError:vA,CanceledError:jA,isCancel:PA,CancelToken:zA,VERSION:_A,all:$A,Cancel:AI,isAxiosError:II,spread:gI,toFormData:BI}=TA,CI=TA;var QI=function(){function A(){C(this,A)}var g;return E(A,null,[{key:\"fetchRemoteData\",value:(g=I(o().mark((function A(I){var g;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,CI.get(I,{responseType:\"arraybuffer\"});case 3:return g=A.sent,A.abrupt(\"return\",new Uint8Array(g.data));case 7:throw A.prev=7,A.t0=A.catch(0),A.t0;case 10:case\"end\":return A.stop()}}),A,null,[[0,7]])}))),function(A){return g.apply(this,arguments)})},{key:\"string2Uint8Data\",value:function(A){for(var I=new Uint8Array(A.length),g=0;g<I.length;g++)I[g]=255&A.charCodeAt(g);return I}},{key:\"uint8Data2String\",value:function(A){return String.fromCharCode.apply(String,A)}},{key:\"parseMultiFile\",value:function(I){var g=A.uint8Data2String(I).split(\"\\n\"),B=[],C=0;return g.forEach((function(A){if((A=A.trim())&&!A.startsWith(\"#\"))switch(C){case 0:return void(C=1);case 1:A.match(/^\\d+$/)||B.push(A);case 2:case 3:case 4:return void C++;case 5:return void(C=1)}})),B}}]),A}(),EI=function(){function A(){C(this,A),this.instance,this.markerCount=0,this.multiMarkerCount=0,this.cameraCount=0,this.version=\"0.1.3\",console.info(\"ARToolkit \",this.version)}var B,Q,i,D,a;return E(A,[{key:\"init\",value:(a=I(o().mark((function A(){var I;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,G();case 2:return I=A.sent,this.instance=I.instance,this._decorate(),(\"undefined\"!=typeof window?window:g.g).artoolkit=this,A.abrupt(\"return\",this);case 8:case\"end\":return A.stop()}}),A,this)}))),function(){return a.apply(this,arguments)})},{key:\"_decorate\",value:function(){var A=this;for(var I in[\"setup\",\"teardown\",\"setupAR2\",\"setLogLevel\",\"getLogLevel\",\"setDebugMode\",\"getDebugMode\",\"getProcessingImage\",\"setMarkerInfoDir\",\"setMarkerInfoVertex\",\"getTransMatSquare\",\"getTransMatSquareCont\",\"getTransMatMultiSquare\",\"getTransMatMultiSquareRobust\",\"getMultiMarkerNum\",\"getMultiMarkerCount\",\"detectMarker\",\"getMarkerNum\",\"detectNFTMarker\",\"getNFTMarker\",\"getMarker\",\"getMultiEachMarker\",\"setProjectionNearPlane\",\"getProjectionNearPlane\",\"setProjectionFarPlane\",\"getProjectionFarPlane\",\"setThresholdMode\",\"getThresholdMode\",\"setThreshold\",\"getThreshold\",\"setPatternDetectionMode\",\"getPatternDetectionMode\",\"setMatrixCodeType\",\"getMatrixCodeType\",\"setLabelingMode\",\"getLabelingMode\",\"setPattRatio\",\"getPattRatio\",\"setImageProcMode\",\"getImageProcMode\"].forEach((function(I){A[I]=A.instance[I]})),this.instance)I.match(/^AR/)&&(this[I]=this.instance[I])}},{key:\"loadCamera\",value:(D=I(o().mark((function A(I){var g,B;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(g=\"/camera_param_\"+this.cameraCount++,!(I instanceof Uint8Array)){A.next=5;break}B=I,A.next=14;break;case 5:return A.prev=5,A.next=8,QI.fetchRemoteData(I);case 8:B=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(B,g),A.abrupt(\"return\",this.instance._loadCamera(g));case 16:case\"end\":return A.stop()}}),A,this,[[5,11]])}))),function(A){return D.apply(this,arguments)})},{key:\"addMarker\",value:(i=I(o().mark((function A(I,g){var B,C;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(B=\"/marker_\"+this.markerCount++,-1===g.indexOf(\"\\n\")){A.next=5;break}C=QI.string2Uint8Data(g),A.next=14;break;case 5:return A.prev=5,A.next=8,QI.fetchRemoteData(g);case 8:C=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(C,B),A.abrupt(\"return\",this.instance._addMarker(I,B));case 16:case\"end\":return A.stop()}}),A,this,[[5,11]])}))),function(A,I){return i.apply(this,arguments)})},{key:\"addMultiMarker\",value:(Q=I(o().mark((function A(g,B){var C,Q,E,i,D,a,w;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return C=\"/multi_marker_\"+this.multiMarkerCount++,A.next=3,QI.fetchRemoteData(B);case 3:return Q=A.sent,E=QI.parseMultiFile(Q),i=function(){var A=I(o().mark((function A(I){var g,C;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return g=new URL(I,B).toString(),A.next=3,QI.fetchRemoteData(g);case 3:C=A.sent,this._storeDataFile(C,I);case 5:case\"end\":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),D=E.map(i,this),A.next=9,Promise.all(D);case 9:return a=this.instance._addMultiMarker(g,C),w=this.instance.getMultiMarkerNum(g,a),A.abrupt(\"return\",[a,w]);case 12:case\"end\":return A.stop()}}),A,this)}))),function(A,I){return Q.apply(this,arguments)})},{key:\"addNFTMarker\",value:(B=I(o().mark((function A(g,B){var C,Q,E,i;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return C=\"/markerNFT_\"+this.markerCount++,Q=[\"fset\",\"iset\",\"fset3\"],E=function(){var A=I(o().mark((function A(I){var g,Q,E;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return g=B+\".\"+I,Q=C+\".\"+I,A.next=4,QI.fetchRemoteData(g);case 4:E=A.sent,this._storeDataFile(E,Q);case 6:case\"end\":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),i=Q.map(E,this),A.next=6,Promise.all(i);case 6:return A.abrupt(\"return\",this.instance._addNFTMarker(g,C));case 7:case\"end\":return A.stop()}}),A,this)}))),function(A,I){return B.apply(this,arguments)})},{key:\"_storeDataFile\",value:function(A,I){this.instance.FS.writeFile(I,A,{encoding:\"binary\"})}}],[{key:\"UNKNOWN_MARKER\",get:function(){return-1}},{key:\"PATTERN_MARKER\",get:function(){return 0}},{key:\"BARCODE_MARKER\",get:function(){return 1}},{key:\"NFT_MARKER\",get:function(){return 2}}]),A}();function iI(A,I,g){return I in A?Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}):A[I]=g,A}function oI(A,I){var g=Object.keys(A);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(A);I&&(B=B.filter((function(I){return Object.getOwnPropertyDescriptor(A,I).enumerable}))),g.push.apply(g,B)}return g}function DI(A){for(var I=1;I<arguments.length;I++){var g=null!=arguments[I]?arguments[I]:{};I%2?oI(Object(g),!0).forEach((function(I){iI(A,I,g[I])})):Object.getOwnPropertyDescriptors?Object.defineProperties(A,Object.getOwnPropertyDescriptors(g)):oI(Object(g)).forEach((function(I){Object.defineProperty(A,I,Object.getOwnPropertyDescriptor(g,I))}))}return A}var aI=function(){function A(I,g,B,Q){C(this,A),this.options=DI(DI({},{canvas:null,orientation:\"landscape\"}),Q),this.id=-1,this.width=I,this.height=g,this.image,this.orientation=this.options.orientation,this.cameraParam=B,this.cameraId=-1,this.cameraLoaded=!1,this.artoolkit,this.listeners={},this.defaultMarkerWidth=1,this.patternMarkers={},this.barcodeMarkers={},this.nftMarkers={},this.transform_mat=new Float32Array(16),this.transformGL_RH=new Float64Array(16),this.videoWidth=I,this.videoHeight=g,this.videoSize=this.videoWidth*this.videoHeight,this.framepointer=null,this.framesize=null,this.dataHeap=null,this.videoLuma=null,this.camera_mat=null,this.marker_transform_mat=null,this.videoLumaPointer=null,this.options.canvas?this.canvas=this.options.canvas:\"undefined\"!=typeof document&&(this.canvas=document.createElement(\"canvas\")),this.canvas?(this.canvas.width=I,this.canvas.height=g,this.ctx=this.canvas.getContext(\"2d\")):console.warn(\"No canvas available\"),this.nftMarkerFound=!1,this.nftMarkerFoundTime=!1,this.nftMarkerCount=0,this._bwpointer=!1}var g,B,Q,i,D,a;return E(A,[{key:\"dispose\",value:function(){for(var A in this.cameraId=-1,this.cameraParam=\"\",this.cameraLoaded=!1,this.id>-1&&this.artoolkit.teardown(this.id),this.image&&this.image.srcObject,this)this[A]=null}},{key:\"process\",value:function(A){var I=this.detectMarker(A);0!=I&&console.error(\"[ARController]\",\"detectMarker error:\",I);var g,B,C=this.getMarkerNum();for(g in this.patternMarkers)(B=this.patternMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(g in this.barcodeMarkers)(B=this.barcodeMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(g in this.nftMarkers)(B=this.nftMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(var Q=0;Q<C;Q++){var E=this.getMarker(Q),i=EI.UNKNOWN_MARKER,o=this.trackPatternMarkerId(-1);E.idPatt>-1&&(E.id===E.idPatt||-1===E.idMatrix)?(o=this.trackPatternMarkerId(E.idPatt),i=EI.PATTERN_MARKER,E.dir!==E.dirPatt&&this.setMarkerInfoDir(Q,E.dirPatt)):E.idMatrix>-1&&(o=this.trackBarcodeMarkerId(E.idMatrix),i=EI.BARCODE_MARKER,E.dir!==E.dirMatrix&&this.setMarkerInfoDir(Q,E.dirMatrix)),i!==EI.UNKNOWN_MARKER&&o.inPrevious?this.getTransMatSquareCont(Q,o.markerWidth,o.matrix,o.matrix):this.getTransMatSquare(Q,o.markerWidth,o.matrix),o.inCurrent=!0,this.transMatToGLMat(o.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:\"getMarker\",target:this,data:{index:Q,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}var D=this.nftMarkerCount;this.detectNFTMarker();for(var a=0;a<D;a++){var w=this.getNFTMarker(a),s=EI.NFT_MARKER;if(w.found){this.nftMarkerFound=a,this.nftMarkerFoundTime=Date.now();var G=this.trackNFTMarkerId(a);G.matrix.set(w.pose),G.inCurrent=!0,this.transMatToGLMat(G.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:\"getNFTMarker\",target:this,data:{index:a,type:s,marker:w,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}else self.nftMarkerFound===a&&Date.now()-this.nftMarkerFoundTime>200&&(this.nftMarkerFound=!1,this.dispatchEvent({name:\"lostNFTMarker\",target:this,data:{index:a,type:s,marker:w,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}}))}for(var t=this.getMultiMarkerCount(),h=0;h<t;h++){var R=this.getMultiMarkerPatternCount(h),F=!1;this.artoolkit.getTransMatMultiSquareRobust(this.id,h),this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat);for(var y=0;y<R;y++)if((n=this.getMultiEachMarker(h,y)).visible>=0){F=!0,this.dispatchEvent({name:\"getMultiMarker\",target:this,data:{multiMarkerId:h,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}});break}if(F)for(var r=0;r<R;r++){var n=this.getMultiEachMarker(h,r);this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:\"getMultiMarkerSub\",target:this,data:{multiMarkerId:h,markerIndex:r,marker:n,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}}this._bwpointer&&this.debugDraw()}},{key:\"detectNFTMarker\",value:function(){this.artoolkit.detectNFTMarker(this.id)}},{key:\"trackPatternMarkerId\",value:function(A,I){var g=this.patternMarkers[A];return g||(this.patternMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:\"trackBarcodeMarkerId\",value:function(A,I){var g=this.barcodeMarkers[A];return g||(this.barcodeMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:\"trackNFTMarkerId\",value:function(A,I){var g=this.nftMarkers[A];return g||(this.nftMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:\"getMultiMarkerCount\",value:function(){return this.artoolkit.getMultiMarkerCount(this.id)}},{key:\"getMultiMarkerPatternCount\",value:function(A){return this.artoolkit.getMultiMarkerNum(this.id,A)}},{key:\"addEventListener\",value:function(A,I){this.listeners[A]||(this.listeners[A]=[]),this.listeners[A].push(I)}},{key:\"removeEventListener\",value:function(A,I){if(this.listeners[A]){var g=this.listeners[A].indexOf(I);g>-1&&this.listeners[A].splice(g,1)}}},{key:\"dispatchEvent\",value:function(A){var I=this.listeners[A.name];if(I)for(var g=0;g<I.length;g++)I[g].call(this,A)}},{key:\"debugSetup\",value:function(){\"undefined\"!=typeof document?(document.body.appendChild(this.canvas),this.setDebugMode(!0),this._bwpointer=this.getProcessingImage()):console.log(\"debugSetup() currently only supports Browser environments\")}},{key:\"debugDraw\",value:function(){for(var A=new Uint8ClampedArray(this.artoolkit.instance.HEAPU8.buffer,this._bwpointer,this.framesize),I=new ImageData(new Uint8ClampedArray(this.canvas.width*this.canvas.height*4),this.canvas.width,this.canvas.height),g=0,B=0;g<A.length;g++,B+=4){var C=A[g];I.data[B+0]=C,I.data[B+1]=C,I.data[B+2]=C,I.data[B+3]=255}this.ctx.putImageData(I,0,0);for(var Q=this.getMarkerNum(),E=0;E<Q;E++)this.drawDebugMarker(this.getMarker(E))}},{key:\"drawDebugMarker\",value:function(A){var I=A.vertex,g=A.pos,B=this.ctx;B.lineWidth=5,B.strokeStyle=\"red\",B.beginPath(),B.moveTo(I[0][0],I[0][1]),B.lineTo(I[1][0],I[1][1]),B.stroke(),B.beginPath(),B.moveTo(I[2][0],I[2][1]),B.lineTo(I[3][0],I[3][1]),B.stroke(),B.strokeStyle=\"green\",B.beginPath(),B.lineTo(I[1][0],I[1][1]),B.lineTo(I[2][0],I[2][1]),B.stroke(),B.beginPath(),B.moveTo(I[3][0],I[3][1]),B.lineTo(I[0][0],I[0][1]),B.stroke(),B.beginPath(),B.arc(g[0],g[1],8,0,2*Math.PI),B.fillStyle=\"red\",B.fill()}},{key:\"loadMarker\",value:(a=I(o().mark((function A(I){return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMarker(this.id,I);case 2:return A.abrupt(\"return\",A.sent);case 3:case\"end\":return A.stop()}}),A,this)}))),function(A){return a.apply(this,arguments)})},{key:\"loadMultiMarker\",value:(D=I(o().mark((function A(I){return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMultiMarker(this.id,I);case 2:return A.abrupt(\"return\",A.sent);case 3:case\"end\":return A.stop()}}),A,this)}))),function(A){return D.apply(this,arguments)})},{key:\"loadNFTMarker\",value:(i=I(o().mark((function A(I){var g;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addNFTMarker(this.id,I);case 2:return g=A.sent,this.nftMarkerCount=g+1,A.abrupt(\"return\",g);case 5:case\"end\":return A.stop()}}),A,this)}))),function(A){return i.apply(this,arguments)})},{key:\"getTransMatSquare\",value:function(A,I,g){return this.artoolkit.getTransMatSquare(this.id,A,I),g.set(this.marker_transform_mat),g}},{key:\"getTransMatSquareCont\",value:function(A,I,g,B){return this.marker_transform_mat.set(g),this.artoolkit.getTransMatSquareCont(this.id,A,I),B.set(this.marker_transform_mat),B}},{key:\"getTransMatMultiSquare\",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:\"getTransMatMultiSquareRobust\",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:\"transMatToGLMat\",value:function(A,I,g){return null==I&&(I=new Float64Array(16)),I[0]=A[0],I[4]=A[1],I[8]=A[2],I[12]=A[3],I[1]=A[4],I[5]=A[5],I[9]=A[6],I[13]=A[7],I[2]=A[8],I[6]=A[9],I[10]=A[10],I[14]=A[11],I[3]=0,I[7]=0,I[11]=0,I[15]=1,null!=g&&0!==g&&(I[12]*=g,I[13]*=g,I[14]*=g),I}},{key:\"arglCameraViewRHf\",value:function(A,I,g){var B;return(B=null==I?new Float64Array(16):I)[0]=A[0],B[4]=A[4],B[8]=A[8],B[12]=A[12],B[1]=-A[1],B[5]=-A[5],B[9]=-A[9],B[13]=-A[13],B[2]=-A[2],B[6]=-A[6],B[10]=-A[10],B[14]=-A[14],B[3]=0,B[7]=0,B[11]=0,B[15]=1,null!=g&&0!==g&&(B[12]*=g,B[13]*=g,B[14]*=g),B}},{key:\"detectMarker\",value:function(A){return this._copyImageToHeap(A)?this.artoolkit.detectMarker(this.id):-99}},{key:\"getMarkerNum\",value:function(){return this.artoolkit.getMarkerNum(this.id)}},{key:\"getMarker\",value:function(A){if(0===this.artoolkit.getMarker(this.id,A))return this.artoolkit.markerInfo}},{key:\"getNFTMarker\",value:function(A){if(0===this.artoolkit.getNFTMarker(this.id,A))return this.artoolkit.NFTMarkerInfo}},{key:\"setMarkerInfoVertex\",value:function(A,I){for(var g=0;g<I.length;g++)this.marker_transform_mat[2*g+0]=I[g][0],this.marker_transform_mat[2*g+1]=I[g][1];return this.artoolkit.setMarkerInfoVertex(this.id,A)}},{key:\"cloneMarkerInfo\",value:function(A){return JSON.parse(JSON.stringify(A))}},{key:\"getMultiEachMarker\",value:function(A,I){if(0===this.artoolkit.getMultiEachMarker(this.id,A,I))return this.artoolkit.multiEachMarkerInfo}},{key:\"getTransformationMatrix\",value:function(){return this.transform_mat}},{key:\"getCameraMatrix\",value:function(){return this.camera_mat}},{key:\"getMarkerTransformationMatrix\",value:function(){return this.marker_transform_mat}},{key:\"setDebugMode\",value:function(A){return this.artoolkit.setDebugMode(this.id,A)}},{key:\"getDebugMode\",value:function(){return this.artoolkit.getDebugMode(this.id)}},{key:\"getProcessingImage\",value:function(){return this.artoolkit.getProcessingImage(this.id)}},{key:\"setLogLevel\",value:function(A){return this.artoolkit.setLogLevel(A)}},{key:\"getLogLevel\",value:function(){return this.artoolkit.getLogLevel()}},{key:\"setMarkerInfoDir\",value:function(A,I){return this.artoolkit.setMarkerInfoDir(this.id,A,I)}},{key:\"setProjectionNearPlane\",value:function(A){return this.artoolkit.setProjectionNearPlane(this.id,A)}},{key:\"getProjectionNearPlane\",value:function(){return this.artoolkit.getProjectionNearPlane(this.id)}},{key:\"setProjectionFarPlane\",value:function(A){return this.artoolkit.setProjectionFarPlane(this.id,A)}},{key:\"getProjectionFarPlane\",value:function(){return this.artoolkit.getProjectionFarPlane(this.id)}},{key:\"setThresholdMode\",value:function(A){return this.artoolkit.setThresholdMode(this.id,A)}},{key:\"getThresholdMode\",value:function(){return this.artoolkit.getThresholdMode(this.id)}},{key:\"setThreshold\",value:function(A){return this.artoolkit.setThreshold(this.id,A)}},{key:\"getThreshold\",value:function(){return this.artoolkit.getThreshold(this.id)}},{key:\"setPatternDetectionMode\",value:function(A){return this.artoolkit.setPatternDetectionMode(this.id,A)}},{key:\"getPatternDetectionMode\",value:function(){return this.artoolkit.getPatternDetectionMode(this.id)}},{key:\"setMatrixCodeType\",value:function(A){return this.artoolkit.setMatrixCodeType(this.id,A)}},{key:\"getMatrixCodeType\",value:function(){return this.artoolkit.getMatrixCodeType(this.id)}},{key:\"setLabelingMode\",value:function(A){return this.artoolkit.setLabelingMode(this.id,A)}},{key:\"getLabelingMode\",value:function(){return this.artoolkit.getLabelingMode(this.id)}},{key:\"setPattRatio\",value:function(A){return this.artoolkit.setPattRatio(this.id,A)}},{key:\"getPattRatio\",value:function(){return this.artoolkit.getPattRatio(this.id)}},{key:\"setImageProcMode\",value:function(A){return this.artoolkit.setImageProcMode(this.id,A)}},{key:\"getImageProcMode\",value:function(){return this.artoolkit.getImageProcMode(this.id)}},{key:\"_initialize\",value:(Q=I(o().mark((function A(){var I,g=this;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,(new EI).init();case 2:return this.artoolkit=A.sent,console.log(\"[ARController]\",\"ARToolkit initialized\"),A.next=6,this.artoolkit.loadCamera(this.cameraParam);case 6:return this.cameraId=A.sent,console.log(\"[ARController]\",\"Camera params loaded with ID\",this.cameraId),this.id=this.artoolkit.setup(this.width,this.height,this.cameraId),console.log(\"[ARController]\",\"Got ID from setup\",this.id),this._initNFT(),I=artoolkit.frameMalloc,this.framepointer=I.framepointer,this.framesize=I.framesize,this.videoLumaPointer=I.videoLumaPointer,this.dataHeap=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.framepointer,this.framesize),this.videoLuma=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.videoLumaPointer,this.framesize/4),this.camera_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.camera,16),this.marker_transform_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.transform,12),this.setProjectionNearPlane(.1),this.setProjectionFarPlane(1e3),setTimeout((function(){g.dispatchEvent({name:\"load\",target:g})}),1),A.abrupt(\"return\",this);case 23:case\"end\":return A.stop()}}),A,this)}))),function(){return Q.apply(this,arguments)})},{key:\"_initNFT\",value:function(){this.artoolkit.setupAR2(this.id)}},{key:\"_copyImageToHeap\",value:function(A){var I;if(A||(A=this.image),A.data)I=A.data;else{if(this.ctx.save(),\"portrait\"===this.orientation){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);var g=this.canvas.height/this.canvas.width,B=this.canvas.width*g,C=this.canvas.height*g,Q=(this.canvas.width-C)/2;this.ctx.drawImage(A,Q,0,C,B)}else this.ctx.drawImage(A,0,0,this.canvas.width,this.canvas.height);this.ctx.restore(),I=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height).data}if(this.videoLuma)for(var E=0,i=0;i<this.videoSize;i++){var o=I[E+0],D=I[E+1],a=I[E+2];this.videoLuma[i]=o+o+o+a+D+D+D+D>>3,E+=4}return!!this.dataHeap&&(this.dataHeap.set(I),!0)}}],[{key:\"initWithDimensions\",value:(B=I(o().mark((function I(g,B,C,Q){var E;return o().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return E=new A(g,B,C,Q),I.next=3,E._initialize();case 3:return I.abrupt(\"return\",I.sent);case 4:case\"end\":return I.stop()}}),I)}))),function(A,I,g,C){return B.apply(this,arguments)})},{key:\"initWithImage\",value:(g=I(o().mark((function I(g,B,C){var Q,E,i;return o().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return Q=g.videoWidth||g.width,E=g.videoHeight||g.height,I.next=4,A.initWithDimensions(Q,E,B,C);case 4:return(i=I.sent).image=g,I.abrupt(\"return\",i);case 7:case\"end\":return I.stop()}}),I)}))),function(A,I,B){return g.apply(this,arguments)})}]),A}();const wI={ARToolkit:EI,ARController:aI}})(),B.default})()));\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\n(() => {\n\"use strict\";\n/*!***************************************************************!*\\\n  !*** ./three.js/src/threex/arjs-markercontrols-nft.worker.js ***!\n  \\***************************************************************/\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsartoolkit */ \"./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js\");\n/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsartoolkit__WEBPACK_IMPORTED_MODULE_0__);\n/* eslint-env worker */\n\nconst { ARController } = (jsartoolkit__WEBPACK_IMPORTED_MODULE_0___default());\n\nonmessage = function (e) {\n  var msg = e.data;\n  switch (msg.type) {\n    case \"init\": {\n      load(msg);\n      return;\n    }\n    case \"process\": {\n      next = msg.imagedata;\n      process();\n      return;\n    }\n  }\n};\n\nvar next = null;\n\nvar ar = null;\nvar markerResult = null;\n\nfunction load(msg) {\n  var camUrl, nftMarkerUrl;\n  var basePath = self.origin;\n  console.log(\"base path:\", basePath);\n  // test if the msg.param (the incoming url) is an http or https path\n  var regexC =\n    /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim;\n  var reC = regexC.test(msg.param);\n  if (reC == true) {\n    camUrl = msg.param;\n  } else if (reC == false) {\n    camUrl = basePath + \"/\" + msg.param;\n  }\n  var onLoad = function (arController) {\n    ar = arController;\n    var cameraMatrix = ar.getCameraMatrix();\n\n    // after the ARController is set up, we load the NFT Marker\n    var regexM =\n      /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim;\n    var reM = regexM.test(msg.marker);\n    if (reM == true) {\n      nftMarkerUrl = msg.marker;\n    } else if (reM == false) {\n      nftMarkerUrl = basePath + \"/\" + msg.marker;\n    }\n    ar.loadNFTMarker(nftMarkerUrl)\n      .then(function (markerId) {\n        ar.trackNFTMarkerId(markerId);\n        postMessage({ type: \"endLoading\" });\n      })\n      .catch(function (err) {\n        console.log(\"Error in loading marker on Worker\", err);\n      });\n\n    // ...and we listen for event when marker has been found from camera\n    ar.addEventListener(\"getNFTMarker\", function (ev) {\n      // let AR.js know that a NFT marker has been found, with its matrix for positioning\n      markerResult = {\n        type: \"found\",\n        matrix: JSON.stringify(ev.data.matrix),\n      };\n    });\n\n    postMessage({ type: \"loaded\", proj: JSON.stringify(cameraMatrix) });\n  };\n\n  var onError = function (error) {\n    console.error(\"Error while intizalizing arController\", error);\n  };\n\n  ARController.initWithDimensions(msg.pw, msg.ph, camUrl)\n    .then(onLoad)\n    .catch(onError);\n}\n\nfunction process() {\n  markerResult = null;\n\n  if (ar && ar.process) {\n    ar.process(next);\n  }\n\n  if (markerResult) {\n    postMessage(markerResult);\n  } else {\n    postMessage({\n      type: \"not found\",\n    });\n  }\n  next = null;\n}\n\n})();\n\n/******/ })()\n;\n", "Worker", undefined, undefined);
}


/***/ }),

/***/ "./node_modules/worker-loader/dist/runtime/inline.js":
/*!***********************************************************!*\
  !*** ./node_modules/worker-loader/dist/runtime/inline.js ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";


/* eslint-env browser */

/* eslint-disable no-undef, no-use-before-define, new-cap */
module.exports = function (content, workerConstructor, workerOptions, url) {
  var globalScope = self || window;

  try {
    try {
      var blob;

      try {
        // New API
        blob = new globalScope.Blob([content]);
      } catch (e) {
        // BlobBuilder = Deprecated, but widely implemented
        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;
        blob = new BlobBuilder();
        blob.append(content);
        blob = blob.getBlob();
      }

      var URL = globalScope.URL || globalScope.webkitURL;
      var objectURL = URL.createObjectURL(blob);
      var worker = new globalScope[workerConstructor](objectURL, workerOptions);
      URL.revokeObjectURL(objectURL);
      return worker;
    } catch (e) {
      return new globalScope[workerConstructor]("data:application/javascript,".concat(encodeURIComponent(content)), workerOptions);
    }
  } catch (e) {
    if (!url) {
      throw Error("Inline worker is not supported");
    }

    return new globalScope[workerConstructor](url, workerOptions);
  }
};

/***/ }),

/***/ "./three.js/src/markers-area/arjs-markersareacontrols.js":
/*!***************************************************************!*\
  !*** ./three.js/src/markers-area/arjs-markersareacontrols.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../threex/threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");
/* harmony import */ var _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../threex/arjs-markercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./arjs-markersareacontrols */ "./three.js/src/markers-area/arjs-markersareacontrols.js");





const MarkersAreaControls = function (arToolkitContext, object3d, parameters) {
  var _this = this;
  _threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__["default"].call(this, object3d);

  if (arguments.length > 3)
    console.assert("wrong api for", MarkersAreaControls);

  // have a parameters in argument
  this.parameters = {
    // list of controls for each subMarker
    subMarkersControls: parameters.subMarkersControls,
    // list of pose for each subMarker relative to the origin
    subMarkerPoses: parameters.subMarkerPoses,
    // change matrix mode - [modelViewMatrix, cameraTransformMatrix]
    changeMatrixMode:
      parameters.changeMatrixMode !== undefined
        ? parameters.changeMatrixMode
        : "modelViewMatrix",
  };

  this.object3d.visible = false;
  // honor obsolete stuff - add a warning to use
  this.subMarkersControls = this.parameters.subMarkersControls;
  this.subMarkerPoses = this.parameters.subMarkerPoses;

  // listen to arToolkitContext event 'sourceProcessed'
  // - after we fully processed one image, aka when we know all detected poses in it
  arToolkitContext.addEventListener("sourceProcessed", function () {
    _this._onSourceProcessed();
  });
};

MarkersAreaControls.prototype = Object.create(_threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__["default"].prototype);
MarkersAreaControls.prototype.constructor = MarkersAreaControls;

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

/**
 * What to do when a image source is fully processed
 */
MarkersAreaControls.prototype._onSourceProcessed = function () {
  var _this = this;
  var stats = {
    count: 0,
    position: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
    },
    quaternion: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0, 0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0, 0, 0, 0),
    },
    scale: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
    },
  };

  var firstQuaternion =
    _this.parameters.subMarkersControls[0].object3d.quaternion;

  this.parameters.subMarkersControls.forEach(function (
    markerControls,
    markerIndex
  ) {
    var markerObject3d = markerControls.object3d;
    // if this marker is not visible, ignore it
    if (markerObject3d.visible === false) return;

    // transformation matrix of this.object3d according to this sub-markers
    var matrix = markerObject3d.matrix.clone();
    var markerPose = _this.parameters.subMarkerPoses[markerIndex];
    matrix.multiply(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().getInverse(markerPose));

    // decompose the matrix into .position, .quaternion, .scale
    var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();
    var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    matrix.decompose(position, quaternion, scale);

    // http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
    stats.count++;

    MarkersAreaControls.averageVector3(
      stats.position.sum,
      position,
      stats.count,
      stats.position.average
    );
    MarkersAreaControls.averageQuaternion(
      stats.quaternion.sum,
      quaternion,
      firstQuaternion,
      stats.count,
      stats.quaternion.average
    );
    MarkersAreaControls.averageVector3(
      stats.scale.sum,
      scale,
      stats.count,
      stats.scale.average
    );
  });

  // honor _this.object3d.visible
  if (stats.count > 0) {
    _this.object3d.visible = true;
  } else {
    _this.object3d.visible = false;
  }

  // if at least one sub-marker has been detected, make the average of all detected markers
  if (stats.count > 0) {
    // compute modelViewMatrix
    var modelViewMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4();
    modelViewMatrix.compose(
      stats.position.average,
      stats.quaternion.average,
      stats.scale.average
    );

    // change _this.object3d.matrix based on parameters.changeMatrixMode
    if (this.parameters.changeMatrixMode === "modelViewMatrix") {
      _this.object3d.matrix.copy(modelViewMatrix);
    } else if (this.parameters.changeMatrixMode === "cameraTransformMatrix") {
      _this.object3d.matrix.getInverse(modelViewMatrix);
    } else {
      console.assert(false);
    }

    // decompose - the matrix into .position, .quaternion, .scale
    _this.object3d.matrix.decompose(
      _this.object3d.position,
      _this.object3d.quaternion,
      _this.object3d.scale
    );
  }
};

//////////////////////////////////////////////////////////////////////////////
//		Utility functions
//////////////////////////////////////////////////////////////////////////////

/**
 * from http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
 */
MarkersAreaControls.averageQuaternion = function (
  quaternionSum,
  newQuaternion,
  firstQuaternion,
  count,
  quaternionAverage
) {
  quaternionAverage = quaternionAverage || new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();
  // sanity check
  console.assert(firstQuaternion instanceof three__WEBPACK_IMPORTED_MODULE_0__.Quaternion === true);

  // from http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
  if (newQuaternion.dot(firstQuaternion) > 0) {
    newQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(
      -newQuaternion.x,
      -newQuaternion.y,
      -newQuaternion.z,
      -newQuaternion.w
    );
  }

  quaternionSum.x += newQuaternion.x;
  quaternionSum.y += newQuaternion.y;
  quaternionSum.z += newQuaternion.z;
  quaternionSum.w += newQuaternion.w;

  quaternionAverage.x = quaternionSum.x / count;
  quaternionAverage.y = quaternionSum.y / count;
  quaternionAverage.z = quaternionSum.z / count;
  quaternionAverage.w = quaternionSum.w / count;

  quaternionAverage.normalize();

  return quaternionAverage;
};

MarkersAreaControls.averageVector3 = function (
  vector3Sum,
  vector3,
  count,
  vector3Average
) {
  vector3Average = vector3Average || new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();

  vector3Sum.x += vector3.x;
  vector3Sum.y += vector3.y;
  vector3Sum.z += vector3.z;

  vector3Average.x = vector3Sum.x / count;
  vector3Average.y = vector3Sum.y / count;
  vector3Average.z = vector3Sum.z / count;

  return vector3Average;
};

//////////////////////////////////////////////////////////////////////////////
//		Utility function
//////////////////////////////////////////////////////////////////////////////

/**
 * compute the center of this multimarker file
 */
MarkersAreaControls.computeCenter = function (jsonData) {
  var multiMarkerFile = JSON.parse(jsonData);
  var stats = {
    count: 0,
    position: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
    },
    quaternion: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0, 0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0, 0, 0, 0),
    },
    scale: {
      sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
      average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0),
    },
  };
  var firstQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(); // FIXME ???

  multiMarkerFile.subMarkersControls.forEach(function (item) {
    var poseMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix);

    var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();
    var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    poseMatrix.decompose(position, quaternion, scale);

    // http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
    stats.count++;

    MarkersAreaControls.averageVector3(
      stats.position.sum,
      position,
      stats.count,
      stats.position.average
    );
    MarkersAreaControls.averageQuaternion(
      stats.quaternion.sum,
      quaternion,
      firstQuaternion,
      stats.count,
      stats.quaternion.average
    );
    MarkersAreaControls.averageVector3(
      stats.scale.sum,
      scale,
      stats.count,
      stats.scale.average
    );
  });

  var averageMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4();
  averageMatrix.compose(
    stats.position.average,
    stats.quaternion.average,
    stats.scale.average
  );

  return averageMatrix;
};

MarkersAreaControls.computeBoundingBox = function (jsonData) {
  var multiMarkerFile = JSON.parse(jsonData);
  var boundingBox = new three__WEBPACK_IMPORTED_MODULE_0__.Box3();

  multiMarkerFile.subMarkersControls.forEach(function (item) {
    var poseMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix);

    var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();
    var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();
    poseMatrix.decompose(position, quaternion, scale);

    boundingBox.expandByPoint(position);
  });

  return boundingBox;
};
//////////////////////////////////////////////////////////////////////////////
//		updateSmoothedControls
//////////////////////////////////////////////////////////////////////////////

MarkersAreaControls.prototype.updateSmoothedControls = function (
  smoothedControls,
  lerpsValues
) {
  // handle default values
  if (lerpsValues === undefined) {
    // FIXME this parameter format is uselessly cryptic
    // lerpValues = [
    // {lerpPosition: 0.5, lerpQuaternion: 0.2, lerpQuaternion: 0.7}
    // ]
    lerpsValues = [
      [0.3 + 0.1, 0.1, 0.3],
      [0.4 + 0.1, 0.1, 0.4],
      [0.4 + 0.1, 0.2, 0.5],
      [0.5 + 0.1, 0.2, 0.7],
      [0.5 + 0.1, 0.2, 0.7],
    ];
  }
  // count how many subMarkersControls are visible
  var nVisible = 0;
  this.parameters.subMarkersControls.forEach(function (
    markerControls,
    markerIndex
  ) {
    var markerObject3d = markerControls.object3d;
    if (markerObject3d.visible === true) nVisible++;
  });

  // find the good lerpValues
  if (lerpsValues[nVisible - 1] !== undefined) {
    var lerpValues = lerpsValues[nVisible - 1];
  } else {
    var lerpValues = lerpsValues[lerpsValues.length - 1];
  }

  // modify lerpValues in smoothedControls
  smoothedControls.parameters.lerpPosition = lerpValues[0];
  smoothedControls.parameters.lerpQuaternion = lerpValues[1];
  smoothedControls.parameters.lerpScale = lerpValues[2];
};

//////////////////////////////////////////////////////////////////////////////
//		Create ArMultiMarkerControls from JSON
//////////////////////////////////////////////////////////////////////////////

MarkersAreaControls.fromJSON = function (
  arToolkitContext,
  parent3D,
  markerRoot,
  jsonData,
  parameters
) {
  var multiMarkerFile = JSON.parse(jsonData);
  // declare variables
  var subMarkersControls = [];
  var subMarkerPoses = [];
  // handle default arguments
  parameters = parameters || {};

  // prepare the parameters
  multiMarkerFile.subMarkersControls.forEach(function (item) {
    // create a markerRoot
    var markerRoot = new three__WEBPACK_IMPORTED_MODULE_0__.Object3D();
    parent3D.add(markerRoot);

    // create markerControls for our markerRoot
    var subMarkerControls = new _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_2__["default"](
      arToolkitContext,
      markerRoot,
      item.parameters
    );

    // if( true ){
    // store it in the parameters
    subMarkersControls.push(subMarkerControls);
    subMarkerPoses.push(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix));
    // }else{
    // 		// build a smoothedControls
    // 		var smoothedRoot = new THREE.Group()
    // 		parent3D.add(smoothedRoot)
    // 		var smoothedControls = new THREEx.ArSmoothedControls(smoothedRoot, {
    // 			lerpPosition : 0.1,
    // 			lerpQuaternion : 0.1,
    // 			lerpScale : 0.1,
    // 			minVisibleDelay: 0,
    // 			minUnvisibleDelay: 0,
    // 		})
    // 		onRenderFcts.push(function(delta){
    // 			smoothedControls.update(markerRoot)	// TODO this is a global
    // 		})
    //
    //
    // 		// store it in the parameters
    // 		subMarkersControls.push(smoothedControls)
    // 		subMarkerPoses.push(new THREE.Matrix4().fromArray(item.poseMatrix))
    // }
  });

  parameters.subMarkersControls = subMarkersControls;
  parameters.subMarkerPoses = subMarkerPoses;
  // create a new ArMultiMarkerControls
  var multiMarkerControls = new _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_3__["default"](
    arToolkitContext,
    markerRoot,
    parameters
  );

  // return it
  return multiMarkerControls;
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkersAreaControls);


/***/ }),

/***/ "./three.js/src/markers-area/arjs-markersarealearning.js":
/*!***************************************************************!*\
  !*** ./three.js/src/markers-area/arjs-markersarealearning.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arjs-markersareacontrols */ "./three.js/src/markers-area/arjs-markersareacontrols.js");


const MarkersAreaLearning = function (arToolkitContext, subMarkersControls) {
  var _this = this;
  this._arToolkitContext = arToolkitContext;

  // Init variables
  this.subMarkersControls = subMarkersControls;
  this.enabled = true;

  // listen to arToolkitContext event 'sourceProcessed'
  // - after we fully processed one image, aka when we know all detected poses in it
  arToolkitContext.addEventListener("sourceProcessed", function () {
    _this._onSourceProcessed();
  });
};

//////////////////////////////////////////////////////////////////////////////
//		statistic collection
//////////////////////////////////////////////////////////////////////////////

/**
 * What to do when a image source is fully processed
 */
MarkersAreaLearning.prototype._onSourceProcessed = function () {
  var originQuaternion = this.subMarkersControls[0].object3d.quaternion;
  // here collect the statistic on relative positioning

  // honor this.enabled
  if (this.enabled === false) return;

  // keep only the visible markers
  var visibleMarkerControls = this.subMarkersControls.filter(function (
    markerControls
  ) {
    return markerControls.object3d.visible === true;
  });

  var count = Object.keys(visibleMarkerControls).length;

  var positionDelta = new THREE.Vector3();
  var quaternionDelta = new THREE.Quaternion();
  var scaleDelta = new THREE.Vector3();
  var tmpMatrix = new THREE.Matrix4();

  // go thru all the visibleMarkerControls
  for (var i = 0; i < count; i++) {
    var markerControls1 = visibleMarkerControls[i];
    for (var j = 0; j < count; j++) {
      var markerControls2 = visibleMarkerControls[j];

      // if markerControls1 is markerControls2, then skip it
      if (i === j) continue;

      //////////////////////////////////////////////////////////////////////////////
      //		create data in markerControls1.object3d.userData if needed
      //////////////////////////////////////////////////////////////////////////////
      // create seenCouples for markerControls1 if needed
      if (markerControls1.object3d.userData.seenCouples === undefined) {
        markerControls1.object3d.userData.seenCouples = {};
      }
      var seenCouples = markerControls1.object3d.userData.seenCouples;
      // create the multiMarkerPosition average if needed`
      if (seenCouples[markerControls2.id] === undefined) {
        // console.log('create seenCouples between', markerControls1.id, 'and', markerControls2.id)
        seenCouples[markerControls2.id] = {
          count: 0,
          position: {
            sum: new THREE.Vector3(0, 0, 0),
            average: new THREE.Vector3(0, 0, 0),
          },
          quaternion: {
            sum: new THREE.Quaternion(0, 0, 0, 0),
            average: new THREE.Quaternion(0, 0, 0, 0),
          },
          scale: {
            sum: new THREE.Vector3(0, 0, 0),
            average: new THREE.Vector3(0, 0, 0),
          },
        };
      }

      //////////////////////////////////////////////////////////////////////////////
      //		Compute markerControls2 position relative to markerControls1
      //////////////////////////////////////////////////////////////////////////////

      // compute markerControls2 position/quaternion/scale in relation with markerControls1
      tmpMatrix.getInverse(markerControls1.object3d.matrix);
      tmpMatrix.multiply(markerControls2.object3d.matrix);
      tmpMatrix.decompose(positionDelta, quaternionDelta, scaleDelta);

      //////////////////////////////////////////////////////////////////////////////
      //		update statistics
      //////////////////////////////////////////////////////////////////////////////
      var stats = seenCouples[markerControls2.id];
      // update the count
      stats.count++;

      // update the average of position/rotation/scale
      _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_0__["default"].averageVector3(
        stats.position.sum,
        positionDelta,
        stats.count,
        stats.position.average
      );
      _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_0__["default"].averageQuaternion(
        stats.quaternion.sum,
        quaternionDelta,
        originQuaternion,
        stats.count,
        stats.quaternion.average
      );
      _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_0__["default"].averageVector3(
        stats.scale.sum,
        scaleDelta,
        stats.count,
        stats.scale.average
      );
    }
  }
};

//////////////////////////////////////////////////////////////////////////////
//		Compute markers transformation matrix from current stats
//////////////////////////////////////////////////////////////////////////////

MarkersAreaLearning.prototype.computeResult = function () {
  var _this = this;
  var originSubControls = this.subMarkersControls[0];

  this.deleteResult();

  // special case of originSubControls averageMatrix
  originSubControls.object3d.userData.result = {
    averageMatrix: new THREE.Matrix4(),
    confidenceFactor: 1,
  };
  // TODO here check if the originSubControls has been seen at least once!!

  /**
   * ALGO in pseudo code
   *
   * - Set confidenceFactor of origin sub markers as 1
   *
   * Start Looping
   * - For a given sub marker, skip it if it already has a result.
   * - if no result, check all seen couple and find n ones which has a progress of 1 or more.
   * - So the other seen sub markers, got a valid transformation matrix.
   * - So take local averages position/orientation/scale, compose a transformation matrix.
   *   - aka transformation matrix from parent matrix * transf matrix pos/orientation/scale
   * - Multiple it by the other seen marker matrix.
   * - Loop on the array until one pass could not compute any new sub marker
   */

  do {
    var resultChanged = false;
    // loop over each subMarkerControls
    this.subMarkersControls.forEach(function (subMarkerControls) {
      // if subMarkerControls already has a result, do nothing
      var result = subMarkerControls.object3d.userData.result;
      var isLearned =
        result !== undefined && result.confidenceFactor >= 1 ? true : false;
      if (isLearned === true) return;

      // console.log('compute subMarkerControls', subMarkerControls.name())
      var otherSubControlsID = _this._getLearnedCoupleStats(subMarkerControls);
      if (otherSubControlsID === null) {
        // console.log('no learnedCoupleStats')
        return;
      }

      var otherSubControls =
        _this._getSubMarkerControlsByID(otherSubControlsID);

      var seenCoupleStats =
        subMarkerControls.object3d.userData.seenCouples[otherSubControlsID];

      var averageMatrix = new THREE.Matrix4();
      averageMatrix.compose(
        seenCoupleStats.position.average,
        seenCoupleStats.quaternion.average,
        seenCoupleStats.scale.average
      );

      var otherAverageMatrix =
        otherSubControls.object3d.userData.result.averageMatrix;

      var matrix = new THREE.Matrix4()
        .getInverse(otherAverageMatrix)
        .multiply(averageMatrix);
      matrix = new THREE.Matrix4().getInverse(matrix);

      console.assert(subMarkerControls.object3d.userData.result === undefined);
      subMarkerControls.object3d.userData.result = {
        averageMatrix: matrix,
        confidenceFactor: 1,
      };

      resultChanged = true;
    });
    // console.log('loop')
  } while (resultChanged === true);

  // debugger
  // console.log('json:', this.toJSON())
  // this.subMarkersControls.forEach(function(subMarkerControls){
  // 	var hasResult = subMarkerControls.object3d.userData.result !== undefined
  // 	console.log('marker', subMarkerControls.name(), hasResult ? 'has' : 'has NO', 'result')
  // })
};

//////////////////////////////////////////////////////////////////////////////
//		Utility function
//////////////////////////////////////////////////////////////////////////////

/**
 * get a _this.subMarkersControls id based on markerControls.id
 */
MarkersAreaLearning.prototype._getLearnedCoupleStats = function (
  subMarkerControls
) {
  // if this subMarkerControls has never been seen with another subMarkerControls
  if (subMarkerControls.object3d.userData.seenCouples === undefined)
    return null;

  var seenCouples = subMarkerControls.object3d.userData.seenCouples;
  var coupleControlsIDs = Object.keys(seenCouples).map(Number);

  for (var i = 0; i < coupleControlsIDs.length; i++) {
    var otherSubControlsID = coupleControlsIDs[i];
    // get otherSubControls
    var otherSubControls = this._getSubMarkerControlsByID(otherSubControlsID);

    // if otherSubControls isnt learned, skip it
    var result = otherSubControls.object3d.userData.result;
    var isLearned =
      result !== undefined && result.confidenceFactor >= 1 ? true : false;
    if (isLearned === false) continue;

    // return this seenCouplesStats
    return otherSubControlsID;
  }

  // if none is found, return null
  return null;
};

/**
 * get a _this.subMarkersControls based on markerControls.id
 */
MarkersAreaLearning.prototype._getSubMarkerControlsByID = function (
  controlsID
) {
  for (var i = 0; i < this.subMarkersControls.length; i++) {
    var subMarkerControls = this.subMarkersControls[i];
    if (subMarkerControls.id === controlsID) {
      return subMarkerControls;
    }
  }

  return null;
};
//////////////////////////////////////////////////////////////////////////////
//		JSON file building
//////////////////////////////////////////////////////////////////////////////

MarkersAreaLearning.prototype.toJSON = function () {
  // compute the average matrix before generating the file
  this.computeResult();

  //////////////////////////////////////////////////////////////////////////////
  //		actually build the json
  //////////////////////////////////////////////////////////////////////////////
  var data = {
    meta: {
      createdBy: "Area Learning - AR.js " + THREEx.ArToolkitContext.REVISION, // TODO: ArToolkitContext depending on build
      createdAt: new Date().toJSON(),
    },
    trackingBackend: this._arToolkitContext.parameters.trackingBackend,
    subMarkersControls: [],
  };

  var originSubControls = this.subMarkersControls[0];
  var originMatrixInverse = new THREE.Matrix4().getInverse(
    originSubControls.object3d.matrix
  );
  this.subMarkersControls.forEach(function (subMarkerControls, index) {
    // if a subMarkerControls has no result, ignore it
    if (subMarkerControls.object3d.userData.result === undefined) return;

    var poseMatrix = subMarkerControls.object3d.userData.result.averageMatrix;
    console.assert(poseMatrix instanceof THREE.Matrix4);

    // build the info
    var info = {
      parameters: {
        // to fill ...
      },
      poseMatrix: poseMatrix.toArray(),
    };
    if (subMarkerControls.parameters.type === "pattern") {
      info.parameters.type = subMarkerControls.parameters.type;
      info.parameters.patternUrl = subMarkerControls.parameters.patternUrl;
    } else if (subMarkerControls.parameters.type === "barcode") {
      info.parameters.type = subMarkerControls.parameters.type;
      info.parameters.barcodeValue = subMarkerControls.parameters.barcodeValue;
    } else console.assert(false);

    data.subMarkersControls.push(info);
  });

  var strJSON = JSON.stringify(data, null, "\t");

  //////////////////////////////////////////////////////////////////////////////
  //		round matrix elements to ease readability - for debug
  //////////////////////////////////////////////////////////////////////////////
  var humanReadable = false;
  if (humanReadable === true) {
    var tmp = JSON.parse(strJSON);
    tmp.subMarkersControls.forEach(function (markerControls) {
      markerControls.poseMatrix = markerControls.poseMatrix.map(function (
        value
      ) {
        var roundingFactor = 100;
        return Math.round(value * roundingFactor) / roundingFactor;
      });
    });
    strJSON = JSON.stringify(tmp, null, "\t");
  }

  return strJSON;
};

//////////////////////////////////////////////////////////////////////////////
//		utility function
//////////////////////////////////////////////////////////////////////////////

/**
 * reset all collected statistics
 */
MarkersAreaLearning.prototype.resetStats = function () {
  this.deleteResult();

  this.subMarkersControls.forEach(function (markerControls) {
    delete markerControls.object3d.userData.seenCouples;
  });
};
/**
 * reset all collected statistics
 */
MarkersAreaLearning.prototype.deleteResult = function () {
  this.subMarkersControls.forEach(function (markerControls) {
    delete markerControls.object3d.userData.result;
  });
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkersAreaLearning);


/***/ }),

/***/ "./three.js/src/markers-area/arjs-markersareautils.js":
/*!************************************************************!*\
  !*** ./three.js/src/markers-area/arjs-markersareautils.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../threex/arjs-context */ "./three.js/src/threex/arjs-context.js");

 // TODO context build-dependent

const MarkersAreaUtils = {};

//////////////////////////////////////////////////////////////////////////////
//		navigateToLearnerPage
//////////////////////////////////////////////////////////////////////////////

/**
 * Navigate to the multi-marker learner page
 *
 * @param {String} learnerBaseURL  - the base url for the learner
 * @param {String} trackingBackend - the tracking backend to use
 */
MarkersAreaUtils.navigateToLearnerPage = function (
  learnerBaseURL,
  trackingBackend
) {
  var learnerParameters = {
    backURL: location.href,
    trackingBackend: trackingBackend,
    markersControlsParameters:
      MarkersAreaUtils.createDefaultMarkersControlsParameters(trackingBackend),
  };
  location.href =
    learnerBaseURL +
    "?" +
    encodeURIComponent(JSON.stringify(learnerParameters));
};

//////////////////////////////////////////////////////////////////////////////
//		DefaultMultiMarkerFile
//////////////////////////////////////////////////////////////////////////////

/**
 * Create and store a default multi-marker file
 *
 * @param {String} trackingBackend - the tracking backend to use
 */
MarkersAreaUtils.storeDefaultMultiMarkerFile = function (trackingBackend) {
  var file = MarkersAreaUtils.createDefaultMultiMarkerFile(trackingBackend);
  // json.strinfy the value and store it in localStorage
  localStorage.setItem("ARjsMultiMarkerFile", JSON.stringify(file));
};

/**
 * Create a default multi-marker file
 * @param {String} trackingBackend - the tracking backend to use
 * @return {Object} - json object of the multi-marker file
 */
MarkersAreaUtils.createDefaultMultiMarkerFile = function (trackingBackend) {
  console.assert(trackingBackend);
  if (trackingBackend === undefined) debugger;

  // create absoluteBaseURL
  var link = document.createElement("a");
  link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL;
  var absoluteBaseURL = link.href;

  // create the base file
  var file = {
    meta: {
      createdBy: "AR.js " + _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].REVISION + " - Default Marker",
      createdAt: new Date().toJSON(),
    },
    trackingBackend: trackingBackend,
    subMarkersControls: [
      // empty for now... being filled
    ],
  };
  // add a subMarkersControls
  file.subMarkersControls[0] = {
    parameters: {},
    poseMatrix: new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeTranslation(0, 0, 0).toArray(),
  };
  if (trackingBackend === "artoolkit") {
    file.subMarkersControls[0].parameters.type = "pattern";
    file.subMarkersControls[0].parameters.patternUrl =
      absoluteBaseURL +
      "examples/marker-training/examples/pattern-files/pattern-hiro.patt";
  } else console.assert(false);

  // json.strinfy the value and store it in localStorage
  return file;
};

//////////////////////////////////////////////////////////////////////////////
//		createDefaultMarkersControlsParameters
//////////////////////////////////////////////////////////////////////////////

/**
 * Create a default controls parameters for the multi-marker learner
 *
 * @param {String} trackingBackend - the tracking backend to use
 * @return {Object} - json object containing the controls parameters
 */
MarkersAreaUtils.createDefaultMarkersControlsParameters = function (
  trackingBackend
) {
  // create absoluteBaseURL
  var link = document.createElement("a");
  link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL;
  var absoluteBaseURL = link.href;

  if (trackingBackend === "artoolkit") {
    // pattern hiro/kanji/a/b/c/f
    var markersControlsParameters = [
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-hiro.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-kanji.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterA.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterB.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterC.patt",
      },
      {
        type: "pattern",
        patternUrl:
          absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterF.patt",
      },
    ];
  } else console.assert(false);
  return markersControlsParameters;
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////
/**
 * generate areaFile
 */
MarkersAreaUtils.storeMarkersAreaFileFromResolution = function (
  trackingBackend,
  resolutionW,
  resolutionH
) {
  // generate areaFile
  var areaFile = this.buildMarkersAreaFileFromResolution(
    trackingBackend,
    resolutionW,
    resolutionH
  );
  // store areaFile in localStorage
  localStorage.setItem("ARjsMultiMarkerFile", JSON.stringify(areaFile));
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

MarkersAreaUtils.buildMarkersAreaFileFromResolution = function (
  trackingBackend,
  resolutionW,
  resolutionH
) {
  // create the base file
  var file = {
    meta: {
      createdBy: "AR.js - Augmented Website",
      createdAt: new Date().toJSON(),
    },
    trackingBackend: trackingBackend,
    subMarkersControls: [
      // empty for now...
    ],
  };

  var whiteMargin = 0.1;
  if (resolutionW > resolutionH) {
    var markerImageSize = 0.4 * resolutionH;
  } else if (resolutionW < resolutionH) {
    var markerImageSize = 0.4 * resolutionW;
  } else if (resolutionW === resolutionH) {
    // specific for twitter player - https://dev.twitter.com/cards/types/player
    var markerImageSize = 0.33 * resolutionW;
  } else console.assert(false);

  // console.warn('using new markerImageSize computation')
  var actualMarkerSize = markerImageSize * (1 - 2 * whiteMargin);

  var deltaX = (resolutionW - markerImageSize) / 2 / actualMarkerSize;
  var deltaZ = (resolutionH - markerImageSize) / 2 / actualMarkerSize;

  var subMarkerControls = buildSubMarkerControls("center", 0, 0);
  file.subMarkersControls.push(subMarkerControls);

  var subMarkerControls = buildSubMarkerControls("topleft", -deltaX, -deltaZ);
  file.subMarkersControls.push(subMarkerControls);

  var subMarkerControls = buildSubMarkerControls("topright", +deltaX, -deltaZ);
  file.subMarkersControls.push(subMarkerControls);

  var subMarkerControls = buildSubMarkerControls(
    "bottomleft",
    -deltaX,
    +deltaZ
  );
  file.subMarkersControls.push(subMarkerControls);

  var subMarkerControls = buildSubMarkerControls(
    "bottomright",
    +deltaX,
    +deltaZ
  );
  file.subMarkersControls.push(subMarkerControls);

  return file;

  //////////////////////////////////////////////////////////////////////////////
  //		Code Separator
  //////////////////////////////////////////////////////////////////////////////

  function buildSubMarkerControls(layout, positionX, positionZ) {
    console.log("buildSubMarkerControls", layout, positionX, positionZ);
    // create subMarkersControls
    var subMarkersControls = {
      parameters: {},
      poseMatrix: new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4()
        .makeTranslation(positionX, 0, positionZ)
        .toArray(),
    };
    // fill the parameters
    if (trackingBackend === "artoolkit") {
      layout2MarkerParametersArtoolkit(subMarkersControls.parameters, layout);
    } else console.assert(false);
    // return subMarkersControls
    return subMarkersControls;
  }

  function layout2MarkerParametersArtoolkit(parameters, layout) {
    // create absoluteBaseURL
    var link = document.createElement("a");
    link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL;
    var absoluteBaseURL = link.href;

    var layout2PatternUrl = {
      center: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-hiro.patt"
      ),
      topleft: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterA.patt"
      ),
      topright: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterB.patt"
      ),
      bottomleft: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterC.patt"
      ),
      bottomright: convertRelativeUrlToAbsolute(
        absoluteBaseURL +
          "examples/marker-training/examples/pattern-files/pattern-letterF.patt"
      ),
    };
    console.assert(layout2PatternUrl[layout] !== undefined);
    parameters.type = "pattern";
    parameters.patternUrl = layout2PatternUrl[layout];
    return;
    function convertRelativeUrlToAbsolute(relativeUrl) {
      var tmpLink = document.createElement("a");
      tmpLink.href = relativeUrl;
      return tmpLink.href;
    }
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkersAreaUtils);


/***/ }),

/***/ "./three.js/src/new-api/arjs-utils.js":
/*!********************************************!*\
  !*** ./three.js/src/new-api/arjs-utils.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const Utils = {};

/**
 * Create a default rendering camera for this trackingBackend. They may be modified later. to fit physical camera parameters
 *
 * @param {string} trackingBackend - the tracking to user
 * @return {THREE.Camera} the created camera
 */
Utils.createDefaultCamera = function (trackingMethod) {
  var trackingBackend =
    this.parseTrackingMethod(trackingMethod).trackingBackend;
  // Create a camera
  if (trackingBackend === "artoolkit") {
    var camera = new three__WEBPACK_IMPORTED_MODULE_0__.Camera();
  } else console.assert(false, "unknown trackingBackend: " + trackingBackend);

  return camera;
};

/**
 * parse tracking method
 *
 * @param {String} trackingMethod - the tracking method to parse
 * @return {Object} - various field of the tracking method
 */
Utils.parseTrackingMethod = function (trackingMethod) {
  if (trackingMethod === "best") {
    trackingMethod = "area-artoolkit";
  }

  if (trackingMethod.startsWith("area-")) {
    return {
      trackingBackend: trackingMethod.replace("area-", ""),
      markersAreaEnabled: true,
    };
  } else {
    return {
      trackingBackend: trackingMethod,
      markersAreaEnabled: false,
    };
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Utils);


/***/ }),

/***/ "./three.js/src/threex/arjs-context.js":
/*!*********************************************!*\
  !*** ./three.js/src/threex/arjs-context.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _arjs_markercontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arjs-markercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jsartoolkit */ "./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jsartoolkit__WEBPACK_IMPORTED_MODULE_2__);


 // TODO comment explanation
const { ARController } = (jsartoolkit__WEBPACK_IMPORTED_MODULE_2___default());

const Context = function (parameters) {
  var _this = this;

  _this._updatedAt = null;

  // handle default parameters
  this.parameters = {
    // AR backend - ['artoolkit']
    trackingBackend: "artoolkit",
    // debug - true if one should display artoolkit debug canvas, false otherwise
    debug: false,
    // the mode of detection - ['color', 'color_and_matrix', 'mono', 'mono_and_matrix']
    detectionMode: "mono",
    // type of matrix code - valid iif detectionMode end with 'matrix' - [3x3, 3x3_HAMMING63, 3x3_PARITY65, 4x4, 4x4_BCH_13_9_3, 4x4_BCH_13_5_5]
    matrixCodeType: "3x3",

    // url of the camera parameters
    cameraParametersUrl: Context.baseURL + "../data/data/camera_para.dat",

    // tune the maximum rate of pose detection in the source image
    maxDetectionRate: 60,
    // resolution of at which we detect pose in the source image
    canvasWidth: 640,
    canvasHeight: 480,

    // the patternRatio inside the artoolkit marker - artoolkit only
    patternRatio: 0.5,

    // Labeling mode for markers - ['black_region', 'white_region']
    // black_region: Black bordered markers on a white background, white_region: White bordered markers on a black background
    labelingMode: "black_region",

    // enable image smoothing or not for canvas copy - default to true
    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled
    imageSmoothingEnabled: false,
  };
  // parameters sanity check
  console.assert(
    ["artoolkit"].indexOf(this.parameters.trackingBackend) !== -1,
    "invalid parameter trackingBackend",
    this.parameters.trackingBackend
  );
  console.assert(
    ["color", "color_and_matrix", "mono", "mono_and_matrix"].indexOf(
      this.parameters.detectionMode
    ) !== -1,
    "invalid parameter detectionMode",
    this.parameters.detectionMode
  );
  console.assert(
    ["black_region", "white_region"].indexOf(this.parameters.labelingMode) !==
      -1,
    "invalid parameter labelingMode",
    this.parameters.labelingMode
  );

  this.arController = null;

  _this.initialized = false;

  this._arMarkersControls = [];

  //////////////////////////////////////////////////////////////////////////////
  //		setParameters
  //////////////////////////////////////////////////////////////////////////////
  setParameters(parameters);
  function setParameters(parameters) {
    if (parameters === undefined) return;
    for (var key in parameters) {
      var newValue = parameters[key];

      if (newValue === undefined) {
        console.warn("Context: '" + key + "' parameter is undefined.");
        continue;
      }

      var currentValue = _this.parameters[key];

      if (currentValue === undefined) {
        console.warn(
          "Context: '" + key + "' is not a property of this material."
        );
        continue;
      }

      _this.parameters[key] = newValue;
    }
  }
};

Context.prototype.dispatchEvent = three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.dispatchEvent;
Context.prototype.addEventListener =
  three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.addEventListener;
Context.prototype.hasEventListener =
  three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.hasEventListener;
Context.prototype.removeEventListener =
  three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.removeEventListener;

// default to github page
Context.baseURL = "https://ar-js-org.github.io/AR.js/three.js/";
Context.REVISION = "3.4.0";
/**
 * Create a default camera for this trackingBackend
 * @param {string} trackingBackend - the tracking to user
 * @return {THREE.Camera} the created camera
 */
Context.createDefaultCamera = function (trackingBackend) {
  console.assert(false, "use ARjs.Utils.createDefaultCamera instead");
  // Create a camera
  if (trackingBackend === "artoolkit") {
    var camera = new three__WEBPACK_IMPORTED_MODULE_0__.Camera();
  } else console.assert(false);
  return camera;
};

//////////////////////////////////////////////////////////////////////////////
//		init functions
//////////////////////////////////////////////////////////////////////////////
Context.prototype.init = function (onCompleted) {
  var _this = this;
  if (this.parameters.trackingBackend === "artoolkit") {
    this._initArtoolkit(done);
  } else console.assert(false);
  return;

  function done() {
    // dispatch event
    _this.dispatchEvent({
      type: "initialized",
    });

    _this.initialized = true;

    onCompleted && onCompleted();
  }
};
////////////////////////////////////////////////////////////////////////////////
//          update function
////////////////////////////////////////////////////////////////////////////////
Context.prototype.update = function (srcElement) {
  // be sure arController is fully initialized
  if (
    this.parameters.trackingBackend === "artoolkit" &&
    this.arController === null
  )
    return false;

  // honor this.parameters.maxDetectionRate
  var present = performance.now();
  if (
    this._updatedAt !== null &&
    present - this._updatedAt < 1000 / this.parameters.maxDetectionRate
  ) {
    return false;
  }
  this._updatedAt = present;

  var prevVisibleMarkers = [];

  // mark all markers to invisible before processing this frame
  this._arMarkersControls.forEach(function (markerControls) {
    if (markerControls.object3d.visible) {
      prevVisibleMarkers.push(markerControls);
    }
    if (!markerControls.context.arController.showObject) {
      markerControls.object3d.visible = false;
    }
  });

  // process this frame
  if (this.parameters.trackingBackend === "artoolkit") {
    this._updateArtoolkit(srcElement);
  } else {
    console.assert(false);
  }

  // dispatch event
  this.dispatchEvent({
    type: "sourceProcessed",
  });

  // After frame is processed, check visibility of each marker to determine if it was found or lost
  this._arMarkersControls.forEach(function (markerControls) {
    var wasVisible = prevVisibleMarkers.includes(markerControls);
    var isVisible = markerControls.object3d.visible;

    if (isVisible === true && wasVisible === false) {
      window.dispatchEvent(
        new CustomEvent("markerFound", {
          detail: markerControls,
        })
      );
    } else if (isVisible === false && wasVisible === true) {
      window.dispatchEvent(
        new CustomEvent("markerLost", {
          detail: markerControls,
        })
      );
    }
  });

  // return true as we processed the frame
  return true;
};

////////////////////////////////////////////////////////////////////////////////
//          Add/Remove markerControls
////////////////////////////////////////////////////////////////////////////////
Context.prototype.addMarker = function (arMarkerControls) {
  console.assert(arMarkerControls instanceof _arjs_markercontrols__WEBPACK_IMPORTED_MODULE_1__["default"]);
  this._arMarkersControls.push(arMarkerControls);
};

Context.prototype.removeMarker = function (arMarkerControls) {
  console.assert(arMarkerControls instanceof _arjs_markercontrols__WEBPACK_IMPORTED_MODULE_1__["default"]);
  var index = this._arMarkersControls.indexOf(arMarkerControls);
  if (index < 0) {
    return;
  }
  this._arMarkersControls.splice(index, 1);
};

//////////////////////////////////////////////////////////////////////////////
//		artoolkit specific
//////////////////////////////////////////////////////////////////////////////
Context.prototype._initArtoolkit = function (onCompleted) {
  var _this = this;

  // set this._artoolkitProjectionAxisTransformMatrix to change artoolkit projection matrix axis to match usual webgl one
  this._artoolkitProjectionAxisTransformMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4();
  this._artoolkitProjectionAxisTransformMatrix.multiply(
    new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationY(Math.PI)
  );
  this._artoolkitProjectionAxisTransformMatrix.multiply(
    new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationZ(Math.PI)
  );

  // init controller
  ARController.initWithDimensions(
    _this.parameters.canvasWidth,
    _this.parameters.canvasHeight,
    _this.parameters.cameraParametersUrl
  ).then((arController) => {
    _this.arController = arController;

    // honor this.parameters.imageSmoothingEnabled
    arController.ctx.mozImageSmoothingEnabled =
      _this.parameters.imageSmoothingEnabled;
    arController.ctx.webkitImageSmoothingEnabled =
      _this.parameters.imageSmoothingEnabled;
    arController.ctx.msImageSmoothingEnabled =
      _this.parameters.imageSmoothingEnabled;
    arController.ctx.imageSmoothingEnabled =
      _this.parameters.imageSmoothingEnabled;

    // honor this.parameters.debug
    if (_this.parameters.debug === true) {
      arController.debugSetup();
      arController.canvas.style.position = "absolute";
      arController.canvas.style.top = "0px";
      arController.canvas.style.opacity = "0.6";
      arController.canvas.style.pointerEvents = "none";
      arController.canvas.style.zIndex = "-1";
    }

    // setPatternDetectionMode
    var detectionModes = {
      color: arController.artoolkit.AR_TEMPLATE_MATCHING_COLOR,
      color_and_matrix:
        arController.artoolkit.AR_TEMPLATE_MATCHING_COLOR_AND_MATRIX,
      mono: arController.artoolkit.AR_TEMPLATE_MATCHING_MONO,
      mono_and_matrix:
        arController.artoolkit.AR_TEMPLATE_MATCHING_MONO_AND_MATRIX,
    };
    var detectionMode = detectionModes[_this.parameters.detectionMode];
    console.assert(detectionMode !== undefined);
    arController.setPatternDetectionMode(detectionMode);

    // setMatrixCodeType
    var matrixCodeTypes = {
      "3x3": arController.artoolkit.AR_MATRIX_CODE_3x3,
      "3x3_HAMMING63": arController.artoolkit.AR_MATRIX_CODE_3x3_HAMMING63,
      "3x3_PARITY65": arController.artoolkit.AR_MATRIX_CODE_3x3_PARITY65,
      "4x4": arController.artoolkit.AR_MATRIX_CODE_4x4,
      "4x4_BCH_13_9_3": arController.artoolkit.AR_MATRIX_CODE_4x4_BCH_13_9_3,
      "4x4_BCH_13_5_5": arController.artoolkit.AR_MATRIX_CODE_4x4_BCH_13_5_5,
      "5x5": arController.artoolkit.AR_MATRIX_CODE_5x5,
      "6x6": arController.artoolkit.AR_MATRIX_CODE_6x6,
    };
    var matrixCodeType = matrixCodeTypes[_this.parameters.matrixCodeType];
    console.assert(matrixCodeType !== undefined);
    arController.setMatrixCodeType(matrixCodeType);

    // set the patternRatio for artoolkit
    arController.setPattRatio(_this.parameters.patternRatio);

    // set the labelingMode for artoolkit
    var labelingModeTypes = {
      black_region: arController.artoolkit.AR_LABELING_BLACK_REGION,
      white_region: arController.artoolkit.AR_LABELING_WHITE_REGION,
    };
    var labelingModeType = labelingModeTypes[_this.parameters.labelingMode];
    console.assert(labelingModeType !== undefined);
    arController.setLabelingMode(labelingModeType);

    // set thresholding in artoolkit
    // this seems to be the default
    // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_MANUAL)
    // adatative consume a LOT of cpu...
    // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_AUTO_ADAPTIVE)
    // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_AUTO_OTSU)

    // notify
    onCompleted();
  });
  return this;
};

/**
 * return the projection matrix
 */
Context.prototype.getProjectionMatrix = function () {
  // FIXME rename this function to say it is artoolkit specific - getArtoolkitProjectMatrix
  // keep a backward compatibility with a console.warn

  console.assert(this.parameters.trackingBackend === "artoolkit");
  console.assert(
    this.arController,
    "arController MUST be initialized to call this function"
  );

  // get projectionMatrixArr from artoolkit
  var projectionMatrixArr = this.arController.getCameraMatrix();
  var projectionMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(projectionMatrixArr);

  // projectionMatrix.multiply(this._artoolkitProjectionAxisTransformMatrix)
  // return the result
  return projectionMatrix;
};

Context.prototype._updateArtoolkit = function (srcElement) {
  this.arController.process(srcElement);
};

//////////////////////////////////////////////////////////////////////////////
//		dispose function
//////////////////////////////////////////////////////////////////////////////
Context.prototype.dispose = function () {
  this.initialized = false;

  // markers
  this._arMarkersControls.forEach(function (markerControls) {
    console.assert(markerControls instanceof _arjs_markercontrols__WEBPACK_IMPORTED_MODULE_1__["default"]);
    markerControls.dispose();
  });
  this._arMarkersControls = [];

  // cameraParam
  if (
    this.arController &&
    this.arController.cameraParam &&
    this.arController.cameraParam.dispose
  ) {
    this.arController.cameraParam.dispose();
  }

  // ARController
  if (this.arController && this.arController.dispose) {
    this.arController.dispose();
  }
  this.arController = null;

  // class properties
  this._artoolkitProjectionAxisTransformMatrix = null;

  // artoolkit
  // NOTE: since the instance of ARToolkit is created globally
  // we should probably do not call .teardown() ... ?
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Context);


/***/ }),

/***/ "./three.js/src/threex/arjs-markercontrols.js":
/*!****************************************************!*\
  !*** ./three.js/src/threex/arjs-markercontrols.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");
/* harmony import */ var _arjs_markercontrols_nft_worker_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./arjs-markercontrols-nft.worker.js */ "./three.js/src/threex/arjs-markercontrols-nft.worker.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jsartoolkit */ "./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jsartoolkit__WEBPACK_IMPORTED_MODULE_3__);



 // TODO comment explanation
const { ARToolkit } = (jsartoolkit__WEBPACK_IMPORTED_MODULE_3___default());

const MarkerControls = function (context, object3d, parameters) {
  var _this = this;

  _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__["default"].call(this, object3d);

  this.context = context;
  // handle default parameters
  this.parameters = {
    // size of the marker in meter
    size: 1,
    // type of marker - ['pattern', 'barcode', 'nft', 'unknown' ]
    type: "unknown",
    // url of the pattern - IIF type='pattern'
    patternUrl: null,
    // value of the barcode - IIF type='barcode'
    barcodeValue: null,
    // url of the descriptors of image - IIF type='nft'
    descriptorsUrl: null,
    // change matrix mode - [modelViewMatrix, cameraTransformMatrix]
    changeMatrixMode: "modelViewMatrix",
    // minimal confidence in the marke recognition - between [0, 1] - default to 1
    minConfidence: 0.6,
    // turn on/off camera smoothing
    smooth: false,
    // number of matrices to smooth tracking over, more = smoother but slower follow
    smoothCount: 5,
    // distance tolerance for smoothing, if smoothThreshold # of matrices are under tolerance, tracking will stay still
    smoothTolerance: 0.01,
    // threshold for smoothing, will keep still unless enough matrices are over tolerance
    smoothThreshold: 2,
  };

  // sanity check
  var possibleValues = ["pattern", "barcode", "nft", "unknown"];
  console.assert(
    possibleValues.indexOf(this.parameters.type) !== -1,
    "illegal value",
    this.parameters.type
  );
  var possibleValues = ["modelViewMatrix", "cameraTransformMatrix"];
  console.assert(
    possibleValues.indexOf(this.parameters.changeMatrixMode) !== -1,
    "illegal value",
    this.parameters.changeMatrixMode
  );

  // create the marker Root
  this.object3d = object3d;
  this.object3d.matrixAutoUpdate = false;
  this.object3d.visible = false;

  //////////////////////////////////////////////////////////////////////////////
  //		setParameters
  //////////////////////////////////////////////////////////////////////////////
  setParameters(parameters);
  function setParameters(parameters) {
    if (parameters === undefined) return;
    for (var key in parameters) {
      var newValue = parameters[key];

      if (newValue === undefined) {
        console.warn("ArMarkerControls: '" + key + "' parameter is undefined.");
        continue;
      }

      var currentValue = _this.parameters[key];

      if (currentValue === undefined) {
        console.warn(
          "ArMarkerControls: '" + key + "' is not a property of this material."
        );
        continue;
      }

      _this.parameters[key] = newValue;
    }
  }

  if (this.parameters.smooth) {
    this.smoothMatrices = []; // last DEBOUNCE_COUNT modelViewMatrix
  }

  //////////////////////////////////////////////////////////////////////////////
  //		Code Separator
  //////////////////////////////////////////////////////////////////////////////
  // add this marker to artoolkitsystem
  // TODO rename that .addMarkerControls
  context.addMarker(this);

  if (_this.context.parameters.trackingBackend === "artoolkit") {
    this._initArtoolkit();
  } else console.assert(false);
};

MarkerControls.prototype = Object.create(_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__["default"].prototype);
MarkerControls.prototype.constructor = MarkerControls;

//////////////////////////////////////////////////////////////////////////////
//		dispose instance
//////////////////////////////////////////////////////////////////////////////
MarkerControls.prototype.dispose = function () {
  if (this.context && this.context.arController) {
    this.context.arController.removeEventListener(
      "getMarker",
      this.onGetMarker
    );
  }

  this.context.removeMarker(this);

  this.object3d = null;
  this.smoothMatrices = [];
};

//////////////////////////////////////////////////////////////////////////////
//		update controls with new modelViewMatrix
//////////////////////////////////////////////////////////////////////////////

/**
 * When you actually got a new modelViewMatrix, you need to perfom a whole bunch
 * of things. it is done here.
 */
MarkerControls.prototype.updateWithModelViewMatrix = function (
  modelViewMatrix
) {
  var markerObject3D = this.object3d;

  // mark object as visible
  markerObject3D.visible = true;

  if (this.context.parameters.trackingBackend === "artoolkit") {
    // apply context._axisTransformMatrix - change artoolkit axis to match usual webgl one
    var tmpMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().copy(
      this.context._artoolkitProjectionAxisTransformMatrix
    );
    tmpMatrix.multiply(modelViewMatrix);

    modelViewMatrix.copy(tmpMatrix);
  } else {
    console.assert(false);
  }

  // change axis orientation on marker - artoolkit say Z is normal to the marker - ar.js say Y is normal to the marker
  var markerAxisTransformMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationX(
    Math.PI / 2
  );
  modelViewMatrix.multiply(markerAxisTransformMatrix);

  var renderReqd = false;

  // change markerObject3D.matrix based on parameters.changeMatrixMode
  if (this.parameters.changeMatrixMode === "modelViewMatrix") {
    if (this.parameters.smooth) {
      var sum,
        i,
        j,
        averages, // average values for matrix over last smoothCount
        exceedsAverageTolerance = 0;

      this.smoothMatrices.push(modelViewMatrix.elements.slice()); // add latest

      if (this.smoothMatrices.length < this.parameters.smoothCount + 1) {
        markerObject3D.matrix.copy(modelViewMatrix); // not enough for average
      } else {
        this.smoothMatrices.shift(); // remove oldest entry
        averages = [];

        for (i in modelViewMatrix.elements) {
          // loop over entries in matrix
          sum = 0;
          for (j in this.smoothMatrices) {
            // calculate average for this entry
            sum += this.smoothMatrices[j][i];
          }
          averages[i] = sum / this.parameters.smoothCount;
          // check how many elements vary from the average by at least AVERAGE_MATRIX_TOLERANCE
          if (
            Math.abs(averages[i] - modelViewMatrix.elements[i]) >=
            this.parameters.smoothTolerance
          ) {
            exceedsAverageTolerance++;
          }
        }

        // if moving (i.e. at least AVERAGE_MATRIX_THRESHOLD entries are over AVERAGE_MATRIX_TOLERANCE)
        if (exceedsAverageTolerance >= this.parameters.smoothThreshold) {
          // then update matrix values to average, otherwise, don't render to minimize jitter
          for (i in modelViewMatrix.elements) {
            modelViewMatrix.elements[i] = averages[i];
          }
          markerObject3D.matrix.copy(modelViewMatrix);
          renderReqd = true; // render required in animation loop
        }
      }
    } else {
      markerObject3D.matrix.copy(modelViewMatrix);
    }
  } else if (this.parameters.changeMatrixMode === "cameraTransformMatrix") {
    markerObject3D.matrix.copy(modelViewMatrix).invert();
  } else {
    console.assert(false);
  }

  // decompose - the matrix into .position, .quaternion, .scale

  markerObject3D.matrix.decompose(
    markerObject3D.position,
    markerObject3D.quaternion,
    markerObject3D.scale
  );

  // dispatchEvent
  this.dispatchEvent({ type: "markerFound" });

  return renderReqd;
};

//////////////////////////////////////////////////////////////////////////////
//		utility functions
//////////////////////////////////////////////////////////////////////////////

MarkerControls.prototype.name = function () {
  var name = "";
  name += this.parameters.type;

  if (this.parameters.type === "pattern") {
    var url = this.parameters.patternUrl;
    var basename = url.replace(/^.*\//g, "");
    name += " - " + basename;
  } else if (this.parameters.type === "barcode") {
    name += " - " + this.parameters.barcodeValue;
  } else if (this.parameters.type === "nft") {
    var url = this.parameters.descriptorsUrl;
    var basename = url.replace(/^.*\//g, "");
    name += " - " + basename;
  } else {
    console.assert(false, "no .name() implemented for this marker controls");
  }

  return name;
};

//////////////////////////////////////////////////////////////////////////////
//		init for Artoolkit
//////////////////////////////////////////////////////////////////////////////
MarkerControls.prototype._initArtoolkit = function () {
  var _this = this;

  var artoolkitMarkerId = null;

  var delayedInitTimerId = setInterval(() => {
    // check if arController is init
    var arController = _this.context.arController;
    if (arController === null) return;
    // stop looping if it is init
    clearInterval(delayedInitTimerId);
    delayedInitTimerId = null;
    // launch the _postInitArtoolkit
    postInit();
  }, 1000 / 50);

  return;

  function postInit() {
    // check if arController is init
    var arController = _this.context.arController;
    console.assert(arController !== null);

    // start tracking this pattern
    if (_this.parameters.type === "pattern") {
      arController
        .loadMarker(_this.parameters.patternUrl)
        .then(function (markerId) {
          artoolkitMarkerId = markerId;
          arController.trackPatternMarkerId(
            artoolkitMarkerId,
            _this.parameters.size
          );
        });
    } else if (_this.parameters.type === "barcode") {
      artoolkitMarkerId = _this.parameters.barcodeValue;
      arController.trackBarcodeMarkerId(
        artoolkitMarkerId,
        _this.parameters.size
      );
    } else if (_this.parameters.type === "nft") {
      // use workers as default
      handleNFT(_this.parameters.descriptorsUrl, arController);
    } else if (_this.parameters.type === "unknown") {
      artoolkitMarkerId = null;
    } else {
      console.log(false, "invalid marker type", _this.parameters.type);
    }

    // listen to the event
    arController.addEventListener("getMarker", function (event) {
      if (
        event.data.type === ARToolkit.PATTERN_MARKER &&
        _this.parameters.type === "pattern"
      ) {
        if (artoolkitMarkerId === null) return;
        if (event.data.marker.idPatt === artoolkitMarkerId)
          onMarkerFound(event);
      } else if (
        event.data.type === ARToolkit.BARCODE_MARKER &&
        _this.parameters.type === "barcode"
      ) {
        if (artoolkitMarkerId === null) return;
        if (event.data.marker.idMatrix === artoolkitMarkerId)
          onMarkerFound(event);
      } else if (
        event.data.type === ARToolkit.UNKNOWN_MARKER &&
        _this.parameters.type === "unknown"
      ) {
        onMarkerFound(event);
      }
    });
  }

  function setMatrix(matrix, value) {
    var array = [];
    for (var key in value) {
      array[key] = value[key];
    }
    if (typeof matrix.elements.set === "function") {
      matrix.elements.set(array);
    } else {
      matrix.elements = [].slice.call(array);
    }
  }

  function handleNFT(descriptorsUrl, arController) {
    var worker = new _arjs_markercontrols_nft_worker_js__WEBPACK_IMPORTED_MODULE_2__["default"]();

    window.addEventListener("arjs-video-loaded", function (ev) {
      var video = ev.detail.component;
      var vw = video.clientWidth;
      var vh = video.clientHeight;

      var pscale = 320 / Math.max(vw, (vh / 3) * 4);

      const w = vw * pscale;
      const h = vh * pscale;
      const pw = Math.max(w, (h / 3) * 4);
      const ph = Math.max(h, (w / 4) * 3);
      const ox = (pw - w) / 2;
      const oy = (ph - h) / 2;

      arController.canvas.style.clientWidth = pw + "px";
      arController.canvas.style.clientHeight = ph + "px";
      arController.canvas.width = pw;
      arController.canvas.height = ph;

      var context_process = arController.canvas.getContext("2d");

      function process() {
        context_process.fillStyle = "black";
        context_process.fillRect(0, 0, pw, ph);
        context_process.drawImage(video, 0, 0, vw, vh, ox, oy, w, h);

        var imageData = context_process.getImageData(0, 0, pw, ph);
        worker.postMessage({ type: "process", imagedata: imageData }, [
          imageData.data.buffer,
        ]);
      }

      // initialize the worker
      worker.postMessage({
        type: "init",
        pw: pw,
        ph: ph,
        marker: descriptorsUrl,
        param: arController.cameraParam,
      });

      worker.onmessage = function (ev) {
        if (ev && ev.data && ev.data.type === "endLoading") {
          var loader = document.querySelector(".arjs-loader");
          if (loader) {
            loader.remove();
          }
          var endLoadingEvent = new Event("arjs-nft-loaded");
          window.dispatchEvent(endLoadingEvent);
        }

        if (ev && ev.data && ev.data.type === "loaded") {
          var proj = JSON.parse(ev.data.proj);
          var ratioW = pw / w;
          var ratioH = ph / h;
          proj[0] *= ratioW;
          proj[4] *= ratioW;
          proj[8] *= ratioW;
          proj[12] *= ratioW;
          proj[1] *= ratioH;
          proj[5] *= ratioH;
          proj[9] *= ratioH;
          proj[13] *= ratioH;

          setMatrix(_this.object3d.matrix, proj);
        }

        if (ev && ev.data && ev.data.type === "found") {
          var matrix = JSON.parse(ev.data.matrix);

          onMarkerFound({
            data: {
              type: ARToolkit.NFT_MARKER,
              matrix: matrix,
              msg: ev.data.type,
            },
          });

          _this.context.arController.showObject = true;
        } else {
          _this.context.arController.showObject = false;
        }

        process();
      };
    });
  }

  function onMarkerFound(event) {
    if (
      event.data.type === ARToolkit.PATTERN_MARKER &&
      event.data.marker.cfPatt < _this.parameters.minConfidence
    )
      return;
    if (
      event.data.type === ARToolkit.BARCODE_MARKER &&
      event.data.marker.cfMatrix < _this.parameters.minConfidence
    )
      return;

    var modelViewMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(event.data.matrix);
    _this.updateWithModelViewMatrix(modelViewMatrix);
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkerControls);


/***/ }),

/***/ "./three.js/src/threex/arjs-profile.js":
/*!*********************************************!*\
  !*** ./three.js/src/threex/arjs-profile.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _new_api_arjs_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../new-api/arjs-utils */ "./three.js/src/new-api/arjs-utils.js");
/* harmony import */ var _arjs_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arjs-context */ "./three.js/src/threex/arjs-context.js");

 // TODO context build-dependent

/**
 * ArToolkitProfile helps you build parameters for artoolkit
 * - it is fully independent of the rest of the code
 * - all the other classes are still expecting normal parameters
 * - you can use this class to understand how to tune your specific usecase
 * - it is made to help people to build parameters without understanding all the underlying details.
 */
const Profile = function () {
  this.reset();

  this.performance("default");
};

Profile.prototype._guessPerformanceLabel = function () {
  var isMobile =
    navigator.userAgent.match(/Android/i) ||
    navigator.userAgent.match(/webOS/i) ||
    navigator.userAgent.match(/iPhone/i) ||
    navigator.userAgent.match(/iPad/i) ||
    navigator.userAgent.match(/iPod/i) ||
    navigator.userAgent.match(/BlackBerry/i) ||
    navigator.userAgent.match(/Windows Phone/i)
      ? true
      : false;
  if (isMobile === true) {
    return "phone-normal";
  }
  return "desktop-normal";
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

/**
 * reset all parameters
 */
Profile.prototype.reset = function () {
  this.sourceParameters = {
    // to read from the webcam
    sourceType: "webcam",
  };

  this.contextParameters = {
    cameraParametersUrl:
      _arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL + "../data/data/camera_para.dat", // TODO dependent of build?
    detectionMode: "mono",
  };
  this.defaultMarkerParameters = {
    type: "pattern",
    patternUrl: _arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL + "../data/data/patt.hiro", // TODO dependent of build?
    changeMatrixMode: "modelViewMatrix",
  };
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		Performance
//////////////////////////////////////////////////////////////////////////////

Profile.prototype.performance = function (label) {
  if (label === "default") {
    label = this._guessPerformanceLabel();
  }

  if (label === "desktop-fast") {
    this.contextParameters.canvasWidth = 640 * 3;
    this.contextParameters.canvasHeight = 480 * 3;

    this.contextParameters.maxDetectionRate = 30;
  } else if (label === "desktop-normal") {
    this.contextParameters.canvasWidth = 640;
    this.contextParameters.canvasHeight = 480;

    this.contextParameters.maxDetectionRate = 60;
  } else if (label === "phone-normal") {
    this.contextParameters.canvasWidth = 80 * 4;
    this.contextParameters.canvasHeight = 60 * 4;

    this.contextParameters.maxDetectionRate = 30;
  } else if (label === "phone-slow") {
    this.contextParameters.canvasWidth = 80 * 3;
    this.contextParameters.canvasHeight = 60 * 3;

    this.contextParameters.maxDetectionRate = 30;
  } else {
    console.assert(false, "unknonwn label " + label);
  }
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		Marker
//////////////////////////////////////////////////////////////////////////////

Profile.prototype.defaultMarker = function (trackingBackend) {
  trackingBackend = trackingBackend || this.contextParameters.trackingBackend;

  if (trackingBackend === "artoolkit") {
    this.contextParameters.detectionMode = "mono";
    this.defaultMarkerParameters.type = "pattern";
    this.defaultMarkerParameters.patternUrl =
      _arjs_context__WEBPACK_IMPORTED_MODULE_1__["default"].baseURL + "../data/data/patt.hiro"; // TODO dependent of build?
  } else console.assert(false);

  return this;
};
//////////////////////////////////////////////////////////////////////////////
//		Source
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.sourceWebcam = function () {
  this.sourceParameters.sourceType = "webcam";
  delete this.sourceParameters.sourceUrl;
  return this;
};

Profile.prototype.sourceVideo = function (url) {
  this.sourceParameters.sourceType = "video";
  this.sourceParameters.sourceUrl = url;
  return this;
};

Profile.prototype.sourceImage = function (url) {
  this.sourceParameters.sourceType = "image";
  this.sourceParameters.sourceUrl = url;
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.trackingBackend = function (trackingBackend) {
  console.warn(
    "stop profile.trackingBackend() obsolete function. use .trackingMethod instead"
  );
  this.contextParameters.trackingBackend = trackingBackend;
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.changeMatrixMode = function (changeMatrixMode) {
  this.defaultMarkerParameters.changeMatrixMode = changeMatrixMode;
  return this;
};

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.trackingMethod = function (trackingMethod) {
  var data = _new_api_arjs_utils__WEBPACK_IMPORTED_MODULE_0__["default"].parseTrackingMethod(trackingMethod);
  this.defaultMarkerParameters.markersAreaEnabled = data.markersAreaEnabled;
  this.contextParameters.trackingBackend = data.trackingBackend;
  return this;
};

/**
 * check if the profile is valid. Throw an exception is not valid
 */
Profile.prototype.checkIfValid = function () {
  return this;
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Profile);


/***/ }),

/***/ "./three.js/src/threex/arjs-source.js":
/*!********************************************!*\
  !*** ./three.js/src/threex/arjs-source.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const Source = function (parameters) {
  var _this = this;

  this.ready = false;
  this.domElement = null;

  // handle default parameters
  this.parameters = {
    // type of source - ['webcam', 'image', 'video']
    sourceType: "webcam",
    // url of the source - valid if sourceType = image|video
    sourceUrl: null,

    // Device id of the camera to use (optional)
    deviceId: null,

    // resolution of at which we initialize in the source image
    sourceWidth: 640,
    sourceHeight: 480,
    // resolution displayed for the source
    displayWidth: 640,
    displayHeight: 480,
  };
  //////////////////////////////////////////////////////////////////////////////
  //		setParameters
  //////////////////////////////////////////////////////////////////////////////
  setParameters(parameters);
  function setParameters(parameters) {
    if (parameters === undefined) return;
    for (var key in parameters) {
      var newValue = parameters[key];

      if (newValue === undefined) {
        console.warn("ArToolkitSource: '" + key + "' parameter is undefined.");
        continue;
      }

      var currentValue = _this.parameters[key];

      if (currentValue === undefined) {
        console.warn(
          "ArToolkitSource: '" + key + "' is not a property of this material."
        );
        continue;
      }

      _this.parameters[key] = newValue;
    }
  }

  this.onInitialClick = function () {
    if (this.domElement && this.domElement.play) {
      this.domElement.play().then(() => {});
    }
  };
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////
Source.prototype.init = function (onReady, onError) {
  var _this = this;

  if (this.parameters.sourceType === "image") {
    var domElement = this._initSourceImage(onSourceReady, onError);
  } else if (this.parameters.sourceType === "video") {
    var domElement = this._initSourceVideo(onSourceReady, onError);
  } else if (this.parameters.sourceType === "webcam") {
    // var domElement = this._initSourceWebcamOld(onSourceReady)
    var domElement = this._initSourceWebcam(onSourceReady, onError);
  } else {
    console.assert(false);
  }

  // attach
  this.domElement = domElement;
  this.domElement.style.position = "absolute";
  this.domElement.style.top = "0px";
  this.domElement.style.left = "0px";
  this.domElement.style.zIndex = "-2";
  this.domElement.setAttribute("id", "arjs-video");

  return this;
  function onSourceReady() {
    if (!_this.domElement) {
      return;
    }

    document.body.appendChild(_this.domElement);
    window.dispatchEvent(
      new CustomEvent("arjs-video-loaded", {
        detail: {
          component: document.querySelector("#arjs-video"),
        },
      })
    );

    _this.ready = true;

    onReady && onReady();
  }
};

////////////////////////////////////////////////////////////////////////////////
//          init image source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._initSourceImage = function (onReady) {
  // TODO make it static
  var domElement = document.createElement("img");
  domElement.src = this.parameters.sourceUrl;

  domElement.width = this.parameters.sourceWidth;
  domElement.height = this.parameters.sourceHeight;
  domElement.style.width = this.parameters.displayWidth + "px";
  domElement.style.height = this.parameters.displayHeight + "px";

  domElement.onload = onReady;
  return domElement;
};

////////////////////////////////////////////////////////////////////////////////
//          init video source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._initSourceVideo = function (onReady) {
  // TODO make it static
  var domElement = document.createElement("video");
  domElement.src = this.parameters.sourceUrl;

  domElement.style.objectFit = "initial";

  domElement.autoplay = true;
  domElement.webkitPlaysinline = true;
  domElement.controls = false;
  domElement.loop = true;
  domElement.muted = true;

  // start the video on first click if not started automatically
  document.body.addEventListener("click", this.onInitialClick, { once: true });

  domElement.width = this.parameters.sourceWidth;
  domElement.height = this.parameters.sourceHeight;
  domElement.style.width = this.parameters.displayWidth + "px";
  domElement.style.height = this.parameters.displayHeight + "px";

  domElement.onloadeddata = onReady;
  return domElement;
};

////////////////////////////////////////////////////////////////////////////////
//          init webcam source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._initSourceWebcam = function (onReady, onError) {
  var _this = this;

  // init default value
  onError =
    onError ||
    function (error) {
      var event = new CustomEvent("camera-error", { error: error });
      window.dispatchEvent(event);

      setTimeout(() => {
        if (!document.getElementById("error-popup")) {
          var errorPopup = document.createElement("div");
          errorPopup.innerHTML =
            "Webcam Error\nName: " + error.name + "\nMessage: " + error.message;
          errorPopup.setAttribute("id", "error-popup");
          document.body.appendChild(errorPopup);
        }
      }, 1000);
    };

  var domElement = document.createElement("video");
  domElement.setAttribute("autoplay", "");
  domElement.setAttribute("muted", "");
  domElement.setAttribute("playsinline", "");
  domElement.style.width = this.parameters.displayWidth + "px";
  domElement.style.height = this.parameters.displayHeight + "px";

  // check API is available
  if (
    navigator.mediaDevices === undefined ||
    navigator.mediaDevices.enumerateDevices === undefined ||
    navigator.mediaDevices.getUserMedia === undefined
  ) {
    if (navigator.mediaDevices === undefined)
      var fctName = "navigator.mediaDevices";
    else if (navigator.mediaDevices.enumerateDevices === undefined)
      var fctName = "navigator.mediaDevices.enumerateDevices";
    else if (navigator.mediaDevices.getUserMedia === undefined)
      var fctName = "navigator.mediaDevices.getUserMedia";
    else console.assert(false);
    onError({
      name: "",
      message: "WebRTC issue-! " + fctName + " not present in your browser",
    });
    return null;
  }

  // get available devices
  navigator.mediaDevices
    .enumerateDevices()
    .then(function (devices) {
      var userMediaConstraints = {
        audio: false,
        video: {
          facingMode: "environment",
          width: {
            ideal: _this.parameters.sourceWidth,
            // min: 1024,
            // max: 1920
          },
          height: {
            ideal: _this.parameters.sourceHeight,
            // min: 776,
            // max: 1080
          },
        },
      };

      if (null !== _this.parameters.deviceId) {
        userMediaConstraints.video.deviceId = {
          exact: _this.parameters.deviceId,
        };
      }

      // get a device which satisfy the constraints
      navigator.mediaDevices
        .getUserMedia(userMediaConstraints)
        .then(function success(stream) {
          // set the .src of the domElement
          domElement.srcObject = stream;

          var event = new CustomEvent("camera-init", { stream: stream });
          window.dispatchEvent(event);

          // start the video on first click if not started automatically
          document.body.addEventListener("click", _this.onInitialClick, {
            once: true,
          });

          onReady();
        })
        .catch(function (error) {
          onError({
            name: error.name,
            message: error.message,
          });
        });
    })
    .catch(function (error) {
      onError({
        message: error.message,
      });
    });

  return domElement;
};

////////////////////////////////////////////////////////////////////////////////
//          dispose source
////////////////////////////////////////////////////////////////////////////////

Source.prototype.dispose = function () {
  this.ready = false;

  switch (this.parameters.sourceType) {
    case "image":
      this._disposeSourceImage();
      break;

    case "video":
      this._disposeSourceVideo();
      break;

    case "webcam":
      this._disposeSourceWebcam();
      break;
  }

  this.domElement = null;

  document.body.removeEventListener("click", this.onInitialClick, {
    once: true,
  });
};

////////////////////////////////////////////////////////////////////////////////
//          dispose image source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._disposeSourceImage = function () {
  var domElement = document.querySelector("#arjs-video");

  if (!domElement) {
    return;
  }

  domElement.remove();
};

////////////////////////////////////////////////////////////////////////////////
//          dispose video source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._disposeSourceVideo = function () {
  var domElement = document.querySelector("#arjs-video");

  if (!domElement) {
    return;
  }

  // https://html.spec.whatwg.org/multipage/media.html#best-practices-for-authors-using-media-elements
  domElement.pause();
  domElement.removeAttribute("src");
  domElement.load();

  domElement.remove();
};

////////////////////////////////////////////////////////////////////////////////
//          dispose webcam source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._disposeSourceWebcam = function () {
  var domElement = document.querySelector("#arjs-video");

  if (!domElement) {
    return;
  }

  // https://stackoverflow.com/a/12436772
  if (domElement.srcObject && domElement.srcObject.getTracks) {
    domElement.srcObject.getTracks().map((track) => track.stop());
  }

  domElement.remove();
};

//////////////////////////////////////////////////////////////////////////////
//		Handle Mobile Torch
//////////////////////////////////////////////////////////////////////////////
Source.prototype.hasMobileTorch = function () {
  var stream = arToolkitSource.domElement.srcObject;
  if (stream instanceof MediaStream === false) return false;

  if (this._currentTorchStatus === undefined) {
    this._currentTorchStatus = false;
  }

  var videoTrack = stream.getVideoTracks()[0];

  // if videoTrack.getCapabilities() doesnt exist, return false now
  if (videoTrack.getCapabilities === undefined) return false;

  var capabilities = videoTrack.getCapabilities();

  return capabilities.torch ? true : false;
};

/**
 * toggle the flash/torch of the mobile fun if applicable.
 * Great post about it https://www.oberhofer.co/mediastreamtrack-and-its-capabilities/
 */
Source.prototype.toggleMobileTorch = function () {
  // sanity check
  console.assert(this.hasMobileTorch() === true);

  var stream = arToolkitSource.domElement.srcObject;
  if (stream instanceof MediaStream === false) {
    if (!document.getElementById("error-popup")) {
      var errorPopup = document.createElement("div");
      errorPopup.innerHTML =
        "enabling mobile torch is available only on webcam";
      errorPopup.setAttribute("id", "error-popup");
      document.body.appendChild(errorPopup);
    }
    return;
  }

  if (this._currentTorchStatus === undefined) {
    this._currentTorchStatus = false;
  }

  var videoTrack = stream.getVideoTracks()[0];
  var capabilities = videoTrack.getCapabilities();

  if (!capabilities.torch) {
    if (!document.getElementById("error-popup")) {
      var errorPopup = document.createElement("div");
      errorPopup.innerHTML = "no mobile torch is available on your camera";
      errorPopup.setAttribute("id", "error-popup");
      document.body.appendChild(errorPopup);
    }
    return;
  }

  this._currentTorchStatus = this._currentTorchStatus === false ? true : false;
  videoTrack
    .applyConstraints({
      advanced: [
        {
          torch: this._currentTorchStatus,
        },
      ],
    })
    .catch(function (error) {
      console.log(error);
    });
};

Source.prototype.domElementWidth = function () {
  return parseInt(this.domElement.style.width);
};
Source.prototype.domElementHeight = function () {
  return parseInt(this.domElement.style.height);
};

////////////////////////////////////////////////////////////////////////////////
//          handle resize
////////////////////////////////////////////////////////////////////////////////

Source.prototype.onResizeElement = function () {
  var _this = this;
  var screenWidth = window.innerWidth;
  var screenHeight = window.innerHeight;

  // sanity check
  console.assert(arguments.length === 0);

  // compute sourceWidth, sourceHeight
  if (this.domElement.nodeName === "IMG") {
    var sourceWidth = this.domElement.naturalWidth;
    var sourceHeight = this.domElement.naturalHeight;
  } else if (this.domElement.nodeName === "VIDEO") {
    var sourceWidth = this.domElement.videoWidth;
    var sourceHeight = this.domElement.videoHeight;
  } else {
    console.assert(false);
  }

  // compute sourceAspect
  var sourceAspect = sourceWidth / sourceHeight;
  // compute screenAspect
  var screenAspect = screenWidth / screenHeight;

  // if screenAspect < sourceAspect, then change the width, else change the height
  if (screenAspect < sourceAspect) {
    // compute newWidth and set .width/.marginLeft
    var newWidth = sourceAspect * screenHeight;
    this.domElement.style.width = newWidth + "px";
    this.domElement.style.marginLeft = -(newWidth - screenWidth) / 2 + "px";

    // init style.height/.marginTop to normal value
    this.domElement.style.height = screenHeight + "px";
    this.domElement.style.marginTop = "0px";
  } else {
    // compute newHeight and set .height/.marginTop
    var newHeight = 1 / (sourceAspect / screenWidth);
    this.domElement.style.height = newHeight + "px";
    this.domElement.style.marginTop = -(newHeight - screenHeight) / 2 + "px";

    // init style.width/.marginLeft to normal value
    this.domElement.style.width = screenWidth + "px";
    this.domElement.style.marginLeft = "0px";
  }
};
/*
Source.prototype.copyElementSizeTo = function(otherElement){
	otherElement.style.width = this.domElement.style.width
	otherElement.style.height = this.domElement.style.height
	otherElement.style.marginLeft = this.domElement.style.marginLeft
	otherElement.style.marginTop = this.domElement.style.marginTop
}
*/

Source.prototype.copyElementSizeTo = function (otherElement) {
  if (window.innerWidth > window.innerHeight) {
    //landscape
    otherElement.style.width = this.domElement.style.width;
    otherElement.style.height = this.domElement.style.height;
    otherElement.style.marginLeft = this.domElement.style.marginLeft;
    otherElement.style.marginTop = this.domElement.style.marginTop;
  } else {
    //portrait
    otherElement.style.height = this.domElement.style.height;
    otherElement.style.width =
      (parseInt(otherElement.style.height) * 4) / 3 + "px";
    otherElement.style.marginLeft =
      (window.innerWidth - parseInt(otherElement.style.width)) / 2 + "px";
    otherElement.style.marginTop = 0;
  }
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

Source.prototype.copySizeTo = function () {
  console.warn(
    "obsolete function arToolkitSource.copySizeTo. Use arToolkitSource.copyElementSizeTo"
  );
  this.copyElementSizeTo.apply(this, arguments);
};

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

Source.prototype.onResize = function (arToolkitContext, renderer, camera) {
  if (arguments.length !== 3) {
    console.warn(
      "obsolete function arToolkitSource.onResize. Use arToolkitSource.onResizeElement"
    );
    return this.onResizeElement.apply(this, arguments);
  }

  var trackingBackend = arToolkitContext.parameters.trackingBackend;

  // RESIZE DOMELEMENT
  if (trackingBackend === "artoolkit") {
    this.onResizeElement();

    var isAframe = renderer.domElement.dataset.aframeCanvas ? true : false;
    if (isAframe === false) {
      this.copyElementSizeTo(renderer.domElement);
    } else {
    }

    if (arToolkitContext.arController !== null) {
      this.copyElementSizeTo(arToolkitContext.arController.canvas);
    }
  } else console.assert(false, "unhandled trackingBackend " + trackingBackend);

  // UPDATE CAMERA
  if (trackingBackend === "artoolkit") {
    if (arToolkitContext.arController !== null) {
      camera.projectionMatrix.copy(arToolkitContext.getProjectionMatrix());
    }
  } else console.assert(false, "unhandled trackingBackend " + trackingBackend);
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Source);


/***/ }),

/***/ "./three.js/src/threex/threex-arbasecontrols.js":
/*!******************************************************!*\
  !*** ./three.js/src/threex/threex-arbasecontrols.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const ArBaseControls = function (object3d) {
  this.id = ArBaseControls.id++;

  this.object3d = object3d;
  this.object3d.matrixAutoUpdate = false;
  this.object3d.visible = false;

  // Events to honor
  // this.dispatchEvent({ type: 'becameVisible' })
  // this.dispatchEvent({ type: 'markerVisible' })	// replace markerFound
  // this.dispatchEvent({ type: 'becameUnVisible' })
};

ArBaseControls.id = 0;

ArBaseControls.prototype = Object.create(three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype);

//////////////////////////////////////////////////////////////////////////////
//		Functions
//////////////////////////////////////////////////////////////////////////////
/**
 * error catching function for update()
 */
ArBaseControls.prototype.update = function () {
  console.assert(false, "you need to implement your own update");
};

/**
 * error catching function for name()
 */
ArBaseControls.prototype.name = function () {
  console.assert(false, "you need to implement your own .name()");
  return "Not yet implemented - name()";
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArBaseControls);


/***/ }),

/***/ "./three.js/src/threex/threex-armarkerhelper.js":
/*!******************************************************!*\
  !*** ./three.js/src/threex/threex-armarkerhelper.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const ArMarkerHelper = function (markerControls) {
  this.object3d = new three__WEBPACK_IMPORTED_MODULE_0__.Group();

  var mesh = new three__WEBPACK_IMPORTED_MODULE_0__.AxesHelper();
  this.object3d.add(mesh);

  var text = markerControls.id;
  // debugger
  // var text = markerControls.parameters.patternUrl.slice(-1).toUpperCase();

  var canvas = document.createElement("canvas");
  canvas.width = 64;
  canvas.height = 64;

  var context = canvas.getContext("2d");
  var texture = new three__WEBPACK_IMPORTED_MODULE_0__.CanvasTexture(canvas);

  // put the text in the sprite
  context.font = "48px monospace";
  context.fillStyle = "rgba(192,192,255, 0.5)";
  context.fillRect(0, 0, canvas.width, canvas.height);
  context.fillStyle = "darkblue";
  context.fillText(text, canvas.width / 4, (3 * canvas.height) / 4);
  texture.needsUpdate = true;

  // var geometry = new THREE.CubeGeometry(1, 1, 1)
  var geometry = new three__WEBPACK_IMPORTED_MODULE_0__.PlaneGeometry(1, 1);
  var material = new three__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial({
    map: texture,
    transparent: true,
  });
  var mesh = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(geometry, material);
  mesh.rotation.x = -Math.PI / 2;

  this.object3d.add(mesh);
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArMarkerHelper);


/***/ }),

/***/ "./three.js/src/threex/threex-arsmoothedcontrols.js":
/*!**********************************************************!*\
  !*** ./three.js/src/threex/threex-arsmoothedcontrols.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");


/**
 * - lerp position/quaternino/scale
 * - minDelayDetected
 * - minDelayUndetected
 * @param {[type]} object3d   [description]
 * @param {[type]} parameters [description]
 */
const ArSmoothedControls = function (object3d, parameters) {
  var _this = this;

  _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, object3d);

  // copy parameters
  this.object3d.visible = false;

  this._lastLerpStepAt = null;
  this._visibleStartedAt = null;
  this._unvisibleStartedAt = null;

  // handle default parameters
  parameters = parameters || {};
  this.parameters = {
    // lerp coeficient for the position - between [0,1] - default to 1
    lerpPosition: 0.8,
    // lerp coeficient for the quaternion - between [0,1] - default to 1
    lerpQuaternion: 0.2,
    // lerp coeficient for the scale - between [0,1] - default to 1
    lerpScale: 0.7,
    // delay for lerp fixed steps - in seconds - default to 1/120
    lerpStepDelay: 1 / 60,
    // minimum delay the sub-control must be visible before this controls become visible - default to 0 seconds
    minVisibleDelay: 0.0,
    // minimum delay the sub-control must be unvisible before this controls become unvisible - default to 0 seconds
    minUnvisibleDelay: 0.2,
  };

  //////////////////////////////////////////////////////////////////////////////
  //		setParameters
  //////////////////////////////////////////////////////////////////////////////
  setParameters(parameters);
  function setParameters(parameters) {
    if (parameters === undefined) return;
    for (var key in parameters) {
      var newValue = parameters[key];

      if (newValue === undefined) {
        console.warn(
          "ArSmoothedControls: '" + key + "' parameter is undefined."
        );
        continue;
      }

      var currentValue = _this.parameters[key];

      if (currentValue === undefined) {
        console.warn(
          "ArSmoothedControls: '" +
            key +
            "' is not a property of this material."
        );
        continue;
      }

      _this.parameters[key] = newValue;
    }
  }
};

ArSmoothedControls.prototype = Object.create(_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__["default"].prototype);
ArSmoothedControls.prototype.constructor = ArSmoothedControls;

//////////////////////////////////////////////////////////////////////////////
//		update function
//////////////////////////////////////////////////////////////////////////////

ArSmoothedControls.prototype.update = function (targetObject3d) {
  var object3d = this.object3d;
  var parameters = this.parameters;
  var wasVisible = object3d.visible;
  var present = performance.now() / 1000;

  //////////////////////////////////////////////////////////////////////////////
  //		handle object3d.visible with minVisibleDelay/minUnvisibleDelay
  //////////////////////////////////////////////////////////////////////////////
  if (targetObject3d.visible === false) this._visibleStartedAt = null;
  if (targetObject3d.visible === true) this._unvisibleStartedAt = null;

  if (targetObject3d.visible === true && this._visibleStartedAt === null)
    this._visibleStartedAt = present;
  if (targetObject3d.visible === false && this._unvisibleStartedAt === null)
    this._unvisibleStartedAt = present;

  if (wasVisible === false && targetObject3d.visible === true) {
    var visibleFor = present - this._visibleStartedAt;
    if (visibleFor >= this.parameters.minVisibleDelay) {
      object3d.visible = true;
      snapDirectlyToTarget();
    }
    // console.log('visibleFor', visibleFor)
  }

  if (wasVisible === true && targetObject3d.visible === false) {
    var unvisibleFor = present - this._unvisibleStartedAt;
    if (unvisibleFor >= this.parameters.minUnvisibleDelay) {
      object3d.visible = false;
    }
  }

  //////////////////////////////////////////////////////////////////////////////
  //		apply lerp on positon/quaternion/scale
  //////////////////////////////////////////////////////////////////////////////

  // apply lerp steps - require fix time steps to behave the same no matter the fps
  if (this._lastLerpStepAt === null) {
    applyOneSlerpStep();
    this._lastLerpStepAt = present;
  } else {
    var nStepsToDo = Math.floor(
      (present - this._lastLerpStepAt) / this.parameters.lerpStepDelay
    );
    for (var i = 0; i < nStepsToDo; i++) {
      applyOneSlerpStep();
      this._lastLerpStepAt += this.parameters.lerpStepDelay;
    }
  }

  // disable the lerp by directly copying targetObject3d position/quaternion/scale
  if (false) {}

  // update the matrix
  this.object3d.updateMatrix();

  //////////////////////////////////////////////////////////////////////////////
  //		honor becameVisible/becameUnVisible event
  //////////////////////////////////////////////////////////////////////////////
  // honor becameVisible event
  if (wasVisible === false && object3d.visible === true) {
    this.dispatchEvent({ type: "becameVisible" });
  }
  // honor becameUnVisible event
  if (wasVisible === true && object3d.visible === false) {
    this.dispatchEvent({ type: "becameUnVisible" });
  }
  return;

  function snapDirectlyToTarget() {
    object3d.position.copy(targetObject3d.position);
    object3d.quaternion.copy(targetObject3d.quaternion);
    object3d.scale.copy(targetObject3d.scale);
  }

  function applyOneSlerpStep() {
    object3d.position.lerp(targetObject3d.position, parameters.lerpPosition);
    object3d.quaternion.slerp(
      targetObject3d.quaternion,
      parameters.lerpQuaternion
    );
    object3d.scale.lerp(targetObject3d.scale, parameters.lerpScale);
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArSmoothedControls);


/***/ }),

/***/ "three":
/*!**************************************************************************************!*\
  !*** external {"commonjs":"three","commonjs2":"three","amd":"three","root":"THREE"} ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_three__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**************************************!*\
  !*** ./three.js/src/index-threex.js ***!
  \**************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ArMarkerControls": () => (/* reexport safe */ _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   "ArMarkerHelper": () => (/* reexport safe */ _threex_threex_armarkerhelper__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   "ArMultiMakersLearning": () => (/* reexport safe */ _markers_area_arjs_markersarealearning__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   "ArMultiMarkerControls": () => (/* reexport safe */ _markers_area_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   "ArMultiMarkerUtils": () => (/* reexport safe */ _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_8__["default"]),
/* harmony export */   "ArSmoothedControls": () => (/* reexport safe */ _threex_threex_arsmoothedcontrols__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   "ArToolkitContext": () => (/* reexport safe */ _threex_arjs_context__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   "ArToolkitProfile": () => (/* reexport safe */ _threex_arjs_profile__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   "ArToolkitSource": () => (/* reexport safe */ _threex_arjs_source__WEBPACK_IMPORTED_MODULE_5__["default"])
/* harmony export */ });
/* harmony import */ var _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./threex/arjs-markercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var _threex_threex_armarkerhelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./threex/threex-armarkerhelper */ "./three.js/src/threex/threex-armarkerhelper.js");
/* harmony import */ var _threex_threex_arsmoothedcontrols__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./threex/threex-arsmoothedcontrols */ "./three.js/src/threex/threex-arsmoothedcontrols.js");
/* harmony import */ var _threex_arjs_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./threex/arjs-context */ "./three.js/src/threex/arjs-context.js");
/* harmony import */ var _threex_arjs_profile__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./threex/arjs-profile */ "./three.js/src/threex/arjs-profile.js");
/* harmony import */ var _threex_arjs_source__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./threex/arjs-source */ "./three.js/src/threex/arjs-source.js");
/* harmony import */ var _markers_area_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./markers-area/arjs-markersareacontrols */ "./three.js/src/markers-area/arjs-markersareacontrols.js");
/* harmony import */ var _markers_area_arjs_markersarealearning__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./markers-area/arjs-markersarealearning */ "./three.js/src/markers-area/arjs-markersarealearning.js");
/* harmony import */ var _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./markers-area/arjs-markersareautils */ "./three.js/src/markers-area/arjs-markersareautils.js");







 // typo is spread over codebase




})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,