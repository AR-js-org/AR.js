!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("aframe"),require("three")):"function"==typeof define&&define.amd?define(["aframe","three"],t):"object"==typeof exports?exports.ARjs=t(require("aframe"),require("three")):e.ARjs=t(e.AFRAME,e.THREE)}(this,(function(e,t){return(()=>{"use strict";var i={223:t=>{t.exports=e},381:e=>{e.exports=t}},s={};function r(e){var t=s[e];if(void 0!==t)return t.exports;var n=s[e]={exports:{}};return i[e](n,n.exports,r),n.exports}r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{r.r(n);var e=r(223),t=r(381);e.registerComponent("arjs-webcam-texture",{init:function(){this.scene=this.el.sceneEl,this.texCamera=new t.OrthographicCamera(-.5,.5,.5,-.5,0,10),this.texScene=new t.Scene,this.scene.renderer.autoClear=!1,this.video=document.createElement("video"),this.video.setAttribute("autoplay",!0),this.video.setAttribute("playsinline",!0),this.video.setAttribute("display","none"),document.body.appendChild(this.video),this.geom=new t.PlaneBufferGeometry,this.texture=new t.VideoTexture(this.video),this.material=new t.MeshBasicMaterial({map:this.texture});const e=new t.Mesh(this.geom,this.material);this.texScene.add(e)},play:function(){if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){const e={video:{facingMode:"environment"}};navigator.mediaDevices.getUserMedia(e).then((e=>{this.video.srcObject=e,this.video.play()})).catch((e=>{this.el.sceneEl.systems.arjs._displayErrorPopup(`Webcam error: ${e}`)}))}else this.el.sceneEl.systems.arjs._displayErrorPopup("sorry - media devices API not supported")},tick:function(){this.scene.renderer.clear(),this.scene.renderer.render(this.texScene,this.texCamera),this.scene.renderer.clearDepth()},pause:function(){this.video.srcObject.getTracks().forEach((e=>{e.stop()}))},remove:function(){this.material.dispose(),this.texture.dispose(),this.geom.dispose()}}),e.registerComponent("gps-new-camera",{schema:{simulateLatitude:{type:"number",default:0},simulateLongitude:{type:"number",default:0}},init:function(){this.arjs=new THREEx.LocationBased(this.el.sceneEl.object3D,this.el.object3D),this.arjs.on("gpsupdate",(e=>{this._sendGpsUpdateEvent(e.coords.longitude,e.coords.latitude)}))},update:function(){0==this.data.simulateLatitude&&0==this.data.simulateLongitude||this._sendGpsUpdateEvent(this.data.simulateLongitude,this.data.simulateLatitude)},play:function(){this.arjs.startGps()},pause:function(){this.arjs.stopGps()},_sendGpsUpdateEvent:function(e,t){this.el.emit("gps-camera-update-position",{position:{longitude:e,latitude:t}})}}),e.registerComponent("gps-new-entity-place",{schema:{longitude:{type:"number",default:0},latitude:{type:"number",default:0}},init:function(){const e=document.querySelector("[gps-new-camera]");e.components["gps-new-camera"]?this._cameraGps=e.components["gps-new-camera"]:console.error("gps-new-camera not initialised")},update:function(){const e=this._cameraGps.arjs.lonLatToWorldCoords(this.data.longitude,this.data.latitude);this.el.object3D.position.set(e[0],this.el.object3D.position.y,e[1])}})})(),n})()}));