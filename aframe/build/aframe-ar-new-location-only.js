/*! For license information please see aframe-ar-new-location-only.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("aframe"),require("three")):"function"==typeof define&&define.amd?define(["aframe","three"],t):"object"==typeof exports?exports.ARjs=t(require("aframe"),require("three")):e.ARjs=t(e.AFRAME,e.THREE)}(this,((e,t)=>(()=>{var i={254:function(e,t,i){var o;o=e=>(()=>{"use strict";var t={"./three.js/src/location-based/js/device-orientation-controls.js":(e,t,i)=>{i.r(t),i.d(t,{DeviceOrientationControls:()=>d});var o=i("three");const s=new o.Vector3(0,0,1),n=new o.Euler,r=new o.Quaternion,a=new o.Quaternion(-Math.sqrt(.5),0,0,Math.sqrt(.5)),c={type:"change"};class d extends o.EventDispatcher{constructor(e){super(),!1===window.isSecureContext&&console.error("THREE.DeviceOrientationControls: DeviceOrientationEvent is only available in secure contexts (https)");const t=this,i=new o.Quaternion;this.object=e,this.object.rotation.reorder("YXZ"),this.enabled=!0,this.deviceOrientation={},this.screenOrientation=0,this.alphaOffset=0,this.orientationChangeEventName="ondeviceorientationabsolute"in window?"deviceorientationabsolute":"deviceorientation";const d=function(e){t.deviceOrientation=e},h=function(){t.screenOrientation=window.orientation||0};this.connect=function(){h(),void 0!==window.DeviceOrientationEvent&&"function"==typeof window.DeviceOrientationEvent.requestPermission?window.DeviceOrientationEvent.requestPermission().then((e=>{"granted"===e&&(window.addEventListener("orientationchange",h),window.addEventListener(t.orientationChangeEventName,d))})).catch((function(e){console.error("THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:",e)})):(window.addEventListener("orientationchange",h),window.addEventListener(t.orientationChangeEventName,d)),t.enabled=!0},this.disconnect=function(){window.removeEventListener("orientationchange",h),window.removeEventListener(t.orientationChangeEventName,d),t.enabled=!1},this.update=function(){if(!1===t.enabled)return;const e=t.deviceOrientation;if(e){const d=e.alpha?o.Math.degToRad(e.alpha)+t.alphaOffset:0,h=e.beta?o.Math.degToRad(e.beta):0,l=e.gamma?o.Math.degToRad(e.gamma):0,u=t.screenOrientation?o.Math.degToRad(t.screenOrientation):0;!function(e,t,i,o,c){n.set(i,t,-o,"YXZ"),e.setFromEuler(n),e.multiply(a),e.multiply(r.setFromAxisAngle(s,-c))}(t.object.quaternion,d,h,l,u),8*(1-i.dot(t.object.quaternion))>1e-6&&(i.copy(t.object.quaternion),t.dispatchEvent(c))}},this.dispose=function(){t.disconnect()},this.connect()}}},"./three.js/src/location-based/js/location-based.js":(e,t,i)=>{i.r(t),i.d(t,{LocationBased:()=>n});var o=i("three"),s=i("./three.js/src/location-based/js/sphmerc-projection.js");class n{constructor(e,t,i={}){this._scene=e,this._camera=t,this._proj=new s.SphMercProjection,this._eventHandlers={},this._lastCoords=null,this._gpsMinDistance=0,this._gpsMinAccuracy=1e3,this._watchPositionId=null,this.setGpsOptions(i)}setProjection(e){this._proj=e}setGpsOptions(e={}){void 0!==e.gpsMinDistance&&(this._gpsMinDistance=e.gpsMinDistance),void 0!==e.gpsMinAccuracy&&(this._gpsMinAccuracy=e.gpsMinAccuracy)}startGps(e=0){return null===this._watchPositionId&&(this._watchPositionId=navigator.geolocation.watchPosition((e=>{this._gpsReceived(e)}),(e=>{this._eventHandlers.gpserror?this._eventHandlers.gpserror(e.code):alert(`GPS error: code ${e.code}`)}),{enableHighAccuracy:!0,maximumAge:e}),!0)}stopGps(){return null!==this._watchPositionId&&(navigator.geolocation.clearWatch(this._watchPositionId),this._watchPositionId=null,!0)}fakeGps(e,t,i=null,o=0){null!==i&&this.setElevation(i),this._gpsReceived({coords:{longitude:e,latitude:t,accuracy:o}})}lonLatToWorldCoords(e,t){const i=this._proj.project(e,t);return[i[0],-i[1]]}add(e,t,i,o){this.setWorldPosition(e,t,i,o),this._scene.add(e)}setWorldPosition(e,t,i,o){const s=this.lonLatToWorldCoords(t,i);[e.position.x,e.position.z]=s,void 0!==o&&(e.position.y=o)}setElevation(e){this._camera.position.y=e}on(e,t){this._eventHandlers[e]=t}_gpsReceived(e){let t=Number.MAX_VALUE;e.coords.accuracy<=this._gpsMinAccuracy&&(null===this._lastCoords?this._lastCoords={latitude:e.coords.latitude,longitude:e.coords.longitude}:t=this._haversineDist(this._lastCoords,e.coords),t>=this._gpsMinDistance&&(this._lastCoords.longitude=e.coords.longitude,this._lastCoords.latitude=e.coords.latitude,this.setWorldPosition(this._camera,e.coords.longitude,e.coords.latitude),this._eventHandlers.gpsupdate&&this._eventHandlers.gpsupdate(e,t)))}_haversineDist(e,t){const i=o.Math.degToRad(t.longitude-e.longitude),s=o.Math.degToRad(t.latitude-e.latitude),n=Math.sin(s/2)*Math.sin(s/2)+Math.cos(o.Math.degToRad(e.latitude))*Math.cos(o.Math.degToRad(t.latitude))*(Math.sin(i/2)*Math.sin(i/2));return 2*Math.atan2(Math.sqrt(n),Math.sqrt(1-n))*6371e3}}},"./three.js/src/location-based/js/sphmerc-projection.js":(e,t,i)=>{i.r(t),i.d(t,{SphMercProjection:()=>o});class o{constructor(){this.EARTH=40075016.68,this.HALF_EARTH=20037508.34}project(e,t){return[this.lonToSphMerc(e),this.latToSphMerc(t)]}unproject(e){return[this.sphMercToLon(e[0]),this.sphMercToLat(e[1])]}lonToSphMerc(e){return e/180*this.HALF_EARTH}latToSphMerc(e){return Math.log(Math.tan((90+e)*Math.PI/360))/(Math.PI/180)*this.HALF_EARTH/180}sphMercToLon(e){return e/this.HALF_EARTH*180}sphMercToLat(e){var t=e/this.HALF_EARTH*180;return 180/Math.PI*(2*Math.atan(Math.exp(t*Math.PI/180))-Math.PI/2)}getID(){return"epsg:3857"}}},"./three.js/src/location-based/js/webcam-renderer.js":(e,t,i)=>{i.r(t),i.d(t,{WebcamRenderer:()=>s});var o=i("three");class s{constructor(e,t){let i;this.renderer=e,this.renderer.autoClear=!1,this.sceneWebcam=new o.Scene,void 0===t?(i=document.createElement("video"),i.setAttribute("autoplay",!0),i.setAttribute("playsinline",!0),i.style.display="none",document.body.appendChild(i)):i=document.querySelector(t),this.geom=new o.PlaneBufferGeometry,this.texture=new o.VideoTexture(i),this.material=new o.MeshBasicMaterial({map:this.texture});const s=new o.Mesh(this.geom,this.material);if(this.sceneWebcam.add(s),this.cameraWebcam=new o.OrthographicCamera(-.5,.5,.5,-.5,0,10),navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){const e={video:{width:1280,height:720,facingMode:"environment"}};navigator.mediaDevices.getUserMedia(e).then((e=>{console.log("using the webcam successfully..."),i.srcObject=e,i.play()})).catch((e=>{setTimeout((()=>{this.createErrorPopup("Webcam Error\nName: "+e.name+"\nMessage: "+e.message)}),1e3)}))}else setTimeout((()=>{this.createErrorPopup("sorry - media devices API not supported")}),1e3)}update(){this.renderer.clear(),this.renderer.render(this.sceneWebcam,this.cameraWebcam),this.renderer.clearDepth()}dispose(){this.material.dispose(),this.texture.dispose(),this.geom.dispose()}createErrorPopup(e){if(!document.getElementById("error-popup")){var t=document.createElement("div");t.innerHTML=e,t.setAttribute("id","error-popup"),document.body.appendChild(t)}}}},three:t=>{t.exports=e}},i={};function o(e){var s=i[e];if(void 0!==s)return s.exports;var n=i[e]={exports:{}};return t[e](n,n.exports,o),n.exports}o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var i in t)o.o(t,i)&&!o.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var s={};return(()=>{o.r(s),o.d(s,{DeviceOrientationControls:()=>i.DeviceOrientationControls,LocationBased:()=>e.LocationBased,WebcamRenderer:()=>t.WebcamRenderer});var e=o("./three.js/src/location-based/js/location-based.js"),t=o("./three.js/src/location-based/js/webcam-renderer.js"),i=o("./three.js/src/location-based/js/device-orientation-controls.js")})(),s})(),e.exports=o(i(381))},223:t=>{"use strict";t.exports=e},381:e=>{"use strict";e.exports=t}},o={};function s(e){var t=o[e];if(void 0!==t)return t.exports;var n=o[e]={exports:{}};return i[e].call(n.exports,n,n.exports,s),n.exports}s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{"use strict";s.r(n);var e=s(223),t=s(381);e.registerComponent("arjs-webcam-texture",{init:function(){this.scene=this.el.sceneEl,this.texCamera=new t.OrthographicCamera(-.5,.5,.5,-.5,0,10),this.texScene=new t.Scene,this.scene.renderer.autoClear=!1,this.video=document.createElement("video"),this.video.setAttribute("autoplay",!0),this.video.setAttribute("playsinline",!0),this.video.setAttribute("display","none"),document.body.appendChild(this.video),this.geom=new t.PlaneBufferGeometry,this.texture=new t.VideoTexture(this.video),this.material=new t.MeshBasicMaterial({map:this.texture});const e=new t.Mesh(this.geom,this.material);this.texScene.add(e)},play:function(){if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){const e={video:{facingMode:"environment"}};navigator.mediaDevices.getUserMedia(e).then((e=>{this.video.srcObject=e,this.video.play()})).catch((e=>{this.el.sceneEl.systems.arjs._displayErrorPopup(`Webcam error: ${e}`)}))}else this.el.sceneEl.systems.arjs._displayErrorPopup("sorry - media devices API not supported")},tick:function(){this.scene.renderer.clear(),this.scene.renderer.render(this.texScene,this.texCamera),this.scene.renderer.clearDepth()},pause:function(){this.video.srcObject.getTracks().forEach((e=>{e.stop()}))},remove:function(){this.material.dispose(),this.texture.dispose(),this.geom.dispose()}});var i=s(254);e.registerComponent("gps-new-camera",{schema:{simulateLatitude:{type:"number",default:0},simulateLongitude:{type:"number",default:0},simulateAltitude:{type:"number",default:-Number.MAX_VALUE},gpsMinDistance:{type:"number",default:0},positionMinAccuracy:{type:"number",default:1e3}},init:function(){this._testForOrientationControls(),this.threeLoc=new i.LocationBased(this.el.sceneEl.object3D,this.el.object3D),this.threeLoc.on("gpsupdate",(e=>{this._sendGpsUpdateEvent(e.coords.longitude,e.coords.latitude)})),this.threeLoc.on("gpserror",(e=>{e>=1&&e<=3?this._displayError(["User denied access to GPS.","GPS satellites not available.","Timeout communicating with GPS satellites - try moving to a more open area."][e-1]):this._displayError(`Unknown geolocation error code ${e}.`)}));const e=this._isMobile();this.el.setAttribute("look-controls-enabled",!e),e&&this.el.setAttribute("arjs-device-orientation-controls",!0),navigator.userAgent.match(/Version\/[\d.]+.*Safari/)&&this._setupSafariOrientationPermissions()},update:function(e){this.threeLoc.setGpsOptions({gpsMinAccuracy:this.data.positionMinAccuracy,gpsMinDistance:this.data.gpsMinDistance}),0===this.data.simulateLatitude&&0===this.data.simulateLongitude||this.data.simulateLatitude==e.simulateLatitude&&this.data.simulateLongitude==e.simulateLongitude||(this.threeLoc.fakeGps(this.data.simulateLongitude,this.data.simulateLatitude),this.data.simulateLatitude=0,this.data.simulateLongitude=0),this.data.simulateAltitude>-Number.MAX_VALUE&&this.threeLoc.setElevation(this.data.simulateAltitude+1.6)},play:function(){0===this.data.simulateLatitude&&0===this.data.simulateLongitude&&this.threeLoc.startGps()},pause:function(){this.threeLoc.stopGps()},_sendGpsUpdateEvent:function(e,t){this.el.emit("gps-camera-update-position",{position:{longitude:e,latitude:t}})},_testForOrientationControls:function(){this.el.components["arjs-device-orientation-controls"]||this.el.components["look-controls"]||this._displayError("WARNING - No orientation controls component, app will not respond to device rotation.")},_displayError:function(e){const t=this.el.sceneEl.systems.arjs;t?t._displayErrorPopup(msg):alert(msg)},_setupSafariOrientationPermissions:function(){if("function"==typeof window.DeviceOrientationEvent?.requestPermission){var e=function(){console.log("Requesting device orientation permissions..."),DeviceOrientationEvent.requestPermission(),document.removeEventListener("touchend",e)};document.addEventListener("touchend",(function(){e()}),!1),this.el.sceneEl.systems.arjs._displayErrorPopup("After camera permission prompt, please tap the screen to activate geolocation.")}else{var t=setTimeout((()=>{this.el.sceneEl.systems.arjs._displayErrorPopup("Please enable device orientation in Settings > Safari > Motion & Orientation Access.")}),750);window.addEventListener("deviceorientation",(function(){clearTimeout(t)}),{once:!0})}},_isMobile:function(){return!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}}),e.registerComponent("gps-new-entity-place",{schema:{longitude:{type:"number",default:0},latitude:{type:"number",default:0}},init:function(){const e=document.querySelector("[gps-new-camera]");e.components["gps-new-camera"]?this._cameraGps=e.components["gps-new-camera"]:console.error("gps-new-camera not initialised")},update:function(){const e=this._cameraGps.threeLoc.lonLatToWorldCoords(this.data.longitude,this.data.latitude);this.el.object3D.position.set(e[0],this.el.object3D.position.y,e[1])}}),e.registerComponent("arjs-device-orientation-controls",{schema:{smoothingFactor:{type:"number",default:1}},init:function(){this._orientationControls=new THREEx.DeviceOrientationControls(this.el.object3D)},update:function(){this._orientationControls.smoothingFactor=this.data.smoothingFactor},tick:function(){this._orientationControls.update()}})})(),n})()));